window.__require = function e(t, n, r) {
  function s(o, u) {
    if (!n[o]) {
      if (!t[o]) {
        var b = o.split("/");
        b = b[b.length - 1];
        if (!t[b]) {
          var a = "function" == typeof __require && __require;
          if (!u && a) return a(b, !0);
          if (i) return i(b, !0);
          throw new Error("Cannot find module '" + o + "'");
        }
      }
      var f = n[o] = {
        exports: {}
      };
      t[o][0].call(f.exports, function(e) {
        var n = t[o][1][e];
        return s(n || e);
      }, f, f.exports, e, t, n, r);
    }
    return n[o].exports;
  }
  var i = "function" == typeof __require && __require;
  for (var o = 0; o < r.length; o++) s(r[o]);
  return s;
}({
  1: [ function(require, module, exports) {
    var asn1 = exports;
    asn1.bignum = require("bn.js");
    asn1.define = require("./asn1/api").define;
    asn1.base = require("./asn1/base");
    asn1.constants = require("./asn1/constants");
    asn1.decoders = require("./asn1/decoders");
    asn1.encoders = require("./asn1/encoders");
  }, {
    "./asn1/api": 2,
    "./asn1/base": 4,
    "./asn1/constants": 8,
    "./asn1/decoders": 10,
    "./asn1/encoders": 13,
    "bn.js": 16
  } ],
  2: [ function(require, module, exports) {
    var asn1 = require("../asn1");
    var inherits = require("inherits");
    var api = exports;
    api.define = function define(name, body) {
      return new Entity(name, body);
    };
    function Entity(name, body) {
      this.name = name;
      this.body = body;
      this.decoders = {};
      this.encoders = {};
    }
    Entity.prototype._createNamed = function createNamed(base) {
      var named;
      try {
        named = require("vm").runInThisContext("(function " + this.name + "(entity) {\n  this._initNamed(entity);\n})");
      } catch (e) {
        named = function(entity) {
          this._initNamed(entity);
        };
      }
      inherits(named, base);
      named.prototype._initNamed = function initnamed(entity) {
        base.call(this, entity);
      };
      return new named(this);
    };
    Entity.prototype._getDecoder = function _getDecoder(enc) {
      enc = enc || "der";
      this.decoders.hasOwnProperty(enc) || (this.decoders[enc] = this._createNamed(asn1.decoders[enc]));
      return this.decoders[enc];
    };
    Entity.prototype.decode = function decode(data, enc, options) {
      return this._getDecoder(enc).decode(data, options);
    };
    Entity.prototype._getEncoder = function _getEncoder(enc) {
      enc = enc || "der";
      this.encoders.hasOwnProperty(enc) || (this.encoders[enc] = this._createNamed(asn1.encoders[enc]));
      return this.encoders[enc];
    };
    Entity.prototype.encode = function encode(data, enc, reporter) {
      return this._getEncoder(enc).encode(data, reporter);
    };
  }, {
    "../asn1": 1,
    inherits: 101,
    vm: 155
  } ],
  3: [ function(require, module, exports) {
    var inherits = require("inherits");
    var Reporter = require("../base").Reporter;
    var Buffer = require("buffer").Buffer;
    function DecoderBuffer(base, options) {
      Reporter.call(this, options);
      if (!Buffer.isBuffer(base)) {
        this.error("Input not Buffer");
        return;
      }
      this.base = base;
      this.offset = 0;
      this.length = base.length;
    }
    inherits(DecoderBuffer, Reporter);
    exports.DecoderBuffer = DecoderBuffer;
    DecoderBuffer.prototype.save = function save() {
      return {
        offset: this.offset,
        reporter: Reporter.prototype.save.call(this)
      };
    };
    DecoderBuffer.prototype.restore = function restore(save) {
      var res = new DecoderBuffer(this.base);
      res.offset = save.offset;
      res.length = this.offset;
      this.offset = save.offset;
      Reporter.prototype.restore.call(this, save.reporter);
      return res;
    };
    DecoderBuffer.prototype.isEmpty = function isEmpty() {
      return this.offset === this.length;
    };
    DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
      return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, true) : this.error(fail || "DecoderBuffer overrun");
    };
    DecoderBuffer.prototype.skip = function skip(bytes, fail) {
      if (!(this.offset + bytes <= this.length)) return this.error(fail || "DecoderBuffer overrun");
      var res = new DecoderBuffer(this.base);
      res._reporterState = this._reporterState;
      res.offset = this.offset;
      res.length = this.offset + bytes;
      this.offset += bytes;
      return res;
    };
    DecoderBuffer.prototype.raw = function raw(save) {
      return this.base.slice(save ? save.offset : this.offset, this.length);
    };
    function EncoderBuffer(value, reporter) {
      if (Array.isArray(value)) {
        this.length = 0;
        this.value = value.map(function(item) {
          item instanceof EncoderBuffer || (item = new EncoderBuffer(item, reporter));
          this.length += item.length;
          return item;
        }, this);
      } else if ("number" === typeof value) {
        if (!(0 <= value && value <= 255)) return reporter.error("non-byte EncoderBuffer value");
        this.value = value;
        this.length = 1;
      } else if ("string" === typeof value) {
        this.value = value;
        this.length = Buffer.byteLength(value);
      } else {
        if (!Buffer.isBuffer(value)) return reporter.error("Unsupported type: " + typeof value);
        this.value = value;
        this.length = value.length;
      }
    }
    exports.EncoderBuffer = EncoderBuffer;
    EncoderBuffer.prototype.join = function join(out, offset) {
      out || (out = new Buffer(this.length));
      offset || (offset = 0);
      if (0 === this.length) return out;
      if (Array.isArray(this.value)) this.value.forEach(function(item) {
        item.join(out, offset);
        offset += item.length;
      }); else {
        "number" === typeof this.value ? out[offset] = this.value : "string" === typeof this.value ? out.write(this.value, offset) : Buffer.isBuffer(this.value) && this.value.copy(out, offset);
        offset += this.length;
      }
      return out;
    };
  }, {
    "../base": 4,
    buffer: 47,
    inherits: 101
  } ],
  4: [ function(require, module, exports) {
    var base = exports;
    base.Reporter = require("./reporter").Reporter;
    base.DecoderBuffer = require("./buffer").DecoderBuffer;
    base.EncoderBuffer = require("./buffer").EncoderBuffer;
    base.Node = require("./node");
  }, {
    "./buffer": 3,
    "./node": 5,
    "./reporter": 6
  } ],
  5: [ function(require, module, exports) {
    var Reporter = require("../base").Reporter;
    var EncoderBuffer = require("../base").EncoderBuffer;
    var DecoderBuffer = require("../base").DecoderBuffer;
    var assert = require("minimalistic-assert");
    var tags = [ "seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr" ];
    var methods = [ "key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains" ].concat(tags);
    var overrided = [ "_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool" ];
    function Node(enc, parent) {
      var state = {};
      this._baseState = state;
      state.enc = enc;
      state.parent = parent || null;
      state.children = null;
      state.tag = null;
      state.args = null;
      state.reverseArgs = null;
      state.choice = null;
      state.optional = false;
      state.any = false;
      state.obj = false;
      state.use = null;
      state.useDecoder = null;
      state.key = null;
      state["default"] = null;
      state.explicit = null;
      state.implicit = null;
      state.contains = null;
      if (!state.parent) {
        state.children = [];
        this._wrap();
      }
    }
    module.exports = Node;
    var stateProps = [ "enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains" ];
    Node.prototype.clone = function clone() {
      var state = this._baseState;
      var cstate = {};
      stateProps.forEach(function(prop) {
        cstate[prop] = state[prop];
      });
      var res = new this.constructor(cstate.parent);
      res._baseState = cstate;
      return res;
    };
    Node.prototype._wrap = function wrap() {
      var state = this._baseState;
      methods.forEach(function(method) {
        this[method] = function _wrappedMethod() {
          var clone = new this.constructor(this);
          state.children.push(clone);
          return clone[method].apply(clone, arguments);
        };
      }, this);
    };
    Node.prototype._init = function init(body) {
      var state = this._baseState;
      assert(null === state.parent);
      body.call(this);
      state.children = state.children.filter(function(child) {
        return child._baseState.parent === this;
      }, this);
      assert.equal(state.children.length, 1, "Root node can have only one child");
    };
    Node.prototype._useArgs = function useArgs(args) {
      var state = this._baseState;
      var children = args.filter(function(arg) {
        return arg instanceof this.constructor;
      }, this);
      args = args.filter(function(arg) {
        return !(arg instanceof this.constructor);
      }, this);
      if (0 !== children.length) {
        assert(null === state.children);
        state.children = children;
        children.forEach(function(child) {
          child._baseState.parent = this;
        }, this);
      }
      if (0 !== args.length) {
        assert(null === state.args);
        state.args = args;
        state.reverseArgs = args.map(function(arg) {
          if ("object" !== typeof arg || arg.constructor !== Object) return arg;
          var res = {};
          Object.keys(arg).forEach(function(key) {
            key == (0 | key) && (key |= 0);
            var value = arg[key];
            res[value] = key;
          });
          return res;
        });
      }
    };
    overrided.forEach(function(method) {
      Node.prototype[method] = function _overrided() {
        var state = this._baseState;
        throw new Error(method + " not implemented for encoding: " + state.enc);
      };
    });
    tags.forEach(function(tag) {
      Node.prototype[tag] = function _tagMethod() {
        var state = this._baseState;
        var args = Array.prototype.slice.call(arguments);
        assert(null === state.tag);
        state.tag = tag;
        this._useArgs(args);
        return this;
      };
    });
    Node.prototype.use = function use(item) {
      assert(item);
      var state = this._baseState;
      assert(null === state.use);
      state.use = item;
      return this;
    };
    Node.prototype.optional = function optional() {
      var state = this._baseState;
      state.optional = true;
      return this;
    };
    Node.prototype.def = function def(val) {
      var state = this._baseState;
      assert(null === state["default"]);
      state["default"] = val;
      state.optional = true;
      return this;
    };
    Node.prototype.explicit = function explicit(num) {
      var state = this._baseState;
      assert(null === state.explicit && null === state.implicit);
      state.explicit = num;
      return this;
    };
    Node.prototype.implicit = function implicit(num) {
      var state = this._baseState;
      assert(null === state.explicit && null === state.implicit);
      state.implicit = num;
      return this;
    };
    Node.prototype.obj = function obj() {
      var state = this._baseState;
      var args = Array.prototype.slice.call(arguments);
      state.obj = true;
      0 !== args.length && this._useArgs(args);
      return this;
    };
    Node.prototype.key = function key(newKey) {
      var state = this._baseState;
      assert(null === state.key);
      state.key = newKey;
      return this;
    };
    Node.prototype.any = function any() {
      var state = this._baseState;
      state.any = true;
      return this;
    };
    Node.prototype.choice = function choice(obj) {
      var state = this._baseState;
      assert(null === state.choice);
      state.choice = obj;
      this._useArgs(Object.keys(obj).map(function(key) {
        return obj[key];
      }));
      return this;
    };
    Node.prototype.contains = function contains(item) {
      var state = this._baseState;
      assert(null === state.use);
      state.contains = item;
      return this;
    };
    Node.prototype._decode = function decode(input, options) {
      var state = this._baseState;
      if (null === state.parent) return input.wrapResult(state.children[0]._decode(input, options));
      var result = state["default"];
      var present = true;
      var prevKey = null;
      null !== state.key && (prevKey = input.enterKey(state.key));
      if (state.optional) {
        var tag = null;
        null !== state.explicit ? tag = state.explicit : null !== state.implicit ? tag = state.implicit : null !== state.tag && (tag = state.tag);
        if (null !== tag || state.any) {
          present = this._peekTag(input, tag, state.any);
          if (input.isError(present)) return present;
        } else {
          var save = input.save();
          try {
            null === state.choice ? this._decodeGeneric(state.tag, input, options) : this._decodeChoice(input, options);
            present = true;
          } catch (e) {
            present = false;
          }
          input.restore(save);
        }
      }
      var prevObj;
      state.obj && present && (prevObj = input.enterObject());
      if (present) {
        if (null !== state.explicit) {
          var explicit = this._decodeTag(input, state.explicit);
          if (input.isError(explicit)) return explicit;
          input = explicit;
        }
        var start = input.offset;
        if (null === state.use && null === state.choice) {
          if (state.any) var save = input.save();
          var body = this._decodeTag(input, null !== state.implicit ? state.implicit : state.tag, state.any);
          if (input.isError(body)) return body;
          state.any ? result = input.raw(save) : input = body;
        }
        options && options.track && null !== state.tag && options.track(input.path(), start, input.length, "tagged");
        options && options.track && null !== state.tag && options.track(input.path(), input.offset, input.length, "content");
        result = state.any ? result : null === state.choice ? this._decodeGeneric(state.tag, input, options) : this._decodeChoice(input, options);
        if (input.isError(result)) return result;
        state.any || null !== state.choice || null === state.children || state.children.forEach(function decodeChildren(child) {
          child._decode(input, options);
        });
        if (state.contains && ("octstr" === state.tag || "bitstr" === state.tag)) {
          var data = new DecoderBuffer(result);
          result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);
        }
      }
      state.obj && present && (result = input.leaveObject(prevObj));
      null === state.key || null === result && true !== present ? null !== prevKey && input.exitKey(prevKey) : input.leaveKey(prevKey, state.key, result);
      return result;
    };
    Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
      var state = this._baseState;
      if ("seq" === tag || "set" === tag) return null;
      if ("seqof" === tag || "setof" === tag) return this._decodeList(input, tag, state.args[0], options);
      if (/str$/.test(tag)) return this._decodeStr(input, tag, options);
      if ("objid" === tag && state.args) return this._decodeObjid(input, state.args[0], state.args[1], options);
      if ("objid" === tag) return this._decodeObjid(input, null, null, options);
      if ("gentime" === tag || "utctime" === tag) return this._decodeTime(input, tag, options);
      if ("null_" === tag) return this._decodeNull(input, options);
      if ("bool" === tag) return this._decodeBool(input, options);
      if ("objDesc" === tag) return this._decodeStr(input, tag, options);
      if ("int" === tag || "enum" === tag) return this._decodeInt(input, state.args && state.args[0], options);
      return null !== state.use ? this._getUse(state.use, input._reporterState.obj)._decode(input, options) : input.error("unknown tag: " + tag);
    };
    Node.prototype._getUse = function _getUse(entity, obj) {
      var state = this._baseState;
      state.useDecoder = this._use(entity, obj);
      assert(null === state.useDecoder._baseState.parent);
      state.useDecoder = state.useDecoder._baseState.children[0];
      if (state.implicit !== state.useDecoder._baseState.implicit) {
        state.useDecoder = state.useDecoder.clone();
        state.useDecoder._baseState.implicit = state.implicit;
      }
      return state.useDecoder;
    };
    Node.prototype._decodeChoice = function decodeChoice(input, options) {
      var state = this._baseState;
      var result = null;
      var match = false;
      Object.keys(state.choice).some(function(key) {
        var save = input.save();
        var node = state.choice[key];
        try {
          var value = node._decode(input, options);
          if (input.isError(value)) return false;
          result = {
            type: key,
            value: value
          };
          match = true;
        } catch (e) {
          input.restore(save);
          return false;
        }
        return true;
      }, this);
      if (!match) return input.error("Choice not matched");
      return result;
    };
    Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
      return new EncoderBuffer(data, this.reporter);
    };
    Node.prototype._encode = function encode(data, reporter, parent) {
      var state = this._baseState;
      if (null !== state["default"] && state["default"] === data) return;
      var result = this._encodeValue(data, reporter, parent);
      if (void 0 === result) return;
      if (this._skipDefault(result, reporter, parent)) return;
      return result;
    };
    Node.prototype._encodeValue = function encode(data, reporter, parent) {
      var state = this._baseState;
      if (null === state.parent) return state.children[0]._encode(data, reporter || new Reporter());
      var result = null;
      this.reporter = reporter;
      if (state.optional && void 0 === data) {
        if (null === state["default"]) return;
        data = state["default"];
      }
      var content = null;
      var primitive = false;
      if (state.any) result = this._createEncoderBuffer(data); else if (state.choice) result = this._encodeChoice(data, reporter); else if (state.contains) {
        content = this._getUse(state.contains, parent)._encode(data, reporter);
        primitive = true;
      } else if (state.children) {
        content = state.children.map(function(child) {
          if ("null_" === child._baseState.tag) return child._encode(null, reporter, data);
          if (null === child._baseState.key) return reporter.error("Child should have a key");
          var prevKey = reporter.enterKey(child._baseState.key);
          if ("object" !== typeof data) return reporter.error("Child expected, but input is not object");
          var res = child._encode(data[child._baseState.key], reporter, data);
          reporter.leaveKey(prevKey);
          return res;
        }, this).filter(function(child) {
          return child;
        });
        content = this._createEncoderBuffer(content);
      } else if ("seqof" === state.tag || "setof" === state.tag) {
        if (!(state.args && 1 === state.args.length)) return reporter.error("Too many args for : " + state.tag);
        if (!Array.isArray(data)) return reporter.error("seqof/setof, but data is not Array");
        var child = this.clone();
        child._baseState.implicit = null;
        content = this._createEncoderBuffer(data.map(function(item) {
          var state = this._baseState;
          return this._getUse(state.args[0], data)._encode(item, reporter);
        }, child));
      } else if (null !== state.use) result = this._getUse(state.use, parent)._encode(data, reporter); else {
        content = this._encodePrimitive(state.tag, data);
        primitive = true;
      }
      var result;
      if (!state.any && null === state.choice) {
        var tag = null !== state.implicit ? state.implicit : state.tag;
        var cls = null === state.implicit ? "universal" : "context";
        null === tag ? null === state.use && reporter.error("Tag could be omitted only for .use()") : null === state.use && (result = this._encodeComposite(tag, primitive, cls, content));
      }
      null !== state.explicit && (result = this._encodeComposite(state.explicit, false, "context", result));
      return result;
    };
    Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
      var state = this._baseState;
      var node = state.choice[data.type];
      node || assert(false, data.type + " not found in " + JSON.stringify(Object.keys(state.choice)));
      return node._encode(data.value, reporter);
    };
    Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
      var state = this._baseState;
      if (/str$/.test(tag)) return this._encodeStr(data, tag);
      if ("objid" === tag && state.args) return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
      if ("objid" === tag) return this._encodeObjid(data, null, null);
      if ("gentime" === tag || "utctime" === tag) return this._encodeTime(data, tag);
      if ("null_" === tag) return this._encodeNull();
      if ("int" === tag || "enum" === tag) return this._encodeInt(data, state.args && state.reverseArgs[0]);
      if ("bool" === tag) return this._encodeBool(data);
      if ("objDesc" === tag) return this._encodeStr(data, tag);
      throw new Error("Unsupported tag: " + tag);
    };
    Node.prototype._isNumstr = function isNumstr(str) {
      return /^[0-9 ]*$/.test(str);
    };
    Node.prototype._isPrintstr = function isPrintstr(str) {
      return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
    };
  }, {
    "../base": 4,
    "minimalistic-assert": 105
  } ],
  6: [ function(require, module, exports) {
    var inherits = require("inherits");
    function Reporter(options) {
      this._reporterState = {
        obj: null,
        path: [],
        options: options || {},
        errors: []
      };
    }
    exports.Reporter = Reporter;
    Reporter.prototype.isError = function isError(obj) {
      return obj instanceof ReporterError;
    };
    Reporter.prototype.save = function save() {
      var state = this._reporterState;
      return {
        obj: state.obj,
        pathLen: state.path.length
      };
    };
    Reporter.prototype.restore = function restore(data) {
      var state = this._reporterState;
      state.obj = data.obj;
      state.path = state.path.slice(0, data.pathLen);
    };
    Reporter.prototype.enterKey = function enterKey(key) {
      return this._reporterState.path.push(key);
    };
    Reporter.prototype.exitKey = function exitKey(index) {
      var state = this._reporterState;
      state.path = state.path.slice(0, index - 1);
    };
    Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
      var state = this._reporterState;
      this.exitKey(index);
      null !== state.obj && (state.obj[key] = value);
    };
    Reporter.prototype.path = function path() {
      return this._reporterState.path.join("/");
    };
    Reporter.prototype.enterObject = function enterObject() {
      var state = this._reporterState;
      var prev = state.obj;
      state.obj = {};
      return prev;
    };
    Reporter.prototype.leaveObject = function leaveObject(prev) {
      var state = this._reporterState;
      var now = state.obj;
      state.obj = prev;
      return now;
    };
    Reporter.prototype.error = function error(msg) {
      var err;
      var state = this._reporterState;
      var inherited = msg instanceof ReporterError;
      err = inherited ? msg : new ReporterError(state.path.map(function(elem) {
        return "[" + JSON.stringify(elem) + "]";
      }).join(""), msg.message || msg, msg.stack);
      if (!state.options.partial) throw err;
      inherited || state.errors.push(err);
      return err;
    };
    Reporter.prototype.wrapResult = function wrapResult(result) {
      var state = this._reporterState;
      if (!state.options.partial) return result;
      return {
        result: this.isError(result) ? null : result,
        errors: state.errors
      };
    };
    function ReporterError(path, msg) {
      this.path = path;
      this.rethrow(msg);
    }
    inherits(ReporterError, Error);
    ReporterError.prototype.rethrow = function rethrow(msg) {
      this.message = msg + " at: " + (this.path || "(shallow)");
      Error.captureStackTrace && Error.captureStackTrace(this, ReporterError);
      if (!this.stack) try {
        throw new Error(this.message);
      } catch (e) {
        this.stack = e.stack;
      }
      return this;
    };
  }, {
    inherits: 101
  } ],
  7: [ function(require, module, exports) {
    var constants = require("../constants");
    exports.tagClass = {
      0: "universal",
      1: "application",
      2: "context",
      3: "private"
    };
    exports.tagClassByName = constants._reverse(exports.tagClass);
    exports.tag = {
      0: "end",
      1: "bool",
      2: "int",
      3: "bitstr",
      4: "octstr",
      5: "null_",
      6: "objid",
      7: "objDesc",
      8: "external",
      9: "real",
      10: "enum",
      11: "embed",
      12: "utf8str",
      13: "relativeOid",
      16: "seq",
      17: "set",
      18: "numstr",
      19: "printstr",
      20: "t61str",
      21: "videostr",
      22: "ia5str",
      23: "utctime",
      24: "gentime",
      25: "graphstr",
      26: "iso646str",
      27: "genstr",
      28: "unistr",
      29: "charstr",
      30: "bmpstr"
    };
    exports.tagByName = constants._reverse(exports.tag);
  }, {
    "../constants": 8
  } ],
  8: [ function(require, module, exports) {
    var constants = exports;
    constants._reverse = function reverse(map) {
      var res = {};
      Object.keys(map).forEach(function(key) {
        (0 | key) == key && (key |= 0);
        var value = map[key];
        res[value] = key;
      });
      return res;
    };
    constants.der = require("./der");
  }, {
    "./der": 7
  } ],
  9: [ function(require, module, exports) {
    var inherits = require("inherits");
    var asn1 = require("../../asn1");
    var base = asn1.base;
    var bignum = asn1.bignum;
    var der = asn1.constants.der;
    function DERDecoder(entity) {
      this.enc = "der";
      this.name = entity.name;
      this.entity = entity;
      this.tree = new DERNode();
      this.tree._init(entity.body);
    }
    module.exports = DERDecoder;
    DERDecoder.prototype.decode = function decode(data, options) {
      data instanceof base.DecoderBuffer || (data = new base.DecoderBuffer(data, options));
      return this.tree._decode(data, options);
    };
    function DERNode(parent) {
      base.Node.call(this, "der", parent);
    }
    inherits(DERNode, base.Node);
    DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
      if (buffer.isEmpty()) return false;
      var state = buffer.save();
      var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
      if (buffer.isError(decodedTag)) return decodedTag;
      buffer.restore(state);
      return decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + "of" === tag || any;
    };
    DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
      var decodedTag = derDecodeTag(buffer, 'Failed to decode tag of "' + tag + '"');
      if (buffer.isError(decodedTag)) return decodedTag;
      var len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of "' + tag + '"');
      if (buffer.isError(len)) return len;
      if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + "of" !== tag) return buffer.error('Failed to match tag: "' + tag + '"');
      if (decodedTag.primitive || null !== len) return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
      var state = buffer.save();
      var res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: "' + this.tag + '"');
      if (buffer.isError(res)) return res;
      len = buffer.offset - state.offset;
      buffer.restore(state);
      return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
    };
    DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
      while (true) {
        var tag = derDecodeTag(buffer, fail);
        if (buffer.isError(tag)) return tag;
        var len = derDecodeLen(buffer, tag.primitive, fail);
        if (buffer.isError(len)) return len;
        var res;
        res = tag.primitive || null !== len ? buffer.skip(len) : this._skipUntilEnd(buffer, fail);
        if (buffer.isError(res)) return res;
        if ("end" === tag.tagStr) break;
      }
    };
    DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {
      var result = [];
      while (!buffer.isEmpty()) {
        var possibleEnd = this._peekTag(buffer, "end");
        if (buffer.isError(possibleEnd)) return possibleEnd;
        var res = decoder.decode(buffer, "der", options);
        if (buffer.isError(res) && possibleEnd) break;
        result.push(res);
      }
      return result;
    };
    DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
      if ("bitstr" === tag) {
        var unused = buffer.readUInt8();
        if (buffer.isError(unused)) return unused;
        return {
          unused: unused,
          data: buffer.raw()
        };
      }
      if ("bmpstr" === tag) {
        var raw = buffer.raw();
        if (raw.length % 2 === 1) return buffer.error("Decoding of string type: bmpstr length mismatch");
        var str = "";
        for (var i = 0; i < raw.length / 2; i++) str += String.fromCharCode(raw.readUInt16BE(2 * i));
        return str;
      }
      if ("numstr" === tag) {
        var numstr = buffer.raw().toString("ascii");
        if (!this._isNumstr(numstr)) return buffer.error("Decoding of string type: numstr unsupported characters");
        return numstr;
      }
      if ("octstr" === tag) return buffer.raw();
      if ("objDesc" === tag) return buffer.raw();
      if ("printstr" === tag) {
        var printstr = buffer.raw().toString("ascii");
        if (!this._isPrintstr(printstr)) return buffer.error("Decoding of string type: printstr unsupported characters");
        return printstr;
      }
      return /str$/.test(tag) ? buffer.raw().toString() : buffer.error("Decoding of string type: " + tag + " unsupported");
    };
    DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
      var result;
      var identifiers = [];
      var ident = 0;
      while (!buffer.isEmpty()) {
        var subident = buffer.readUInt8();
        ident <<= 7;
        ident |= 127 & subident;
        if (0 === (128 & subident)) {
          identifiers.push(ident);
          ident = 0;
        }
      }
      128 & subident && identifiers.push(ident);
      var first = identifiers[0] / 40 | 0;
      var second = identifiers[0] % 40;
      result = relative ? identifiers : [ first, second ].concat(identifiers.slice(1));
      if (values) {
        var tmp = values[result.join(" ")];
        void 0 === tmp && (tmp = values[result.join(".")]);
        void 0 !== tmp && (result = tmp);
      }
      return result;
    };
    DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
      var str = buffer.raw().toString();
      if ("gentime" === tag) {
        var year = 0 | str.slice(0, 4);
        var mon = 0 | str.slice(4, 6);
        var day = 0 | str.slice(6, 8);
        var hour = 0 | str.slice(8, 10);
        var min = 0 | str.slice(10, 12);
        var sec = 0 | str.slice(12, 14);
      } else {
        if ("utctime" !== tag) return buffer.error("Decoding " + tag + " time is not supported yet");
        var year = 0 | str.slice(0, 2);
        var mon = 0 | str.slice(2, 4);
        var day = 0 | str.slice(4, 6);
        var hour = 0 | str.slice(6, 8);
        var min = 0 | str.slice(8, 10);
        var sec = 0 | str.slice(10, 12);
        year = year < 70 ? 2e3 + year : 1900 + year;
      }
      return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
    };
    DERNode.prototype._decodeNull = function decodeNull(buffer) {
      return null;
    };
    DERNode.prototype._decodeBool = function decodeBool(buffer) {
      var res = buffer.readUInt8();
      return buffer.isError(res) ? res : 0 !== res;
    };
    DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
      var raw = buffer.raw();
      var res = new bignum(raw);
      values && (res = values[res.toString(10)] || res);
      return res;
    };
    DERNode.prototype._use = function use(entity, obj) {
      "function" === typeof entity && (entity = entity(obj));
      return entity._getDecoder("der").tree;
    };
    function derDecodeTag(buf, fail) {
      var tag = buf.readUInt8(fail);
      if (buf.isError(tag)) return tag;
      var cls = der.tagClass[tag >> 6];
      var primitive = 0 === (32 & tag);
      if (31 === (31 & tag)) {
        var oct = tag;
        tag = 0;
        while (128 === (128 & oct)) {
          oct = buf.readUInt8(fail);
          if (buf.isError(oct)) return oct;
          tag <<= 7;
          tag |= 127 & oct;
        }
      } else tag &= 31;
      var tagStr = der.tag[tag];
      return {
        cls: cls,
        primitive: primitive,
        tag: tag,
        tagStr: tagStr
      };
    }
    function derDecodeLen(buf, primitive, fail) {
      var len = buf.readUInt8(fail);
      if (buf.isError(len)) return len;
      if (!primitive && 128 === len) return null;
      if (0 === (128 & len)) return len;
      var num = 127 & len;
      if (num > 4) return buf.error("length octect is too long");
      len = 0;
      for (var i = 0; i < num; i++) {
        len <<= 8;
        var j = buf.readUInt8(fail);
        if (buf.isError(j)) return j;
        len |= j;
      }
      return len;
    }
  }, {
    "../../asn1": 1,
    inherits: 101
  } ],
  10: [ function(require, module, exports) {
    var decoders = exports;
    decoders.der = require("./der");
    decoders.pem = require("./pem");
  }, {
    "./der": 9,
    "./pem": 11
  } ],
  11: [ function(require, module, exports) {
    var inherits = require("inherits");
    var Buffer = require("buffer").Buffer;
    var DERDecoder = require("./der");
    function PEMDecoder(entity) {
      DERDecoder.call(this, entity);
      this.enc = "pem";
    }
    inherits(PEMDecoder, DERDecoder);
    module.exports = PEMDecoder;
    PEMDecoder.prototype.decode = function decode(data, options) {
      var lines = data.toString().split(/[\r\n]+/g);
      var label = options.label.toUpperCase();
      var re = /^-----(BEGIN|END) ([^-]+)-----$/;
      var start = -1;
      var end = -1;
      for (var i = 0; i < lines.length; i++) {
        var match = lines[i].match(re);
        if (null === match) continue;
        if (match[2] !== label) continue;
        if (-1 !== start) {
          if ("END" !== match[1]) break;
          end = i;
          break;
        }
        if ("BEGIN" !== match[1]) break;
        start = i;
      }
      if (-1 === start || -1 === end) throw new Error("PEM section not found for: " + label);
      var base64 = lines.slice(start + 1, end).join("");
      base64.replace(/[^a-z0-9\+\/=]+/gi, "");
      var input = new Buffer(base64, "base64");
      return DERDecoder.prototype.decode.call(this, input, options);
    };
  }, {
    "./der": 9,
    buffer: 47,
    inherits: 101
  } ],
  12: [ function(require, module, exports) {
    var inherits = require("inherits");
    var Buffer = require("buffer").Buffer;
    var asn1 = require("../../asn1");
    var base = asn1.base;
    var der = asn1.constants.der;
    function DEREncoder(entity) {
      this.enc = "der";
      this.name = entity.name;
      this.entity = entity;
      this.tree = new DERNode();
      this.tree._init(entity.body);
    }
    module.exports = DEREncoder;
    DEREncoder.prototype.encode = function encode(data, reporter) {
      return this.tree._encode(data, reporter).join();
    };
    function DERNode(parent) {
      base.Node.call(this, "der", parent);
    }
    inherits(DERNode, base.Node);
    DERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {
      var encodedTag = encodeTag(tag, primitive, cls, this.reporter);
      if (content.length < 128) {
        var header = new Buffer(2);
        header[0] = encodedTag;
        header[1] = content.length;
        return this._createEncoderBuffer([ header, content ]);
      }
      var lenOctets = 1;
      for (var i = content.length; i >= 256; i >>= 8) lenOctets++;
      var header = new Buffer(2 + lenOctets);
      header[0] = encodedTag;
      header[1] = 128 | lenOctets;
      for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) header[i] = 255 & j;
      return this._createEncoderBuffer([ header, content ]);
    };
    DERNode.prototype._encodeStr = function encodeStr(str, tag) {
      if ("bitstr" === tag) return this._createEncoderBuffer([ 0 | str.unused, str.data ]);
      if ("bmpstr" === tag) {
        var buf = new Buffer(2 * str.length);
        for (var i = 0; i < str.length; i++) buf.writeUInt16BE(str.charCodeAt(i), 2 * i);
        return this._createEncoderBuffer(buf);
      }
      if ("numstr" === tag) {
        if (!this._isNumstr(str)) return this.reporter.error("Encoding of string type: numstr supports only digits and space");
        return this._createEncoderBuffer(str);
      }
      if ("printstr" === tag) {
        if (!this._isPrintstr(str)) return this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark");
        return this._createEncoderBuffer(str);
      }
      return /str$/.test(tag) ? this._createEncoderBuffer(str) : "objDesc" === tag ? this._createEncoderBuffer(str) : this.reporter.error("Encoding of string type: " + tag + " unsupported");
    };
    DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
      if ("string" === typeof id) {
        if (!values) return this.reporter.error("string objid given, but no values map found");
        if (!values.hasOwnProperty(id)) return this.reporter.error("objid not found in values map");
        id = values[id].split(/[\s\.]+/g);
        for (var i = 0; i < id.length; i++) id[i] |= 0;
      } else if (Array.isArray(id)) {
        id = id.slice();
        for (var i = 0; i < id.length; i++) id[i] |= 0;
      }
      if (!Array.isArray(id)) return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(id));
      if (!relative) {
        if (id[1] >= 40) return this.reporter.error("Second objid identifier OOB");
        id.splice(0, 2, 40 * id[0] + id[1]);
      }
      var size = 0;
      for (var i = 0; i < id.length; i++) {
        var ident = id[i];
        for (size++; ident >= 128; ident >>= 7) size++;
      }
      var objid = new Buffer(size);
      var offset = objid.length - 1;
      for (var i = id.length - 1; i >= 0; i--) {
        var ident = id[i];
        objid[offset--] = 127 & ident;
        while ((ident >>= 7) > 0) objid[offset--] = 128 | 127 & ident;
      }
      return this._createEncoderBuffer(objid);
    };
    function two(num) {
      return num < 10 ? "0" + num : num;
    }
    DERNode.prototype._encodeTime = function encodeTime(time, tag) {
      var str;
      var date = new Date(time);
      "gentime" === tag ? str = [ two(date.getFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), "Z" ].join("") : "utctime" === tag ? str = [ two(date.getFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), "Z" ].join("") : this.reporter.error("Encoding " + tag + " time is not supported yet");
      return this._encodeStr(str, "octstr");
    };
    DERNode.prototype._encodeNull = function encodeNull() {
      return this._createEncoderBuffer("");
    };
    DERNode.prototype._encodeInt = function encodeInt(num, values) {
      if ("string" === typeof num) {
        if (!values) return this.reporter.error("String int or enum given, but no values map");
        if (!values.hasOwnProperty(num)) return this.reporter.error("Values map doesn't contain: " + JSON.stringify(num));
        num = values[num];
      }
      if ("number" !== typeof num && !Buffer.isBuffer(num)) {
        var numArray = num.toArray();
        !num.sign && 128 & numArray[0] && numArray.unshift(0);
        num = new Buffer(numArray);
      }
      if (Buffer.isBuffer(num)) {
        var size = num.length;
        0 === num.length && size++;
        var out = new Buffer(size);
        num.copy(out);
        0 === num.length && (out[0] = 0);
        return this._createEncoderBuffer(out);
      }
      if (num < 128) return this._createEncoderBuffer(num);
      if (num < 256) return this._createEncoderBuffer([ 0, num ]);
      var size = 1;
      for (var i = num; i >= 256; i >>= 8) size++;
      var out = new Array(size);
      for (var i = out.length - 1; i >= 0; i--) {
        out[i] = 255 & num;
        num >>= 8;
      }
      128 & out[0] && out.unshift(0);
      return this._createEncoderBuffer(new Buffer(out));
    };
    DERNode.prototype._encodeBool = function encodeBool(value) {
      return this._createEncoderBuffer(value ? 255 : 0);
    };
    DERNode.prototype._use = function use(entity, obj) {
      "function" === typeof entity && (entity = entity(obj));
      return entity._getEncoder("der").tree;
    };
    DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
      var state = this._baseState;
      var i;
      if (null === state["default"]) return false;
      var data = dataBuffer.join();
      void 0 === state.defaultBuffer && (state.defaultBuffer = this._encodeValue(state["default"], reporter, parent).join());
      if (data.length !== state.defaultBuffer.length) return false;
      for (i = 0; i < data.length; i++) if (data[i] !== state.defaultBuffer[i]) return false;
      return true;
    };
    function encodeTag(tag, primitive, cls, reporter) {
      var res;
      "seqof" === tag ? tag = "seq" : "setof" === tag && (tag = "set");
      if (der.tagByName.hasOwnProperty(tag)) res = der.tagByName[tag]; else {
        if ("number" !== typeof tag || (0 | tag) !== tag) return reporter.error("Unknown tag: " + tag);
        res = tag;
      }
      if (res >= 31) return reporter.error("Multi-octet tag encoding unsupported");
      primitive || (res |= 32);
      res |= der.tagClassByName[cls || "universal"] << 6;
      return res;
    }
  }, {
    "../../asn1": 1,
    buffer: 47,
    inherits: 101
  } ],
  13: [ function(require, module, exports) {
    var encoders = exports;
    encoders.der = require("./der");
    encoders.pem = require("./pem");
  }, {
    "./der": 12,
    "./pem": 14
  } ],
  14: [ function(require, module, exports) {
    var inherits = require("inherits");
    var DEREncoder = require("./der");
    function PEMEncoder(entity) {
      DEREncoder.call(this, entity);
      this.enc = "pem";
    }
    inherits(PEMEncoder, DEREncoder);
    module.exports = PEMEncoder;
    PEMEncoder.prototype.encode = function encode(data, options) {
      var buf = DEREncoder.prototype.encode.call(this, data);
      var p = buf.toString("base64");
      var out = [ "-----BEGIN " + options.label + "-----" ];
      for (var i = 0; i < p.length; i += 64) out.push(p.slice(i, i + 64));
      out.push("-----END " + options.label + "-----");
      return out.join("\n");
    };
  }, {
    "./der": 12,
    inherits: 101
  } ],
  15: [ function(require, module, exports) {
    "use strict";
    exports.byteLength = byteLength;
    exports.toByteArray = toByteArray;
    exports.fromByteArray = fromByteArray;
    var lookup = [];
    var revLookup = [];
    var Arr = "undefined" !== typeof Uint8Array ? Uint8Array : Array;
    var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (var i = 0, len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    }
    revLookup["-".charCodeAt(0)] = 62;
    revLookup["_".charCodeAt(0)] = 63;
    function getLens(b64) {
      var len = b64.length;
      if (len % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
      var validLen = b64.indexOf("=");
      -1 === validLen && (validLen = len);
      var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
      return [ validLen, placeHoldersLen ];
    }
    function byteLength(b64) {
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      return 3 * (validLen + placeHoldersLen) / 4 - placeHoldersLen;
    }
    function _byteLength(b64, validLen, placeHoldersLen) {
      return 3 * (validLen + placeHoldersLen) / 4 - placeHoldersLen;
    }
    function toByteArray(b64) {
      var tmp;
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
      var curByte = 0;
      var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
      var i;
      for (i = 0; i < len; i += 4) {
        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = 255 & tmp;
      }
      if (2 === placeHoldersLen) {
        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
        arr[curByte++] = 255 & tmp;
      }
      if (1 === placeHoldersLen) {
        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = 255 & tmp;
      }
      return arr;
    }
    function tripletToBase64(num) {
      return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[63 & num];
    }
    function encodeChunk(uint8, start, end) {
      var tmp;
      var output = [];
      for (var i = start; i < end; i += 3) {
        tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (255 & uint8[i + 2]);
        output.push(tripletToBase64(tmp));
      }
      return output.join("");
    }
    function fromByteArray(uint8) {
      var tmp;
      var len = uint8.length;
      var extraBytes = len % 3;
      var parts = [];
      var maxChunkLength = 16383;
      for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
      if (1 === extraBytes) {
        tmp = uint8[len - 1];
        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "==");
      } else if (2 === extraBytes) {
        tmp = (uint8[len - 2] << 8) + uint8[len - 1];
        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "=");
      }
      return parts.join("");
    }
  }, {} ],
  16: [ function(require, module, exports) {
    (function(module, exports) {
      "use strict";
      function assert(val, msg) {
        if (!val) throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {};
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (null !== number) {
          if ("le" === base || "be" === base) {
            endian = base;
            base = 10;
          }
          this._init(number || 0, base || 10, endian || "be");
        }
      }
      "object" === typeof module ? module.exports = BN : exports.BN = BN;
      BN.BN = BN;
      BN.wordSize = 26;
      var Buffer;
      try {
        Buffer = require("buffer").Buffer;
      } catch (e) {}
      BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return null !== num && "object" === typeof num && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
      };
      BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
      };
      BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
      };
      BN.prototype._init = function init(number, base, endian) {
        if ("number" === typeof number) return this._initNumber(number, base, endian);
        if ("object" === typeof number) return this._initArray(number, base, endian);
        "hex" === base && (base = 16);
        assert(base === (0 | base) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, "");
        var start = 0;
        "-" === number[0] && start++;
        16 === base ? this._parseHex(number, start) : this._parseBase(number, base, start);
        "-" === number[0] && (this.negative = 1);
        this.strip();
        if ("le" !== endian) return;
        this._initArray(this.toArray(), base, endian);
      };
      BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
          this.negative = 1;
          number = -number;
        }
        if (number < 67108864) {
          this.words = [ 67108863 & number ];
          this.length = 1;
        } else if (number < 4503599627370496) {
          this.words = [ 67108863 & number, number / 67108864 & 67108863 ];
          this.length = 2;
        } else {
          assert(number < 9007199254740992);
          this.words = [ 67108863 & number, number / 67108864 & 67108863, 1 ];
          this.length = 3;
        }
        if ("le" !== endian) return;
        this._initArray(this.toArray(), base, endian);
      };
      BN.prototype._initArray = function _initArray(number, base, endian) {
        assert("number" === typeof number.length);
        if (number.length <= 0) {
          this.words = [ 0 ];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) this.words[i] = 0;
        var j, w;
        var off = 0;
        if ("be" === endian) for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
          w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] = w >>> 26 - off & 67108863;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        } else if ("le" === endian) for (i = 0, j = 0; i < number.length; i += 3) {
          w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] = w >>> 26 - off & 67108863;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
        return this.strip();
      };
      function parseHex(str, start, end) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r <<= 4;
          r |= c >= 49 && c <= 54 ? c - 49 + 10 : c >= 17 && c <= 22 ? c - 17 + 10 : 15 & c;
        }
        return r;
      }
      BN.prototype._parseHex = function _parseHex(number, start) {
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) this.words[i] = 0;
        var j, w;
        var off = 0;
        for (i = number.length - 6, j = 0; i >= start; i -= 6) {
          w = parseHex(number, i, i + 6);
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] |= w >>> 26 - off & 4194303;
          off += 24;
          if (off >= 26) {
            off -= 26;
            j++;
          }
        }
        if (i + 6 !== start) {
          w = parseHex(number, start, i + 6);
          this.words[j] |= w << off & 67108863;
          this.words[j + 1] |= w >>> 26 - off & 4194303;
        }
        this.strip();
      };
      function parseBase(str, start, end, mul) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i = start; i < len; i++) {
          var c = str.charCodeAt(i) - 48;
          r *= mul;
          r += c >= 49 ? c - 49 + 10 : c >= 17 ? c - 17 + 10 : c;
        }
        return r;
      }
      BN.prototype._parseBase = function _parseBase(number, base, start) {
        this.words = [ 0 ];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for (var i = start; i < end; i += limbLen) {
          word = parseBase(number, i, i + limbLen, base);
          this.imuln(limbPow);
          this.words[0] + word < 67108864 ? this.words[0] += word : this._iaddn(word);
        }
        if (0 !== mod) {
          var pow = 1;
          word = parseBase(number, i, number.length, base);
          for (i = 0; i < mod; i++) pow *= base;
          this.imuln(pow);
          this.words[0] + word < 67108864 ? this.words[0] += word : this._iaddn(word);
        }
      };
      BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i = 0; i < this.length; i++) dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
      };
      BN.prototype._expand = function _expand(size) {
        while (this.length < size) this.words[this.length++] = 0;
        return this;
      };
      BN.prototype.strip = function strip() {
        while (this.length > 1 && 0 === this.words[this.length - 1]) this.length--;
        return this._normSign();
      };
      BN.prototype._normSign = function _normSign() {
        1 === this.length && 0 === this.words[0] && (this.negative = 0);
        return this;
      };
      BN.prototype.inspect = function inspect() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros = [ "", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000" ];
      var groupSizes = [ 0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5 ];
      var groupBases = [ 0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176 ];
      BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = 0 | padding || 1;
        var out;
        if (16 === base || "hex" === base) {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = this.words[i];
            var word = (16777215 & (w << off | carry)).toString(16);
            carry = w >>> 24 - off & 16777215;
            out = 0 !== carry || i !== this.length - 1 ? zeros[6 - word.length] + word + out : word + out;
            off += 2;
            if (off >= 26) {
              off -= 26;
              i--;
            }
          }
          0 !== carry && (out = carry.toString(16) + out);
          while (out.length % padding !== 0) out = "0" + out;
          0 !== this.negative && (out = "-" + out);
          return out;
        }
        if (base === (0 | base) && base >= 2 && base <= 36) {
          var groupSize = groupSizes[base];
          var groupBase = groupBases[base];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base);
            c = c.idivn(groupBase);
            out = c.isZero() ? r + out : zeros[groupSize - r.length] + r + out;
          }
          this.isZero() && (out = "0" + out);
          while (out.length % padding !== 0) out = "0" + out;
          0 !== this.negative && (out = "-" + out);
          return out;
        }
        assert(false, "Base should be between 2 and 36");
      };
      BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        2 === this.length ? ret += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? ret += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && assert(false, "Number can only safely store up to 53 bits");
        return 0 !== this.negative ? -ret : ret;
      };
      BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
      };
      BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert("undefined" !== typeof Buffer);
        return this.toArrayLike(Buffer, endian, length);
      };
      BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, "byte array longer than desired length");
        assert(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = "le" === endian;
        var res = new ArrayType(reqLength);
        var b, i;
        var q = this.clone();
        if (littleEndian) {
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[i] = b;
          }
          for (;i < reqLength; i++) res[i] = 0;
        } else {
          for (i = 0; i < reqLength - byteLength; i++) res[i] = 0;
          for (i = 0; !q.isZero(); i++) {
            b = q.andln(255);
            q.iushrn(8);
            res[reqLength - i - 1] = b;
          }
        }
        return res;
      };
      Math.clz32 ? BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
      } : BN.prototype._countBits = function _countBits(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
          r += 13;
          t >>>= 13;
        }
        if (t >= 64) {
          r += 7;
          t >>>= 7;
        }
        if (t >= 8) {
          r += 4;
          t >>>= 4;
        }
        if (t >= 2) {
          r += 2;
          t >>>= 2;
        }
        return r + t;
      };
      BN.prototype._zeroBits = function _zeroBits(w) {
        if (0 === w) return 26;
        var t = w;
        var r = 0;
        if (0 === (8191 & t)) {
          r += 13;
          t >>>= 13;
        }
        if (0 === (127 & t)) {
          r += 7;
          t >>>= 7;
        }
        if (0 === (15 & t)) {
          r += 4;
          t >>>= 4;
        }
        if (0 === (3 & t)) {
          r += 2;
          t >>>= 2;
        }
        0 === (1 & t) && r++;
        return r;
      };
      BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return 26 * (this.length - 1) + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for (var i = 0; i < this.length; i++) {
          var b = this._zeroBits(this.words[i]);
          r += b;
          if (26 !== b) break;
        }
        return r;
      };
      BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN.prototype.toTwos = function toTwos(width) {
        if (0 !== this.negative) return this.abs().inotn(width).iaddn(1);
        return this.clone();
      };
      BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
      };
      BN.prototype.isNeg = function isNeg() {
        return 0 !== this.negative;
      };
      BN.prototype.neg = function neg() {
        return this.clone().ineg();
      };
      BN.prototype.ineg = function ineg() {
        this.isZero() || (this.negative ^= 1);
        return this;
      };
      BN.prototype.iuor = function iuor(num) {
        while (this.length < num.length) this.words[this.length++] = 0;
        for (var i = 0; i < num.length; i++) this.words[i] = this.words[i] | num.words[i];
        return this.strip();
      };
      BN.prototype.ior = function ior(num) {
        assert(0 === (this.negative | num.negative));
        return this.iuor(num);
      };
      BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN.prototype.iuand = function iuand(num) {
        var b;
        b = this.length > num.length ? num : this;
        for (var i = 0; i < b.length; i++) this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this.strip();
      };
      BN.prototype.iand = function iand(num) {
        assert(0 === (this.negative | num.negative));
        return this.iuand(num);
      };
      BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN.prototype.iuxor = function iuxor(num) {
        var a;
        var b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        for (var i = 0; i < b.length; i++) this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for (;i < a.length; i++) this.words[i] = a.words[i];
        this.length = a.length;
        return this.strip();
      };
      BN.prototype.ixor = function ixor(num) {
        assert(0 === (this.negative | num.negative));
        return this.iuxor(num);
      };
      BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN.prototype.inotn = function inotn(width) {
        assert("number" === typeof width && width >= 0);
        var bytesNeeded = 0 | Math.ceil(width / 26);
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        bitsLeft > 0 && bytesNeeded--;
        for (var i = 0; i < bytesNeeded; i++) this.words[i] = 67108863 & ~this.words[i];
        bitsLeft > 0 && (this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft);
        return this.strip();
      };
      BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN.prototype.setn = function setn(bit, val) {
        assert("number" === typeof bit && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        this.words[off] = val ? this.words[off] | 1 << wbit : this.words[off] & ~(1 << wbit);
        return this.strip();
      };
      BN.prototype.iadd = function iadd(num) {
        var r;
        if (0 !== this.negative && 0 === num.negative) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        }
        if (0 === this.negative && 0 !== num.negative) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b;
        if (this.length > num.length) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (0 | a.words[i]) + (0 | b.words[i]) + carry;
          this.words[i] = 67108863 & r;
          carry = r >>> 26;
        }
        for (;0 !== carry && i < a.length; i++) {
          r = (0 | a.words[i]) + carry;
          this.words[i] = 67108863 & r;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (0 !== carry) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) for (;i < a.length; i++) this.words[i] = a.words[i];
        return this;
      };
      BN.prototype.add = function add(num) {
        var res;
        if (0 !== num.negative && 0 === this.negative) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        }
        if (0 === num.negative && 0 !== this.negative) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN.prototype.isub = function isub(num) {
        if (0 !== num.negative) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        }
        if (0 !== this.negative) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (0 === cmp) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b;
        if (cmp > 0) {
          a = this;
          b = num;
        } else {
          a = num;
          b = this;
        }
        var carry = 0;
        for (var i = 0; i < b.length; i++) {
          r = (0 | a.words[i]) - (0 | b.words[i]) + carry;
          carry = r >> 26;
          this.words[i] = 67108863 & r;
        }
        for (;0 !== carry && i < a.length; i++) {
          r = (0 | a.words[i]) + carry;
          carry = r >> 26;
          this.words[i] = 67108863 & r;
        }
        if (0 === carry && i < a.length && a !== this) for (;i < a.length; i++) this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        a !== this && (this.negative = 1);
        return this.strip();
      };
      BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = 0 | self.words[0];
        var b = 0 | num.words[0];
        var r = a * b;
        var lo = 67108863 & r;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = 67108863 & carry;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
            var i = k - j | 0;
            a = 0 | self.words[i];
            b = 0 | num.words[j];
            r = a * b + rword;
            ncarry += r / 67108864 | 0;
            rword = 67108863 & r;
          }
          out.words[k] = 0 | rword;
          carry = 0 | ncarry;
        }
        0 !== carry ? out.words[k] = 0 | carry : out.length--;
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = 0 | a[0];
        var al0 = 8191 & a0;
        var ah0 = a0 >>> 13;
        var a1 = 0 | a[1];
        var al1 = 8191 & a1;
        var ah1 = a1 >>> 13;
        var a2 = 0 | a[2];
        var al2 = 8191 & a2;
        var ah2 = a2 >>> 13;
        var a3 = 0 | a[3];
        var al3 = 8191 & a3;
        var ah3 = a3 >>> 13;
        var a4 = 0 | a[4];
        var al4 = 8191 & a4;
        var ah4 = a4 >>> 13;
        var a5 = 0 | a[5];
        var al5 = 8191 & a5;
        var ah5 = a5 >>> 13;
        var a6 = 0 | a[6];
        var al6 = 8191 & a6;
        var ah6 = a6 >>> 13;
        var a7 = 0 | a[7];
        var al7 = 8191 & a7;
        var ah7 = a7 >>> 13;
        var a8 = 0 | a[8];
        var al8 = 8191 & a8;
        var ah8 = a8 >>> 13;
        var a9 = 0 | a[9];
        var al9 = 8191 & a9;
        var ah9 = a9 >>> 13;
        var b0 = 0 | b[0];
        var bl0 = 8191 & b0;
        var bh0 = b0 >>> 13;
        var b1 = 0 | b[1];
        var bl1 = 8191 & b1;
        var bh1 = b1 >>> 13;
        var b2 = 0 | b[2];
        var bl2 = 8191 & b2;
        var bh2 = b2 >>> 13;
        var b3 = 0 | b[3];
        var bl3 = 8191 & b3;
        var bh3 = b3 >>> 13;
        var b4 = 0 | b[4];
        var bl4 = 8191 & b4;
        var bh4 = b4 >>> 13;
        var b5 = 0 | b[5];
        var bl5 = 8191 & b5;
        var bh5 = b5 >>> 13;
        var b6 = 0 | b[6];
        var bl6 = 8191 & b6;
        var bh6 = b6 >>> 13;
        var b7 = 0 | b[7];
        var bl7 = 8191 & b7;
        var bh7 = b7 >>> 13;
        var b8 = 0 | b[8];
        var bl8 = 8191 & b8;
        var bh8 = b8 >>> 13;
        var b9 = 0 | b[9];
        var bl9 = 8191 & b9;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((8191 & mid) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (0 !== c) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      Math.imul || (comb10MulTo = smallMulTo);
      function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = 67108863 & carry;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
            var i = k - j;
            var a = 0 | self.words[i];
            var b = 0 | num.words[j];
            var r = a * b;
            var lo = 67108863 & r;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = 67108863 & lo;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        0 !== carry ? out.words[k] = carry : out.length--;
        return out.strip();
      }
      function jumboMulTo(self, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self, num, out);
      }
      BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        res = 10 === this.length && 10 === num.length ? comb10MulTo(this, num, out) : len < 63 ? smallMulTo(this, num, out) : len < 1024 ? bigMulTo(this, num, out) : jumboMulTo(this, num, out);
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for (var i = 0; i < N; i++) t[i] = this.revBin(i, l, N);
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N) {
        if (0 === x || x === N - 1) return x;
        var rb = 0;
        for (var i = 0; i < l; i++) {
          rb |= (1 & x) << l - i - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for (var i = 0; i < N; i++) {
          rtws[i] = rws[rbt[i]];
          itws[i] = iws[rbt[i]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for (var s = 1; s < N; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = 1 | Math.max(m, n);
        var odd = 1 & N;
        var i = 0;
        for (N = N / 2 | 0; N; N >>>= 1) i++;
        return 1 << i + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for (var i = 0; i < N / 2; i++) {
          var t = rws[i];
          rws[i] = rws[N - i - 1];
          rws[N - i - 1] = t;
          t = iws[i];
          iws[i] = -iws[N - i - 1];
          iws[N - i - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for (var i = 0; i < N / 2; i++) {
          var w = 8192 * Math.round(ws[2 * i + 1] / N) + Math.round(ws[2 * i] / N) + carry;
          ws[i] = 67108863 & w;
          carry = w < 67108864 ? 0 : w / 67108864 | 0;
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for (var i = 0; i < len; i++) {
          carry += 0 | ws[i];
          rws[2 * i] = 8191 & carry;
          carry >>>= 13;
          rws[2 * i + 1] = 8191 & carry;
          carry >>>= 13;
        }
        for (i = 2 * len; i < N; ++i) rws[i] = 0;
        assert(0 === carry);
        assert(0 === (-8192 & carry));
      };
      FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for (var i = 0; i < N; i++) ph[i] = 0;
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for (var i = 0; i < N; i++) {
          var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
          iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
          rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN.prototype.imuln = function imuln(num) {
        assert("number" === typeof num);
        assert(num < 67108864);
        var carry = 0;
        for (var i = 0; i < this.length; i++) {
          var w = (0 | this.words[i]) * num;
          var lo = (67108863 & w) + (67108863 & carry);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i] = 67108863 & lo;
        }
        if (0 !== carry) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (0 === w.length) return new BN(1);
        var res = this;
        for (var i = 0; i < w.length; i++, res = res.sqr()) if (0 !== w[i]) break;
        if (++i < w.length) for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
          if (0 === w[i]) continue;
          res = res.mul(q);
        }
        return res;
      };
      BN.prototype.iushln = function iushln(bits) {
        assert("number" === typeof bits && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (0 !== r) {
          var carry = 0;
          for (i = 0; i < this.length; i++) {
            var newCarry = this.words[i] & carryMask;
            var c = (0 | this.words[i]) - newCarry << r;
            this.words[i] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i] = carry;
            this.length++;
          }
        }
        if (0 !== s) {
          for (i = this.length - 1; i >= 0; i--) this.words[i + s] = this.words[i];
          for (i = 0; i < s; i++) this.words[i] = 0;
          this.length += s;
        }
        return this.strip();
      };
      BN.prototype.ishln = function ishln(bits) {
        assert(0 === this.negative);
        return this.iushln(bits);
      };
      BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert("number" === typeof bits && bits >= 0);
        var h;
        h = hint ? (hint - hint % 26) / 26 : 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i = 0; i < s; i++) maskedWords.words[i] = this.words[i];
          maskedWords.length = s;
        }
        if (0 === s) ; else if (this.length > s) {
          this.length -= s;
          for (i = 0; i < this.length; i++) this.words[i] = this.words[i + s];
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i = this.length - 1; i >= 0 && (0 !== carry || i >= h); i--) {
          var word = 0 | this.words[i];
          this.words[i] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        maskedWords && 0 !== carry && (maskedWords.words[maskedWords.length++] = carry);
        if (0 === this.length) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert(0 === this.negative);
        return this.iushrn(bits, hint, extended);
      };
      BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN.prototype.testn = function testn(bit) {
        assert("number" === typeof bit && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN.prototype.imaskn = function imaskn(bits) {
        assert("number" === typeof bits && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(0 === this.negative, "imaskn works only with positive numbers");
        if (this.length <= s) return this;
        0 !== r && s++;
        this.length = Math.min(s, this.length);
        if (0 !== r) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN.prototype.iaddn = function iaddn(num) {
        assert("number" === typeof num);
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        if (0 !== this.negative) {
          if (1 === this.length && (0 | this.words[0]) < num) {
            this.words[0] = num - (0 | this.words[0]);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
          this.words[i] -= 67108864;
          i === this.length - 1 ? this.words[i + 1] = 1 : this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
      };
      BN.prototype.isubn = function isubn(num) {
        assert("number" === typeof num);
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (0 !== this.negative) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (1 === this.length && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else for (var i = 0; i < this.length && this.words[i] < 0; i++) {
          this.words[i] += 67108864;
          this.words[i + 1] -= 1;
        }
        return this.strip();
      };
      BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN.prototype.abs = function abs() {
        return this.clone().iabs();
      };
      BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for (i = 0; i < num.length; i++) {
          w = (0 | this.words[i + shift]) + carry;
          var right = (0 | num.words[i]) * mul;
          w -= 67108863 & right;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i + shift] = 67108863 & w;
        }
        for (;i < this.length - shift; i++) {
          w = (0 | this.words[i + shift]) + carry;
          carry = w >> 26;
          this.words[i + shift] = 67108863 & w;
        }
        if (0 === carry) return this.strip();
        assert(-1 === carry);
        carry = 0;
        for (i = 0; i < this.length; i++) {
          w = -(0 | this.words[i]) + carry;
          carry = w >> 26;
          this.words[i] = 67108863 & w;
        }
        this.negative = 1;
        return this.strip();
      };
      BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        var bhi = 0 | b.words[b.length - 1];
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (0 !== shift) {
          b = b.ushln(shift);
          a.iushln(shift);
          bhi = 0 | b.words[b.length - 1];
        }
        var m = a.length - b.length;
        var q;
        if ("mod" !== mode) {
          q = new BN(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i = 0; i < q.length; i++) q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (0 === diff.negative) {
          a = diff;
          q && (q.words[m] = 1);
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = 67108864 * (0 | a.words[b.length + j]) + (0 | a.words[b.length + j - 1]);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b, qj, j);
          while (0 !== a.negative) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b, 1, j);
            a.isZero() || (a.negative ^= 1);
          }
          q && (q.words[j] = qj);
        }
        q && q.strip();
        a.strip();
        "div" !== mode && 0 !== shift && a.iushrn(shift);
        return {
          div: q || null,
          mod: a
        };
      };
      BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
          div: new BN(0),
          mod: new BN(0)
        };
        var div, mod, res;
        if (0 !== this.negative && 0 === num.negative) {
          res = this.neg().divmod(num, mode);
          "mod" !== mode && (div = res.div.neg());
          if ("div" !== mode) {
            mod = res.mod.neg();
            positive && 0 !== mod.negative && mod.iadd(num);
          }
          return {
            div: div,
            mod: mod
          };
        }
        if (0 === this.negative && 0 !== num.negative) {
          res = this.divmod(num.neg(), mode);
          "mod" !== mode && (div = res.div.neg());
          return {
            div: div,
            mod: res.mod
          };
        }
        if (0 !== (this.negative & num.negative)) {
          res = this.neg().divmod(num.neg(), mode);
          if ("div" !== mode) {
            mod = res.mod.neg();
            positive && 0 !== mod.negative && mod.isub(num);
          }
          return {
            div: res.div,
            mod: mod
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) return {
          div: new BN(0),
          mod: this
        };
        if (1 === num.length) {
          if ("div" === mode) return {
            div: this.divn(num.words[0]),
            mod: null
          };
          if ("mod" === mode) return {
            div: null,
            mod: new BN(this.modn(num.words[0]))
          };
          return {
            div: this.divn(num.words[0]),
            mod: new BN(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode);
      };
      BN.prototype.div = function div(num) {
        return this.divmod(num, "div", false).div;
      };
      BN.prototype.mod = function mod(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero()) return dm.div;
        var mod = 0 !== dm.div.negative ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod.cmp(half);
        if (cmp < 0 || 1 === r2 && 0 === cmp) return dm.div;
        return 0 !== dm.div.negative ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i = this.length - 1; i >= 0; i--) acc = (p * acc + (0 | this.words[i])) % num;
        return acc;
      };
      BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var w = (0 | this.words[i]) + 67108864 * carry;
          this.words[i] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN.prototype.egcd = function egcd(p) {
        assert(0 === p.negative);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        x = 0 !== x.negative ? x.umod(p) : x.clone();
        var A = new BN(1);
        var B = new BN(0);
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i = 0, im = 1; 0 === (x.words[0] & im) && i < 26; ++i, im <<= 1) ;
          if (i > 0) {
            x.iushrn(i);
            while (i-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; 0 === (y.words[0] & jm) && j < 26; ++j, jm <<= 1) ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN.prototype._invmp = function _invmp(p) {
        assert(0 === p.negative);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        a = 0 !== a.negative ? a.umod(p) : a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
          for (var i = 0, im = 1; 0 === (a.words[0] & im) && i < 26; ++i, im <<= 1) ;
          if (i > 0) {
            a.iushrn(i);
            while (i-- > 0) {
              x1.isOdd() && x1.iadd(delta);
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; 0 === (b.words[0] & jm) && j < 26; ++j, jm <<= 1) ;
          if (j > 0) {
            b.iushrn(j);
            while (j-- > 0) {
              x2.isOdd() && x2.iadd(delta);
              x2.iushrn(1);
            }
          }
          if (a.cmp(b) >= 0) {
            a.isub(b);
            x1.isub(x2);
          } else {
            b.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        res = 0 === a.cmpn(1) ? x1 : x2;
        res.cmpn(0) < 0 && res.iadd(p);
        return res;
      };
      BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        for (var shift = 0; a.isEven() && b.isEven(); shift++) {
          a.iushrn(1);
          b.iushrn(1);
        }
        do {
          while (a.isEven()) a.iushrn(1);
          while (b.isEven()) b.iushrn(1);
          var r = a.cmp(b);
          if (r < 0) {
            var t = a;
            a = b;
            b = t;
          } else if (0 === r || 0 === b.cmpn(1)) break;
          a.isub(b);
        } while (true);
        return b.iushln(shift);
      };
      BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN.prototype.isEven = function isEven() {
        return 0 === (1 & this.words[0]);
      };
      BN.prototype.isOdd = function isOdd() {
        return 1 === (1 & this.words[0]);
      };
      BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN.prototype.bincn = function bincn(bit) {
        assert("number" === typeof bit);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i = s; 0 !== carry && i < this.length; i++) {
          var w = 0 | this.words[i];
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i] = w;
        }
        if (0 !== carry) {
          this.words[i] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.isZero = function isZero() {
        return 1 === this.length && 0 === this.words[0];
      };
      BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (0 !== this.negative && !negative) return -1;
        if (0 === this.negative && negative) return 1;
        this.strip();
        var res;
        if (this.length > 1) res = 1; else {
          negative && (num = -num);
          assert(num <= 67108863, "Number is too big");
          var w = 0 | this.words[0];
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (0 !== this.negative) return 0 | -res;
        return res;
      };
      BN.prototype.cmp = function cmp(num) {
        if (0 !== this.negative && 0 === num.negative) return -1;
        if (0 === this.negative && 0 !== num.negative) return 1;
        var res = this.ucmp(num);
        if (0 !== this.negative) return 0 | -res;
        return res;
      };
      BN.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for (var i = this.length - 1; i >= 0; i--) {
          var a = 0 | this.words[i];
          var b = 0 | num.words[i];
          if (a === b) continue;
          a < b ? res = -1 : a > b && (res = 1);
          break;
        }
        return res;
      };
      BN.prototype.gtn = function gtn(num) {
        return 1 === this.cmpn(num);
      };
      BN.prototype.gt = function gt(num) {
        return 1 === this.cmp(num);
      };
      BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN.prototype.ltn = function ltn(num) {
        return -1 === this.cmpn(num);
      };
      BN.prototype.lt = function lt(num) {
        return -1 === this.cmp(num);
      };
      BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN.prototype.eqn = function eqn(num) {
        return 0 === this.cmpn(num);
      };
      BN.prototype.eq = function eq(num) {
        return 0 === this.cmp(num);
      };
      BN.red = function red(num) {
        return new Red(num);
      };
      BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        assert(0 === this.negative, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN.prototype.fromRed = function fromRed() {
        assert(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN.prototype.redSub = function redSub(num) {
        assert(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN.prototype.redISub = function redISub(num) {
        assert(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN.prototype.redShl = function redShl(num) {
        assert(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN.prototype.redMul = function redMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN.prototype.redSqr = function redSqr() {
        assert(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN.prototype.redISqr = function redISqr() {
        assert(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN.prototype.redInvm = function redInvm() {
        assert(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN.prototype.redNeg = function redNeg() {
        assert(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name, p) {
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (0 === cmp) {
          r.words[0] = 0;
          r.length = 1;
        } else cmp > 0 ? r.isub(this.p) : r.strip();
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i = 0; i < outLen; i++) output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i = 10; i < input.length; i++) {
          var next = 0 | input.words[i];
          input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        0 === prev && input.length > 10 ? input.length -= 10 : input.length -= 9;
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i = 0; i < num.length; i++) {
          var w = 0 | num.words[i];
          lo += 977 * w;
          num.words[i] = 67108863 & lo;
          lo = 64 * w + (lo / 67108864 | 0);
        }
        if (0 === num.words[num.length - 1]) {
          num.length--;
          0 === num.words[num.length - 1] && num.length--;
        }
        return num;
      };
      function P224() {
        MPrime.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i = 0; i < num.length; i++) {
          var hi = 19 * (0 | num.words[i]) + carry;
          var lo = 67108863 & hi;
          hi >>>= 26;
          num.words[i] = lo;
          carry = hi;
        }
        0 !== carry && (num.words[num.length++] = carry);
        return num;
      };
      BN._prime = function prime(name) {
        if (primes[name]) return primes[name];
        var prime;
        if ("k256" === name) prime = new K256(); else if ("p224" === name) prime = new P224(); else if ("p192" === name) prime = new P192(); else {
          if ("p25519" !== name) throw new Error("Unknown prime " + name);
          prime = new P25519();
        }
        primes[name] = prime;
        return prime;
      };
      function Red(m) {
        if ("string" === typeof m) {
          var prime = BN._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert(0 === a.negative, "red works only with positives");
        assert(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b) {
        assert(0 === (a.negative | b.negative), "red works only with positives");
        assert(a.red && a.red === b.red, "red works only with red numbers");
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        res.cmp(this.m) >= 0 && res.isub(this.m);
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        res.cmp(this.m) >= 0 && res.isub(this.m);
        return res;
      };
      Red.prototype.sub = function sub(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        res.cmpn(0) < 0 && res.iadd(this.m);
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        res.cmpn(0) < 0 && res.iadd(this.m);
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
      };
      Red.prototype.mul = function mul(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        if (3 === mod3) {
          var pow = this.m.add(new BN(1)).iushrn(2);
          return this.pow(a, pow);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && 0 === q.andln(1)) {
          s++;
          q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while (0 !== this.pow(z, lpow).cmp(nOne)) z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (0 !== t.cmp(one)) {
          var tmp = t;
          for (var i = 0; 0 !== tmp.cmp(one); i++) tmp = tmp.redSqr();
          assert(i < m);
          var b = this.pow(c, new BN(1).iushln(m - i - 1));
          r = r.redMul(b);
          c = b.redSqr();
          t = t.redMul(c);
          m = i;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv = a._invmp(this.m);
        if (0 !== inv.negative) {
          inv.negative = 0;
          return this.imod(inv).redNeg();
        }
        return this.imod(inv);
      };
      Red.prototype.pow = function pow(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (0 === num.cmpn(1)) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for (var i = 2; i < wnd.length; i++) wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        0 === start && (start = 26);
        for (i = num.length - 1; i >= 0; i--) {
          var word = num.words[i];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            res !== wnd[0] && (res = this.sqr(res));
            if (0 === bit && 0 === current) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (0 !== i || 0 !== j)) continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26);
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b) {
        if (a.isZero() || b.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        u.cmp(this.m) >= 0 ? res = u.isub(this.m) : u.cmpn(0) < 0 && (res = u.iadd(this.m));
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        u.cmp(this.m) >= 0 ? res = u.isub(this.m) : u.cmpn(0) < 0 && (res = u.iadd(this.m));
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })("undefined" === typeof module || module, this);
  }, {
    buffer: 18
  } ],
  17: [ function(require, module, exports) {
    var r;
    module.exports = function rand(len) {
      r || (r = new Rand(null));
      return r.generate(len);
    };
    function Rand(rand) {
      this.rand = rand;
    }
    module.exports.Rand = Rand;
    Rand.prototype.generate = function generate(len) {
      return this._rand(len);
    };
    Rand.prototype._rand = function _rand(n) {
      if (this.rand.getBytes) return this.rand.getBytes(n);
      var res = new Uint8Array(n);
      for (var i = 0; i < res.length; i++) res[i] = this.rand.getByte();
      return res;
    };
    if ("object" === typeof self) self.crypto && self.crypto.getRandomValues ? Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    } : self.msCrypto && self.msCrypto.getRandomValues ? Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    } : "object" === typeof window && (Rand.prototype._rand = function() {
      throw new Error("Not implemented yet");
    }); else try {
      var crypto = require("crypto");
      if ("function" !== typeof crypto.randomBytes) throw new Error("Not supported");
      Rand.prototype._rand = function _rand(n) {
        return crypto.randomBytes(n);
      };
    } catch (e) {}
  }, {
    crypto: 18
  } ],
  18: [ function(require, module, exports) {}, {} ],
  19: [ function(require, module, exports) {
    var Buffer = require("safe-buffer").Buffer;
    function asUInt32Array(buf) {
      Buffer.isBuffer(buf) || (buf = Buffer.from(buf));
      var len = buf.length / 4 | 0;
      var out = new Array(len);
      for (var i = 0; i < len; i++) out[i] = buf.readUInt32BE(4 * i);
      return out;
    }
    function scrubVec(v) {
      for (var i = 0; i < v.length; v++) v[i] = 0;
    }
    function cryptBlock(M, keySchedule, SUB_MIX, SBOX, nRounds) {
      var SUB_MIX0 = SUB_MIX[0];
      var SUB_MIX1 = SUB_MIX[1];
      var SUB_MIX2 = SUB_MIX[2];
      var SUB_MIX3 = SUB_MIX[3];
      var s0 = M[0] ^ keySchedule[0];
      var s1 = M[1] ^ keySchedule[1];
      var s2 = M[2] ^ keySchedule[2];
      var s3 = M[3] ^ keySchedule[3];
      var t0, t1, t2, t3;
      var ksRow = 4;
      for (var round = 1; round < nRounds; round++) {
        t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[s1 >>> 16 & 255] ^ SUB_MIX2[s2 >>> 8 & 255] ^ SUB_MIX3[255 & s3] ^ keySchedule[ksRow++];
        t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[s2 >>> 16 & 255] ^ SUB_MIX2[s3 >>> 8 & 255] ^ SUB_MIX3[255 & s0] ^ keySchedule[ksRow++];
        t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[s3 >>> 16 & 255] ^ SUB_MIX2[s0 >>> 8 & 255] ^ SUB_MIX3[255 & s1] ^ keySchedule[ksRow++];
        t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[s0 >>> 16 & 255] ^ SUB_MIX2[s1 >>> 8 & 255] ^ SUB_MIX3[255 & s2] ^ keySchedule[ksRow++];
        s0 = t0;
        s1 = t1;
        s2 = t2;
        s3 = t3;
      }
      t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 255] << 16 | SBOX[s2 >>> 8 & 255] << 8 | SBOX[255 & s3]) ^ keySchedule[ksRow++];
      t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 255] << 16 | SBOX[s3 >>> 8 & 255] << 8 | SBOX[255 & s0]) ^ keySchedule[ksRow++];
      t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 255] << 16 | SBOX[s0 >>> 8 & 255] << 8 | SBOX[255 & s1]) ^ keySchedule[ksRow++];
      t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 255] << 16 | SBOX[s1 >>> 8 & 255] << 8 | SBOX[255 & s2]) ^ keySchedule[ksRow++];
      t0 >>>= 0;
      t1 >>>= 0;
      t2 >>>= 0;
      t3 >>>= 0;
      return [ t0, t1, t2, t3 ];
    }
    var RCON = [ 0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54 ];
    var G = function() {
      var d = new Array(256);
      for (var j = 0; j < 256; j++) d[j] = j < 128 ? j << 1 : j << 1 ^ 283;
      var SBOX = [];
      var INV_SBOX = [];
      var SUB_MIX = [ [], [], [], [] ];
      var INV_SUB_MIX = [ [], [], [], [] ];
      var x = 0;
      var xi = 0;
      for (var i = 0; i < 256; ++i) {
        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
        sx = sx >>> 8 ^ 255 & sx ^ 99;
        SBOX[x] = sx;
        INV_SBOX[sx] = x;
        var x2 = d[x];
        var x4 = d[x2];
        var x8 = d[x4];
        var t = 257 * d[sx] ^ 16843008 * sx;
        SUB_MIX[0][x] = t << 24 | t >>> 8;
        SUB_MIX[1][x] = t << 16 | t >>> 16;
        SUB_MIX[2][x] = t << 8 | t >>> 24;
        SUB_MIX[3][x] = t;
        t = 16843009 * x8 ^ 65537 * x4 ^ 257 * x2 ^ 16843008 * x;
        INV_SUB_MIX[0][sx] = t << 24 | t >>> 8;
        INV_SUB_MIX[1][sx] = t << 16 | t >>> 16;
        INV_SUB_MIX[2][sx] = t << 8 | t >>> 24;
        INV_SUB_MIX[3][sx] = t;
        if (0 === x) x = xi = 1; else {
          x = x2 ^ d[d[d[x8 ^ x2]]];
          xi ^= d[d[xi]];
        }
      }
      return {
        SBOX: SBOX,
        INV_SBOX: INV_SBOX,
        SUB_MIX: SUB_MIX,
        INV_SUB_MIX: INV_SUB_MIX
      };
    }();
    function AES(key) {
      this._key = asUInt32Array(key);
      this._reset();
    }
    AES.blockSize = 16;
    AES.keySize = 32;
    AES.prototype.blockSize = AES.blockSize;
    AES.prototype.keySize = AES.keySize;
    AES.prototype._reset = function() {
      var keyWords = this._key;
      var keySize = keyWords.length;
      var nRounds = keySize + 6;
      var ksRows = 4 * (nRounds + 1);
      var keySchedule = [];
      for (var k = 0; k < keySize; k++) keySchedule[k] = keyWords[k];
      for (k = keySize; k < ksRows; k++) {
        var t = keySchedule[k - 1];
        if (k % keySize === 0) {
          t = t << 8 | t >>> 24;
          t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 255] << 16 | G.SBOX[t >>> 8 & 255] << 8 | G.SBOX[255 & t];
          t ^= RCON[k / keySize | 0] << 24;
        } else keySize > 6 && k % keySize === 4 && (t = G.SBOX[t >>> 24] << 24 | G.SBOX[t >>> 16 & 255] << 16 | G.SBOX[t >>> 8 & 255] << 8 | G.SBOX[255 & t]);
        keySchedule[k] = keySchedule[k - keySize] ^ t;
      }
      var invKeySchedule = [];
      for (var ik = 0; ik < ksRows; ik++) {
        var ksR = ksRows - ik;
        var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)];
        invKeySchedule[ik] = ik < 4 || ksR <= 4 ? tt : G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[tt >>> 16 & 255]] ^ G.INV_SUB_MIX[2][G.SBOX[tt >>> 8 & 255]] ^ G.INV_SUB_MIX[3][G.SBOX[255 & tt]];
      }
      this._nRounds = nRounds;
      this._keySchedule = keySchedule;
      this._invKeySchedule = invKeySchedule;
    };
    AES.prototype.encryptBlockRaw = function(M) {
      M = asUInt32Array(M);
      return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds);
    };
    AES.prototype.encryptBlock = function(M) {
      var out = this.encryptBlockRaw(M);
      var buf = Buffer.allocUnsafe(16);
      buf.writeUInt32BE(out[0], 0);
      buf.writeUInt32BE(out[1], 4);
      buf.writeUInt32BE(out[2], 8);
      buf.writeUInt32BE(out[3], 12);
      return buf;
    };
    AES.prototype.decryptBlock = function(M) {
      M = asUInt32Array(M);
      var m1 = M[1];
      M[1] = M[3];
      M[3] = m1;
      var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds);
      var buf = Buffer.allocUnsafe(16);
      buf.writeUInt32BE(out[0], 0);
      buf.writeUInt32BE(out[3], 4);
      buf.writeUInt32BE(out[2], 8);
      buf.writeUInt32BE(out[1], 12);
      return buf;
    };
    AES.prototype.scrub = function() {
      scrubVec(this._keySchedule);
      scrubVec(this._invKeySchedule);
      scrubVec(this._key);
    };
    module.exports.AES = AES;
  }, {
    "safe-buffer": 143
  } ],
  20: [ function(require, module, exports) {
    var aes = require("./aes");
    var Buffer = require("safe-buffer").Buffer;
    var Transform = require("cipher-base");
    var inherits = require("inherits");
    var GHASH = require("./ghash");
    var xor = require("buffer-xor");
    var incr32 = require("./incr32");
    function xorTest(a, b) {
      var out = 0;
      a.length !== b.length && out++;
      var len = Math.min(a.length, b.length);
      for (var i = 0; i < len; ++i) out += a[i] ^ b[i];
      return out;
    }
    function calcIv(self, iv, ck) {
      if (12 === iv.length) {
        self._finID = Buffer.concat([ iv, Buffer.from([ 0, 0, 0, 1 ]) ]);
        return Buffer.concat([ iv, Buffer.from([ 0, 0, 0, 2 ]) ]);
      }
      var ghash = new GHASH(ck);
      var len = iv.length;
      var toPad = len % 16;
      ghash.update(iv);
      if (toPad) {
        toPad = 16 - toPad;
        ghash.update(Buffer.alloc(toPad, 0));
      }
      ghash.update(Buffer.alloc(8, 0));
      var ivBits = 8 * len;
      var tail = Buffer.alloc(8);
      tail.writeUIntBE(ivBits, 0, 8);
      ghash.update(tail);
      self._finID = ghash.state;
      var out = Buffer.from(self._finID);
      incr32(out);
      return out;
    }
    function StreamCipher(mode, key, iv, decrypt) {
      Transform.call(this);
      var h = Buffer.alloc(4, 0);
      this._cipher = new aes.AES(key);
      var ck = this._cipher.encryptBlock(h);
      this._ghash = new GHASH(ck);
      iv = calcIv(this, iv, ck);
      this._prev = Buffer.from(iv);
      this._cache = Buffer.allocUnsafe(0);
      this._secCache = Buffer.allocUnsafe(0);
      this._decrypt = decrypt;
      this._alen = 0;
      this._len = 0;
      this._mode = mode;
      this._authTag = null;
      this._called = false;
    }
    inherits(StreamCipher, Transform);
    StreamCipher.prototype._update = function(chunk) {
      if (!this._called && this._alen) {
        var rump = 16 - this._alen % 16;
        if (rump < 16) {
          rump = Buffer.alloc(rump, 0);
          this._ghash.update(rump);
        }
      }
      this._called = true;
      var out = this._mode.encrypt(this, chunk);
      this._decrypt ? this._ghash.update(chunk) : this._ghash.update(out);
      this._len += chunk.length;
      return out;
    };
    StreamCipher.prototype._final = function() {
      if (this._decrypt && !this._authTag) throw new Error("Unsupported state or unable to authenticate data");
      var tag = xor(this._ghash.final(8 * this._alen, 8 * this._len), this._cipher.encryptBlock(this._finID));
      if (this._decrypt && xorTest(tag, this._authTag)) throw new Error("Unsupported state or unable to authenticate data");
      this._authTag = tag;
      this._cipher.scrub();
    };
    StreamCipher.prototype.getAuthTag = function getAuthTag() {
      if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error("Attempting to get auth tag in unsupported state");
      return this._authTag;
    };
    StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {
      if (!this._decrypt) throw new Error("Attempting to set auth tag in unsupported state");
      this._authTag = tag;
    };
    StreamCipher.prototype.setAAD = function setAAD(buf) {
      if (this._called) throw new Error("Attempting to set AAD in unsupported state");
      this._ghash.update(buf);
      this._alen += buf.length;
    };
    module.exports = StreamCipher;
  }, {
    "./aes": 19,
    "./ghash": 24,
    "./incr32": 25,
    "buffer-xor": 46,
    "cipher-base": 49,
    inherits: 101,
    "safe-buffer": 143
  } ],
  21: [ function(require, module, exports) {
    var ciphers = require("./encrypter");
    var deciphers = require("./decrypter");
    var modes = require("./modes/list.json");
    function getCiphers() {
      return Object.keys(modes);
    }
    exports.createCipher = exports.Cipher = ciphers.createCipher;
    exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv;
    exports.createDecipher = exports.Decipher = deciphers.createDecipher;
    exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv;
    exports.listCiphers = exports.getCiphers = getCiphers;
  }, {
    "./decrypter": 22,
    "./encrypter": 23,
    "./modes/list.json": 33
  } ],
  22: [ function(require, module, exports) {
    var AuthCipher = require("./authCipher");
    var Buffer = require("safe-buffer").Buffer;
    var MODES = require("./modes");
    var StreamCipher = require("./streamCipher");
    var Transform = require("cipher-base");
    var aes = require("./aes");
    var ebtk = require("evp_bytestokey");
    var inherits = require("inherits");
    function Decipher(mode, key, iv) {
      Transform.call(this);
      this._cache = new Splitter();
      this._last = void 0;
      this._cipher = new aes.AES(key);
      this._prev = Buffer.from(iv);
      this._mode = mode;
      this._autopadding = true;
    }
    inherits(Decipher, Transform);
    Decipher.prototype._update = function(data) {
      this._cache.add(data);
      var chunk;
      var thing;
      var out = [];
      while (chunk = this._cache.get(this._autopadding)) {
        thing = this._mode.decrypt(this, chunk);
        out.push(thing);
      }
      return Buffer.concat(out);
    };
    Decipher.prototype._final = function() {
      var chunk = this._cache.flush();
      if (this._autopadding) return unpad(this._mode.decrypt(this, chunk));
      if (chunk) throw new Error("data not multiple of block length");
    };
    Decipher.prototype.setAutoPadding = function(setTo) {
      this._autopadding = !!setTo;
      return this;
    };
    function Splitter() {
      this.cache = Buffer.allocUnsafe(0);
    }
    Splitter.prototype.add = function(data) {
      this.cache = Buffer.concat([ this.cache, data ]);
    };
    Splitter.prototype.get = function(autoPadding) {
      var out;
      if (autoPadding) {
        if (this.cache.length > 16) {
          out = this.cache.slice(0, 16);
          this.cache = this.cache.slice(16);
          return out;
        }
      } else if (this.cache.length >= 16) {
        out = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        return out;
      }
      return null;
    };
    Splitter.prototype.flush = function() {
      if (this.cache.length) return this.cache;
    };
    function unpad(last) {
      var padded = last[15];
      if (padded < 1 || padded > 16) throw new Error("unable to decrypt data");
      var i = -1;
      while (++i < padded) if (last[i + (16 - padded)] !== padded) throw new Error("unable to decrypt data");
      if (16 === padded) return;
      return last.slice(0, 16 - padded);
    }
    function createDecipheriv(suite, password, iv) {
      var config = MODES[suite.toLowerCase()];
      if (!config) throw new TypeError("invalid suite type");
      "string" === typeof iv && (iv = Buffer.from(iv));
      if ("GCM" !== config.mode && iv.length !== config.iv) throw new TypeError("invalid iv length " + iv.length);
      "string" === typeof password && (password = Buffer.from(password));
      if (password.length !== config.key / 8) throw new TypeError("invalid key length " + password.length);
      if ("stream" === config.type) return new StreamCipher(config.module, password, iv, true);
      if ("auth" === config.type) return new AuthCipher(config.module, password, iv, true);
      return new Decipher(config.module, password, iv);
    }
    function createDecipher(suite, password) {
      var config = MODES[suite.toLowerCase()];
      if (!config) throw new TypeError("invalid suite type");
      var keys = ebtk(password, false, config.key, config.iv);
      return createDecipheriv(suite, keys.key, keys.iv);
    }
    exports.createDecipher = createDecipher;
    exports.createDecipheriv = createDecipheriv;
  }, {
    "./aes": 19,
    "./authCipher": 20,
    "./modes": 32,
    "./streamCipher": 35,
    "cipher-base": 49,
    evp_bytestokey: 84,
    inherits: 101,
    "safe-buffer": 143
  } ],
  23: [ function(require, module, exports) {
    var MODES = require("./modes");
    var AuthCipher = require("./authCipher");
    var Buffer = require("safe-buffer").Buffer;
    var StreamCipher = require("./streamCipher");
    var Transform = require("cipher-base");
    var aes = require("./aes");
    var ebtk = require("evp_bytestokey");
    var inherits = require("inherits");
    function Cipher(mode, key, iv) {
      Transform.call(this);
      this._cache = new Splitter();
      this._cipher = new aes.AES(key);
      this._prev = Buffer.from(iv);
      this._mode = mode;
      this._autopadding = true;
    }
    inherits(Cipher, Transform);
    Cipher.prototype._update = function(data) {
      this._cache.add(data);
      var chunk;
      var thing;
      var out = [];
      while (chunk = this._cache.get()) {
        thing = this._mode.encrypt(this, chunk);
        out.push(thing);
      }
      return Buffer.concat(out);
    };
    var PADDING = Buffer.alloc(16, 16);
    Cipher.prototype._final = function() {
      var chunk = this._cache.flush();
      if (this._autopadding) {
        chunk = this._mode.encrypt(this, chunk);
        this._cipher.scrub();
        return chunk;
      }
      if (!chunk.equals(PADDING)) {
        this._cipher.scrub();
        throw new Error("data not multiple of block length");
      }
    };
    Cipher.prototype.setAutoPadding = function(setTo) {
      this._autopadding = !!setTo;
      return this;
    };
    function Splitter() {
      this.cache = Buffer.allocUnsafe(0);
    }
    Splitter.prototype.add = function(data) {
      this.cache = Buffer.concat([ this.cache, data ]);
    };
    Splitter.prototype.get = function() {
      if (this.cache.length > 15) {
        var out = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        return out;
      }
      return null;
    };
    Splitter.prototype.flush = function() {
      var len = 16 - this.cache.length;
      var padBuff = Buffer.allocUnsafe(len);
      var i = -1;
      while (++i < len) padBuff.writeUInt8(len, i);
      return Buffer.concat([ this.cache, padBuff ]);
    };
    function createCipheriv(suite, password, iv) {
      var config = MODES[suite.toLowerCase()];
      if (!config) throw new TypeError("invalid suite type");
      "string" === typeof password && (password = Buffer.from(password));
      if (password.length !== config.key / 8) throw new TypeError("invalid key length " + password.length);
      "string" === typeof iv && (iv = Buffer.from(iv));
      if ("GCM" !== config.mode && iv.length !== config.iv) throw new TypeError("invalid iv length " + iv.length);
      if ("stream" === config.type) return new StreamCipher(config.module, password, iv);
      if ("auth" === config.type) return new AuthCipher(config.module, password, iv);
      return new Cipher(config.module, password, iv);
    }
    function createCipher(suite, password) {
      var config = MODES[suite.toLowerCase()];
      if (!config) throw new TypeError("invalid suite type");
      var keys = ebtk(password, false, config.key, config.iv);
      return createCipheriv(suite, keys.key, keys.iv);
    }
    exports.createCipheriv = createCipheriv;
    exports.createCipher = createCipher;
  }, {
    "./aes": 19,
    "./authCipher": 20,
    "./modes": 32,
    "./streamCipher": 35,
    "cipher-base": 49,
    evp_bytestokey: 84,
    inherits: 101,
    "safe-buffer": 143
  } ],
  24: [ function(require, module, exports) {
    var Buffer = require("safe-buffer").Buffer;
    var ZEROES = Buffer.alloc(16, 0);
    function toArray(buf) {
      return [ buf.readUInt32BE(0), buf.readUInt32BE(4), buf.readUInt32BE(8), buf.readUInt32BE(12) ];
    }
    function fromArray(out) {
      var buf = Buffer.allocUnsafe(16);
      buf.writeUInt32BE(out[0] >>> 0, 0);
      buf.writeUInt32BE(out[1] >>> 0, 4);
      buf.writeUInt32BE(out[2] >>> 0, 8);
      buf.writeUInt32BE(out[3] >>> 0, 12);
      return buf;
    }
    function GHASH(key) {
      this.h = key;
      this.state = Buffer.alloc(16, 0);
      this.cache = Buffer.allocUnsafe(0);
    }
    GHASH.prototype.ghash = function(block) {
      var i = -1;
      while (++i < block.length) this.state[i] ^= block[i];
      this._multiply();
    };
    GHASH.prototype._multiply = function() {
      var Vi = toArray(this.h);
      var Zi = [ 0, 0, 0, 0 ];
      var j, xi, lsbVi;
      var i = -1;
      while (++i < 128) {
        xi = 0 !== (this.state[~~(i / 8)] & 1 << 7 - i % 8);
        if (xi) {
          Zi[0] ^= Vi[0];
          Zi[1] ^= Vi[1];
          Zi[2] ^= Vi[2];
          Zi[3] ^= Vi[3];
        }
        lsbVi = 0 !== (1 & Vi[3]);
        for (j = 3; j > 0; j--) Vi[j] = Vi[j] >>> 1 | (1 & Vi[j - 1]) << 31;
        Vi[0] = Vi[0] >>> 1;
        lsbVi && (Vi[0] = Vi[0] ^ 225 << 24);
      }
      this.state = fromArray(Zi);
    };
    GHASH.prototype.update = function(buf) {
      this.cache = Buffer.concat([ this.cache, buf ]);
      var chunk;
      while (this.cache.length >= 16) {
        chunk = this.cache.slice(0, 16);
        this.cache = this.cache.slice(16);
        this.ghash(chunk);
      }
    };
    GHASH.prototype.final = function(abl, bl) {
      this.cache.length && this.ghash(Buffer.concat([ this.cache, ZEROES ], 16));
      this.ghash(fromArray([ 0, abl, 0, bl ]));
      return this.state;
    };
    module.exports = GHASH;
  }, {
    "safe-buffer": 143
  } ],
  25: [ function(require, module, exports) {
    function incr32(iv) {
      var len = iv.length;
      var item;
      while (len--) {
        item = iv.readUInt8(len);
        if (255 !== item) {
          item++;
          iv.writeUInt8(item, len);
          break;
        }
        iv.writeUInt8(0, len);
      }
    }
    module.exports = incr32;
  }, {} ],
  26: [ function(require, module, exports) {
    var xor = require("buffer-xor");
    exports.encrypt = function(self, block) {
      var data = xor(block, self._prev);
      self._prev = self._cipher.encryptBlock(data);
      return self._prev;
    };
    exports.decrypt = function(self, block) {
      var pad = self._prev;
      self._prev = block;
      var out = self._cipher.decryptBlock(block);
      return xor(out, pad);
    };
  }, {
    "buffer-xor": 46
  } ],
  27: [ function(require, module, exports) {
    var Buffer = require("safe-buffer").Buffer;
    var xor = require("buffer-xor");
    function encryptStart(self, data, decrypt) {
      var len = data.length;
      var out = xor(data, self._cache);
      self._cache = self._cache.slice(len);
      self._prev = Buffer.concat([ self._prev, decrypt ? data : out ]);
      return out;
    }
    exports.encrypt = function(self, data, decrypt) {
      var out = Buffer.allocUnsafe(0);
      var len;
      while (data.length) {
        if (0 === self._cache.length) {
          self._cache = self._cipher.encryptBlock(self._prev);
          self._prev = Buffer.allocUnsafe(0);
        }
        if (!(self._cache.length <= data.length)) {
          out = Buffer.concat([ out, encryptStart(self, data, decrypt) ]);
          break;
        }
        len = self._cache.length;
        out = Buffer.concat([ out, encryptStart(self, data.slice(0, len), decrypt) ]);
        data = data.slice(len);
      }
      return out;
    };
  }, {
    "buffer-xor": 46,
    "safe-buffer": 143
  } ],
  28: [ function(require, module, exports) {
    var Buffer = require("safe-buffer").Buffer;
    function encryptByte(self, byteParam, decrypt) {
      var pad;
      var i = -1;
      var len = 8;
      var out = 0;
      var bit, value;
      while (++i < len) {
        pad = self._cipher.encryptBlock(self._prev);
        bit = byteParam & 1 << 7 - i ? 128 : 0;
        value = pad[0] ^ bit;
        out += (128 & value) >> i % 8;
        self._prev = shiftIn(self._prev, decrypt ? bit : value);
      }
      return out;
    }
    function shiftIn(buffer, value) {
      var len = buffer.length;
      var i = -1;
      var out = Buffer.allocUnsafe(buffer.length);
      buffer = Buffer.concat([ buffer, Buffer.from([ value ]) ]);
      while (++i < len) out[i] = buffer[i] << 1 | buffer[i + 1] >> 7;
      return out;
    }
    exports.encrypt = function(self, chunk, decrypt) {
      var len = chunk.length;
      var out = Buffer.allocUnsafe(len);
      var i = -1;
      while (++i < len) out[i] = encryptByte(self, chunk[i], decrypt);
      return out;
    };
  }, {
    "safe-buffer": 143
  } ],
  29: [ function(require, module, exports) {
    var Buffer = require("safe-buffer").Buffer;
    function encryptByte(self, byteParam, decrypt) {
      var pad = self._cipher.encryptBlock(self._prev);
      var out = pad[0] ^ byteParam;
      self._prev = Buffer.concat([ self._prev.slice(1), Buffer.from([ decrypt ? byteParam : out ]) ]);
      return out;
    }
    exports.encrypt = function(self, chunk, decrypt) {
      var len = chunk.length;
      var out = Buffer.allocUnsafe(len);
      var i = -1;
      while (++i < len) out[i] = encryptByte(self, chunk[i], decrypt);
      return out;
    };
  }, {
    "safe-buffer": 143
  } ],
  30: [ function(require, module, exports) {
    var xor = require("buffer-xor");
    var Buffer = require("safe-buffer").Buffer;
    var incr32 = require("../incr32");
    function getBlock(self) {
      var out = self._cipher.encryptBlockRaw(self._prev);
      incr32(self._prev);
      return out;
    }
    var blockSize = 16;
    exports.encrypt = function(self, chunk) {
      var chunkNum = Math.ceil(chunk.length / blockSize);
      var start = self._cache.length;
      self._cache = Buffer.concat([ self._cache, Buffer.allocUnsafe(chunkNum * blockSize) ]);
      for (var i = 0; i < chunkNum; i++) {
        var out = getBlock(self);
        var offset = start + i * blockSize;
        self._cache.writeUInt32BE(out[0], offset + 0);
        self._cache.writeUInt32BE(out[1], offset + 4);
        self._cache.writeUInt32BE(out[2], offset + 8);
        self._cache.writeUInt32BE(out[3], offset + 12);
      }
      var pad = self._cache.slice(0, chunk.length);
      self._cache = self._cache.slice(chunk.length);
      return xor(chunk, pad);
    };
  }, {
    "../incr32": 25,
    "buffer-xor": 46,
    "safe-buffer": 143
  } ],
  31: [ function(require, module, exports) {
    exports.encrypt = function(self, block) {
      return self._cipher.encryptBlock(block);
    };
    exports.decrypt = function(self, block) {
      return self._cipher.decryptBlock(block);
    };
  }, {} ],
  32: [ function(require, module, exports) {
    var modeModules = {
      ECB: require("./ecb"),
      CBC: require("./cbc"),
      CFB: require("./cfb"),
      CFB8: require("./cfb8"),
      CFB1: require("./cfb1"),
      OFB: require("./ofb"),
      CTR: require("./ctr"),
      GCM: require("./ctr")
    };
    var modes = require("./list.json");
    for (var key in modes) modes[key].module = modeModules[modes[key].mode];
    module.exports = modes;
  }, {
    "./cbc": 26,
    "./cfb": 27,
    "./cfb1": 28,
    "./cfb8": 29,
    "./ctr": 30,
    "./ecb": 31,
    "./list.json": 33,
    "./ofb": 34
  } ],
  33: [ function(require, module, exports) {
    module.exports = {
      "aes-128-ecb": {
        cipher: "AES",
        key: 128,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-192-ecb": {
        cipher: "AES",
        key: 192,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-256-ecb": {
        cipher: "AES",
        key: 256,
        iv: 0,
        mode: "ECB",
        type: "block"
      },
      "aes-128-cbc": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-192-cbc": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-256-cbc": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes128: {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes192: {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      aes256: {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CBC",
        type: "block"
      },
      "aes-128-cfb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-192-cfb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-256-cfb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB",
        type: "stream"
      },
      "aes-128-cfb8": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-192-cfb8": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-256-cfb8": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB8",
        type: "stream"
      },
      "aes-128-cfb1": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-192-cfb1": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-256-cfb1": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CFB1",
        type: "stream"
      },
      "aes-128-ofb": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-192-ofb": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-256-ofb": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "OFB",
        type: "stream"
      },
      "aes-128-ctr": {
        cipher: "AES",
        key: 128,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-192-ctr": {
        cipher: "AES",
        key: 192,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-256-ctr": {
        cipher: "AES",
        key: 256,
        iv: 16,
        mode: "CTR",
        type: "stream"
      },
      "aes-128-gcm": {
        cipher: "AES",
        key: 128,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-192-gcm": {
        cipher: "AES",
        key: 192,
        iv: 12,
        mode: "GCM",
        type: "auth"
      },
      "aes-256-gcm": {
        cipher: "AES",
        key: 256,
        iv: 12,
        mode: "GCM",
        type: "auth"
      }
    };
  }, {} ],
  34: [ function(require, module, exports) {
    (function(Buffer) {
      var xor = require("buffer-xor");
      function getBlock(self) {
        self._prev = self._cipher.encryptBlock(self._prev);
        return self._prev;
      }
      exports.encrypt = function(self, chunk) {
        while (self._cache.length < chunk.length) self._cache = Buffer.concat([ self._cache, getBlock(self) ]);
        var pad = self._cache.slice(0, chunk.length);
        self._cache = self._cache.slice(chunk.length);
        return xor(chunk, pad);
      };
    }).call(this, require("buffer").Buffer);
  }, {
    buffer: 47,
    "buffer-xor": 46
  } ],
  35: [ function(require, module, exports) {
    var aes = require("./aes");
    var Buffer = require("safe-buffer").Buffer;
    var Transform = require("cipher-base");
    var inherits = require("inherits");
    function StreamCipher(mode, key, iv, decrypt) {
      Transform.call(this);
      this._cipher = new aes.AES(key);
      this._prev = Buffer.from(iv);
      this._cache = Buffer.allocUnsafe(0);
      this._secCache = Buffer.allocUnsafe(0);
      this._decrypt = decrypt;
      this._mode = mode;
    }
    inherits(StreamCipher, Transform);
    StreamCipher.prototype._update = function(chunk) {
      return this._mode.encrypt(this, chunk, this._decrypt);
    };
    StreamCipher.prototype._final = function() {
      this._cipher.scrub();
    };
    module.exports = StreamCipher;
  }, {
    "./aes": 19,
    "cipher-base": 49,
    inherits: 101,
    "safe-buffer": 143
  } ],
  36: [ function(require, module, exports) {
    var DES = require("browserify-des");
    var aes = require("browserify-aes/browser");
    var aesModes = require("browserify-aes/modes");
    var desModes = require("browserify-des/modes");
    var ebtk = require("evp_bytestokey");
    function createCipher(suite, password) {
      suite = suite.toLowerCase();
      var keyLen, ivLen;
      if (aesModes[suite]) {
        keyLen = aesModes[suite].key;
        ivLen = aesModes[suite].iv;
      } else {
        if (!desModes[suite]) throw new TypeError("invalid suite type");
        keyLen = 8 * desModes[suite].key;
        ivLen = desModes[suite].iv;
      }
      var keys = ebtk(password, false, keyLen, ivLen);
      return createCipheriv(suite, keys.key, keys.iv);
    }
    function createDecipher(suite, password) {
      suite = suite.toLowerCase();
      var keyLen, ivLen;
      if (aesModes[suite]) {
        keyLen = aesModes[suite].key;
        ivLen = aesModes[suite].iv;
      } else {
        if (!desModes[suite]) throw new TypeError("invalid suite type");
        keyLen = 8 * desModes[suite].key;
        ivLen = desModes[suite].iv;
      }
      var keys = ebtk(password, false, keyLen, ivLen);
      return createDecipheriv(suite, keys.key, keys.iv);
    }
    function createCipheriv(suite, key, iv) {
      suite = suite.toLowerCase();
      if (aesModes[suite]) return aes.createCipheriv(suite, key, iv);
      if (desModes[suite]) return new DES({
        key: key,
        iv: iv,
        mode: suite
      });
      throw new TypeError("invalid suite type");
    }
    function createDecipheriv(suite, key, iv) {
      suite = suite.toLowerCase();
      if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv);
      if (desModes[suite]) return new DES({
        key: key,
        iv: iv,
        mode: suite,
        decrypt: true
      });
      throw new TypeError("invalid suite type");
    }
    function getCiphers() {
      return Object.keys(desModes).concat(aes.getCiphers());
    }
    exports.createCipher = exports.Cipher = createCipher;
    exports.createCipheriv = exports.Cipheriv = createCipheriv;
    exports.createDecipher = exports.Decipher = createDecipher;
    exports.createDecipheriv = exports.Decipheriv = createDecipheriv;
    exports.listCiphers = exports.getCiphers = getCiphers;
  }, {
    "browserify-aes/browser": 21,
    "browserify-aes/modes": 32,
    "browserify-des": 37,
    "browserify-des/modes": 38,
    evp_bytestokey: 84
  } ],
  37: [ function(require, module, exports) {
    var CipherBase = require("cipher-base");
    var des = require("des.js");
    var inherits = require("inherits");
    var Buffer = require("safe-buffer").Buffer;
    var modes = {
      "des-ede3-cbc": des.CBC.instantiate(des.EDE),
      "des-ede3": des.EDE,
      "des-ede-cbc": des.CBC.instantiate(des.EDE),
      "des-ede": des.EDE,
      "des-cbc": des.CBC.instantiate(des.DES),
      "des-ecb": des.DES
    };
    modes.des = modes["des-cbc"];
    modes.des3 = modes["des-ede3-cbc"];
    module.exports = DES;
    inherits(DES, CipherBase);
    function DES(opts) {
      CipherBase.call(this);
      var modeName = opts.mode.toLowerCase();
      var mode = modes[modeName];
      var type;
      type = opts.decrypt ? "decrypt" : "encrypt";
      var key = opts.key;
      Buffer.isBuffer(key) || (key = Buffer.from(key));
      "des-ede" !== modeName && "des-ede-cbc" !== modeName || (key = Buffer.concat([ key, key.slice(0, 8) ]));
      var iv = opts.iv;
      Buffer.isBuffer(iv) || (iv = Buffer.from(iv));
      this._des = mode.create({
        key: key,
        iv: iv,
        type: type
      });
    }
    DES.prototype._update = function(data) {
      return Buffer.from(this._des.update(data));
    };
    DES.prototype._final = function() {
      return Buffer.from(this._des.final());
    };
  }, {
    "cipher-base": 49,
    "des.js": 57,
    inherits: 101,
    "safe-buffer": 143
  } ],
  38: [ function(require, module, exports) {
    exports["des-ecb"] = {
      key: 8,
      iv: 0
    };
    exports["des-cbc"] = exports.des = {
      key: 8,
      iv: 8
    };
    exports["des-ede3-cbc"] = exports.des3 = {
      key: 24,
      iv: 8
    };
    exports["des-ede3"] = {
      key: 24,
      iv: 0
    };
    exports["des-ede-cbc"] = {
      key: 16,
      iv: 8
    };
    exports["des-ede"] = {
      key: 16,
      iv: 0
    };
  }, {} ],
  39: [ function(require, module, exports) {
    (function(Buffer) {
      var bn = require("bn.js");
      var randomBytes = require("randombytes");
      module.exports = crt;
      function blind(priv) {
        var r = getr(priv);
        var blinder = r.toRed(bn.mont(priv.modulus)).redPow(new bn(priv.publicExponent)).fromRed();
        return {
          blinder: blinder,
          unblinder: r.invm(priv.modulus)
        };
      }
      function crt(msg, priv) {
        var blinds = blind(priv);
        var len = priv.modulus.byteLength();
        var mod = bn.mont(priv.modulus);
        var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
        var c1 = blinded.toRed(bn.mont(priv.prime1));
        var c2 = blinded.toRed(bn.mont(priv.prime2));
        var qinv = priv.coefficient;
        var p = priv.prime1;
        var q = priv.prime2;
        var m1 = c1.redPow(priv.exponent1);
        var m2 = c2.redPow(priv.exponent2);
        m1 = m1.fromRed();
        m2 = m2.fromRed();
        var h = m1.isub(m2).imul(qinv).umod(p);
        h.imul(q);
        m2.iadd(h);
        return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
      }
      crt.getr = getr;
      function getr(priv) {
        var len = priv.modulus.byteLength();
        var r = new bn(randomBytes(len));
        while (r.cmp(priv.modulus) >= 0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) r = new bn(randomBytes(len));
        return r;
      }
    }).call(this, require("buffer").Buffer);
  }, {
    "bn.js": 16,
    buffer: 47,
    randombytes: 125
  } ],
  40: [ function(require, module, exports) {
    module.exports = require("./browser/algorithms.json");
  }, {
    "./browser/algorithms.json": 41
  } ],
  41: [ function(require, module, exports) {
    module.exports = {
      sha224WithRSAEncryption: {
        sign: "rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
      },
      "RSA-SHA224": {
        sign: "ecdsa/rsa",
        hash: "sha224",
        id: "302d300d06096086480165030402040500041c"
      },
      sha256WithRSAEncryption: {
        sign: "rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
      },
      "RSA-SHA256": {
        sign: "ecdsa/rsa",
        hash: "sha256",
        id: "3031300d060960864801650304020105000420"
      },
      sha384WithRSAEncryption: {
        sign: "rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
      },
      "RSA-SHA384": {
        sign: "ecdsa/rsa",
        hash: "sha384",
        id: "3041300d060960864801650304020205000430"
      },
      sha512WithRSAEncryption: {
        sign: "rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
      },
      "RSA-SHA512": {
        sign: "ecdsa/rsa",
        hash: "sha512",
        id: "3051300d060960864801650304020305000440"
      },
      "RSA-SHA1": {
        sign: "rsa",
        hash: "sha1",
        id: "3021300906052b0e03021a05000414"
      },
      "ecdsa-with-SHA1": {
        sign: "ecdsa",
        hash: "sha1",
        id: ""
      },
      sha256: {
        sign: "ecdsa",
        hash: "sha256",
        id: ""
      },
      sha224: {
        sign: "ecdsa",
        hash: "sha224",
        id: ""
      },
      sha384: {
        sign: "ecdsa",
        hash: "sha384",
        id: ""
      },
      sha512: {
        sign: "ecdsa",
        hash: "sha512",
        id: ""
      },
      "DSA-SHA": {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      "DSA-SHA1": {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      DSA: {
        sign: "dsa",
        hash: "sha1",
        id: ""
      },
      "DSA-WITH-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
      },
      "DSA-SHA224": {
        sign: "dsa",
        hash: "sha224",
        id: ""
      },
      "DSA-WITH-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
      },
      "DSA-SHA256": {
        sign: "dsa",
        hash: "sha256",
        id: ""
      },
      "DSA-WITH-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
      },
      "DSA-SHA384": {
        sign: "dsa",
        hash: "sha384",
        id: ""
      },
      "DSA-WITH-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
      },
      "DSA-SHA512": {
        sign: "dsa",
        hash: "sha512",
        id: ""
      },
      "DSA-RIPEMD160": {
        sign: "dsa",
        hash: "rmd160",
        id: ""
      },
      ripemd160WithRSA: {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
      },
      "RSA-RIPEMD160": {
        sign: "rsa",
        hash: "rmd160",
        id: "3021300906052b2403020105000414"
      },
      md5WithRSAEncryption: {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
      },
      "RSA-MD5": {
        sign: "rsa",
        hash: "md5",
        id: "3020300c06082a864886f70d020505000410"
      }
    };
  }, {} ],
  42: [ function(require, module, exports) {
    module.exports = {
      "1.3.132.0.10": "secp256k1",
      "1.3.132.0.33": "p224",
      "1.2.840.10045.3.1.1": "p192",
      "1.2.840.10045.3.1.7": "p256",
      "1.3.132.0.34": "p384",
      "1.3.132.0.35": "p521"
    };
  }, {} ],
  43: [ function(require, module, exports) {
    (function(Buffer) {
      var createHash = require("create-hash");
      var stream = require("stream");
      var inherits = require("inherits");
      var sign = require("./sign");
      var verify = require("./verify");
      var algorithms = require("./algorithms.json");
      Object.keys(algorithms).forEach(function(key) {
        algorithms[key].id = new Buffer(algorithms[key].id, "hex");
        algorithms[key.toLowerCase()] = algorithms[key];
      });
      function Sign(algorithm) {
        stream.Writable.call(this);
        var data = algorithms[algorithm];
        if (!data) throw new Error("Unknown message digest");
        this._hashType = data.hash;
        this._hash = createHash(data.hash);
        this._tag = data.id;
        this._signType = data.sign;
      }
      inherits(Sign, stream.Writable);
      Sign.prototype._write = function _write(data, _, done) {
        this._hash.update(data);
        done();
      };
      Sign.prototype.update = function update(data, enc) {
        "string" === typeof data && (data = new Buffer(data, enc));
        this._hash.update(data);
        return this;
      };
      Sign.prototype.sign = function signMethod(key, enc) {
        this.end();
        var hash = this._hash.digest();
        var sig = sign(hash, key, this._hashType, this._signType, this._tag);
        return enc ? sig.toString(enc) : sig;
      };
      function Verify(algorithm) {
        stream.Writable.call(this);
        var data = algorithms[algorithm];
        if (!data) throw new Error("Unknown message digest");
        this._hash = createHash(data.hash);
        this._tag = data.id;
        this._signType = data.sign;
      }
      inherits(Verify, stream.Writable);
      Verify.prototype._write = function _write(data, _, done) {
        this._hash.update(data);
        done();
      };
      Verify.prototype.update = function update(data, enc) {
        "string" === typeof data && (data = new Buffer(data, enc));
        this._hash.update(data);
        return this;
      };
      Verify.prototype.verify = function verifyMethod(key, sig, enc) {
        "string" === typeof sig && (sig = new Buffer(sig, enc));
        this.end();
        var hash = this._hash.digest();
        return verify(sig, hash, key, this._signType, this._tag);
      };
      function createSign(algorithm) {
        return new Sign(algorithm);
      }
      function createVerify(algorithm) {
        return new Verify(algorithm);
      }
      module.exports = {
        Sign: createSign,
        Verify: createVerify,
        createSign: createSign,
        createVerify: createVerify
      };
    }).call(this, require("buffer").Buffer);
  }, {
    "./algorithms.json": 41,
    "./sign": 44,
    "./verify": 45,
    buffer: 47,
    "create-hash": 52,
    inherits: 101,
    stream: 152
  } ],
  44: [ function(require, module, exports) {
    (function(Buffer) {
      var createHmac = require("create-hmac");
      var crt = require("browserify-rsa");
      var EC = require("elliptic").ec;
      var BN = require("bn.js");
      var parseKeys = require("parse-asn1");
      var curves = require("./curves.json");
      function sign(hash, key, hashType, signType, tag) {
        var priv = parseKeys(key);
        if (priv.curve) {
          if ("ecdsa" !== signType && "ecdsa/rsa" !== signType) throw new Error("wrong private key type");
          return ecSign(hash, priv);
        }
        if ("dsa" === priv.type) {
          if ("dsa" !== signType) throw new Error("wrong private key type");
          return dsaSign(hash, priv, hashType);
        }
        if ("rsa" !== signType && "ecdsa/rsa" !== signType) throw new Error("wrong private key type");
        hash = Buffer.concat([ tag, hash ]);
        var len = priv.modulus.byteLength();
        var pad = [ 0, 1 ];
        while (hash.length + pad.length + 1 < len) pad.push(255);
        pad.push(0);
        var i = -1;
        while (++i < hash.length) pad.push(hash[i]);
        var out = crt(pad, priv);
        return out;
      }
      function ecSign(hash, priv) {
        var curveId = curves[priv.curve.join(".")];
        if (!curveId) throw new Error("unknown curve " + priv.curve.join("."));
        var curve = new EC(curveId);
        var key = curve.keyFromPrivate(priv.privateKey);
        var out = key.sign(hash);
        return new Buffer(out.toDER());
      }
      function dsaSign(hash, priv, algo) {
        var x = priv.params.priv_key;
        var p = priv.params.p;
        var q = priv.params.q;
        var g = priv.params.g;
        var r = new BN(0);
        var k;
        var H = bits2int(hash, q).mod(q);
        var s = false;
        var kv = getKey(x, q, hash, algo);
        while (false === s) {
          k = makeKey(q, kv, algo);
          r = makeR(g, k, p, q);
          s = k.invm(q).imul(H.add(x.mul(r))).mod(q);
          if (0 === s.cmpn(0)) {
            s = false;
            r = new BN(0);
          }
        }
        return toDER(r, s);
      }
      function toDER(r, s) {
        r = r.toArray();
        s = s.toArray();
        128 & r[0] && (r = [ 0 ].concat(r));
        128 & s[0] && (s = [ 0 ].concat(s));
        var total = r.length + s.length + 4;
        var res = [ 48, total, 2, r.length ];
        res = res.concat(r, [ 2, s.length ], s);
        return new Buffer(res);
      }
      function getKey(x, q, hash, algo) {
        x = new Buffer(x.toArray());
        if (x.length < q.byteLength()) {
          var zeros = new Buffer(q.byteLength() - x.length);
          zeros.fill(0);
          x = Buffer.concat([ zeros, x ]);
        }
        var hlen = hash.length;
        var hbits = bits2octets(hash, q);
        var v = new Buffer(hlen);
        v.fill(1);
        var k = new Buffer(hlen);
        k.fill(0);
        k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest();
        v = createHmac(algo, k).update(v).digest();
        k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest();
        v = createHmac(algo, k).update(v).digest();
        return {
          k: k,
          v: v
        };
      }
      function bits2int(obits, q) {
        var bits = new BN(obits);
        var shift = (obits.length << 3) - q.bitLength();
        shift > 0 && bits.ishrn(shift);
        return bits;
      }
      function bits2octets(bits, q) {
        bits = bits2int(bits, q);
        bits = bits.mod(q);
        var out = new Buffer(bits.toArray());
        if (out.length < q.byteLength()) {
          var zeros = new Buffer(q.byteLength() - out.length);
          zeros.fill(0);
          out = Buffer.concat([ zeros, out ]);
        }
        return out;
      }
      function makeKey(q, kv, algo) {
        var t;
        var k;
        do {
          t = new Buffer(0);
          while (8 * t.length < q.bitLength()) {
            kv.v = createHmac(algo, kv.k).update(kv.v).digest();
            t = Buffer.concat([ t, kv.v ]);
          }
          k = bits2int(t, q);
          kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest();
          kv.v = createHmac(algo, kv.k).update(kv.v).digest();
        } while (-1 !== k.cmp(q));
        return k;
      }
      function makeR(g, k, p, q) {
        return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q);
      }
      module.exports = sign;
      module.exports.getKey = getKey;
      module.exports.makeKey = makeKey;
    }).call(this, require("buffer").Buffer);
  }, {
    "./curves.json": 42,
    "bn.js": 16,
    "browserify-rsa": 39,
    buffer: 47,
    "create-hmac": 54,
    elliptic: 67,
    "parse-asn1": 111
  } ],
  45: [ function(require, module, exports) {
    (function(Buffer) {
      var BN = require("bn.js");
      var EC = require("elliptic").ec;
      var parseKeys = require("parse-asn1");
      var curves = require("./curves.json");
      function verify(sig, hash, key, signType, tag) {
        var pub = parseKeys(key);
        if ("ec" === pub.type) {
          if ("ecdsa" !== signType && "ecdsa/rsa" !== signType) throw new Error("wrong public key type");
          return ecVerify(sig, hash, pub);
        }
        if ("dsa" === pub.type) {
          if ("dsa" !== signType) throw new Error("wrong public key type");
          return dsaVerify(sig, hash, pub);
        }
        if ("rsa" !== signType && "ecdsa/rsa" !== signType) throw new Error("wrong public key type");
        hash = Buffer.concat([ tag, hash ]);
        var len = pub.modulus.byteLength();
        var pad = [ 1 ];
        var padNum = 0;
        while (hash.length + pad.length + 2 < len) {
          pad.push(255);
          padNum++;
        }
        pad.push(0);
        var i = -1;
        while (++i < hash.length) pad.push(hash[i]);
        pad = new Buffer(pad);
        var red = BN.mont(pub.modulus);
        sig = new BN(sig).toRed(red);
        sig = sig.redPow(new BN(pub.publicExponent));
        sig = new Buffer(sig.fromRed().toArray());
        var out = padNum < 8 ? 1 : 0;
        len = Math.min(sig.length, pad.length);
        sig.length !== pad.length && (out = 1);
        i = -1;
        while (++i < len) out |= sig[i] ^ pad[i];
        return 0 === out;
      }
      function ecVerify(sig, hash, pub) {
        var curveId = curves[pub.data.algorithm.curve.join(".")];
        if (!curveId) throw new Error("unknown curve " + pub.data.algorithm.curve.join("."));
        var curve = new EC(curveId);
        var pubkey = pub.data.subjectPrivateKey.data;
        return curve.verify(hash, sig, pubkey);
      }
      function dsaVerify(sig, hash, pub) {
        var p = pub.data.p;
        var q = pub.data.q;
        var g = pub.data.g;
        var y = pub.data.pub_key;
        var unpacked = parseKeys.signature.decode(sig, "der");
        var s = unpacked.s;
        var r = unpacked.r;
        checkValue(s, q);
        checkValue(r, q);
        var montp = BN.mont(p);
        var w = s.invm(q);
        var v = g.toRed(montp).redPow(new BN(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);
        return 0 === v.cmp(r);
      }
      function checkValue(b, q) {
        if (b.cmpn(0) <= 0) throw new Error("invalid sig");
        if (b.cmp(q) >= q) throw new Error("invalid sig");
      }
      module.exports = verify;
    }).call(this, require("buffer").Buffer);
  }, {
    "./curves.json": 42,
    "bn.js": 16,
    buffer: 47,
    elliptic: 67,
    "parse-asn1": 111
  } ],
  46: [ function(require, module, exports) {
    (function(Buffer) {
      module.exports = function xor(a, b) {
        var length = Math.min(a.length, b.length);
        var buffer = new Buffer(length);
        for (var i = 0; i < length; ++i) buffer[i] = a[i] ^ b[i];
        return buffer;
      };
    }).call(this, require("buffer").Buffer);
  }, {
    buffer: 47
  } ],
  47: [ function(require, module, exports) {
    (function(global) {
      "use strict";
      var base64 = require("base64-js");
      var ieee754 = require("ieee754");
      var isArray = require("isarray");
      exports.Buffer = Buffer;
      exports.SlowBuffer = SlowBuffer;
      exports.INSPECT_MAX_BYTES = 50;
      Buffer.TYPED_ARRAY_SUPPORT = void 0 !== global.TYPED_ARRAY_SUPPORT ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();
      exports.kMaxLength = kMaxLength();
      function typedArraySupport() {
        try {
          var arr = new Uint8Array(1);
          arr.__proto__ = {
            __proto__: Uint8Array.prototype,
            foo: function() {
              return 42;
            }
          };
          return 42 === arr.foo() && "function" === typeof arr.subarray && 0 === arr.subarray(1, 1).byteLength;
        } catch (e) {
          return false;
        }
      }
      function kMaxLength() {
        return Buffer.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
      }
      function createBuffer(that, length) {
        if (kMaxLength() < length) throw new RangeError("Invalid typed array length");
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          that = new Uint8Array(length);
          that.__proto__ = Buffer.prototype;
        } else {
          null === that && (that = new Buffer(length));
          that.length = length;
        }
        return that;
      }
      function Buffer(arg, encodingOrOffset, length) {
        if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) return new Buffer(arg, encodingOrOffset, length);
        if ("number" === typeof arg) {
          if ("string" === typeof encodingOrOffset) throw new Error("If encoding is specified then the first argument must be a string");
          return allocUnsafe(this, arg);
        }
        return from(this, arg, encodingOrOffset, length);
      }
      Buffer.poolSize = 8192;
      Buffer._augment = function(arr) {
        arr.__proto__ = Buffer.prototype;
        return arr;
      };
      function from(that, value, encodingOrOffset, length) {
        if ("number" === typeof value) throw new TypeError('"value" argument must not be a number');
        if ("undefined" !== typeof ArrayBuffer && value instanceof ArrayBuffer) return fromArrayBuffer(that, value, encodingOrOffset, length);
        if ("string" === typeof value) return fromString(that, value, encodingOrOffset);
        return fromObject(that, value);
      }
      Buffer.from = function(value, encodingOrOffset, length) {
        return from(null, value, encodingOrOffset, length);
      };
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        Buffer.prototype.__proto__ = Uint8Array.prototype;
        Buffer.__proto__ = Uint8Array;
        "undefined" !== typeof Symbol && Symbol.species && Buffer[Symbol.species] === Buffer && Object.defineProperty(Buffer, Symbol.species, {
          value: null,
          configurable: true
        });
      }
      function assertSize(size) {
        if ("number" !== typeof size) throw new TypeError('"size" argument must be a number');
        if (size < 0) throw new RangeError('"size" argument must not be negative');
      }
      function alloc(that, size, fill, encoding) {
        assertSize(size);
        if (size <= 0) return createBuffer(that, size);
        if (void 0 !== fill) return "string" === typeof encoding ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);
        return createBuffer(that, size);
      }
      Buffer.alloc = function(size, fill, encoding) {
        return alloc(null, size, fill, encoding);
      };
      function allocUnsafe(that, size) {
        assertSize(size);
        that = createBuffer(that, size < 0 ? 0 : 0 | checked(size));
        if (!Buffer.TYPED_ARRAY_SUPPORT) for (var i = 0; i < size; ++i) that[i] = 0;
        return that;
      }
      Buffer.allocUnsafe = function(size) {
        return allocUnsafe(null, size);
      };
      Buffer.allocUnsafeSlow = function(size) {
        return allocUnsafe(null, size);
      };
      function fromString(that, string, encoding) {
        "string" === typeof encoding && "" !== encoding || (encoding = "utf8");
        if (!Buffer.isEncoding(encoding)) throw new TypeError('"encoding" must be a valid string encoding');
        var length = 0 | byteLength(string, encoding);
        that = createBuffer(that, length);
        var actual = that.write(string, encoding);
        actual !== length && (that = that.slice(0, actual));
        return that;
      }
      function fromArrayLike(that, array) {
        var length = array.length < 0 ? 0 : 0 | checked(array.length);
        that = createBuffer(that, length);
        for (var i = 0; i < length; i += 1) that[i] = 255 & array[i];
        return that;
      }
      function fromArrayBuffer(that, array, byteOffset, length) {
        array.byteLength;
        if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError("'offset' is out of bounds");
        if (array.byteLength < byteOffset + (length || 0)) throw new RangeError("'length' is out of bounds");
        array = void 0 === byteOffset && void 0 === length ? new Uint8Array(array) : void 0 === length ? new Uint8Array(array, byteOffset) : new Uint8Array(array, byteOffset, length);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          that = array;
          that.__proto__ = Buffer.prototype;
        } else that = fromArrayLike(that, array);
        return that;
      }
      function fromObject(that, obj) {
        if (Buffer.isBuffer(obj)) {
          var len = 0 | checked(obj.length);
          that = createBuffer(that, len);
          if (0 === that.length) return that;
          obj.copy(that, 0, 0, len);
          return that;
        }
        if (obj) {
          if ("undefined" !== typeof ArrayBuffer && obj.buffer instanceof ArrayBuffer || "length" in obj) {
            if ("number" !== typeof obj.length || isnan(obj.length)) return createBuffer(that, 0);
            return fromArrayLike(that, obj);
          }
          if ("Buffer" === obj.type && isArray(obj.data)) return fromArrayLike(that, obj.data);
        }
        throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.");
      }
      function checked(length) {
        if (length >= kMaxLength()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + kMaxLength().toString(16) + " bytes");
        return 0 | length;
      }
      function SlowBuffer(length) {
        +length != length && (length = 0);
        return Buffer.alloc(+length);
      }
      Buffer.isBuffer = function isBuffer(b) {
        return !!(null != b && b._isBuffer);
      };
      Buffer.compare = function compare(a, b) {
        if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) throw new TypeError("Arguments must be Buffers");
        if (a === b) return 0;
        var x = a.length;
        var y = b.length;
        for (var i = 0, len = Math.min(x, y); i < len; ++i) if (a[i] !== b[i]) {
          x = a[i];
          y = b[i];
          break;
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
      };
      Buffer.isEncoding = function isEncoding(encoding) {
        switch (String(encoding).toLowerCase()) {
         case "hex":
         case "utf8":
         case "utf-8":
         case "ascii":
         case "latin1":
         case "binary":
         case "base64":
         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return true;

         default:
          return false;
        }
      };
      Buffer.concat = function concat(list, length) {
        if (!isArray(list)) throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === list.length) return Buffer.alloc(0);
        var i;
        if (void 0 === length) {
          length = 0;
          for (i = 0; i < list.length; ++i) length += list[i].length;
        }
        var buffer = Buffer.allocUnsafe(length);
        var pos = 0;
        for (i = 0; i < list.length; ++i) {
          var buf = list[i];
          if (!Buffer.isBuffer(buf)) throw new TypeError('"list" argument must be an Array of Buffers');
          buf.copy(buffer, pos);
          pos += buf.length;
        }
        return buffer;
      };
      function byteLength(string, encoding) {
        if (Buffer.isBuffer(string)) return string.length;
        if ("undefined" !== typeof ArrayBuffer && "function" === typeof ArrayBuffer.isView && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) return string.byteLength;
        "string" !== typeof string && (string = "" + string);
        var len = string.length;
        if (0 === len) return 0;
        var loweredCase = false;
        for (;;) switch (encoding) {
         case "ascii":
         case "latin1":
         case "binary":
          return len;

         case "utf8":
         case "utf-8":
         case void 0:
          return utf8ToBytes(string).length;

         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return 2 * len;

         case "hex":
          return len >>> 1;

         case "base64":
          return base64ToBytes(string).length;

         default:
          if (loweredCase) return utf8ToBytes(string).length;
          encoding = ("" + encoding).toLowerCase();
          loweredCase = true;
        }
      }
      Buffer.byteLength = byteLength;
      function slowToString(encoding, start, end) {
        var loweredCase = false;
        (void 0 === start || start < 0) && (start = 0);
        if (start > this.length) return "";
        (void 0 === end || end > this.length) && (end = this.length);
        if (end <= 0) return "";
        end >>>= 0;
        start >>>= 0;
        if (end <= start) return "";
        encoding || (encoding = "utf8");
        while (true) switch (encoding) {
         case "hex":
          return hexSlice(this, start, end);

         case "utf8":
         case "utf-8":
          return utf8Slice(this, start, end);

         case "ascii":
          return asciiSlice(this, start, end);

         case "latin1":
         case "binary":
          return latin1Slice(this, start, end);

         case "base64":
          return base64Slice(this, start, end);

         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return utf16leSlice(this, start, end);

         default:
          if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
          encoding = (encoding + "").toLowerCase();
          loweredCase = true;
        }
      }
      Buffer.prototype._isBuffer = true;
      function swap(b, n, m) {
        var i = b[n];
        b[n] = b[m];
        b[m] = i;
      }
      Buffer.prototype.swap16 = function swap16() {
        var len = this.length;
        if (len % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (var i = 0; i < len; i += 2) swap(this, i, i + 1);
        return this;
      };
      Buffer.prototype.swap32 = function swap32() {
        var len = this.length;
        if (len % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (var i = 0; i < len; i += 4) {
          swap(this, i, i + 3);
          swap(this, i + 1, i + 2);
        }
        return this;
      };
      Buffer.prototype.swap64 = function swap64() {
        var len = this.length;
        if (len % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (var i = 0; i < len; i += 8) {
          swap(this, i, i + 7);
          swap(this, i + 1, i + 6);
          swap(this, i + 2, i + 5);
          swap(this, i + 3, i + 4);
        }
        return this;
      };
      Buffer.prototype.toString = function toString() {
        var length = 0 | this.length;
        if (0 === length) return "";
        if (0 === arguments.length) return utf8Slice(this, 0, length);
        return slowToString.apply(this, arguments);
      };
      Buffer.prototype.equals = function equals(b) {
        if (!Buffer.isBuffer(b)) throw new TypeError("Argument must be a Buffer");
        if (this === b) return true;
        return 0 === Buffer.compare(this, b);
      };
      Buffer.prototype.inspect = function inspect() {
        var str = "";
        var max = exports.INSPECT_MAX_BYTES;
        if (this.length > 0) {
          str = this.toString("hex", 0, max).match(/.{2}/g).join(" ");
          this.length > max && (str += " ... ");
        }
        return "<Buffer " + str + ">";
      };
      Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
        if (!Buffer.isBuffer(target)) throw new TypeError("Argument must be a Buffer");
        void 0 === start && (start = 0);
        void 0 === end && (end = target ? target.length : 0);
        void 0 === thisStart && (thisStart = 0);
        void 0 === thisEnd && (thisEnd = this.length);
        if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError("out of range index");
        if (thisStart >= thisEnd && start >= end) return 0;
        if (thisStart >= thisEnd) return -1;
        if (start >= end) return 1;
        start >>>= 0;
        end >>>= 0;
        thisStart >>>= 0;
        thisEnd >>>= 0;
        if (this === target) return 0;
        var x = thisEnd - thisStart;
        var y = end - start;
        var len = Math.min(x, y);
        var thisCopy = this.slice(thisStart, thisEnd);
        var targetCopy = target.slice(start, end);
        for (var i = 0; i < len; ++i) if (thisCopy[i] !== targetCopy[i]) {
          x = thisCopy[i];
          y = targetCopy[i];
          break;
        }
        if (x < y) return -1;
        if (y < x) return 1;
        return 0;
      };
      function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
        if (0 === buffer.length) return -1;
        if ("string" === typeof byteOffset) {
          encoding = byteOffset;
          byteOffset = 0;
        } else byteOffset > 2147483647 ? byteOffset = 2147483647 : byteOffset < -2147483648 && (byteOffset = -2147483648);
        byteOffset = +byteOffset;
        isNaN(byteOffset) && (byteOffset = dir ? 0 : buffer.length - 1);
        byteOffset < 0 && (byteOffset = buffer.length + byteOffset);
        if (byteOffset >= buffer.length) {
          if (dir) return -1;
          byteOffset = buffer.length - 1;
        } else if (byteOffset < 0) {
          if (!dir) return -1;
          byteOffset = 0;
        }
        "string" === typeof val && (val = Buffer.from(val, encoding));
        if (Buffer.isBuffer(val)) {
          if (0 === val.length) return -1;
          return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
        }
        if ("number" === typeof val) {
          val &= 255;
          if (Buffer.TYPED_ARRAY_SUPPORT && "function" === typeof Uint8Array.prototype.indexOf) return dir ? Uint8Array.prototype.indexOf.call(buffer, val, byteOffset) : Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
          return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir);
        }
        throw new TypeError("val must be string, number or Buffer");
      }
      function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
        var indexSize = 1;
        var arrLength = arr.length;
        var valLength = val.length;
        if (void 0 !== encoding) {
          encoding = String(encoding).toLowerCase();
          if ("ucs2" === encoding || "ucs-2" === encoding || "utf16le" === encoding || "utf-16le" === encoding) {
            if (arr.length < 2 || val.length < 2) return -1;
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
          }
        }
        function read(buf, i) {
          return 1 === indexSize ? buf[i] : buf.readUInt16BE(i * indexSize);
        }
        var i;
        if (dir) {
          var foundIndex = -1;
          for (i = byteOffset; i < arrLength; i++) if (read(arr, i) === read(val, -1 === foundIndex ? 0 : i - foundIndex)) {
            -1 === foundIndex && (foundIndex = i);
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
          } else {
            -1 !== foundIndex && (i -= i - foundIndex);
            foundIndex = -1;
          }
        } else {
          byteOffset + valLength > arrLength && (byteOffset = arrLength - valLength);
          for (i = byteOffset; i >= 0; i--) {
            var found = true;
            for (var j = 0; j < valLength; j++) if (read(arr, i + j) !== read(val, j)) {
              found = false;
              break;
            }
            if (found) return i;
          }
        }
        return -1;
      }
      Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
        return -1 !== this.indexOf(val, byteOffset, encoding);
      };
      Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
      };
      Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
        return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
      };
      function hexWrite(buf, string, offset, length) {
        offset = Number(offset) || 0;
        var remaining = buf.length - offset;
        if (length) {
          length = Number(length);
          length > remaining && (length = remaining);
        } else length = remaining;
        var strLen = string.length;
        if (strLen % 2 !== 0) throw new TypeError("Invalid hex string");
        length > strLen / 2 && (length = strLen / 2);
        for (var i = 0; i < length; ++i) {
          var parsed = parseInt(string.substr(2 * i, 2), 16);
          if (isNaN(parsed)) return i;
          buf[offset + i] = parsed;
        }
        return i;
      }
      function utf8Write(buf, string, offset, length) {
        return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
      }
      function asciiWrite(buf, string, offset, length) {
        return blitBuffer(asciiToBytes(string), buf, offset, length);
      }
      function latin1Write(buf, string, offset, length) {
        return asciiWrite(buf, string, offset, length);
      }
      function base64Write(buf, string, offset, length) {
        return blitBuffer(base64ToBytes(string), buf, offset, length);
      }
      function ucs2Write(buf, string, offset, length) {
        return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
      }
      Buffer.prototype.write = function write(string, offset, length, encoding) {
        if (void 0 === offset) {
          encoding = "utf8";
          length = this.length;
          offset = 0;
        } else if (void 0 === length && "string" === typeof offset) {
          encoding = offset;
          length = this.length;
          offset = 0;
        } else {
          if (!isFinite(offset)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          offset |= 0;
          if (isFinite(length)) {
            length |= 0;
            void 0 === encoding && (encoding = "utf8");
          } else {
            encoding = length;
            length = void 0;
          }
        }
        var remaining = this.length - offset;
        (void 0 === length || length > remaining) && (length = remaining);
        if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError("Attempt to write outside buffer bounds");
        encoding || (encoding = "utf8");
        var loweredCase = false;
        for (;;) switch (encoding) {
         case "hex":
          return hexWrite(this, string, offset, length);

         case "utf8":
         case "utf-8":
          return utf8Write(this, string, offset, length);

         case "ascii":
          return asciiWrite(this, string, offset, length);

         case "latin1":
         case "binary":
          return latin1Write(this, string, offset, length);

         case "base64":
          return base64Write(this, string, offset, length);

         case "ucs2":
         case "ucs-2":
         case "utf16le":
         case "utf-16le":
          return ucs2Write(this, string, offset, length);

         default:
          if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
          encoding = ("" + encoding).toLowerCase();
          loweredCase = true;
        }
      };
      Buffer.prototype.toJSON = function toJSON() {
        return {
          type: "Buffer",
          data: Array.prototype.slice.call(this._arr || this, 0)
        };
      };
      function base64Slice(buf, start, end) {
        return 0 === start && end === buf.length ? base64.fromByteArray(buf) : base64.fromByteArray(buf.slice(start, end));
      }
      function utf8Slice(buf, start, end) {
        end = Math.min(buf.length, end);
        var res = [];
        var i = start;
        while (i < end) {
          var firstByte = buf[i];
          var codePoint = null;
          var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
          if (i + bytesPerSequence <= end) {
            var secondByte, thirdByte, fourthByte, tempCodePoint;
            switch (bytesPerSequence) {
             case 1:
              firstByte < 128 && (codePoint = firstByte);
              break;

             case 2:
              secondByte = buf[i + 1];
              if (128 === (192 & secondByte)) {
                tempCodePoint = (31 & firstByte) << 6 | 63 & secondByte;
                tempCodePoint > 127 && (codePoint = tempCodePoint);
              }
              break;

             case 3:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              if (128 === (192 & secondByte) && 128 === (192 & thirdByte)) {
                tempCodePoint = (15 & firstByte) << 12 | (63 & secondByte) << 6 | 63 & thirdByte;
                tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343) && (codePoint = tempCodePoint);
              }
              break;

             case 4:
              secondByte = buf[i + 1];
              thirdByte = buf[i + 2];
              fourthByte = buf[i + 3];
              if (128 === (192 & secondByte) && 128 === (192 & thirdByte) && 128 === (192 & fourthByte)) {
                tempCodePoint = (15 & firstByte) << 18 | (63 & secondByte) << 12 | (63 & thirdByte) << 6 | 63 & fourthByte;
                tempCodePoint > 65535 && tempCodePoint < 1114112 && (codePoint = tempCodePoint);
              }
            }
          }
          if (null === codePoint) {
            codePoint = 65533;
            bytesPerSequence = 1;
          } else if (codePoint > 65535) {
            codePoint -= 65536;
            res.push(codePoint >>> 10 & 1023 | 55296);
            codePoint = 56320 | 1023 & codePoint;
          }
          res.push(codePoint);
          i += bytesPerSequence;
        }
        return decodeCodePointsArray(res);
      }
      var MAX_ARGUMENTS_LENGTH = 4096;
      function decodeCodePointsArray(codePoints) {
        var len = codePoints.length;
        if (len <= MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints);
        var res = "";
        var i = 0;
        while (i < len) res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
        return res;
      }
      function asciiSlice(buf, start, end) {
        var ret = "";
        end = Math.min(buf.length, end);
        for (var i = start; i < end; ++i) ret += String.fromCharCode(127 & buf[i]);
        return ret;
      }
      function latin1Slice(buf, start, end) {
        var ret = "";
        end = Math.min(buf.length, end);
        for (var i = start; i < end; ++i) ret += String.fromCharCode(buf[i]);
        return ret;
      }
      function hexSlice(buf, start, end) {
        var len = buf.length;
        (!start || start < 0) && (start = 0);
        (!end || end < 0 || end > len) && (end = len);
        var out = "";
        for (var i = start; i < end; ++i) out += toHex(buf[i]);
        return out;
      }
      function utf16leSlice(buf, start, end) {
        var bytes = buf.slice(start, end);
        var res = "";
        for (var i = 0; i < bytes.length; i += 2) res += String.fromCharCode(bytes[i] + 256 * bytes[i + 1]);
        return res;
      }
      Buffer.prototype.slice = function slice(start, end) {
        var len = this.length;
        start = ~~start;
        end = void 0 === end ? len : ~~end;
        if (start < 0) {
          start += len;
          start < 0 && (start = 0);
        } else start > len && (start = len);
        if (end < 0) {
          end += len;
          end < 0 && (end = 0);
        } else end > len && (end = len);
        end < start && (end = start);
        var newBuf;
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          newBuf = this.subarray(start, end);
          newBuf.__proto__ = Buffer.prototype;
        } else {
          var sliceLen = end - start;
          newBuf = new Buffer(sliceLen, void 0);
          for (var i = 0; i < sliceLen; ++i) newBuf[i] = this[i + start];
        }
        return newBuf;
      };
      function checkOffset(offset, ext, length) {
        if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
        if (offset + ext > length) throw new RangeError("Trying to access beyond buffer length");
      }
      Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;
        while (++i < byteLength && (mul *= 256)) val += this[offset + i] * mul;
        return val;
      };
      Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var val = this[offset + --byteLength];
        var mul = 1;
        while (byteLength > 0 && (mul *= 256)) val += this[offset + --byteLength] * mul;
        return val;
      };
      Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
        noAssert || checkOffset(offset, 1, this.length);
        return this[offset];
      };
      Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        return this[offset] | this[offset + 1] << 8;
      };
      Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        return this[offset] << 8 | this[offset + 1];
      };
      Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + 16777216 * this[offset + 3];
      };
      Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return 16777216 * this[offset] + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
      };
      Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var val = this[offset];
        var mul = 1;
        var i = 0;
        while (++i < byteLength && (mul *= 256)) val += this[offset + i] * mul;
        mul *= 128;
        val >= mul && (val -= Math.pow(2, 8 * byteLength));
        return val;
      };
      Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
        offset |= 0;
        byteLength |= 0;
        noAssert || checkOffset(offset, byteLength, this.length);
        var i = byteLength;
        var mul = 1;
        var val = this[offset + --i];
        while (i > 0 && (mul *= 256)) val += this[offset + --i] * mul;
        mul *= 128;
        val >= mul && (val -= Math.pow(2, 8 * byteLength));
        return val;
      };
      Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
        noAssert || checkOffset(offset, 1, this.length);
        if (!(128 & this[offset])) return this[offset];
        return -1 * (255 - this[offset] + 1);
      };
      Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        var val = this[offset] | this[offset + 1] << 8;
        return 32768 & val ? 4294901760 | val : val;
      };
      Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
        noAssert || checkOffset(offset, 2, this.length);
        var val = this[offset + 1] | this[offset] << 8;
        return 32768 & val ? 4294901760 | val : val;
      };
      Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
      };
      Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
      };
      Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, true, 23, 4);
      };
      Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
        noAssert || checkOffset(offset, 4, this.length);
        return ieee754.read(this, offset, false, 23, 4);
      };
      Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
        noAssert || checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, true, 52, 8);
      };
      Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
        noAssert || checkOffset(offset, 8, this.length);
        return ieee754.read(this, offset, false, 52, 8);
      };
      function checkInt(buf, value, offset, ext, max, min) {
        if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
      }
      Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        byteLength |= 0;
        if (!noAssert) {
          var maxBytes = Math.pow(2, 8 * byteLength) - 1;
          checkInt(this, value, offset, byteLength, maxBytes, 0);
        }
        var mul = 1;
        var i = 0;
        this[offset] = 255 & value;
        while (++i < byteLength && (mul *= 256)) this[offset + i] = value / mul & 255;
        return offset + byteLength;
      };
      Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        byteLength |= 0;
        if (!noAssert) {
          var maxBytes = Math.pow(2, 8 * byteLength) - 1;
          checkInt(this, value, offset, byteLength, maxBytes, 0);
        }
        var i = byteLength - 1;
        var mul = 1;
        this[offset + i] = 255 & value;
        while (--i >= 0 && (mul *= 256)) this[offset + i] = value / mul & 255;
        return offset + byteLength;
      };
      Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 1, 255, 0);
        Buffer.TYPED_ARRAY_SUPPORT || (value = Math.floor(value));
        this[offset] = 255 & value;
        return offset + 1;
      };
      function objectWriteUInt16(buf, value, offset, littleEndian) {
        value < 0 && (value = 65535 + value + 1);
        for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) buf[offset + i] = (value & 255 << 8 * (littleEndian ? i : 1 - i)) >>> 8 * (littleEndian ? i : 1 - i);
      }
      Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 65535, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = 255 & value;
          this[offset + 1] = value >>> 8;
        } else objectWriteUInt16(this, value, offset, true);
        return offset + 2;
      };
      Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 65535, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 8;
          this[offset + 1] = 255 & value;
        } else objectWriteUInt16(this, value, offset, false);
        return offset + 2;
      };
      function objectWriteUInt32(buf, value, offset, littleEndian) {
        value < 0 && (value = 4294967295 + value + 1);
        for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) buf[offset + i] = value >>> 8 * (littleEndian ? i : 3 - i) & 255;
      }
      Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 4294967295, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset + 3] = value >>> 24;
          this[offset + 2] = value >>> 16;
          this[offset + 1] = value >>> 8;
          this[offset] = 255 & value;
        } else objectWriteUInt32(this, value, offset, true);
        return offset + 4;
      };
      Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 4294967295, 0);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = 255 & value;
        } else objectWriteUInt32(this, value, offset, false);
        return offset + 4;
      };
      Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        if (!noAssert) {
          var limit = Math.pow(2, 8 * byteLength - 1);
          checkInt(this, value, offset, byteLength, limit - 1, -limit);
        }
        var i = 0;
        var mul = 1;
        var sub = 0;
        this[offset] = 255 & value;
        while (++i < byteLength && (mul *= 256)) {
          value < 0 && 0 === sub && 0 !== this[offset + i - 1] && (sub = 1);
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength;
      };
      Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
        value = +value;
        offset |= 0;
        if (!noAssert) {
          var limit = Math.pow(2, 8 * byteLength - 1);
          checkInt(this, value, offset, byteLength, limit - 1, -limit);
        }
        var i = byteLength - 1;
        var mul = 1;
        var sub = 0;
        this[offset + i] = 255 & value;
        while (--i >= 0 && (mul *= 256)) {
          value < 0 && 0 === sub && 0 !== this[offset + i + 1] && (sub = 1);
          this[offset + i] = (value / mul >> 0) - sub & 255;
        }
        return offset + byteLength;
      };
      Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 1, 127, -128);
        Buffer.TYPED_ARRAY_SUPPORT || (value = Math.floor(value));
        value < 0 && (value = 255 + value + 1);
        this[offset] = 255 & value;
        return offset + 1;
      };
      Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 32767, -32768);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = 255 & value;
          this[offset + 1] = value >>> 8;
        } else objectWriteUInt16(this, value, offset, true);
        return offset + 2;
      };
      Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 2, 32767, -32768);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 8;
          this[offset + 1] = 255 & value;
        } else objectWriteUInt16(this, value, offset, false);
        return offset + 2;
      };
      Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = 255 & value;
          this[offset + 1] = value >>> 8;
          this[offset + 2] = value >>> 16;
          this[offset + 3] = value >>> 24;
        } else objectWriteUInt32(this, value, offset, true);
        return offset + 4;
      };
      Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
        value = +value;
        offset |= 0;
        noAssert || checkInt(this, value, offset, 4, 2147483647, -2147483648);
        value < 0 && (value = 4294967295 + value + 1);
        if (Buffer.TYPED_ARRAY_SUPPORT) {
          this[offset] = value >>> 24;
          this[offset + 1] = value >>> 16;
          this[offset + 2] = value >>> 8;
          this[offset + 3] = 255 & value;
        } else objectWriteUInt32(this, value, offset, false);
        return offset + 4;
      };
      function checkIEEE754(buf, value, offset, ext, max, min) {
        if (offset + ext > buf.length) throw new RangeError("Index out of range");
        if (offset < 0) throw new RangeError("Index out of range");
      }
      function writeFloat(buf, value, offset, littleEndian, noAssert) {
        noAssert || checkIEEE754(buf, value, offset, 4, 3.4028234663852886e38, -3.4028234663852886e38);
        ieee754.write(buf, value, offset, littleEndian, 23, 4);
        return offset + 4;
      }
      Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
        return writeFloat(this, value, offset, true, noAssert);
      };
      Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
        return writeFloat(this, value, offset, false, noAssert);
      };
      function writeDouble(buf, value, offset, littleEndian, noAssert) {
        noAssert || checkIEEE754(buf, value, offset, 8, 1.7976931348623157e308, -1.7976931348623157e308);
        ieee754.write(buf, value, offset, littleEndian, 52, 8);
        return offset + 8;
      }
      Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
        return writeDouble(this, value, offset, true, noAssert);
      };
      Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
        return writeDouble(this, value, offset, false, noAssert);
      };
      Buffer.prototype.copy = function copy(target, targetStart, start, end) {
        start || (start = 0);
        end || 0 === end || (end = this.length);
        targetStart >= target.length && (targetStart = target.length);
        targetStart || (targetStart = 0);
        end > 0 && end < start && (end = start);
        if (end === start) return 0;
        if (0 === target.length || 0 === this.length) return 0;
        if (targetStart < 0) throw new RangeError("targetStart out of bounds");
        if (start < 0 || start >= this.length) throw new RangeError("sourceStart out of bounds");
        if (end < 0) throw new RangeError("sourceEnd out of bounds");
        end > this.length && (end = this.length);
        target.length - targetStart < end - start && (end = target.length - targetStart + start);
        var len = end - start;
        var i;
        if (this === target && start < targetStart && targetStart < end) for (i = len - 1; i >= 0; --i) target[i + targetStart] = this[i + start]; else if (len < 1e3 || !Buffer.TYPED_ARRAY_SUPPORT) for (i = 0; i < len; ++i) target[i + targetStart] = this[i + start]; else Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);
        return len;
      };
      Buffer.prototype.fill = function fill(val, start, end, encoding) {
        if ("string" === typeof val) {
          if ("string" === typeof start) {
            encoding = start;
            start = 0;
            end = this.length;
          } else if ("string" === typeof end) {
            encoding = end;
            end = this.length;
          }
          if (1 === val.length) {
            var code = val.charCodeAt(0);
            code < 256 && (val = code);
          }
          if (void 0 !== encoding && "string" !== typeof encoding) throw new TypeError("encoding must be a string");
          if ("string" === typeof encoding && !Buffer.isEncoding(encoding)) throw new TypeError("Unknown encoding: " + encoding);
        } else "number" === typeof val && (val &= 255);
        if (start < 0 || this.length < start || this.length < end) throw new RangeError("Out of range index");
        if (end <= start) return this;
        start >>>= 0;
        end = void 0 === end ? this.length : end >>> 0;
        val || (val = 0);
        var i;
        if ("number" === typeof val) for (i = start; i < end; ++i) this[i] = val; else {
          var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());
          var len = bytes.length;
          for (i = 0; i < end - start; ++i) this[i + start] = bytes[i % len];
        }
        return this;
      };
      var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;
      function base64clean(str) {
        str = stringtrim(str).replace(INVALID_BASE64_RE, "");
        if (str.length < 2) return "";
        while (str.length % 4 !== 0) str += "=";
        return str;
      }
      function stringtrim(str) {
        if (str.trim) return str.trim();
        return str.replace(/^\s+|\s+$/g, "");
      }
      function toHex(n) {
        if (n < 16) return "0" + n.toString(16);
        return n.toString(16);
      }
      function utf8ToBytes(string, units) {
        units = units || Infinity;
        var codePoint;
        var length = string.length;
        var leadSurrogate = null;
        var bytes = [];
        for (var i = 0; i < length; ++i) {
          codePoint = string.charCodeAt(i);
          if (codePoint > 55295 && codePoint < 57344) {
            if (!leadSurrogate) {
              if (codePoint > 56319) {
                (units -= 3) > -1 && bytes.push(239, 191, 189);
                continue;
              }
              if (i + 1 === length) {
                (units -= 3) > -1 && bytes.push(239, 191, 189);
                continue;
              }
              leadSurrogate = codePoint;
              continue;
            }
            if (codePoint < 56320) {
              (units -= 3) > -1 && bytes.push(239, 191, 189);
              leadSurrogate = codePoint;
              continue;
            }
            codePoint = 65536 + (leadSurrogate - 55296 << 10 | codePoint - 56320);
          } else leadSurrogate && (units -= 3) > -1 && bytes.push(239, 191, 189);
          leadSurrogate = null;
          if (codePoint < 128) {
            if ((units -= 1) < 0) break;
            bytes.push(codePoint);
          } else if (codePoint < 2048) {
            if ((units -= 2) < 0) break;
            bytes.push(codePoint >> 6 | 192, 63 & codePoint | 128);
          } else if (codePoint < 65536) {
            if ((units -= 3) < 0) break;
            bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, 63 & codePoint | 128);
          } else {
            if (!(codePoint < 1114112)) throw new Error("Invalid code point");
            if ((units -= 4) < 0) break;
            bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, 63 & codePoint | 128);
          }
        }
        return bytes;
      }
      function asciiToBytes(str) {
        var byteArray = [];
        for (var i = 0; i < str.length; ++i) byteArray.push(255 & str.charCodeAt(i));
        return byteArray;
      }
      function utf16leToBytes(str, units) {
        var c, hi, lo;
        var byteArray = [];
        for (var i = 0; i < str.length; ++i) {
          if ((units -= 2) < 0) break;
          c = str.charCodeAt(i);
          hi = c >> 8;
          lo = c % 256;
          byteArray.push(lo);
          byteArray.push(hi);
        }
        return byteArray;
      }
      function base64ToBytes(str) {
        return base64.toByteArray(base64clean(str));
      }
      function blitBuffer(src, dst, offset, length) {
        for (var i = 0; i < length; ++i) {
          if (i + offset >= dst.length || i >= src.length) break;
          dst[i + offset] = src[i];
        }
        return i;
      }
      function isnan(val) {
        return val !== val;
      }
    }).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    "base64-js": 15,
    ieee754: 99,
    isarray: 48
  } ],
  48: [ function(require, module, exports) {
    var toString = {}.toString;
    module.exports = Array.isArray || function(arr) {
      return "[object Array]" == toString.call(arr);
    };
  }, {} ],
  49: [ function(require, module, exports) {
    var Buffer = require("safe-buffer").Buffer;
    var Transform = require("stream").Transform;
    var StringDecoder = require("string_decoder").StringDecoder;
    var inherits = require("inherits");
    function CipherBase(hashMode) {
      Transform.call(this);
      this.hashMode = "string" === typeof hashMode;
      this.hashMode ? this[hashMode] = this._finalOrDigest : this.final = this._finalOrDigest;
      if (this._final) {
        this.__final = this._final;
        this._final = null;
      }
      this._decoder = null;
      this._encoding = null;
    }
    inherits(CipherBase, Transform);
    CipherBase.prototype.update = function(data, inputEnc, outputEnc) {
      "string" === typeof data && (data = Buffer.from(data, inputEnc));
      var outData = this._update(data);
      if (this.hashMode) return this;
      outputEnc && (outData = this._toString(outData, outputEnc));
      return outData;
    };
    CipherBase.prototype.setAutoPadding = function() {};
    CipherBase.prototype.getAuthTag = function() {
      throw new Error("trying to get auth tag in unsupported state");
    };
    CipherBase.prototype.setAuthTag = function() {
      throw new Error("trying to set auth tag in unsupported state");
    };
    CipherBase.prototype.setAAD = function() {
      throw new Error("trying to set aad in unsupported state");
    };
    CipherBase.prototype._transform = function(data, _, next) {
      var err;
      try {
        this.hashMode ? this._update(data) : this.push(this._update(data));
      } catch (e) {
        err = e;
      } finally {
        next(err);
      }
    };
    CipherBase.prototype._flush = function(done) {
      var err;
      try {
        this.push(this.__final());
      } catch (e) {
        err = e;
      }
      done(err);
    };
    CipherBase.prototype._finalOrDigest = function(outputEnc) {
      var outData = this.__final() || Buffer.alloc(0);
      outputEnc && (outData = this._toString(outData, outputEnc, true));
      return outData;
    };
    CipherBase.prototype._toString = function(value, enc, fin) {
      if (!this._decoder) {
        this._decoder = new StringDecoder(enc);
        this._encoding = enc;
      }
      if (this._encoding !== enc) throw new Error("can't switch encodings");
      var out = this._decoder.write(value);
      fin && (out += this._decoder.end());
      return out;
    };
    module.exports = CipherBase;
  }, {
    inherits: 101,
    "safe-buffer": 143,
    stream: 152,
    string_decoder: 153
  } ],
  50: [ function(require, module, exports) {
    (function(Buffer) {
      function isArray(arg) {
        if (Array.isArray) return Array.isArray(arg);
        return "[object Array]" === objectToString(arg);
      }
      exports.isArray = isArray;
      function isBoolean(arg) {
        return "boolean" === typeof arg;
      }
      exports.isBoolean = isBoolean;
      function isNull(arg) {
        return null === arg;
      }
      exports.isNull = isNull;
      function isNullOrUndefined(arg) {
        return null == arg;
      }
      exports.isNullOrUndefined = isNullOrUndefined;
      function isNumber(arg) {
        return "number" === typeof arg;
      }
      exports.isNumber = isNumber;
      function isString(arg) {
        return "string" === typeof arg;
      }
      exports.isString = isString;
      function isSymbol(arg) {
        return "symbol" === typeof arg;
      }
      exports.isSymbol = isSymbol;
      function isUndefined(arg) {
        return void 0 === arg;
      }
      exports.isUndefined = isUndefined;
      function isRegExp(re) {
        return "[object RegExp]" === objectToString(re);
      }
      exports.isRegExp = isRegExp;
      function isObject(arg) {
        return "object" === typeof arg && null !== arg;
      }
      exports.isObject = isObject;
      function isDate(d) {
        return "[object Date]" === objectToString(d);
      }
      exports.isDate = isDate;
      function isError(e) {
        return "[object Error]" === objectToString(e) || e instanceof Error;
      }
      exports.isError = isError;
      function isFunction(arg) {
        return "function" === typeof arg;
      }
      exports.isFunction = isFunction;
      function isPrimitive(arg) {
        return null === arg || "boolean" === typeof arg || "number" === typeof arg || "string" === typeof arg || "symbol" === typeof arg || "undefined" === typeof arg;
      }
      exports.isPrimitive = isPrimitive;
      exports.isBuffer = Buffer.isBuffer;
      function objectToString(o) {
        return Object.prototype.toString.call(o);
      }
    }).call(this, {
      isBuffer: require("../../is-buffer/index.js")
    });
  }, {
    "../../is-buffer/index.js": 102
  } ],
  51: [ function(require, module, exports) {
    (function(Buffer) {
      var elliptic = require("elliptic");
      var BN = require("bn.js");
      module.exports = function createECDH(curve) {
        return new ECDH(curve);
      };
      var aliases = {
        secp256k1: {
          name: "secp256k1",
          byteLength: 32
        },
        secp224r1: {
          name: "p224",
          byteLength: 28
        },
        prime256v1: {
          name: "p256",
          byteLength: 32
        },
        prime192v1: {
          name: "p192",
          byteLength: 24
        },
        ed25519: {
          name: "ed25519",
          byteLength: 32
        },
        secp384r1: {
          name: "p384",
          byteLength: 48
        },
        secp521r1: {
          name: "p521",
          byteLength: 66
        }
      };
      aliases.p224 = aliases.secp224r1;
      aliases.p256 = aliases.secp256r1 = aliases.prime256v1;
      aliases.p192 = aliases.secp192r1 = aliases.prime192v1;
      aliases.p384 = aliases.secp384r1;
      aliases.p521 = aliases.secp521r1;
      function ECDH(curve) {
        this.curveType = aliases[curve];
        this.curveType || (this.curveType = {
          name: curve
        });
        this.curve = new elliptic.ec(this.curveType.name);
        this.keys = void 0;
      }
      ECDH.prototype.generateKeys = function(enc, format) {
        this.keys = this.curve.genKeyPair();
        return this.getPublicKey(enc, format);
      };
      ECDH.prototype.computeSecret = function(other, inenc, enc) {
        inenc = inenc || "utf8";
        Buffer.isBuffer(other) || (other = new Buffer(other, inenc));
        var otherPub = this.curve.keyFromPublic(other).getPublic();
        var out = otherPub.mul(this.keys.getPrivate()).getX();
        return formatReturnValue(out, enc, this.curveType.byteLength);
      };
      ECDH.prototype.getPublicKey = function(enc, format) {
        var key = this.keys.getPublic("compressed" === format, true);
        "hybrid" === format && (key[key.length - 1] % 2 ? key[0] = 7 : key[0] = 6);
        return formatReturnValue(key, enc);
      };
      ECDH.prototype.getPrivateKey = function(enc) {
        return formatReturnValue(this.keys.getPrivate(), enc);
      };
      ECDH.prototype.setPublicKey = function(pub, enc) {
        enc = enc || "utf8";
        Buffer.isBuffer(pub) || (pub = new Buffer(pub, enc));
        this.keys._importPublic(pub);
        return this;
      };
      ECDH.prototype.setPrivateKey = function(priv, enc) {
        enc = enc || "utf8";
        Buffer.isBuffer(priv) || (priv = new Buffer(priv, enc));
        var _priv = new BN(priv);
        _priv = _priv.toString(16);
        this.keys = this.curve.genKeyPair();
        this.keys._importPrivate(_priv);
        return this;
      };
      function formatReturnValue(bn, enc, len) {
        Array.isArray(bn) || (bn = bn.toArray());
        var buf = new Buffer(bn);
        if (len && buf.length < len) {
          var zeros = new Buffer(len - buf.length);
          zeros.fill(0);
          buf = Buffer.concat([ zeros, buf ]);
        }
        return enc ? buf.toString(enc) : buf;
      }
    }).call(this, require("buffer").Buffer);
  }, {
    "bn.js": 16,
    buffer: 47,
    elliptic: 67
  } ],
  52: [ function(require, module, exports) {
    "use strict";
    var inherits = require("inherits");
    var MD5 = require("md5.js");
    var RIPEMD160 = require("ripemd160");
    var sha = require("sha.js");
    var Base = require("cipher-base");
    function Hash(hash) {
      Base.call(this, "digest");
      this._hash = hash;
    }
    inherits(Hash, Base);
    Hash.prototype._update = function(data) {
      this._hash.update(data);
    };
    Hash.prototype._final = function() {
      return this._hash.digest();
    };
    module.exports = function createHash(alg) {
      alg = alg.toLowerCase();
      if ("md5" === alg) return new MD5();
      if ("rmd160" === alg || "ripemd160" === alg) return new RIPEMD160();
      return new Hash(sha(alg));
    };
  }, {
    "cipher-base": 49,
    inherits: 101,
    "md5.js": 103,
    ripemd160: 142,
    "sha.js": 145
  } ],
  53: [ function(require, module, exports) {
    var MD5 = require("md5.js");
    module.exports = function(buffer) {
      return new MD5().update(buffer).digest();
    };
  }, {
    "md5.js": 103
  } ],
  54: [ function(require, module, exports) {
    "use strict";
    var inherits = require("inherits");
    var Legacy = require("./legacy");
    var Base = require("cipher-base");
    var Buffer = require("safe-buffer").Buffer;
    var md5 = require("create-hash/md5");
    var RIPEMD160 = require("ripemd160");
    var sha = require("sha.js");
    var ZEROS = Buffer.alloc(128);
    function Hmac(alg, key) {
      Base.call(this, "digest");
      "string" === typeof key && (key = Buffer.from(key));
      var blocksize = "sha512" === alg || "sha384" === alg ? 128 : 64;
      this._alg = alg;
      this._key = key;
      if (key.length > blocksize) {
        var hash = "rmd160" === alg ? new RIPEMD160() : sha(alg);
        key = hash.update(key).digest();
      } else key.length < blocksize && (key = Buffer.concat([ key, ZEROS ], blocksize));
      var ipad = this._ipad = Buffer.allocUnsafe(blocksize);
      var opad = this._opad = Buffer.allocUnsafe(blocksize);
      for (var i = 0; i < blocksize; i++) {
        ipad[i] = 54 ^ key[i];
        opad[i] = 92 ^ key[i];
      }
      this._hash = "rmd160" === alg ? new RIPEMD160() : sha(alg);
      this._hash.update(ipad);
    }
    inherits(Hmac, Base);
    Hmac.prototype._update = function(data) {
      this._hash.update(data);
    };
    Hmac.prototype._final = function() {
      var h = this._hash.digest();
      var hash = "rmd160" === this._alg ? new RIPEMD160() : sha(this._alg);
      return hash.update(this._opad).update(h).digest();
    };
    module.exports = function createHmac(alg, key) {
      alg = alg.toLowerCase();
      if ("rmd160" === alg || "ripemd160" === alg) return new Hmac("rmd160", key);
      if ("md5" === alg) return new Legacy(md5, key);
      return new Hmac(alg, key);
    };
  }, {
    "./legacy": 55,
    "cipher-base": 49,
    "create-hash/md5": 53,
    inherits: 101,
    ripemd160: 142,
    "safe-buffer": 143,
    "sha.js": 145
  } ],
  55: [ function(require, module, exports) {
    "use strict";
    var inherits = require("inherits");
    var Buffer = require("safe-buffer").Buffer;
    var Base = require("cipher-base");
    var ZEROS = Buffer.alloc(128);
    var blocksize = 64;
    function Hmac(alg, key) {
      Base.call(this, "digest");
      "string" === typeof key && (key = Buffer.from(key));
      this._alg = alg;
      this._key = key;
      key.length > blocksize ? key = alg(key) : key.length < blocksize && (key = Buffer.concat([ key, ZEROS ], blocksize));
      var ipad = this._ipad = Buffer.allocUnsafe(blocksize);
      var opad = this._opad = Buffer.allocUnsafe(blocksize);
      for (var i = 0; i < blocksize; i++) {
        ipad[i] = 54 ^ key[i];
        opad[i] = 92 ^ key[i];
      }
      this._hash = [ ipad ];
    }
    inherits(Hmac, Base);
    Hmac.prototype._update = function(data) {
      this._hash.push(data);
    };
    Hmac.prototype._final = function() {
      var h = this._alg(Buffer.concat(this._hash));
      return this._alg(Buffer.concat([ this._opad, h ]));
    };
    module.exports = Hmac;
  }, {
    "cipher-base": 49,
    inherits: 101,
    "safe-buffer": 143
  } ],
  56: [ function(require, module, exports) {
    "use strict";
    exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require("randombytes");
    exports.createHash = exports.Hash = require("create-hash");
    exports.createHmac = exports.Hmac = require("create-hmac");
    var algos = require("browserify-sign/algos");
    var algoKeys = Object.keys(algos);
    var hashes = [ "sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160" ].concat(algoKeys);
    exports.getHashes = function() {
      return hashes;
    };
    var p = require("pbkdf2");
    exports.pbkdf2 = p.pbkdf2;
    exports.pbkdf2Sync = p.pbkdf2Sync;
    var aes = require("browserify-cipher");
    exports.Cipher = aes.Cipher;
    exports.createCipher = aes.createCipher;
    exports.Cipheriv = aes.Cipheriv;
    exports.createCipheriv = aes.createCipheriv;
    exports.Decipher = aes.Decipher;
    exports.createDecipher = aes.createDecipher;
    exports.Decipheriv = aes.Decipheriv;
    exports.createDecipheriv = aes.createDecipheriv;
    exports.getCiphers = aes.getCiphers;
    exports.listCiphers = aes.listCiphers;
    var dh = require("diffie-hellman");
    exports.DiffieHellmanGroup = dh.DiffieHellmanGroup;
    exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup;
    exports.getDiffieHellman = dh.getDiffieHellman;
    exports.createDiffieHellman = dh.createDiffieHellman;
    exports.DiffieHellman = dh.DiffieHellman;
    var sign = require("browserify-sign");
    exports.createSign = sign.createSign;
    exports.Sign = sign.Sign;
    exports.createVerify = sign.createVerify;
    exports.Verify = sign.Verify;
    exports.createECDH = require("create-ecdh");
    var publicEncrypt = require("public-encrypt");
    exports.publicEncrypt = publicEncrypt.publicEncrypt;
    exports.privateEncrypt = publicEncrypt.privateEncrypt;
    exports.publicDecrypt = publicEncrypt.publicDecrypt;
    exports.privateDecrypt = publicEncrypt.privateDecrypt;
    var rf = require("randomfill");
    exports.randomFill = rf.randomFill;
    exports.randomFillSync = rf.randomFillSync;
    exports.createCredentials = function() {
      throw new Error([ "sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify" ].join("\n"));
    };
    exports.constants = {
      DH_CHECK_P_NOT_SAFE_PRIME: 2,
      DH_CHECK_P_NOT_PRIME: 1,
      DH_UNABLE_TO_CHECK_GENERATOR: 4,
      DH_NOT_SUITABLE_GENERATOR: 8,
      NPN_ENABLED: 1,
      ALPN_ENABLED: 1,
      RSA_PKCS1_PADDING: 1,
      RSA_SSLV23_PADDING: 2,
      RSA_NO_PADDING: 3,
      RSA_PKCS1_OAEP_PADDING: 4,
      RSA_X931_PADDING: 5,
      RSA_PKCS1_PSS_PADDING: 6,
      POINT_CONVERSION_COMPRESSED: 2,
      POINT_CONVERSION_UNCOMPRESSED: 4,
      POINT_CONVERSION_HYBRID: 6
    };
  }, {
    "browserify-cipher": 36,
    "browserify-sign": 43,
    "browserify-sign/algos": 40,
    "create-ecdh": 51,
    "create-hash": 52,
    "create-hmac": 54,
    "diffie-hellman": 63,
    pbkdf2: 112,
    "public-encrypt": 119,
    randombytes: 125,
    randomfill: 126
  } ],
  57: [ function(require, module, exports) {
    "use strict";
    exports.utils = require("./des/utils");
    exports.Cipher = require("./des/cipher");
    exports.DES = require("./des/des");
    exports.CBC = require("./des/cbc");
    exports.EDE = require("./des/ede");
  }, {
    "./des/cbc": 58,
    "./des/cipher": 59,
    "./des/des": 60,
    "./des/ede": 61,
    "./des/utils": 62
  } ],
  58: [ function(require, module, exports) {
    "use strict";
    var assert = require("minimalistic-assert");
    var inherits = require("inherits");
    var proto = {};
    function CBCState(iv) {
      assert.equal(iv.length, 8, "Invalid IV length");
      this.iv = new Array(8);
      for (var i = 0; i < this.iv.length; i++) this.iv[i] = iv[i];
    }
    function instantiate(Base) {
      function CBC(options) {
        Base.call(this, options);
        this._cbcInit();
      }
      inherits(CBC, Base);
      var keys = Object.keys(proto);
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        CBC.prototype[key] = proto[key];
      }
      CBC.create = function create(options) {
        return new CBC(options);
      };
      return CBC;
    }
    exports.instantiate = instantiate;
    proto._cbcInit = function _cbcInit() {
      var state = new CBCState(this.options.iv);
      this._cbcState = state;
    };
    proto._update = function _update(inp, inOff, out, outOff) {
      var state = this._cbcState;
      var superProto = this.constructor.super_.prototype;
      var iv = state.iv;
      if ("encrypt" === this.type) {
        for (var i = 0; i < this.blockSize; i++) iv[i] ^= inp[inOff + i];
        superProto._update.call(this, iv, 0, out, outOff);
        for (var i = 0; i < this.blockSize; i++) iv[i] = out[outOff + i];
      } else {
        superProto._update.call(this, inp, inOff, out, outOff);
        for (var i = 0; i < this.blockSize; i++) out[outOff + i] ^= iv[i];
        for (var i = 0; i < this.blockSize; i++) iv[i] = inp[inOff + i];
      }
    };
  }, {
    inherits: 101,
    "minimalistic-assert": 105
  } ],
  59: [ function(require, module, exports) {
    "use strict";
    var assert = require("minimalistic-assert");
    function Cipher(options) {
      this.options = options;
      this.type = this.options.type;
      this.blockSize = 8;
      this._init();
      this.buffer = new Array(this.blockSize);
      this.bufferOff = 0;
    }
    module.exports = Cipher;
    Cipher.prototype._init = function _init() {};
    Cipher.prototype.update = function update(data) {
      if (0 === data.length) return [];
      return "decrypt" === this.type ? this._updateDecrypt(data) : this._updateEncrypt(data);
    };
    Cipher.prototype._buffer = function _buffer(data, off) {
      var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
      for (var i = 0; i < min; i++) this.buffer[this.bufferOff + i] = data[off + i];
      this.bufferOff += min;
      return min;
    };
    Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
      this._update(this.buffer, 0, out, off);
      this.bufferOff = 0;
      return this.blockSize;
    };
    Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
      var inputOff = 0;
      var outputOff = 0;
      var count = (this.bufferOff + data.length) / this.blockSize | 0;
      var out = new Array(count * this.blockSize);
      if (0 !== this.bufferOff) {
        inputOff += this._buffer(data, inputOff);
        this.bufferOff === this.buffer.length && (outputOff += this._flushBuffer(out, outputOff));
      }
      var max = data.length - (data.length - inputOff) % this.blockSize;
      for (;inputOff < max; inputOff += this.blockSize) {
        this._update(data, inputOff, out, outputOff);
        outputOff += this.blockSize;
      }
      for (;inputOff < data.length; inputOff++, this.bufferOff++) this.buffer[this.bufferOff] = data[inputOff];
      return out;
    };
    Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
      var inputOff = 0;
      var outputOff = 0;
      var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
      var out = new Array(count * this.blockSize);
      for (;count > 0; count--) {
        inputOff += this._buffer(data, inputOff);
        outputOff += this._flushBuffer(out, outputOff);
      }
      inputOff += this._buffer(data, inputOff);
      return out;
    };
    Cipher.prototype.final = function final(buffer) {
      var first;
      buffer && (first = this.update(buffer));
      var last;
      last = "encrypt" === this.type ? this._finalEncrypt() : this._finalDecrypt();
      return first ? first.concat(last) : last;
    };
    Cipher.prototype._pad = function _pad(buffer, off) {
      if (0 === off) return false;
      while (off < buffer.length) buffer[off++] = 0;
      return true;
    };
    Cipher.prototype._finalEncrypt = function _finalEncrypt() {
      if (!this._pad(this.buffer, this.bufferOff)) return [];
      var out = new Array(this.blockSize);
      this._update(this.buffer, 0, out, 0);
      return out;
    };
    Cipher.prototype._unpad = function _unpad(buffer) {
      return buffer;
    };
    Cipher.prototype._finalDecrypt = function _finalDecrypt() {
      assert.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
      var out = new Array(this.blockSize);
      this._flushBuffer(out, 0);
      return this._unpad(out);
    };
  }, {
    "minimalistic-assert": 105
  } ],
  60: [ function(require, module, exports) {
    "use strict";
    var assert = require("minimalistic-assert");
    var inherits = require("inherits");
    var des = require("../des");
    var utils = des.utils;
    var Cipher = des.Cipher;
    function DESState() {
      this.tmp = new Array(2);
      this.keys = null;
    }
    function DES(options) {
      Cipher.call(this, options);
      var state = new DESState();
      this._desState = state;
      this.deriveKeys(state, options.key);
    }
    inherits(DES, Cipher);
    module.exports = DES;
    DES.create = function create(options) {
      return new DES(options);
    };
    var shiftTable = [ 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1 ];
    DES.prototype.deriveKeys = function deriveKeys(state, key) {
      state.keys = new Array(32);
      assert.equal(key.length, this.blockSize, "Invalid key length");
      var kL = utils.readUInt32BE(key, 0);
      var kR = utils.readUInt32BE(key, 4);
      utils.pc1(kL, kR, state.tmp, 0);
      kL = state.tmp[0];
      kR = state.tmp[1];
      for (var i = 0; i < state.keys.length; i += 2) {
        var shift = shiftTable[i >>> 1];
        kL = utils.r28shl(kL, shift);
        kR = utils.r28shl(kR, shift);
        utils.pc2(kL, kR, state.keys, i);
      }
    };
    DES.prototype._update = function _update(inp, inOff, out, outOff) {
      var state = this._desState;
      var l = utils.readUInt32BE(inp, inOff);
      var r = utils.readUInt32BE(inp, inOff + 4);
      utils.ip(l, r, state.tmp, 0);
      l = state.tmp[0];
      r = state.tmp[1];
      "encrypt" === this.type ? this._encrypt(state, l, r, state.tmp, 0) : this._decrypt(state, l, r, state.tmp, 0);
      l = state.tmp[0];
      r = state.tmp[1];
      utils.writeUInt32BE(out, l, outOff);
      utils.writeUInt32BE(out, r, outOff + 4);
    };
    DES.prototype._pad = function _pad(buffer, off) {
      var value = buffer.length - off;
      for (var i = off; i < buffer.length; i++) buffer[i] = value;
      return true;
    };
    DES.prototype._unpad = function _unpad(buffer) {
      var pad = buffer[buffer.length - 1];
      for (var i = buffer.length - pad; i < buffer.length; i++) assert.equal(buffer[i], pad);
      return buffer.slice(0, buffer.length - pad);
    };
    DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
      var l = lStart;
      var r = rStart;
      for (var i = 0; i < state.keys.length; i += 2) {
        var keyL = state.keys[i];
        var keyR = state.keys[i + 1];
        utils.expand(r, state.tmp, 0);
        keyL ^= state.tmp[0];
        keyR ^= state.tmp[1];
        var s = utils.substitute(keyL, keyR);
        var f = utils.permute(s);
        var t = r;
        r = (l ^ f) >>> 0;
        l = t;
      }
      utils.rip(r, l, out, off);
    };
    DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
      var l = rStart;
      var r = lStart;
      for (var i = state.keys.length - 2; i >= 0; i -= 2) {
        var keyL = state.keys[i];
        var keyR = state.keys[i + 1];
        utils.expand(l, state.tmp, 0);
        keyL ^= state.tmp[0];
        keyR ^= state.tmp[1];
        var s = utils.substitute(keyL, keyR);
        var f = utils.permute(s);
        var t = l;
        l = (r ^ f) >>> 0;
        r = t;
      }
      utils.rip(l, r, out, off);
    };
  }, {
    "../des": 57,
    inherits: 101,
    "minimalistic-assert": 105
  } ],
  61: [ function(require, module, exports) {
    "use strict";
    var assert = require("minimalistic-assert");
    var inherits = require("inherits");
    var des = require("../des");
    var Cipher = des.Cipher;
    var DES = des.DES;
    function EDEState(type, key) {
      assert.equal(key.length, 24, "Invalid key length");
      var k1 = key.slice(0, 8);
      var k2 = key.slice(8, 16);
      var k3 = key.slice(16, 24);
      this.ciphers = "encrypt" === type ? [ DES.create({
        type: "encrypt",
        key: k1
      }), DES.create({
        type: "decrypt",
        key: k2
      }), DES.create({
        type: "encrypt",
        key: k3
      }) ] : [ DES.create({
        type: "decrypt",
        key: k3
      }), DES.create({
        type: "encrypt",
        key: k2
      }), DES.create({
        type: "decrypt",
        key: k1
      }) ];
    }
    function EDE(options) {
      Cipher.call(this, options);
      var state = new EDEState(this.type, this.options.key);
      this._edeState = state;
    }
    inherits(EDE, Cipher);
    module.exports = EDE;
    EDE.create = function create(options) {
      return new EDE(options);
    };
    EDE.prototype._update = function _update(inp, inOff, out, outOff) {
      var state = this._edeState;
      state.ciphers[0]._update(inp, inOff, out, outOff);
      state.ciphers[1]._update(out, outOff, out, outOff);
      state.ciphers[2]._update(out, outOff, out, outOff);
    };
    EDE.prototype._pad = DES.prototype._pad;
    EDE.prototype._unpad = DES.prototype._unpad;
  }, {
    "../des": 57,
    inherits: 101,
    "minimalistic-assert": 105
  } ],
  62: [ function(require, module, exports) {
    "use strict";
    exports.readUInt32BE = function readUInt32BE(bytes, off) {
      var res = bytes[0 + off] << 24 | bytes[1 + off] << 16 | bytes[2 + off] << 8 | bytes[3 + off];
      return res >>> 0;
    };
    exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
      bytes[0 + off] = value >>> 24;
      bytes[1 + off] = value >>> 16 & 255;
      bytes[2 + off] = value >>> 8 & 255;
      bytes[3 + off] = 255 & value;
    };
    exports.ip = function ip(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      for (var i = 6; i >= 0; i -= 2) {
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inR >>> j + i & 1;
        }
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inL >>> j + i & 1;
        }
      }
      for (var i = 6; i >= 0; i -= 2) {
        for (var j = 1; j <= 25; j += 8) {
          outR <<= 1;
          outR |= inR >>> j + i & 1;
        }
        for (var j = 1; j <= 25; j += 8) {
          outR <<= 1;
          outR |= inL >>> j + i & 1;
        }
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.rip = function rip(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      for (var i = 0; i < 4; i++) for (var j = 24; j >= 0; j -= 8) {
        outL <<= 1;
        outL |= inR >>> j + i & 1;
        outL <<= 1;
        outL |= inL >>> j + i & 1;
      }
      for (var i = 4; i < 8; i++) for (var j = 24; j >= 0; j -= 8) {
        outR <<= 1;
        outR |= inR >>> j + i & 1;
        outR <<= 1;
        outR |= inL >>> j + i & 1;
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.pc1 = function pc1(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      for (var i = 7; i >= 5; i--) {
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inR >> j + i & 1;
        }
        for (var j = 0; j <= 24; j += 8) {
          outL <<= 1;
          outL |= inL >> j + i & 1;
        }
      }
      for (var j = 0; j <= 24; j += 8) {
        outL <<= 1;
        outL |= inR >> j + i & 1;
      }
      for (var i = 1; i <= 3; i++) {
        for (var j = 0; j <= 24; j += 8) {
          outR <<= 1;
          outR |= inR >> j + i & 1;
        }
        for (var j = 0; j <= 24; j += 8) {
          outR <<= 1;
          outR |= inL >> j + i & 1;
        }
      }
      for (var j = 0; j <= 24; j += 8) {
        outR <<= 1;
        outR |= inL >> j + i & 1;
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.r28shl = function r28shl(num, shift) {
      return num << shift & 268435455 | num >>> 28 - shift;
    };
    var pc2table = [ 14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24 ];
    exports.pc2 = function pc2(inL, inR, out, off) {
      var outL = 0;
      var outR = 0;
      var len = pc2table.length >>> 1;
      for (var i = 0; i < len; i++) {
        outL <<= 1;
        outL |= inL >>> pc2table[i] & 1;
      }
      for (var i = len; i < pc2table.length; i++) {
        outR <<= 1;
        outR |= inR >>> pc2table[i] & 1;
      }
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    exports.expand = function expand(r, out, off) {
      var outL = 0;
      var outR = 0;
      outL = (1 & r) << 5 | r >>> 27;
      for (var i = 23; i >= 15; i -= 4) {
        outL <<= 6;
        outL |= r >>> i & 63;
      }
      for (var i = 11; i >= 3; i -= 4) {
        outR |= r >>> i & 63;
        outR <<= 6;
      }
      outR |= (31 & r) << 1 | r >>> 31;
      out[off + 0] = outL >>> 0;
      out[off + 1] = outR >>> 0;
    };
    var sTable = [ 14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11 ];
    exports.substitute = function substitute(inL, inR) {
      var out = 0;
      for (var i = 0; i < 4; i++) {
        var b = inL >>> 18 - 6 * i & 63;
        var sb = sTable[64 * i + b];
        out <<= 4;
        out |= sb;
      }
      for (var i = 0; i < 4; i++) {
        var b = inR >>> 18 - 6 * i & 63;
        var sb = sTable[256 + 64 * i + b];
        out <<= 4;
        out |= sb;
      }
      return out >>> 0;
    };
    var permuteTable = [ 16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7 ];
    exports.permute = function permute(num) {
      var out = 0;
      for (var i = 0; i < permuteTable.length; i++) {
        out <<= 1;
        out |= num >>> permuteTable[i] & 1;
      }
      return out >>> 0;
    };
    exports.padSplit = function padSplit(num, size, group) {
      var str = num.toString(2);
      while (str.length < size) str = "0" + str;
      var out = [];
      for (var i = 0; i < size; i += group) out.push(str.slice(i, i + group));
      return out.join(" ");
    };
  }, {} ],
  63: [ function(require, module, exports) {
    (function(Buffer) {
      var generatePrime = require("./lib/generatePrime");
      var primes = require("./lib/primes.json");
      var DH = require("./lib/dh");
      function getDiffieHellman(mod) {
        var prime = new Buffer(primes[mod].prime, "hex");
        var gen = new Buffer(primes[mod].gen, "hex");
        return new DH(prime, gen);
      }
      var ENCODINGS = {
        binary: true,
        hex: true,
        base64: true
      };
      function createDiffieHellman(prime, enc, generator, genc) {
        if (Buffer.isBuffer(enc) || void 0 === ENCODINGS[enc]) return createDiffieHellman(prime, "binary", enc, generator);
        enc = enc || "binary";
        genc = genc || "binary";
        generator = generator || new Buffer([ 2 ]);
        Buffer.isBuffer(generator) || (generator = new Buffer(generator, genc));
        if ("number" === typeof prime) return new DH(generatePrime(prime, generator), generator, true);
        Buffer.isBuffer(prime) || (prime = new Buffer(prime, enc));
        return new DH(prime, generator, true);
      }
      exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;
      exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;
    }).call(this, require("buffer").Buffer);
  }, {
    "./lib/dh": 64,
    "./lib/generatePrime": 65,
    "./lib/primes.json": 66,
    buffer: 47
  } ],
  64: [ function(require, module, exports) {
    (function(Buffer) {
      var BN = require("bn.js");
      var MillerRabin = require("miller-rabin");
      var millerRabin = new MillerRabin();
      var TWENTYFOUR = new BN(24);
      var ELEVEN = new BN(11);
      var TEN = new BN(10);
      var THREE = new BN(3);
      var SEVEN = new BN(7);
      var primes = require("./generatePrime");
      var randomBytes = require("randombytes");
      module.exports = DH;
      function setPublicKey(pub, enc) {
        enc = enc || "utf8";
        Buffer.isBuffer(pub) || (pub = new Buffer(pub, enc));
        this._pub = new BN(pub);
        return this;
      }
      function setPrivateKey(priv, enc) {
        enc = enc || "utf8";
        Buffer.isBuffer(priv) || (priv = new Buffer(priv, enc));
        this._priv = new BN(priv);
        return this;
      }
      var primeCache = {};
      function checkPrime(prime, generator) {
        var gen = generator.toString("hex");
        var hex = [ gen, prime.toString(16) ].join("_");
        if (hex in primeCache) return primeCache[hex];
        var error = 0;
        if (prime.isEven() || !primes.simpleSieve || !primes.fermatTest(prime) || !millerRabin.test(prime)) {
          error += 1;
          error += "02" === gen || "05" === gen ? 8 : 4;
          primeCache[hex] = error;
          return error;
        }
        millerRabin.test(prime.shrn(1)) || (error += 2);
        var rem;
        switch (gen) {
         case "02":
          prime.mod(TWENTYFOUR).cmp(ELEVEN) && (error += 8);
          break;

         case "05":
          rem = prime.mod(TEN);
          rem.cmp(THREE) && rem.cmp(SEVEN) && (error += 8);
          break;

         default:
          error += 4;
        }
        primeCache[hex] = error;
        return error;
      }
      function DH(prime, generator, malleable) {
        this.setGenerator(generator);
        this.__prime = new BN(prime);
        this._prime = BN.mont(this.__prime);
        this._primeLen = prime.length;
        this._pub = void 0;
        this._priv = void 0;
        this._primeCode = void 0;
        if (malleable) {
          this.setPublicKey = setPublicKey;
          this.setPrivateKey = setPrivateKey;
        } else this._primeCode = 8;
      }
      Object.defineProperty(DH.prototype, "verifyError", {
        enumerable: true,
        get: function() {
          "number" !== typeof this._primeCode && (this._primeCode = checkPrime(this.__prime, this.__gen));
          return this._primeCode;
        }
      });
      DH.prototype.generateKeys = function() {
        this._priv || (this._priv = new BN(randomBytes(this._primeLen)));
        this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
        return this.getPublicKey();
      };
      DH.prototype.computeSecret = function(other) {
        other = new BN(other);
        other = other.toRed(this._prime);
        var secret = other.redPow(this._priv).fromRed();
        var out = new Buffer(secret.toArray());
        var prime = this.getPrime();
        if (out.length < prime.length) {
          var front = new Buffer(prime.length - out.length);
          front.fill(0);
          out = Buffer.concat([ front, out ]);
        }
        return out;
      };
      DH.prototype.getPublicKey = function getPublicKey(enc) {
        return formatReturnValue(this._pub, enc);
      };
      DH.prototype.getPrivateKey = function getPrivateKey(enc) {
        return formatReturnValue(this._priv, enc);
      };
      DH.prototype.getPrime = function(enc) {
        return formatReturnValue(this.__prime, enc);
      };
      DH.prototype.getGenerator = function(enc) {
        return formatReturnValue(this._gen, enc);
      };
      DH.prototype.setGenerator = function(gen, enc) {
        enc = enc || "utf8";
        Buffer.isBuffer(gen) || (gen = new Buffer(gen, enc));
        this.__gen = gen;
        this._gen = new BN(gen);
        return this;
      };
      function formatReturnValue(bn, enc) {
        var buf = new Buffer(bn.toArray());
        return enc ? buf.toString(enc) : buf;
      }
    }).call(this, require("buffer").Buffer);
  }, {
    "./generatePrime": 65,
    "bn.js": 16,
    buffer: 47,
    "miller-rabin": 104,
    randombytes: 125
  } ],
  65: [ function(require, module, exports) {
    var randomBytes = require("randombytes");
    module.exports = findPrime;
    findPrime.simpleSieve = simpleSieve;
    findPrime.fermatTest = fermatTest;
    var BN = require("bn.js");
    var TWENTYFOUR = new BN(24);
    var MillerRabin = require("miller-rabin");
    var millerRabin = new MillerRabin();
    var ONE = new BN(1);
    var TWO = new BN(2);
    var FIVE = new BN(5);
    var SIXTEEN = new BN(16);
    var EIGHT = new BN(8);
    var TEN = new BN(10);
    var THREE = new BN(3);
    var SEVEN = new BN(7);
    var ELEVEN = new BN(11);
    var FOUR = new BN(4);
    var TWELVE = new BN(12);
    var primes = null;
    function _getPrimes() {
      if (null !== primes) return primes;
      var limit = 1048576;
      var res = [];
      res[0] = 2;
      for (var i = 1, k = 3; k < limit; k += 2) {
        var sqrt = Math.ceil(Math.sqrt(k));
        for (var j = 0; j < i && res[j] <= sqrt; j++) if (k % res[j] === 0) break;
        if (i !== j && res[j] <= sqrt) continue;
        res[i++] = k;
      }
      primes = res;
      return res;
    }
    function simpleSieve(p) {
      var primes = _getPrimes();
      for (var i = 0; i < primes.length; i++) if (0 === p.modn(primes[i])) return 0 === p.cmpn(primes[i]);
      return true;
    }
    function fermatTest(p) {
      var red = BN.mont(p);
      return 0 === TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1);
    }
    function findPrime(bits, gen) {
      if (bits < 16) return new BN(2 === gen || 5 === gen ? [ 140, 123 ] : [ 140, 39 ]);
      gen = new BN(gen);
      var num, n2;
      while (true) {
        num = new BN(randomBytes(Math.ceil(bits / 8)));
        while (num.bitLength() > bits) num.ishrn(1);
        num.isEven() && num.iadd(ONE);
        num.testn(1) || num.iadd(TWO);
        if (gen.cmp(TWO)) {
          if (!gen.cmp(FIVE)) while (num.mod(TEN).cmp(THREE)) num.iadd(FOUR);
        } else while (num.mod(TWENTYFOUR).cmp(ELEVEN)) num.iadd(FOUR);
        n2 = num.shrn(1);
        if (simpleSieve(n2) && simpleSieve(num) && fermatTest(n2) && fermatTest(num) && millerRabin.test(n2) && millerRabin.test(num)) return num;
      }
    }
  }, {
    "bn.js": 16,
    "miller-rabin": 104,
    randombytes: 125
  } ],
  66: [ function(require, module, exports) {
    module.exports = {
      modp1: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
      },
      modp2: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
      },
      modp5: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
      },
      modp14: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
      },
      modp15: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
      },
      modp16: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
      },
      modp17: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
      },
      modp18: {
        gen: "02",
        prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
      }
    };
  }, {} ],
  67: [ function(require, module, exports) {
    "use strict";
    var elliptic = exports;
    elliptic.version = require("../package.json").version;
    elliptic.utils = require("./elliptic/utils");
    elliptic.rand = require("brorand");
    elliptic.curve = require("./elliptic/curve");
    elliptic.curves = require("./elliptic/curves");
    elliptic.ec = require("./elliptic/ec");
    elliptic.eddsa = require("./elliptic/eddsa");
  }, {
    "../package.json": 82,
    "./elliptic/curve": 70,
    "./elliptic/curves": 73,
    "./elliptic/ec": 74,
    "./elliptic/eddsa": 77,
    "./elliptic/utils": 81,
    brorand: 17
  } ],
  68: [ function(require, module, exports) {
    "use strict";
    var BN = require("bn.js");
    var utils = require("../utils");
    var getNAF = utils.getNAF;
    var getJSF = utils.getJSF;
    var assert = utils.assert;
    function BaseCurve(type, conf) {
      this.type = type;
      this.p = new BN(conf.p, 16);
      this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);
      this.zero = new BN(0).toRed(this.red);
      this.one = new BN(1).toRed(this.red);
      this.two = new BN(2).toRed(this.red);
      this.n = conf.n && new BN(conf.n, 16);
      this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
      this._wnafT1 = new Array(4);
      this._wnafT2 = new Array(4);
      this._wnafT3 = new Array(4);
      this._wnafT4 = new Array(4);
      var adjustCount = this.n && this.p.div(this.n);
      if (!adjustCount || adjustCount.cmpn(100) > 0) this.redN = null; else {
        this._maxwellTrick = true;
        this.redN = this.n.toRed(this.red);
      }
    }
    module.exports = BaseCurve;
    BaseCurve.prototype.point = function point() {
      throw new Error("Not implemented");
    };
    BaseCurve.prototype.validate = function validate() {
      throw new Error("Not implemented");
    };
    BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
      assert(p.precomputed);
      var doubles = p._getDoubles();
      var naf = getNAF(k, 1);
      var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
      I /= 3;
      var repr = [];
      for (var j = 0; j < naf.length; j += doubles.step) {
        var nafW = 0;
        for (var k = j + doubles.step - 1; k >= j; k--) nafW = (nafW << 1) + naf[k];
        repr.push(nafW);
      }
      var a = this.jpoint(null, null, null);
      var b = this.jpoint(null, null, null);
      for (var i = I; i > 0; i--) {
        for (var j = 0; j < repr.length; j++) {
          var nafW = repr[j];
          nafW === i ? b = b.mixedAdd(doubles.points[j]) : nafW === -i && (b = b.mixedAdd(doubles.points[j].neg()));
        }
        a = a.add(b);
      }
      return a.toP();
    };
    BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
      var w = 4;
      var nafPoints = p._getNAFPoints(w);
      w = nafPoints.wnd;
      var wnd = nafPoints.points;
      var naf = getNAF(k, w);
      var acc = this.jpoint(null, null, null);
      for (var i = naf.length - 1; i >= 0; i--) {
        for (var k = 0; i >= 0 && 0 === naf[i]; i--) k++;
        i >= 0 && k++;
        acc = acc.dblp(k);
        if (i < 0) break;
        var z = naf[i];
        assert(0 !== z);
        acc = "affine" === p.type ? z > 0 ? acc.mixedAdd(wnd[z - 1 >> 1]) : acc.mixedAdd(wnd[-z - 1 >> 1].neg()) : z > 0 ? acc.add(wnd[z - 1 >> 1]) : acc.add(wnd[-z - 1 >> 1].neg());
      }
      return "affine" === p.type ? acc.toP() : acc;
    };
    BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
      var wndWidth = this._wnafT1;
      var wnd = this._wnafT2;
      var naf = this._wnafT3;
      var max = 0;
      for (var i = 0; i < len; i++) {
        var p = points[i];
        var nafPoints = p._getNAFPoints(defW);
        wndWidth[i] = nafPoints.wnd;
        wnd[i] = nafPoints.points;
      }
      for (var i = len - 1; i >= 1; i -= 2) {
        var a = i - 1;
        var b = i;
        if (1 !== wndWidth[a] || 1 !== wndWidth[b]) {
          naf[a] = getNAF(coeffs[a], wndWidth[a]);
          naf[b] = getNAF(coeffs[b], wndWidth[b]);
          max = Math.max(naf[a].length, max);
          max = Math.max(naf[b].length, max);
          continue;
        }
        var comb = [ points[a], null, null, points[b] ];
        if (0 === points[a].y.cmp(points[b].y)) {
          comb[1] = points[a].add(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        } else if (0 === points[a].y.cmp(points[b].y.redNeg())) {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].add(points[b].neg());
        } else {
          comb[1] = points[a].toJ().mixedAdd(points[b]);
          comb[2] = points[a].toJ().mixedAdd(points[b].neg());
        }
        var index = [ -3, -1, -5, -7, 0, 7, 5, 1, 3 ];
        var jsf = getJSF(coeffs[a], coeffs[b]);
        max = Math.max(jsf[0].length, max);
        naf[a] = new Array(max);
        naf[b] = new Array(max);
        for (var j = 0; j < max; j++) {
          var ja = 0 | jsf[0][j];
          var jb = 0 | jsf[1][j];
          naf[a][j] = index[3 * (ja + 1) + (jb + 1)];
          naf[b][j] = 0;
          wnd[a] = comb;
        }
      }
      var acc = this.jpoint(null, null, null);
      var tmp = this._wnafT4;
      for (var i = max; i >= 0; i--) {
        var k = 0;
        while (i >= 0) {
          var zero = true;
          for (var j = 0; j < len; j++) {
            tmp[j] = 0 | naf[j][i];
            0 !== tmp[j] && (zero = false);
          }
          if (!zero) break;
          k++;
          i--;
        }
        i >= 0 && k++;
        acc = acc.dblp(k);
        if (i < 0) break;
        for (var j = 0; j < len; j++) {
          var z = tmp[j];
          var p;
          if (0 === z) continue;
          z > 0 ? p = wnd[j][z - 1 >> 1] : z < 0 && (p = wnd[j][-z - 1 >> 1].neg());
          acc = "affine" === p.type ? acc.mixedAdd(p) : acc.add(p);
        }
      }
      for (var i = 0; i < len; i++) wnd[i] = null;
      return jacobianResult ? acc : acc.toP();
    };
    function BasePoint(curve, type) {
      this.curve = curve;
      this.type = type;
      this.precomputed = null;
    }
    BaseCurve.BasePoint = BasePoint;
    BasePoint.prototype.eq = function eq() {
      throw new Error("Not implemented");
    };
    BasePoint.prototype.validate = function validate() {
      return this.curve.validate(this);
    };
    BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
      bytes = utils.toArray(bytes, enc);
      var len = this.p.byteLength();
      if ((4 === bytes[0] || 6 === bytes[0] || 7 === bytes[0]) && bytes.length - 1 === 2 * len) {
        6 === bytes[0] ? assert(bytes[bytes.length - 1] % 2 === 0) : 7 === bytes[0] && assert(bytes[bytes.length - 1] % 2 === 1);
        var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));
        return res;
      }
      if ((2 === bytes[0] || 3 === bytes[0]) && bytes.length - 1 === len) return this.pointFromX(bytes.slice(1, 1 + len), 3 === bytes[0]);
      throw new Error("Unknown point format");
    };
    BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
      return this.encode(enc, true);
    };
    BasePoint.prototype._encode = function _encode(compact) {
      var len = this.curve.p.byteLength();
      var x = this.getX().toArray("be", len);
      if (compact) return [ this.getY().isEven() ? 2 : 3 ].concat(x);
      return [ 4 ].concat(x, this.getY().toArray("be", len));
    };
    BasePoint.prototype.encode = function encode(enc, compact) {
      return utils.encode(this._encode(compact), enc);
    };
    BasePoint.prototype.precompute = function precompute(power) {
      if (this.precomputed) return this;
      var precomputed = {
        doubles: null,
        naf: null,
        beta: null
      };
      precomputed.naf = this._getNAFPoints(8);
      precomputed.doubles = this._getDoubles(4, power);
      precomputed.beta = this._getBeta();
      this.precomputed = precomputed;
      return this;
    };
    BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
      if (!this.precomputed) return false;
      var doubles = this.precomputed.doubles;
      if (!doubles) return false;
      return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
    };
    BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
      if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;
      var doubles = [ this ];
      var acc = this;
      for (var i = 0; i < power; i += step) {
        for (var j = 0; j < step; j++) acc = acc.dbl();
        doubles.push(acc);
      }
      return {
        step: step,
        points: doubles
      };
    };
    BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
      if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;
      var res = [ this ];
      var max = (1 << wnd) - 1;
      var dbl = 1 === max ? null : this.dbl();
      for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);
      return {
        wnd: wnd,
        points: res
      };
    };
    BasePoint.prototype._getBeta = function _getBeta() {
      return null;
    };
    BasePoint.prototype.dblp = function dblp(k) {
      var r = this;
      for (var i = 0; i < k; i++) r = r.dbl();
      return r;
    };
  }, {
    "../utils": 81,
    "bn.js": 16
  } ],
  69: [ function(require, module, exports) {
    "use strict";
    var utils = require("../utils");
    var BN = require("bn.js");
    var inherits = require("inherits");
    var Base = require("./base");
    var assert = utils.assert;
    function EdwardsCurve(conf) {
      this.twisted = 1 !== (0 | conf.a);
      this.mOneA = this.twisted && -1 === (0 | conf.a);
      this.extended = this.mOneA;
      Base.call(this, "edwards", conf);
      this.a = new BN(conf.a, 16).umod(this.red.m);
      this.a = this.a.toRed(this.red);
      this.c = new BN(conf.c, 16).toRed(this.red);
      this.c2 = this.c.redSqr();
      this.d = new BN(conf.d, 16).toRed(this.red);
      this.dd = this.d.redAdd(this.d);
      assert(!this.twisted || 0 === this.c.fromRed().cmpn(1));
      this.oneC = 1 === (0 | conf.c);
    }
    inherits(EdwardsCurve, Base);
    module.exports = EdwardsCurve;
    EdwardsCurve.prototype._mulA = function _mulA(num) {
      return this.mOneA ? num.redNeg() : this.a.redMul(num);
    };
    EdwardsCurve.prototype._mulC = function _mulC(num) {
      return this.oneC ? num : this.c.redMul(num);
    };
    EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
      return this.point(x, y, z, t);
    };
    EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
      x = new BN(x, 16);
      x.red || (x = x.toRed(this.red));
      var x2 = x.redSqr();
      var rhs = this.c2.redSub(this.a.redMul(x2));
      var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));
      var y2 = rhs.redMul(lhs.redInvm());
      var y = y2.redSqrt();
      if (0 !== y.redSqr().redSub(y2).cmp(this.zero)) throw new Error("invalid point");
      var isOdd = y.fromRed().isOdd();
      (odd && !isOdd || !odd && isOdd) && (y = y.redNeg());
      return this.point(x, y);
    };
    EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
      y = new BN(y, 16);
      y.red || (y = y.toRed(this.red));
      var y2 = y.redSqr();
      var lhs = y2.redSub(this.c2);
      var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);
      var x2 = lhs.redMul(rhs.redInvm());
      if (0 === x2.cmp(this.zero)) {
        if (odd) throw new Error("invalid point");
        return this.point(this.zero, y);
      }
      var x = x2.redSqrt();
      if (0 !== x.redSqr().redSub(x2).cmp(this.zero)) throw new Error("invalid point");
      x.fromRed().isOdd() !== odd && (x = x.redNeg());
      return this.point(x, y);
    };
    EdwardsCurve.prototype.validate = function validate(point) {
      if (point.isInfinity()) return true;
      point.normalize();
      var x2 = point.x.redSqr();
      var y2 = point.y.redSqr();
      var lhs = x2.redMul(this.a).redAdd(y2);
      var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));
      return 0 === lhs.cmp(rhs);
    };
    function Point(curve, x, y, z, t) {
      Base.BasePoint.call(this, curve, "projective");
      if (null === x && null === y && null === z) {
        this.x = this.curve.zero;
        this.y = this.curve.one;
        this.z = this.curve.one;
        this.t = this.curve.zero;
        this.zOne = true;
      } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        this.z = z ? new BN(z, 16) : this.curve.one;
        this.t = t && new BN(t, 16);
        this.x.red || (this.x = this.x.toRed(this.curve.red));
        this.y.red || (this.y = this.y.toRed(this.curve.red));
        this.z.red || (this.z = this.z.toRed(this.curve.red));
        this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red));
        this.zOne = this.z === this.curve.one;
        if (this.curve.extended && !this.t) {
          this.t = this.x.redMul(this.y);
          this.zOne || (this.t = this.t.redMul(this.z.redInvm()));
        }
      }
    }
    inherits(Point, Base.BasePoint);
    EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
      return Point.fromJSON(this, obj);
    };
    EdwardsCurve.prototype.point = function point(x, y, z, t) {
      return new Point(this, x, y, z, t);
    };
    Point.fromJSON = function fromJSON(curve, obj) {
      return new Point(curve, obj[0], obj[1], obj[2]);
    };
    Point.prototype.inspect = function inspect() {
      if (this.isInfinity()) return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Point.prototype.isInfinity = function isInfinity() {
      return 0 === this.x.cmpn(0) && (0 === this.y.cmp(this.z) || this.zOne && 0 === this.y.cmp(this.curve.c));
    };
    Point.prototype._extDbl = function _extDbl() {
      var a = this.x.redSqr();
      var b = this.y.redSqr();
      var c = this.z.redSqr();
      c = c.redIAdd(c);
      var d = this.curve._mulA(a);
      var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
      var g = d.redAdd(b);
      var f = g.redSub(c);
      var h = d.redSub(b);
      var nx = e.redMul(f);
      var ny = g.redMul(h);
      var nt = e.redMul(h);
      var nz = f.redMul(g);
      return this.curve.point(nx, ny, nz, nt);
    };
    Point.prototype._projDbl = function _projDbl() {
      var b = this.x.redAdd(this.y).redSqr();
      var c = this.x.redSqr();
      var d = this.y.redSqr();
      var nx;
      var ny;
      var nz;
      if (this.curve.twisted) {
        var e = this.curve._mulA(c);
        var f = e.redAdd(d);
        if (this.zOne) {
          nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
          ny = f.redMul(e.redSub(d));
          nz = f.redSqr().redSub(f).redSub(f);
        } else {
          var h = this.z.redSqr();
          var j = f.redSub(h).redISub(h);
          nx = b.redSub(c).redISub(d).redMul(j);
          ny = f.redMul(e.redSub(d));
          nz = f.redMul(j);
        }
      } else {
        var e = c.redAdd(d);
        var h = this.curve._mulC(this.z).redSqr();
        var j = e.redSub(h).redSub(h);
        nx = this.curve._mulC(b.redISub(e)).redMul(j);
        ny = this.curve._mulC(e).redMul(c.redISub(d));
        nz = e.redMul(j);
      }
      return this.curve.point(nx, ny, nz);
    };
    Point.prototype.dbl = function dbl() {
      if (this.isInfinity()) return this;
      return this.curve.extended ? this._extDbl() : this._projDbl();
    };
    Point.prototype._extAdd = function _extAdd(p) {
      var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
      var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
      var c = this.t.redMul(this.curve.dd).redMul(p.t);
      var d = this.z.redMul(p.z.redAdd(p.z));
      var e = b.redSub(a);
      var f = d.redSub(c);
      var g = d.redAdd(c);
      var h = b.redAdd(a);
      var nx = e.redMul(f);
      var ny = g.redMul(h);
      var nt = e.redMul(h);
      var nz = f.redMul(g);
      return this.curve.point(nx, ny, nz, nt);
    };
    Point.prototype._projAdd = function _projAdd(p) {
      var a = this.z.redMul(p.z);
      var b = a.redSqr();
      var c = this.x.redMul(p.x);
      var d = this.y.redMul(p.y);
      var e = this.curve.d.redMul(c).redMul(d);
      var f = b.redSub(e);
      var g = b.redAdd(e);
      var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
      var nx = a.redMul(f).redMul(tmp);
      var ny;
      var nz;
      if (this.curve.twisted) {
        ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
        nz = f.redMul(g);
      } else {
        ny = a.redMul(g).redMul(d.redSub(c));
        nz = this.curve._mulC(f).redMul(g);
      }
      return this.curve.point(nx, ny, nz);
    };
    Point.prototype.add = function add(p) {
      if (this.isInfinity()) return p;
      if (p.isInfinity()) return this;
      return this.curve.extended ? this._extAdd(p) : this._projAdd(p);
    };
    Point.prototype.mul = function mul(k) {
      return this._hasDoubles(k) ? this.curve._fixedNafMul(this, k) : this.curve._wnafMul(this, k);
    };
    Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
      return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
    };
    Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
      return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
    };
    Point.prototype.normalize = function normalize() {
      if (this.zOne) return this;
      var zi = this.z.redInvm();
      this.x = this.x.redMul(zi);
      this.y = this.y.redMul(zi);
      this.t && (this.t = this.t.redMul(zi));
      this.z = this.curve.one;
      this.zOne = true;
      return this;
    };
    Point.prototype.neg = function neg() {
      return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
    };
    Point.prototype.getX = function getX() {
      this.normalize();
      return this.x.fromRed();
    };
    Point.prototype.getY = function getY() {
      this.normalize();
      return this.y.fromRed();
    };
    Point.prototype.eq = function eq(other) {
      return this === other || 0 === this.getX().cmp(other.getX()) && 0 === this.getY().cmp(other.getY());
    };
    Point.prototype.eqXToP = function eqXToP(x) {
      var rx = x.toRed(this.curve.red).redMul(this.z);
      if (0 === this.x.cmp(rx)) return true;
      var xc = x.clone();
      var t = this.curve.redN.redMul(this.z);
      for (;;) {
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0) return false;
        rx.redIAdd(t);
        if (0 === this.x.cmp(rx)) return true;
      }
    };
    Point.prototype.toP = Point.prototype.normalize;
    Point.prototype.mixedAdd = Point.prototype.add;
  }, {
    "../utils": 81,
    "./base": 68,
    "bn.js": 16,
    inherits: 101
  } ],
  70: [ function(require, module, exports) {
    "use strict";
    var curve = exports;
    curve.base = require("./base");
    curve.short = require("./short");
    curve.mont = require("./mont");
    curve.edwards = require("./edwards");
  }, {
    "./base": 68,
    "./edwards": 69,
    "./mont": 71,
    "./short": 72
  } ],
  71: [ function(require, module, exports) {
    "use strict";
    var BN = require("bn.js");
    var inherits = require("inherits");
    var Base = require("./base");
    var utils = require("../utils");
    function MontCurve(conf) {
      Base.call(this, "mont", conf);
      this.a = new BN(conf.a, 16).toRed(this.red);
      this.b = new BN(conf.b, 16).toRed(this.red);
      this.i4 = new BN(4).toRed(this.red).redInvm();
      this.two = new BN(2).toRed(this.red);
      this.a24 = this.i4.redMul(this.a.redAdd(this.two));
    }
    inherits(MontCurve, Base);
    module.exports = MontCurve;
    MontCurve.prototype.validate = function validate(point) {
      var x = point.normalize().x;
      var x2 = x.redSqr();
      var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
      var y = rhs.redSqrt();
      return 0 === y.redSqr().cmp(rhs);
    };
    function Point(curve, x, z) {
      Base.BasePoint.call(this, curve, "projective");
      if (null === x && null === z) {
        this.x = this.curve.one;
        this.z = this.curve.zero;
      } else {
        this.x = new BN(x, 16);
        this.z = new BN(z, 16);
        this.x.red || (this.x = this.x.toRed(this.curve.red));
        this.z.red || (this.z = this.z.toRed(this.curve.red));
      }
    }
    inherits(Point, Base.BasePoint);
    MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
      return this.point(utils.toArray(bytes, enc), 1);
    };
    MontCurve.prototype.point = function point(x, z) {
      return new Point(this, x, z);
    };
    MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
      return Point.fromJSON(this, obj);
    };
    Point.prototype.precompute = function precompute() {};
    Point.prototype._encode = function _encode() {
      return this.getX().toArray("be", this.curve.p.byteLength());
    };
    Point.fromJSON = function fromJSON(curve, obj) {
      return new Point(curve, obj[0], obj[1] || curve.one);
    };
    Point.prototype.inspect = function inspect() {
      if (this.isInfinity()) return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Point.prototype.isInfinity = function isInfinity() {
      return 0 === this.z.cmpn(0);
    };
    Point.prototype.dbl = function dbl() {
      var a = this.x.redAdd(this.z);
      var aa = a.redSqr();
      var b = this.x.redSub(this.z);
      var bb = b.redSqr();
      var c = aa.redSub(bb);
      var nx = aa.redMul(bb);
      var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
      return this.curve.point(nx, nz);
    };
    Point.prototype.add = function add() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point.prototype.diffAdd = function diffAdd(p, diff) {
      var a = this.x.redAdd(this.z);
      var b = this.x.redSub(this.z);
      var c = p.x.redAdd(p.z);
      var d = p.x.redSub(p.z);
      var da = d.redMul(a);
      var cb = c.redMul(b);
      var nx = diff.z.redMul(da.redAdd(cb).redSqr());
      var nz = diff.x.redMul(da.redISub(cb).redSqr());
      return this.curve.point(nx, nz);
    };
    Point.prototype.mul = function mul(k) {
      var t = k.clone();
      var a = this;
      var b = this.curve.point(null, null);
      var c = this;
      for (var bits = []; 0 !== t.cmpn(0); t.iushrn(1)) bits.push(t.andln(1));
      for (var i = bits.length - 1; i >= 0; i--) if (0 === bits[i]) {
        a = a.diffAdd(b, c);
        b = b.dbl();
      } else {
        b = a.diffAdd(b, c);
        a = a.dbl();
      }
      return b;
    };
    Point.prototype.mulAdd = function mulAdd() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point.prototype.jumlAdd = function jumlAdd() {
      throw new Error("Not supported on Montgomery curve");
    };
    Point.prototype.eq = function eq(other) {
      return 0 === this.getX().cmp(other.getX());
    };
    Point.prototype.normalize = function normalize() {
      this.x = this.x.redMul(this.z.redInvm());
      this.z = this.curve.one;
      return this;
    };
    Point.prototype.getX = function getX() {
      this.normalize();
      return this.x.fromRed();
    };
  }, {
    "../utils": 81,
    "./base": 68,
    "bn.js": 16,
    inherits: 101
  } ],
  72: [ function(require, module, exports) {
    "use strict";
    var utils = require("../utils");
    var BN = require("bn.js");
    var inherits = require("inherits");
    var Base = require("./base");
    var assert = utils.assert;
    function ShortCurve(conf) {
      Base.call(this, "short", conf);
      this.a = new BN(conf.a, 16).toRed(this.red);
      this.b = new BN(conf.b, 16).toRed(this.red);
      this.tinv = this.two.redInvm();
      this.zeroA = 0 === this.a.fromRed().cmpn(0);
      this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3);
      this.endo = this._getEndomorphism(conf);
      this._endoWnafT1 = new Array(4);
      this._endoWnafT2 = new Array(4);
    }
    inherits(ShortCurve, Base);
    module.exports = ShortCurve;
    ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
      if (!this.zeroA || !this.g || !this.n || 1 !== this.p.modn(3)) return;
      var beta;
      var lambda;
      if (conf.beta) beta = new BN(conf.beta, 16).toRed(this.red); else {
        var betas = this._getEndoRoots(this.p);
        beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
        beta = beta.toRed(this.red);
      }
      if (conf.lambda) lambda = new BN(conf.lambda, 16); else {
        var lambdas = this._getEndoRoots(this.n);
        if (0 === this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta))) lambda = lambdas[0]; else {
          lambda = lambdas[1];
          assert(0 === this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)));
        }
      }
      var basis;
      basis = conf.basis ? conf.basis.map(function(vec) {
        return {
          a: new BN(vec.a, 16),
          b: new BN(vec.b, 16)
        };
      }) : this._getEndoBasis(lambda);
      return {
        beta: beta,
        lambda: lambda,
        basis: basis
      };
    };
    ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
      var red = num === this.p ? this.red : BN.mont(num);
      var tinv = new BN(2).toRed(red).redInvm();
      var ntinv = tinv.redNeg();
      var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);
      var l1 = ntinv.redAdd(s).fromRed();
      var l2 = ntinv.redSub(s).fromRed();
      return [ l1, l2 ];
    };
    ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
      var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
      var u = lambda;
      var v = this.n.clone();
      var x1 = new BN(1);
      var y1 = new BN(0);
      var x2 = new BN(0);
      var y2 = new BN(1);
      var a0;
      var b0;
      var a1;
      var b1;
      var a2;
      var b2;
      var prevR;
      var i = 0;
      var r;
      var x;
      while (0 !== u.cmpn(0)) {
        var q = v.div(u);
        r = v.sub(q.mul(u));
        x = x2.sub(q.mul(x1));
        var y = y2.sub(q.mul(y1));
        if (!a1 && r.cmp(aprxSqrt) < 0) {
          a0 = prevR.neg();
          b0 = x1;
          a1 = r.neg();
          b1 = x;
        } else if (a1 && 2 === ++i) break;
        prevR = r;
        v = u;
        u = r;
        x2 = x1;
        x1 = x;
        y2 = y1;
        y1 = y;
      }
      a2 = r.neg();
      b2 = x;
      var len1 = a1.sqr().add(b1.sqr());
      var len2 = a2.sqr().add(b2.sqr());
      if (len2.cmp(len1) >= 0) {
        a2 = a0;
        b2 = b0;
      }
      if (a1.negative) {
        a1 = a1.neg();
        b1 = b1.neg();
      }
      if (a2.negative) {
        a2 = a2.neg();
        b2 = b2.neg();
      }
      return [ {
        a: a1,
        b: b1
      }, {
        a: a2,
        b: b2
      } ];
    };
    ShortCurve.prototype._endoSplit = function _endoSplit(k) {
      var basis = this.endo.basis;
      var v1 = basis[0];
      var v2 = basis[1];
      var c1 = v2.b.mul(k).divRound(this.n);
      var c2 = v1.b.neg().mul(k).divRound(this.n);
      var p1 = c1.mul(v1.a);
      var p2 = c2.mul(v2.a);
      var q1 = c1.mul(v1.b);
      var q2 = c2.mul(v2.b);
      var k1 = k.sub(p1).sub(p2);
      var k2 = q1.add(q2).neg();
      return {
        k1: k1,
        k2: k2
      };
    };
    ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
      x = new BN(x, 16);
      x.red || (x = x.toRed(this.red));
      var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
      var y = y2.redSqrt();
      if (0 !== y.redSqr().redSub(y2).cmp(this.zero)) throw new Error("invalid point");
      var isOdd = y.fromRed().isOdd();
      (odd && !isOdd || !odd && isOdd) && (y = y.redNeg());
      return this.point(x, y);
    };
    ShortCurve.prototype.validate = function validate(point) {
      if (point.inf) return true;
      var x = point.x;
      var y = point.y;
      var ax = this.a.redMul(x);
      var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
      return 0 === y.redSqr().redISub(rhs).cmpn(0);
    };
    ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();
        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }
        npoints[2 * i] = p;
        npoints[2 * i + 1] = beta;
        ncoeffs[2 * i] = split.k1;
        ncoeffs[2 * i + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, 2 * i, jacobianResult);
      for (var j = 0; j < 2 * i; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };
    function Point(curve, x, y, isRed) {
      Base.BasePoint.call(this, curve, "affine");
      if (null === x && null === y) {
        this.x = null;
        this.y = null;
        this.inf = true;
      } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        if (isRed) {
          this.x.forceRed(this.curve.red);
          this.y.forceRed(this.curve.red);
        }
        this.x.red || (this.x = this.x.toRed(this.curve.red));
        this.y.red || (this.y = this.y.toRed(this.curve.red));
        this.inf = false;
      }
    }
    inherits(Point, Base.BasePoint);
    ShortCurve.prototype.point = function point(x, y, isRed) {
      return new Point(this, x, y, isRed);
    };
    ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
      return Point.fromJSON(this, obj, red);
    };
    Point.prototype._getBeta = function _getBeta() {
      if (!this.curve.endo) return;
      var pre = this.precomputed;
      if (pre && pre.beta) return pre.beta;
      var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
      if (pre) {
        var curve = this.curve;
        var endoMul = function(p) {
          return curve.point(p.x.redMul(curve.endo.beta), p.y);
        };
        pre.beta = beta;
        beta.precomputed = {
          beta: null,
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(endoMul)
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(endoMul)
          }
        };
      }
      return beta;
    };
    Point.prototype.toJSON = function toJSON() {
      if (!this.precomputed) return [ this.x, this.y ];
      return [ this.x, this.y, this.precomputed && {
        doubles: this.precomputed.doubles && {
          step: this.precomputed.doubles.step,
          points: this.precomputed.doubles.points.slice(1)
        },
        naf: this.precomputed.naf && {
          wnd: this.precomputed.naf.wnd,
          points: this.precomputed.naf.points.slice(1)
        }
      } ];
    };
    Point.fromJSON = function fromJSON(curve, obj, red) {
      "string" === typeof obj && (obj = JSON.parse(obj));
      var res = curve.point(obj[0], obj[1], red);
      if (!obj[2]) return res;
      function obj2point(obj) {
        return curve.point(obj[0], obj[1], red);
      }
      var pre = obj[2];
      res.precomputed = {
        beta: null,
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: [ res ].concat(pre.doubles.points.map(obj2point))
        },
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: [ res ].concat(pre.naf.points.map(obj2point))
        }
      };
      return res;
    };
    Point.prototype.inspect = function inspect() {
      if (this.isInfinity()) return "<EC Point Infinity>";
      return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
    };
    Point.prototype.isInfinity = function isInfinity() {
      return this.inf;
    };
    Point.prototype.add = function add(p) {
      if (this.inf) return p;
      if (p.inf) return this;
      if (this.eq(p)) return this.dbl();
      if (this.neg().eq(p)) return this.curve.point(null, null);
      if (0 === this.x.cmp(p.x)) return this.curve.point(null, null);
      var c = this.y.redSub(p.y);
      0 !== c.cmpn(0) && (c = c.redMul(this.x.redSub(p.x).redInvm()));
      var nx = c.redSqr().redISub(this.x).redISub(p.x);
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };
    Point.prototype.dbl = function dbl() {
      if (this.inf) return this;
      var ys1 = this.y.redAdd(this.y);
      if (0 === ys1.cmpn(0)) return this.curve.point(null, null);
      var a = this.curve.a;
      var x2 = this.x.redSqr();
      var dyinv = ys1.redInvm();
      var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
      var nx = c.redSqr().redISub(this.x.redAdd(this.x));
      var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
      return this.curve.point(nx, ny);
    };
    Point.prototype.getX = function getX() {
      return this.x.fromRed();
    };
    Point.prototype.getY = function getY() {
      return this.y.fromRed();
    };
    Point.prototype.mul = function mul(k) {
      k = new BN(k, 16);
      return this.isInfinity() ? this : this._hasDoubles(k) ? this.curve._fixedNafMul(this, k) : this.curve.endo ? this.curve._endoWnafMulAdd([ this ], [ k ]) : this.curve._wnafMul(this, k);
    };
    Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
      var points = [ this, p2 ];
      var coeffs = [ k1, k2 ];
      return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs) : this.curve._wnafMulAdd(1, points, coeffs, 2);
    };
    Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
      var points = [ this, p2 ];
      var coeffs = [ k1, k2 ];
      return this.curve.endo ? this.curve._endoWnafMulAdd(points, coeffs, true) : this.curve._wnafMulAdd(1, points, coeffs, 2, true);
    };
    Point.prototype.eq = function eq(p) {
      return this === p || this.inf === p.inf && (this.inf || 0 === this.x.cmp(p.x) && 0 === this.y.cmp(p.y));
    };
    Point.prototype.neg = function neg(_precompute) {
      if (this.inf) return this;
      var res = this.curve.point(this.x, this.y.redNeg());
      if (_precompute && this.precomputed) {
        var pre = this.precomputed;
        var negate = function(p) {
          return p.neg();
        };
        res.precomputed = {
          naf: pre.naf && {
            wnd: pre.naf.wnd,
            points: pre.naf.points.map(negate)
          },
          doubles: pre.doubles && {
            step: pre.doubles.step,
            points: pre.doubles.points.map(negate)
          }
        };
      }
      return res;
    };
    Point.prototype.toJ = function toJ() {
      if (this.inf) return this.curve.jpoint(null, null, null);
      var res = this.curve.jpoint(this.x, this.y, this.curve.one);
      return res;
    };
    function JPoint(curve, x, y, z) {
      Base.BasePoint.call(this, curve, "jacobian");
      if (null === x && null === y && null === z) {
        this.x = this.curve.one;
        this.y = this.curve.one;
        this.z = new BN(0);
      } else {
        this.x = new BN(x, 16);
        this.y = new BN(y, 16);
        this.z = new BN(z, 16);
      }
      this.x.red || (this.x = this.x.toRed(this.curve.red));
      this.y.red || (this.y = this.y.toRed(this.curve.red));
      this.z.red || (this.z = this.z.toRed(this.curve.red));
      this.zOne = this.z === this.curve.one;
    }
    inherits(JPoint, Base.BasePoint);
    ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
      return new JPoint(this, x, y, z);
    };
    JPoint.prototype.toP = function toP() {
      if (this.isInfinity()) return this.curve.point(null, null);
      var zinv = this.z.redInvm();
      var zinv2 = zinv.redSqr();
      var ax = this.x.redMul(zinv2);
      var ay = this.y.redMul(zinv2).redMul(zinv);
      return this.curve.point(ax, ay);
    };
    JPoint.prototype.neg = function neg() {
      return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
    };
    JPoint.prototype.add = function add(p) {
      if (this.isInfinity()) return p;
      if (p.isInfinity()) return this;
      var pz2 = p.z.redSqr();
      var z2 = this.z.redSqr();
      var u1 = this.x.redMul(pz2);
      var u2 = p.x.redMul(z2);
      var s1 = this.y.redMul(pz2.redMul(p.z));
      var s2 = p.y.redMul(z2.redMul(this.z));
      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);
      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(p.z).redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.mixedAdd = function mixedAdd(p) {
      if (this.isInfinity()) return p.toJ();
      if (p.isInfinity()) return this;
      var z2 = this.z.redSqr();
      var u1 = this.x;
      var u2 = p.x.redMul(z2);
      var s1 = this.y;
      var s2 = p.y.redMul(z2).redMul(this.z);
      var h = u1.redSub(u2);
      var r = s1.redSub(s2);
      if (0 === h.cmpn(0)) return 0 !== r.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
      var h2 = h.redSqr();
      var h3 = h2.redMul(h);
      var v = u1.redMul(h2);
      var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
      var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
      var nz = this.z.redMul(h);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.dblp = function dblp(pow) {
      if (0 === pow) return this;
      if (this.isInfinity()) return this;
      if (!pow) return this.dbl();
      if (this.curve.zeroA || this.curve.threeA) {
        var r = this;
        for (var i = 0; i < pow; i++) r = r.dbl();
        return r;
      }
      var a = this.curve.a;
      var tinv = this.curve.tinv;
      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();
      var jyd = jy.redAdd(jy);
      for (var i = 0; i < pow; i++) {
        var jx2 = jx.redSqr();
        var jyd2 = jyd.redSqr();
        var jyd4 = jyd2.redSqr();
        var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
        var t1 = jx.redMul(jyd2);
        var nx = c.redSqr().redISub(t1.redAdd(t1));
        var t2 = t1.redISub(nx);
        var dny = c.redMul(t2);
        dny = dny.redIAdd(dny).redISub(jyd4);
        var nz = jyd.redMul(jz);
        i + 1 < pow && (jz4 = jz4.redMul(jyd4));
        jx = nx;
        jz = nz;
        jyd = dny;
      }
      return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
    };
    JPoint.prototype.dbl = function dbl() {
      if (this.isInfinity()) return this;
      return this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
    };
    JPoint.prototype._zeroDbl = function _zeroDbl() {
      var nx;
      var ny;
      var nz;
      if (this.zOne) {
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var yyyy = yy.redSqr();
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx);
        var t = m.redSqr().redISub(s).redISub(s);
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        nx = t;
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        nz = this.y.redAdd(this.y);
      } else {
        var a = this.x.redSqr();
        var b = this.y.redSqr();
        var c = b.redSqr();
        var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
        d = d.redIAdd(d);
        var e = a.redAdd(a).redIAdd(a);
        var f = e.redSqr();
        var c8 = c.redIAdd(c);
        c8 = c8.redIAdd(c8);
        c8 = c8.redIAdd(c8);
        nx = f.redISub(d).redISub(d);
        ny = e.redMul(d.redISub(nx)).redISub(c8);
        nz = this.y.redMul(this.z);
        nz = nz.redIAdd(nz);
      }
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype._threeDbl = function _threeDbl() {
      var nx;
      var ny;
      var nz;
      if (this.zOne) {
        var xx = this.x.redSqr();
        var yy = this.y.redSqr();
        var yyyy = yy.redSqr();
        var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
        s = s.redIAdd(s);
        var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
        var t = m.redSqr().redISub(s).redISub(s);
        nx = t;
        var yyyy8 = yyyy.redIAdd(yyyy);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        yyyy8 = yyyy8.redIAdd(yyyy8);
        ny = m.redMul(s.redISub(t)).redISub(yyyy8);
        nz = this.y.redAdd(this.y);
      } else {
        var delta = this.z.redSqr();
        var gamma = this.y.redSqr();
        var beta = this.x.redMul(gamma);
        var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
        alpha = alpha.redAdd(alpha).redIAdd(alpha);
        var beta4 = beta.redIAdd(beta);
        beta4 = beta4.redIAdd(beta4);
        var beta8 = beta4.redAdd(beta4);
        nx = alpha.redSqr().redISub(beta8);
        nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
        var ggamma8 = gamma.redSqr();
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ggamma8 = ggamma8.redIAdd(ggamma8);
        ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
      }
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype._dbl = function _dbl() {
      var a = this.curve.a;
      var jx = this.x;
      var jy = this.y;
      var jz = this.z;
      var jz4 = jz.redSqr().redSqr();
      var jx2 = jx.redSqr();
      var jy2 = jy.redSqr();
      var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
      var jxd4 = jx.redAdd(jx);
      jxd4 = jxd4.redIAdd(jxd4);
      var t1 = jxd4.redMul(jy2);
      var nx = c.redSqr().redISub(t1.redAdd(t1));
      var t2 = t1.redISub(nx);
      var jyd8 = jy2.redSqr();
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      jyd8 = jyd8.redIAdd(jyd8);
      var ny = c.redMul(t2).redISub(jyd8);
      var nz = jy.redAdd(jy).redMul(jz);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.trpl = function trpl() {
      if (!this.curve.zeroA) return this.dbl().add(this);
      var xx = this.x.redSqr();
      var yy = this.y.redSqr();
      var zz = this.z.redSqr();
      var yyyy = yy.redSqr();
      var m = xx.redAdd(xx).redIAdd(xx);
      var mm = m.redSqr();
      var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
      e = e.redIAdd(e);
      e = e.redAdd(e).redIAdd(e);
      e = e.redISub(mm);
      var ee = e.redSqr();
      var t = yyyy.redIAdd(yyyy);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      t = t.redIAdd(t);
      var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
      var yyu4 = yy.redMul(u);
      yyu4 = yyu4.redIAdd(yyu4);
      yyu4 = yyu4.redIAdd(yyu4);
      var nx = this.x.redMul(ee).redISub(yyu4);
      nx = nx.redIAdd(nx);
      nx = nx.redIAdd(nx);
      var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      ny = ny.redIAdd(ny);
      var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
      return this.curve.jpoint(nx, ny, nz);
    };
    JPoint.prototype.mul = function mul(k, kbase) {
      k = new BN(k, kbase);
      return this.curve._wnafMul(this, k);
    };
    JPoint.prototype.eq = function eq(p) {
      if ("affine" === p.type) return this.eq(p.toJ());
      if (this === p) return true;
      var z2 = this.z.redSqr();
      var pz2 = p.z.redSqr();
      if (0 !== this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0)) return false;
      var z3 = z2.redMul(this.z);
      var pz3 = pz2.redMul(p.z);
      return 0 === this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0);
    };
    JPoint.prototype.eqXToP = function eqXToP(x) {
      var zs = this.z.redSqr();
      var rx = x.toRed(this.curve.red).redMul(zs);
      if (0 === this.x.cmp(rx)) return true;
      var xc = x.clone();
      var t = this.curve.redN.redMul(zs);
      for (;;) {
        xc.iadd(this.curve.n);
        if (xc.cmp(this.curve.p) >= 0) return false;
        rx.redIAdd(t);
        if (0 === this.x.cmp(rx)) return true;
      }
    };
    JPoint.prototype.inspect = function inspect() {
      if (this.isInfinity()) return "<EC JPoint Infinity>";
      return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
    };
    JPoint.prototype.isInfinity = function isInfinity() {
      return 0 === this.z.cmpn(0);
    };
  }, {
    "../utils": 81,
    "./base": 68,
    "bn.js": 16,
    inherits: 101
  } ],
  73: [ function(require, module, exports) {
    "use strict";
    var curves = exports;
    var hash = require("hash.js");
    var curve = require("./curve");
    var utils = require("./utils");
    var assert = utils.assert;
    function PresetCurve(options) {
      "short" === options.type ? this.curve = new curve.short(options) : "edwards" === options.type ? this.curve = new curve.edwards(options) : this.curve = new curve.mont(options);
      this.g = this.curve.g;
      this.n = this.curve.n;
      this.hash = options.hash;
      assert(this.g.validate(), "Invalid curve");
      assert(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    curves.PresetCurve = PresetCurve;
    function defineCurve(name, options) {
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        get: function() {
          var curve = new PresetCurve(options);
          Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            value: curve
          });
          return curve;
        }
      });
    }
    defineCurve("p192", {
      type: "short",
      prime: "p192",
      p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
      b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
      n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
      hash: hash.sha256,
      gRed: false,
      g: [ "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811" ]
    });
    defineCurve("p224", {
      type: "short",
      prime: "p224",
      p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
      b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
      n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
      hash: hash.sha256,
      gRed: false,
      g: [ "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34" ]
    });
    defineCurve("p256", {
      type: "short",
      prime: null,
      p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
      a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
      b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
      n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
      hash: hash.sha256,
      gRed: false,
      g: [ "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5" ]
    });
    defineCurve("p384", {
      type: "short",
      prime: null,
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
      a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
      b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
      n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
      hash: hash.sha384,
      gRed: false,
      g: [ "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f" ]
    });
    defineCurve("p521", {
      type: "short",
      prime: null,
      p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
      a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
      b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
      n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
      hash: hash.sha512,
      gRed: false,
      g: [ "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650" ]
    });
    defineCurve("curve25519", {
      type: "mont",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "76d06",
      b: "1",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: hash.sha256,
      gRed: false,
      g: [ "9" ]
    });
    defineCurve("ed25519", {
      type: "edwards",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "-1",
      c: "1",
      d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: hash.sha256,
      gRed: false,
      g: [ "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658" ]
    });
    var pre;
    try {
      pre = require("./precomputed/secp256k1");
    } catch (e) {
      pre = void 0;
    }
    defineCurve("secp256k1", {
      type: "short",
      prime: "k256",
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
      a: "0",
      b: "7",
      n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
      h: "1",
      hash: hash.sha256,
      beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
      lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
      basis: [ {
        a: "3086d221a7d46bcde86c90e49284eb15",
        b: "-e4437ed6010e88286f547fa90abfe4c3"
      }, {
        a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
        b: "3086d221a7d46bcde86c90e49284eb15"
      } ],
      gRed: false,
      g: [ "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", pre ]
    });
  }, {
    "./curve": 70,
    "./precomputed/secp256k1": 80,
    "./utils": 81,
    "hash.js": 86
  } ],
  74: [ function(require, module, exports) {
    "use strict";
    var BN = require("bn.js");
    var HmacDRBG = require("hmac-drbg");
    var utils = require("../utils");
    var curves = require("../curves");
    var rand = require("brorand");
    var assert = utils.assert;
    var KeyPair = require("./key");
    var Signature = require("./signature");
    function EC(options) {
      if (!(this instanceof EC)) return new EC(options);
      if ("string" === typeof options) {
        assert(curves.hasOwnProperty(options), "Unknown curve " + options);
        options = curves[options];
      }
      options instanceof curves.PresetCurve && (options = {
        curve: options
      });
      this.curve = options.curve.curve;
      this.n = this.curve.n;
      this.nh = this.n.ushrn(1);
      this.g = this.curve.g;
      this.g = options.curve.g;
      this.g.precompute(options.curve.n.bitLength() + 1);
      this.hash = options.hash || options.curve.hash;
    }
    module.exports = EC;
    EC.prototype.keyPair = function keyPair(options) {
      return new KeyPair(this, options);
    };
    EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
      return KeyPair.fromPrivate(this, priv, enc);
    };
    EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
      return KeyPair.fromPublic(this, pub, enc);
    };
    EC.prototype.genKeyPair = function genKeyPair(options) {
      options || (options = {});
      var drbg = new HmacDRBG({
        hash: this.hash,
        pers: options.pers,
        persEnc: options.persEnc || "utf8",
        entropy: options.entropy || rand(this.hash.hmacStrength),
        entropyEnc: options.entropy && options.entropyEnc || "utf8",
        nonce: this.n.toArray()
      });
      var bytes = this.n.byteLength();
      var ns2 = this.n.sub(new BN(2));
      do {
        var priv = new BN(drbg.generate(bytes));
        if (priv.cmp(ns2) > 0) continue;
        priv.iaddn(1);
        return this.keyFromPrivate(priv);
      } while (true);
    };
    EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
      var delta = 8 * msg.byteLength() - this.n.bitLength();
      delta > 0 && (msg = msg.ushrn(delta));
      return !truncOnly && msg.cmp(this.n) >= 0 ? msg.sub(this.n) : msg;
    };
    EC.prototype.sign = function sign(msg, key, enc, options) {
      if ("object" === typeof enc) {
        options = enc;
        enc = null;
      }
      options || (options = {});
      key = this.keyFromPrivate(key, enc);
      msg = this._truncateToN(new BN(msg, 16));
      var bytes = this.n.byteLength();
      var bkey = key.getPrivate().toArray("be", bytes);
      var nonce = msg.toArray("be", bytes);
      var drbg = new HmacDRBG({
        hash: this.hash,
        entropy: bkey,
        nonce: nonce,
        pers: options.pers,
        persEnc: options.persEnc || "utf8"
      });
      var ns1 = this.n.sub(new BN(1));
      for (var iter = 0; true; iter++) {
        var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));
        k = this._truncateToN(k, true);
        if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;
        var kp = this.g.mul(k);
        if (kp.isInfinity()) continue;
        var kpX = kp.getX();
        var r = kpX.umod(this.n);
        if (0 === r.cmpn(0)) continue;
        var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
        s = s.umod(this.n);
        if (0 === s.cmpn(0)) continue;
        var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (0 !== kpX.cmp(r) ? 2 : 0);
        if (options.canonical && s.cmp(this.nh) > 0) {
          s = this.n.sub(s);
          recoveryParam ^= 1;
        }
        return new Signature({
          r: r,
          s: s,
          recoveryParam: recoveryParam
        });
      }
    };
    EC.prototype.verify = function verify(msg, signature, key, enc) {
      msg = this._truncateToN(new BN(msg, 16));
      key = this.keyFromPublic(key, enc);
      signature = new Signature(signature, "hex");
      var r = signature.r;
      var s = signature.s;
      if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;
      if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;
      var sinv = s.invm(this.n);
      var u1 = sinv.mul(msg).umod(this.n);
      var u2 = sinv.mul(r).umod(this.n);
      if (!this.curve._maxwellTrick) {
        var p = this.g.mulAdd(u1, key.getPublic(), u2);
        if (p.isInfinity()) return false;
        return 0 === p.getX().umod(this.n).cmp(r);
      }
      var p = this.g.jmulAdd(u1, key.getPublic(), u2);
      if (p.isInfinity()) return false;
      return p.eqXToP(r);
    };
    EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
      assert((3 & j) === j, "The recovery param is more than two bits");
      signature = new Signature(signature, enc);
      var n = this.n;
      var e = new BN(msg);
      var r = signature.r;
      var s = signature.s;
      var isYOdd = 1 & j;
      var isSecondKey = j >> 1;
      if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error("Unable to find sencond key candinate");
      r = isSecondKey ? this.curve.pointFromX(r.add(this.curve.n), isYOdd) : this.curve.pointFromX(r, isYOdd);
      var rInv = signature.r.invm(n);
      var s1 = n.sub(e).mul(rInv).umod(n);
      var s2 = s.mul(rInv).umod(n);
      return this.g.mulAdd(s1, r, s2);
    };
    EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
      signature = new Signature(signature, enc);
      if (null !== signature.recoveryParam) return signature.recoveryParam;
      for (var i = 0; i < 4; i++) {
        var Qprime;
        try {
          Qprime = this.recoverPubKey(e, signature, i);
        } catch (e) {
          continue;
        }
        if (Qprime.eq(Q)) return i;
      }
      throw new Error("Unable to find valid recovery factor");
    };
  }, {
    "../curves": 73,
    "../utils": 81,
    "./key": 75,
    "./signature": 76,
    "bn.js": 16,
    brorand: 17,
    "hmac-drbg": 98
  } ],
  75: [ function(require, module, exports) {
    "use strict";
    var BN = require("bn.js");
    var utils = require("../utils");
    var assert = utils.assert;
    function KeyPair(ec, options) {
      this.ec = ec;
      this.priv = null;
      this.pub = null;
      options.priv && this._importPrivate(options.priv, options.privEnc);
      options.pub && this._importPublic(options.pub, options.pubEnc);
    }
    module.exports = KeyPair;
    KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
      if (pub instanceof KeyPair) return pub;
      return new KeyPair(ec, {
        pub: pub,
        pubEnc: enc
      });
    };
    KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
      if (priv instanceof KeyPair) return priv;
      return new KeyPair(ec, {
        priv: priv,
        privEnc: enc
      });
    };
    KeyPair.prototype.validate = function validate() {
      var pub = this.getPublic();
      if (pub.isInfinity()) return {
        result: false,
        reason: "Invalid public key"
      };
      if (!pub.validate()) return {
        result: false,
        reason: "Public key is not a point"
      };
      if (!pub.mul(this.ec.curve.n).isInfinity()) return {
        result: false,
        reason: "Public key * N != O"
      };
      return {
        result: true,
        reason: null
      };
    };
    KeyPair.prototype.getPublic = function getPublic(compact, enc) {
      if ("string" === typeof compact) {
        enc = compact;
        compact = null;
      }
      this.pub || (this.pub = this.ec.g.mul(this.priv));
      if (!enc) return this.pub;
      return this.pub.encode(enc, compact);
    };
    KeyPair.prototype.getPrivate = function getPrivate(enc) {
      return "hex" === enc ? this.priv.toString(16, 2) : this.priv;
    };
    KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
      this.priv = new BN(key, enc || 16);
      this.priv = this.priv.umod(this.ec.curve.n);
    };
    KeyPair.prototype._importPublic = function _importPublic(key, enc) {
      if (key.x || key.y) {
        "mont" === this.ec.curve.type ? assert(key.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || assert(key.x && key.y, "Need both x and y coordinate");
        this.pub = this.ec.curve.point(key.x, key.y);
        return;
      }
      this.pub = this.ec.curve.decodePoint(key, enc);
    };
    KeyPair.prototype.derive = function derive(pub) {
      return pub.mul(this.priv).getX();
    };
    KeyPair.prototype.sign = function sign(msg, enc, options) {
      return this.ec.sign(msg, this, enc, options);
    };
    KeyPair.prototype.verify = function verify(msg, signature) {
      return this.ec.verify(msg, signature, this);
    };
    KeyPair.prototype.inspect = function inspect() {
      return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
    };
  }, {
    "../utils": 81,
    "bn.js": 16
  } ],
  76: [ function(require, module, exports) {
    "use strict";
    var BN = require("bn.js");
    var utils = require("../utils");
    var assert = utils.assert;
    function Signature(options, enc) {
      if (options instanceof Signature) return options;
      if (this._importDER(options, enc)) return;
      assert(options.r && options.s, "Signature without r or s");
      this.r = new BN(options.r, 16);
      this.s = new BN(options.s, 16);
      void 0 === options.recoveryParam ? this.recoveryParam = null : this.recoveryParam = options.recoveryParam;
    }
    module.exports = Signature;
    function Position() {
      this.place = 0;
    }
    function getLength(buf, p) {
      var initial = buf[p.place++];
      if (!(128 & initial)) return initial;
      var octetLen = 15 & initial;
      var val = 0;
      for (var i = 0, off = p.place; i < octetLen; i++, off++) {
        val <<= 8;
        val |= buf[off];
      }
      p.place = off;
      return val;
    }
    function rmPadding(buf) {
      var i = 0;
      var len = buf.length - 1;
      while (!buf[i] && !(128 & buf[i + 1]) && i < len) i++;
      if (0 === i) return buf;
      return buf.slice(i);
    }
    Signature.prototype._importDER = function _importDER(data, enc) {
      data = utils.toArray(data, enc);
      var p = new Position();
      if (48 !== data[p.place++]) return false;
      var len = getLength(data, p);
      if (len + p.place !== data.length) return false;
      if (2 !== data[p.place++]) return false;
      var rlen = getLength(data, p);
      var r = data.slice(p.place, rlen + p.place);
      p.place += rlen;
      if (2 !== data[p.place++]) return false;
      var slen = getLength(data, p);
      if (data.length !== slen + p.place) return false;
      var s = data.slice(p.place, slen + p.place);
      0 === r[0] && 128 & r[1] && (r = r.slice(1));
      0 === s[0] && 128 & s[1] && (s = s.slice(1));
      this.r = new BN(r);
      this.s = new BN(s);
      this.recoveryParam = null;
      return true;
    };
    function constructLength(arr, len) {
      if (len < 128) {
        arr.push(len);
        return;
      }
      var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
      arr.push(128 | octets);
      while (--octets) arr.push(len >>> (octets << 3) & 255);
      arr.push(len);
    }
    Signature.prototype.toDER = function toDER(enc) {
      var r = this.r.toArray();
      var s = this.s.toArray();
      128 & r[0] && (r = [ 0 ].concat(r));
      128 & s[0] && (s = [ 0 ].concat(s));
      r = rmPadding(r);
      s = rmPadding(s);
      while (!s[0] && !(128 & s[1])) s = s.slice(1);
      var arr = [ 2 ];
      constructLength(arr, r.length);
      arr = arr.concat(r);
      arr.push(2);
      constructLength(arr, s.length);
      var backHalf = arr.concat(s);
      var res = [ 48 ];
      constructLength(res, backHalf.length);
      res = res.concat(backHalf);
      return utils.encode(res, enc);
    };
  }, {
    "../utils": 81,
    "bn.js": 16
  } ],
  77: [ function(require, module, exports) {
    "use strict";
    var hash = require("hash.js");
    var curves = require("../curves");
    var utils = require("../utils");
    var assert = utils.assert;
    var parseBytes = utils.parseBytes;
    var KeyPair = require("./key");
    var Signature = require("./signature");
    function EDDSA(curve) {
      assert("ed25519" === curve, "only tested with ed25519 so far");
      if (!(this instanceof EDDSA)) return new EDDSA(curve);
      var curve = curves[curve].curve;
      this.curve = curve;
      this.g = curve.g;
      this.g.precompute(curve.n.bitLength() + 1);
      this.pointClass = curve.point().constructor;
      this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
      this.hash = hash.sha512;
    }
    module.exports = EDDSA;
    EDDSA.prototype.sign = function sign(message, secret) {
      message = parseBytes(message);
      var key = this.keyFromSecret(secret);
      var r = this.hashInt(key.messagePrefix(), message);
      var R = this.g.mul(r);
      var Rencoded = this.encodePoint(R);
      var s_ = this.hashInt(Rencoded, key.pubBytes(), message).mul(key.priv());
      var S = r.add(s_).umod(this.curve.n);
      return this.makeSignature({
        R: R,
        S: S,
        Rencoded: Rencoded
      });
    };
    EDDSA.prototype.verify = function verify(message, sig, pub) {
      message = parseBytes(message);
      sig = this.makeSignature(sig);
      var key = this.keyFromPublic(pub);
      var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
      var SG = this.g.mul(sig.S());
      var RplusAh = sig.R().add(key.pub().mul(h));
      return RplusAh.eq(SG);
    };
    EDDSA.prototype.hashInt = function hashInt() {
      var hash = this.hash();
      for (var i = 0; i < arguments.length; i++) hash.update(arguments[i]);
      return utils.intFromLE(hash.digest()).umod(this.curve.n);
    };
    EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
      return KeyPair.fromPublic(this, pub);
    };
    EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
      return KeyPair.fromSecret(this, secret);
    };
    EDDSA.prototype.makeSignature = function makeSignature(sig) {
      if (sig instanceof Signature) return sig;
      return new Signature(this, sig);
    };
    EDDSA.prototype.encodePoint = function encodePoint(point) {
      var enc = point.getY().toArray("le", this.encodingLength);
      enc[this.encodingLength - 1] |= point.getX().isOdd() ? 128 : 0;
      return enc;
    };
    EDDSA.prototype.decodePoint = function decodePoint(bytes) {
      bytes = utils.parseBytes(bytes);
      var lastIx = bytes.length - 1;
      var normed = bytes.slice(0, lastIx).concat(-129 & bytes[lastIx]);
      var xIsOdd = 0 !== (128 & bytes[lastIx]);
      var y = utils.intFromLE(normed);
      return this.curve.pointFromY(y, xIsOdd);
    };
    EDDSA.prototype.encodeInt = function encodeInt(num) {
      return num.toArray("le", this.encodingLength);
    };
    EDDSA.prototype.decodeInt = function decodeInt(bytes) {
      return utils.intFromLE(bytes);
    };
    EDDSA.prototype.isPoint = function isPoint(val) {
      return val instanceof this.pointClass;
    };
  }, {
    "../curves": 73,
    "../utils": 81,
    "./key": 78,
    "./signature": 79,
    "hash.js": 86
  } ],
  78: [ function(require, module, exports) {
    "use strict";
    var utils = require("../utils");
    var assert = utils.assert;
    var parseBytes = utils.parseBytes;
    var cachedProperty = utils.cachedProperty;
    function KeyPair(eddsa, params) {
      this.eddsa = eddsa;
      this._secret = parseBytes(params.secret);
      eddsa.isPoint(params.pub) ? this._pub = params.pub : this._pubBytes = parseBytes(params.pub);
    }
    KeyPair.fromPublic = function fromPublic(eddsa, pub) {
      if (pub instanceof KeyPair) return pub;
      return new KeyPair(eddsa, {
        pub: pub
      });
    };
    KeyPair.fromSecret = function fromSecret(eddsa, secret) {
      if (secret instanceof KeyPair) return secret;
      return new KeyPair(eddsa, {
        secret: secret
      });
    };
    KeyPair.prototype.secret = function secret() {
      return this._secret;
    };
    cachedProperty(KeyPair, "pubBytes", function pubBytes() {
      return this.eddsa.encodePoint(this.pub());
    });
    cachedProperty(KeyPair, "pub", function pub() {
      if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);
      return this.eddsa.g.mul(this.priv());
    });
    cachedProperty(KeyPair, "privBytes", function privBytes() {
      var eddsa = this.eddsa;
      var hash = this.hash();
      var lastIx = eddsa.encodingLength - 1;
      var a = hash.slice(0, eddsa.encodingLength);
      a[0] &= 248;
      a[lastIx] &= 127;
      a[lastIx] |= 64;
      return a;
    });
    cachedProperty(KeyPair, "priv", function priv() {
      return this.eddsa.decodeInt(this.privBytes());
    });
    cachedProperty(KeyPair, "hash", function hash() {
      return this.eddsa.hash().update(this.secret()).digest();
    });
    cachedProperty(KeyPair, "messagePrefix", function messagePrefix() {
      return this.hash().slice(this.eddsa.encodingLength);
    });
    KeyPair.prototype.sign = function sign(message) {
      assert(this._secret, "KeyPair can only verify");
      return this.eddsa.sign(message, this);
    };
    KeyPair.prototype.verify = function verify(message, sig) {
      return this.eddsa.verify(message, sig, this);
    };
    KeyPair.prototype.getSecret = function getSecret(enc) {
      assert(this._secret, "KeyPair is public only");
      return utils.encode(this.secret(), enc);
    };
    KeyPair.prototype.getPublic = function getPublic(enc) {
      return utils.encode(this.pubBytes(), enc);
    };
    module.exports = KeyPair;
  }, {
    "../utils": 81
  } ],
  79: [ function(require, module, exports) {
    "use strict";
    var BN = require("bn.js");
    var utils = require("../utils");
    var assert = utils.assert;
    var cachedProperty = utils.cachedProperty;
    var parseBytes = utils.parseBytes;
    function Signature(eddsa, sig) {
      this.eddsa = eddsa;
      "object" !== typeof sig && (sig = parseBytes(sig));
      Array.isArray(sig) && (sig = {
        R: sig.slice(0, eddsa.encodingLength),
        S: sig.slice(eddsa.encodingLength)
      });
      assert(sig.R && sig.S, "Signature without R or S");
      eddsa.isPoint(sig.R) && (this._R = sig.R);
      sig.S instanceof BN && (this._S = sig.S);
      this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
      this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
    }
    cachedProperty(Signature, "S", function S() {
      return this.eddsa.decodeInt(this.Sencoded());
    });
    cachedProperty(Signature, "R", function R() {
      return this.eddsa.decodePoint(this.Rencoded());
    });
    cachedProperty(Signature, "Rencoded", function Rencoded() {
      return this.eddsa.encodePoint(this.R());
    });
    cachedProperty(Signature, "Sencoded", function Sencoded() {
      return this.eddsa.encodeInt(this.S());
    });
    Signature.prototype.toBytes = function toBytes() {
      return this.Rencoded().concat(this.Sencoded());
    };
    Signature.prototype.toHex = function toHex() {
      return utils.encode(this.toBytes(), "hex").toUpperCase();
    };
    module.exports = Signature;
  }, {
    "../utils": 81,
    "bn.js": 16
  } ],
  80: [ function(require, module, exports) {
    module.exports = {
      doubles: {
        step: 4,
        points: [ [ "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821" ], [ "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf" ], [ "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695" ], [ "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9" ], [ "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36" ], [ "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f" ], [ "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999" ], [ "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09" ], [ "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d" ], [ "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088" ], [ "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d" ], [ "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8" ], [ "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a" ], [ "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453" ], [ "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160" ], [ "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0" ], [ "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6" ], [ "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589" ], [ "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17" ], [ "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda" ], [ "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd" ], [ "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2" ], [ "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6" ], [ "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f" ], [ "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01" ], [ "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3" ], [ "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f" ], [ "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7" ], [ "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78" ], [ "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1" ], [ "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150" ], [ "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82" ], [ "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc" ], [ "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b" ], [ "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51" ], [ "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45" ], [ "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120" ], [ "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84" ], [ "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d" ], [ "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d" ], [ "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8" ], [ "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8" ], [ "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac" ], [ "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f" ], [ "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962" ], [ "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907" ], [ "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec" ], [ "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d" ], [ "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414" ], [ "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd" ], [ "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0" ], [ "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811" ], [ "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1" ], [ "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c" ], [ "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73" ], [ "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd" ], [ "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405" ], [ "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589" ], [ "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e" ], [ "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27" ], [ "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1" ], [ "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482" ], [ "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945" ], [ "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573" ], [ "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82" ] ]
      },
      naf: {
        wnd: 7,
        points: [ [ "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672" ], [ "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6" ], [ "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da" ], [ "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37" ], [ "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b" ], [ "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81" ], [ "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58" ], [ "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77" ], [ "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a" ], [ "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c" ], [ "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67" ], [ "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402" ], [ "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55" ], [ "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482" ], [ "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82" ], [ "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396" ], [ "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49" ], [ "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf" ], [ "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a" ], [ "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7" ], [ "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933" ], [ "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a" ], [ "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6" ], [ "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37" ], [ "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e" ], [ "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6" ], [ "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476" ], [ "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40" ], [ "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61" ], [ "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683" ], [ "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5" ], [ "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b" ], [ "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417" ], [ "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868" ], [ "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a" ], [ "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6" ], [ "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996" ], [ "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e" ], [ "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d" ], [ "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2" ], [ "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e" ], [ "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437" ], [ "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311" ], [ "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4" ], [ "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575" ], [ "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d" ], [ "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d" ], [ "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629" ], [ "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06" ], [ "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374" ], [ "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee" ], [ "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1" ], [ "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b" ], [ "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661" ], [ "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6" ], [ "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e" ], [ "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d" ], [ "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc" ], [ "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4" ], [ "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c" ], [ "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b" ], [ "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913" ], [ "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154" ], [ "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865" ], [ "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc" ], [ "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224" ], [ "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e" ], [ "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6" ], [ "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511" ], [ "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b" ], [ "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2" ], [ "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c" ], [ "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3" ], [ "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d" ], [ "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700" ], [ "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4" ], [ "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196" ], [ "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4" ], [ "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257" ], [ "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13" ], [ "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096" ], [ "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38" ], [ "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f" ], [ "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448" ], [ "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a" ], [ "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4" ], [ "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437" ], [ "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7" ], [ "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d" ], [ "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a" ], [ "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54" ], [ "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77" ], [ "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517" ], [ "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10" ], [ "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125" ], [ "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e" ], [ "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1" ], [ "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2" ], [ "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423" ], [ "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8" ], [ "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758" ], [ "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375" ], [ "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d" ], [ "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec" ], [ "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0" ], [ "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c" ], [ "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4" ], [ "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f" ], [ "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649" ], [ "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826" ], [ "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5" ], [ "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87" ], [ "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b" ], [ "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc" ], [ "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c" ], [ "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f" ], [ "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a" ], [ "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46" ], [ "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f" ], [ "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03" ], [ "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08" ], [ "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8" ], [ "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373" ], [ "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3" ], [ "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8" ], [ "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1" ], [ "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9" ] ]
      }
    };
  }, {} ],
  81: [ function(require, module, exports) {
    "use strict";
    var utils = exports;
    var BN = require("bn.js");
    var minAssert = require("minimalistic-assert");
    var minUtils = require("minimalistic-crypto-utils");
    utils.assert = minAssert;
    utils.toArray = minUtils.toArray;
    utils.zero2 = minUtils.zero2;
    utils.toHex = minUtils.toHex;
    utils.encode = minUtils.encode;
    function getNAF(num, w) {
      var naf = [];
      var ws = 1 << w + 1;
      var k = num.clone();
      while (k.cmpn(1) >= 0) {
        var z;
        if (k.isOdd()) {
          var mod = k.andln(ws - 1);
          z = mod > (ws >> 1) - 1 ? (ws >> 1) - mod : mod;
          k.isubn(z);
        } else z = 0;
        naf.push(z);
        var shift = 0 !== k.cmpn(0) && 0 === k.andln(ws - 1) ? w + 1 : 1;
        for (var i = 1; i < shift; i++) naf.push(0);
        k.iushrn(shift);
      }
      return naf;
    }
    utils.getNAF = getNAF;
    function getJSF(k1, k2) {
      var jsf = [ [], [] ];
      k1 = k1.clone();
      k2 = k2.clone();
      var d1 = 0;
      var d2 = 0;
      while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
        var m14 = k1.andln(3) + d1 & 3;
        var m24 = k2.andln(3) + d2 & 3;
        3 === m14 && (m14 = -1);
        3 === m24 && (m24 = -1);
        var u1;
        if (0 === (1 & m14)) u1 = 0; else {
          var m8 = k1.andln(7) + d1 & 7;
          u1 = 3 !== m8 && 5 !== m8 || 2 !== m24 ? m14 : -m14;
        }
        jsf[0].push(u1);
        var u2;
        if (0 === (1 & m24)) u2 = 0; else {
          var m8 = k2.andln(7) + d2 & 7;
          u2 = 3 !== m8 && 5 !== m8 || 2 !== m14 ? m24 : -m24;
        }
        jsf[1].push(u2);
        2 * d1 === u1 + 1 && (d1 = 1 - d1);
        2 * d2 === u2 + 1 && (d2 = 1 - d2);
        k1.iushrn(1);
        k2.iushrn(1);
      }
      return jsf;
    }
    utils.getJSF = getJSF;
    function cachedProperty(obj, name, computer) {
      var key = "_" + name;
      obj.prototype[name] = function cachedProperty() {
        return void 0 !== this[key] ? this[key] : this[key] = computer.call(this);
      };
    }
    utils.cachedProperty = cachedProperty;
    function parseBytes(bytes) {
      return "string" === typeof bytes ? utils.toArray(bytes, "hex") : bytes;
    }
    utils.parseBytes = parseBytes;
    function intFromLE(bytes) {
      return new BN(bytes, "hex", "le");
    }
    utils.intFromLE = intFromLE;
  }, {
    "bn.js": 16,
    "minimalistic-assert": 105,
    "minimalistic-crypto-utils": 106
  } ],
  82: [ function(require, module, exports) {
    module.exports = {
      _from: "elliptic@^6.0.0",
      _id: "elliptic@6.5.1",
      _inBundle: false,
      _integrity: "sha512-xvJINNLbTeWQjrl6X+7eQCrIy/YPv5XCpKW6kB5mKvtnGILoLDcySuwomfdzt0BMdLNVnuRNTuzKNHj0bva1Cg==",
      _location: "/elliptic",
      _phantomChildren: {},
      _requested: {
        type: "range",
        registry: true,
        raw: "elliptic@^6.0.0",
        name: "elliptic",
        escapedName: "elliptic",
        rawSpec: "^6.0.0",
        saveSpec: null,
        fetchSpec: "^6.0.0"
      },
      _requiredBy: [ "/browserify-sign", "/create-ecdh" ],
      _resolved: "https://registry.npmjs.org/elliptic/-/elliptic-6.5.1.tgz",
      _shasum: "c380f5f909bf1b9b4428d028cd18d3b0efd6b52b",
      _spec: "elliptic@^6.0.0",
      _where: "/Users/nantas/fireball-x/fireball_2.1-release/dist/CocosCreator.app/Contents/Resources/app/node_modules/browserify-sign",
      author: {
        name: "Fedor Indutny",
        email: "fedor@indutny.com"
      },
      bugs: {
        url: "https://github.com/indutny/elliptic/issues"
      },
      bundleDependencies: false,
      dependencies: {
        "bn.js": "^4.4.0",
        brorand: "^1.0.1",
        "hash.js": "^1.0.0",
        "hmac-drbg": "^1.0.0",
        inherits: "^2.0.1",
        "minimalistic-assert": "^1.0.0",
        "minimalistic-crypto-utils": "^1.0.0"
      },
      deprecated: false,
      description: "EC cryptography",
      devDependencies: {
        brfs: "^1.4.3",
        coveralls: "^3.0.4",
        grunt: "^1.0.4",
        "grunt-browserify": "^5.0.0",
        "grunt-cli": "^1.2.0",
        "grunt-contrib-connect": "^1.0.0",
        "grunt-contrib-copy": "^1.0.0",
        "grunt-contrib-uglify": "^1.0.1",
        "grunt-mocha-istanbul": "^3.0.1",
        "grunt-saucelabs": "^9.0.1",
        istanbul: "^0.4.2",
        jscs: "^3.0.7",
        jshint: "^2.6.0",
        mocha: "^6.1.4"
      },
      files: [ "lib" ],
      homepage: "https://github.com/indutny/elliptic",
      keywords: [ "EC", "Elliptic", "curve", "Cryptography" ],
      license: "MIT",
      main: "lib/elliptic.js",
      name: "elliptic",
      repository: {
        type: "git",
        url: "git+ssh://git@github.com/indutny/elliptic.git"
      },
      scripts: {
        jscs: "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
        jshint: "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
        lint: "npm run jscs && npm run jshint",
        test: "npm run lint && npm run unit",
        unit: "istanbul test _mocha --reporter=spec test/index.js",
        version: "grunt dist && git add dist/"
      },
      version: "6.5.1"
    };
  }, {} ],
  83: [ function(require, module, exports) {
    function EventEmitter() {
      this._events = this._events || {};
      this._maxListeners = this._maxListeners || void 0;
    }
    module.exports = EventEmitter;
    EventEmitter.EventEmitter = EventEmitter;
    EventEmitter.prototype._events = void 0;
    EventEmitter.prototype._maxListeners = void 0;
    EventEmitter.defaultMaxListeners = 10;
    EventEmitter.prototype.setMaxListeners = function(n) {
      if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError("n must be a positive number");
      this._maxListeners = n;
      return this;
    };
    EventEmitter.prototype.emit = function(type) {
      var er, handler, len, args, i, listeners;
      this._events || (this._events = {});
      if ("error" === type && (!this._events.error || isObject(this._events.error) && !this._events.error.length)) {
        er = arguments[1];
        if (er instanceof Error) throw er;
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ")");
        err.context = er;
        throw err;
      }
      handler = this._events[type];
      if (isUndefined(handler)) return false;
      if (isFunction(handler)) switch (arguments.length) {
       case 1:
        handler.call(this);
        break;

       case 2:
        handler.call(this, arguments[1]);
        break;

       case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;

       default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
      } else if (isObject(handler)) {
        args = Array.prototype.slice.call(arguments, 1);
        listeners = handler.slice();
        len = listeners.length;
        for (i = 0; i < len; i++) listeners[i].apply(this, args);
      }
      return true;
    };
    EventEmitter.prototype.addListener = function(type, listener) {
      var m;
      if (!isFunction(listener)) throw TypeError("listener must be a function");
      this._events || (this._events = {});
      this._events.newListener && this.emit("newListener", type, isFunction(listener.listener) ? listener.listener : listener);
      this._events[type] ? isObject(this._events[type]) ? this._events[type].push(listener) : this._events[type] = [ this._events[type], listener ] : this._events[type] = listener;
      if (isObject(this._events[type]) && !this._events[type].warned) {
        m = isUndefined(this._maxListeners) ? EventEmitter.defaultMaxListeners : this._maxListeners;
        if (m && m > 0 && this._events[type].length > m) {
          this._events[type].warned = true;
          console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[type].length);
          "function" === typeof console.trace && console.trace();
        }
      }
      return this;
    };
    EventEmitter.prototype.on = EventEmitter.prototype.addListener;
    EventEmitter.prototype.once = function(type, listener) {
      if (!isFunction(listener)) throw TypeError("listener must be a function");
      var fired = false;
      function g() {
        this.removeListener(type, g);
        if (!fired) {
          fired = true;
          listener.apply(this, arguments);
        }
      }
      g.listener = listener;
      this.on(type, g);
      return this;
    };
    EventEmitter.prototype.removeListener = function(type, listener) {
      var list, position, length, i;
      if (!isFunction(listener)) throw TypeError("listener must be a function");
      if (!this._events || !this._events[type]) return this;
      list = this._events[type];
      length = list.length;
      position = -1;
      if (list === listener || isFunction(list.listener) && list.listener === listener) {
        delete this._events[type];
        this._events.removeListener && this.emit("removeListener", type, listener);
      } else if (isObject(list)) {
        for (i = length; i-- > 0; ) if (list[i] === listener || list[i].listener && list[i].listener === listener) {
          position = i;
          break;
        }
        if (position < 0) return this;
        if (1 === list.length) {
          list.length = 0;
          delete this._events[type];
        } else list.splice(position, 1);
        this._events.removeListener && this.emit("removeListener", type, listener);
      }
      return this;
    };
    EventEmitter.prototype.removeAllListeners = function(type) {
      var key, listeners;
      if (!this._events) return this;
      if (!this._events.removeListener) {
        0 === arguments.length ? this._events = {} : this._events[type] && delete this._events[type];
        return this;
      }
      if (0 === arguments.length) {
        for (key in this._events) {
          if ("removeListener" === key) continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners("removeListener");
        this._events = {};
        return this;
      }
      listeners = this._events[type];
      if (isFunction(listeners)) this.removeListener(type, listeners); else if (listeners) while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);
      delete this._events[type];
      return this;
    };
    EventEmitter.prototype.listeners = function(type) {
      var ret;
      ret = this._events && this._events[type] ? isFunction(this._events[type]) ? [ this._events[type] ] : this._events[type].slice() : [];
      return ret;
    };
    EventEmitter.prototype.listenerCount = function(type) {
      if (this._events) {
        var evlistener = this._events[type];
        if (isFunction(evlistener)) return 1;
        if (evlistener) return evlistener.length;
      }
      return 0;
    };
    EventEmitter.listenerCount = function(emitter, type) {
      return emitter.listenerCount(type);
    };
    function isFunction(arg) {
      return "function" === typeof arg;
    }
    function isNumber(arg) {
      return "number" === typeof arg;
    }
    function isObject(arg) {
      return "object" === typeof arg && null !== arg;
    }
    function isUndefined(arg) {
      return void 0 === arg;
    }
  }, {} ],
  84: [ function(require, module, exports) {
    var Buffer = require("safe-buffer").Buffer;
    var MD5 = require("md5.js");
    function EVP_BytesToKey(password, salt, keyBits, ivLen) {
      Buffer.isBuffer(password) || (password = Buffer.from(password, "binary"));
      if (salt) {
        Buffer.isBuffer(salt) || (salt = Buffer.from(salt, "binary"));
        if (8 !== salt.length) throw new RangeError("salt should be Buffer with 8 byte length");
      }
      var keyLen = keyBits / 8;
      var key = Buffer.alloc(keyLen);
      var iv = Buffer.alloc(ivLen || 0);
      var tmp = Buffer.alloc(0);
      while (keyLen > 0 || ivLen > 0) {
        var hash = new MD5();
        hash.update(tmp);
        hash.update(password);
        salt && hash.update(salt);
        tmp = hash.digest();
        var used = 0;
        if (keyLen > 0) {
          var keyStart = key.length - keyLen;
          used = Math.min(keyLen, tmp.length);
          tmp.copy(key, keyStart, 0, used);
          keyLen -= used;
        }
        if (used < tmp.length && ivLen > 0) {
          var ivStart = iv.length - ivLen;
          var length = Math.min(ivLen, tmp.length - used);
          tmp.copy(iv, ivStart, used, used + length);
          ivLen -= length;
        }
      }
      tmp.fill(0);
      return {
        key: key,
        iv: iv
      };
    }
    module.exports = EVP_BytesToKey;
  }, {
    "md5.js": 103,
    "safe-buffer": 143
  } ],
  85: [ function(require, module, exports) {
    "use strict";
    var Buffer = require("safe-buffer").Buffer;
    var Transform = require("stream").Transform;
    var inherits = require("inherits");
    function throwIfNotStringOrBuffer(val, prefix) {
      if (!Buffer.isBuffer(val) && "string" !== typeof val) throw new TypeError(prefix + " must be a string or a buffer");
    }
    function HashBase(blockSize) {
      Transform.call(this);
      this._block = Buffer.allocUnsafe(blockSize);
      this._blockSize = blockSize;
      this._blockOffset = 0;
      this._length = [ 0, 0, 0, 0 ];
      this._finalized = false;
    }
    inherits(HashBase, Transform);
    HashBase.prototype._transform = function(chunk, encoding, callback) {
      var error = null;
      try {
        this.update(chunk, encoding);
      } catch (err) {
        error = err;
      }
      callback(error);
    };
    HashBase.prototype._flush = function(callback) {
      var error = null;
      try {
        this.push(this.digest());
      } catch (err) {
        error = err;
      }
      callback(error);
    };
    HashBase.prototype.update = function(data, encoding) {
      throwIfNotStringOrBuffer(data, "Data");
      if (this._finalized) throw new Error("Digest already called");
      Buffer.isBuffer(data) || (data = Buffer.from(data, encoding));
      var block = this._block;
      var offset = 0;
      while (this._blockOffset + data.length - offset >= this._blockSize) {
        for (var i = this._blockOffset; i < this._blockSize; ) block[i++] = data[offset++];
        this._update();
        this._blockOffset = 0;
      }
      while (offset < data.length) block[this._blockOffset++] = data[offset++];
      for (var j = 0, carry = 8 * data.length; carry > 0; ++j) {
        this._length[j] += carry;
        carry = this._length[j] / 4294967296 | 0;
        carry > 0 && (this._length[j] -= 4294967296 * carry);
      }
      return this;
    };
    HashBase.prototype._update = function() {
      throw new Error("_update is not implemented");
    };
    HashBase.prototype.digest = function(encoding) {
      if (this._finalized) throw new Error("Digest already called");
      this._finalized = true;
      var digest = this._digest();
      void 0 !== encoding && (digest = digest.toString(encoding));
      this._block.fill(0);
      this._blockOffset = 0;
      for (var i = 0; i < 4; ++i) this._length[i] = 0;
      return digest;
    };
    HashBase.prototype._digest = function() {
      throw new Error("_digest is not implemented");
    };
    module.exports = HashBase;
  }, {
    inherits: 101,
    "safe-buffer": 143,
    stream: 152
  } ],
  86: [ function(require, module, exports) {
    var hash = exports;
    hash.utils = require("./hash/utils");
    hash.common = require("./hash/common");
    hash.sha = require("./hash/sha");
    hash.ripemd = require("./hash/ripemd");
    hash.hmac = require("./hash/hmac");
    hash.sha1 = hash.sha.sha1;
    hash.sha256 = hash.sha.sha256;
    hash.sha224 = hash.sha.sha224;
    hash.sha384 = hash.sha.sha384;
    hash.sha512 = hash.sha.sha512;
    hash.ripemd160 = hash.ripemd.ripemd160;
  }, {
    "./hash/common": 87,
    "./hash/hmac": 88,
    "./hash/ripemd": 89,
    "./hash/sha": 90,
    "./hash/utils": 97
  } ],
  87: [ function(require, module, exports) {
    "use strict";
    var utils = require("./utils");
    var assert = require("minimalistic-assert");
    function BlockHash() {
      this.pending = null;
      this.pendingTotal = 0;
      this.blockSize = this.constructor.blockSize;
      this.outSize = this.constructor.outSize;
      this.hmacStrength = this.constructor.hmacStrength;
      this.padLength = this.constructor.padLength / 8;
      this.endian = "big";
      this._delta8 = this.blockSize / 8;
      this._delta32 = this.blockSize / 32;
    }
    exports.BlockHash = BlockHash;
    BlockHash.prototype.update = function update(msg, enc) {
      msg = utils.toArray(msg, enc);
      this.pending ? this.pending = this.pending.concat(msg) : this.pending = msg;
      this.pendingTotal += msg.length;
      if (this.pending.length >= this._delta8) {
        msg = this.pending;
        var r = msg.length % this._delta8;
        this.pending = msg.slice(msg.length - r, msg.length);
        0 === this.pending.length && (this.pending = null);
        msg = utils.join32(msg, 0, msg.length - r, this.endian);
        for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);
      }
      return this;
    };
    BlockHash.prototype.digest = function digest(enc) {
      this.update(this._pad());
      assert(null === this.pending);
      return this._digest(enc);
    };
    BlockHash.prototype._pad = function pad() {
      var len = this.pendingTotal;
      var bytes = this._delta8;
      var k = bytes - (len + this.padLength) % bytes;
      var res = new Array(k + this.padLength);
      res[0] = 128;
      for (var i = 1; i < k; i++) res[i] = 0;
      len <<= 3;
      if ("big" === this.endian) {
        for (var t = 8; t < this.padLength; t++) res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = len >>> 24 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 8 & 255;
        res[i++] = 255 & len;
      } else {
        res[i++] = 255 & len;
        res[i++] = len >>> 8 & 255;
        res[i++] = len >>> 16 & 255;
        res[i++] = len >>> 24 & 255;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        res[i++] = 0;
        for (t = 8; t < this.padLength; t++) res[i++] = 0;
      }
      return res;
    };
  }, {
    "./utils": 97,
    "minimalistic-assert": 105
  } ],
  88: [ function(require, module, exports) {
    "use strict";
    var utils = require("./utils");
    var assert = require("minimalistic-assert");
    function Hmac(hash, key, enc) {
      if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);
      this.Hash = hash;
      this.blockSize = hash.blockSize / 8;
      this.outSize = hash.outSize / 8;
      this.inner = null;
      this.outer = null;
      this._init(utils.toArray(key, enc));
    }
    module.exports = Hmac;
    Hmac.prototype._init = function init(key) {
      key.length > this.blockSize && (key = new this.Hash().update(key).digest());
      assert(key.length <= this.blockSize);
      for (var i = key.length; i < this.blockSize; i++) key.push(0);
      for (i = 0; i < key.length; i++) key[i] ^= 54;
      this.inner = new this.Hash().update(key);
      for (i = 0; i < key.length; i++) key[i] ^= 106;
      this.outer = new this.Hash().update(key);
    };
    Hmac.prototype.update = function update(msg, enc) {
      this.inner.update(msg, enc);
      return this;
    };
    Hmac.prototype.digest = function digest(enc) {
      this.outer.update(this.inner.digest());
      return this.outer.digest(enc);
    };
  }, {
    "./utils": 97,
    "minimalistic-assert": 105
  } ],
  89: [ function(require, module, exports) {
    "use strict";
    var utils = require("./utils");
    var common = require("./common");
    var rotl32 = utils.rotl32;
    var sum32 = utils.sum32;
    var sum32_3 = utils.sum32_3;
    var sum32_4 = utils.sum32_4;
    var BlockHash = common.BlockHash;
    function RIPEMD160() {
      if (!(this instanceof RIPEMD160)) return new RIPEMD160();
      BlockHash.call(this);
      this.h = [ 1732584193, 4023233417, 2562383102, 271733878, 3285377520 ];
      this.endian = "little";
    }
    utils.inherits(RIPEMD160, BlockHash);
    exports.ripemd160 = RIPEMD160;
    RIPEMD160.blockSize = 512;
    RIPEMD160.outSize = 160;
    RIPEMD160.hmacStrength = 192;
    RIPEMD160.padLength = 64;
    RIPEMD160.prototype._update = function update(msg, start) {
      var A = this.h[0];
      var B = this.h[1];
      var C = this.h[2];
      var D = this.h[3];
      var E = this.h[4];
      var Ah = A;
      var Bh = B;
      var Ch = C;
      var Dh = D;
      var Eh = E;
      for (var j = 0; j < 80; j++) {
        var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);
        A = E;
        E = D;
        D = rotl32(C, 10);
        C = B;
        B = T;
        T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);
        Ah = Eh;
        Eh = Dh;
        Dh = rotl32(Ch, 10);
        Ch = Bh;
        Bh = T;
      }
      T = sum32_3(this.h[1], C, Dh);
      this.h[1] = sum32_3(this.h[2], D, Eh);
      this.h[2] = sum32_3(this.h[3], E, Ah);
      this.h[3] = sum32_3(this.h[4], A, Bh);
      this.h[4] = sum32_3(this.h[0], B, Ch);
      this.h[0] = T;
    };
    RIPEMD160.prototype._digest = function digest(enc) {
      return "hex" === enc ? utils.toHex32(this.h, "little") : utils.split32(this.h, "little");
    };
    function f(j, x, y, z) {
      return j <= 15 ? x ^ y ^ z : j <= 31 ? x & y | ~x & z : j <= 47 ? (x | ~y) ^ z : j <= 63 ? x & z | y & ~z : x ^ (y | ~z);
    }
    function K(j) {
      return j <= 15 ? 0 : j <= 31 ? 1518500249 : j <= 47 ? 1859775393 : j <= 63 ? 2400959708 : 2840853838;
    }
    function Kh(j) {
      return j <= 15 ? 1352829926 : j <= 31 ? 1548603684 : j <= 47 ? 1836072691 : j <= 63 ? 2053994217 : 0;
    }
    var r = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13 ];
    var rh = [ 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11 ];
    var s = [ 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6 ];
    var sh = [ 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11 ];
  }, {
    "./common": 87,
    "./utils": 97
  } ],
  90: [ function(require, module, exports) {
    "use strict";
    exports.sha1 = require("./sha/1");
    exports.sha224 = require("./sha/224");
    exports.sha256 = require("./sha/256");
    exports.sha384 = require("./sha/384");
    exports.sha512 = require("./sha/512");
  }, {
    "./sha/1": 91,
    "./sha/224": 92,
    "./sha/256": 93,
    "./sha/384": 94,
    "./sha/512": 95
  } ],
  91: [ function(require, module, exports) {
    "use strict";
    var utils = require("../utils");
    var common = require("../common");
    var shaCommon = require("./common");
    var rotl32 = utils.rotl32;
    var sum32 = utils.sum32;
    var sum32_5 = utils.sum32_5;
    var ft_1 = shaCommon.ft_1;
    var BlockHash = common.BlockHash;
    var sha1_K = [ 1518500249, 1859775393, 2400959708, 3395469782 ];
    function SHA1() {
      if (!(this instanceof SHA1)) return new SHA1();
      BlockHash.call(this);
      this.h = [ 1732584193, 4023233417, 2562383102, 271733878, 3285377520 ];
      this.W = new Array(80);
    }
    utils.inherits(SHA1, BlockHash);
    module.exports = SHA1;
    SHA1.blockSize = 512;
    SHA1.outSize = 160;
    SHA1.hmacStrength = 80;
    SHA1.padLength = 64;
    SHA1.prototype._update = function _update(msg, start) {
      var W = this.W;
      for (var i = 0; i < 16; i++) W[i] = msg[start + i];
      for (;i < W.length; i++) W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];
      for (i = 0; i < W.length; i++) {
        var s = ~~(i / 20);
        var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
        e = d;
        d = c;
        c = rotl32(b, 30);
        b = a;
        a = t;
      }
      this.h[0] = sum32(this.h[0], a);
      this.h[1] = sum32(this.h[1], b);
      this.h[2] = sum32(this.h[2], c);
      this.h[3] = sum32(this.h[3], d);
      this.h[4] = sum32(this.h[4], e);
    };
    SHA1.prototype._digest = function digest(enc) {
      return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
    };
  }, {
    "../common": 87,
    "../utils": 97,
    "./common": 96
  } ],
  92: [ function(require, module, exports) {
    "use strict";
    var utils = require("../utils");
    var SHA256 = require("./256");
    function SHA224() {
      if (!(this instanceof SHA224)) return new SHA224();
      SHA256.call(this);
      this.h = [ 3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428 ];
    }
    utils.inherits(SHA224, SHA256);
    module.exports = SHA224;
    SHA224.blockSize = 512;
    SHA224.outSize = 224;
    SHA224.hmacStrength = 192;
    SHA224.padLength = 64;
    SHA224.prototype._digest = function digest(enc) {
      return "hex" === enc ? utils.toHex32(this.h.slice(0, 7), "big") : utils.split32(this.h.slice(0, 7), "big");
    };
  }, {
    "../utils": 97,
    "./256": 93
  } ],
  93: [ function(require, module, exports) {
    "use strict";
    var utils = require("../utils");
    var common = require("../common");
    var shaCommon = require("./common");
    var assert = require("minimalistic-assert");
    var sum32 = utils.sum32;
    var sum32_4 = utils.sum32_4;
    var sum32_5 = utils.sum32_5;
    var ch32 = shaCommon.ch32;
    var maj32 = shaCommon.maj32;
    var s0_256 = shaCommon.s0_256;
    var s1_256 = shaCommon.s1_256;
    var g0_256 = shaCommon.g0_256;
    var g1_256 = shaCommon.g1_256;
    var BlockHash = common.BlockHash;
    var sha256_K = [ 1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298 ];
    function SHA256() {
      if (!(this instanceof SHA256)) return new SHA256();
      BlockHash.call(this);
      this.h = [ 1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225 ];
      this.k = sha256_K;
      this.W = new Array(64);
    }
    utils.inherits(SHA256, BlockHash);
    module.exports = SHA256;
    SHA256.blockSize = 512;
    SHA256.outSize = 256;
    SHA256.hmacStrength = 192;
    SHA256.padLength = 64;
    SHA256.prototype._update = function _update(msg, start) {
      var W = this.W;
      for (var i = 0; i < 16; i++) W[i] = msg[start + i];
      for (;i < W.length; i++) W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
      var a = this.h[0];
      var b = this.h[1];
      var c = this.h[2];
      var d = this.h[3];
      var e = this.h[4];
      var f = this.h[5];
      var g = this.h[6];
      var h = this.h[7];
      assert(this.k.length === W.length);
      for (i = 0; i < W.length; i++) {
        var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
        var T2 = sum32(s0_256(a), maj32(a, b, c));
        h = g;
        g = f;
        f = e;
        e = sum32(d, T1);
        d = c;
        c = b;
        b = a;
        a = sum32(T1, T2);
      }
      this.h[0] = sum32(this.h[0], a);
      this.h[1] = sum32(this.h[1], b);
      this.h[2] = sum32(this.h[2], c);
      this.h[3] = sum32(this.h[3], d);
      this.h[4] = sum32(this.h[4], e);
      this.h[5] = sum32(this.h[5], f);
      this.h[6] = sum32(this.h[6], g);
      this.h[7] = sum32(this.h[7], h);
    };
    SHA256.prototype._digest = function digest(enc) {
      return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
    };
  }, {
    "../common": 87,
    "../utils": 97,
    "./common": 96,
    "minimalistic-assert": 105
  } ],
  94: [ function(require, module, exports) {
    "use strict";
    var utils = require("../utils");
    var SHA512 = require("./512");
    function SHA384() {
      if (!(this instanceof SHA384)) return new SHA384();
      SHA512.call(this);
      this.h = [ 3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428 ];
    }
    utils.inherits(SHA384, SHA512);
    module.exports = SHA384;
    SHA384.blockSize = 1024;
    SHA384.outSize = 384;
    SHA384.hmacStrength = 192;
    SHA384.padLength = 128;
    SHA384.prototype._digest = function digest(enc) {
      return "hex" === enc ? utils.toHex32(this.h.slice(0, 12), "big") : utils.split32(this.h.slice(0, 12), "big");
    };
  }, {
    "../utils": 97,
    "./512": 95
  } ],
  95: [ function(require, module, exports) {
    "use strict";
    var utils = require("../utils");
    var common = require("../common");
    var assert = require("minimalistic-assert");
    var rotr64_hi = utils.rotr64_hi;
    var rotr64_lo = utils.rotr64_lo;
    var shr64_hi = utils.shr64_hi;
    var shr64_lo = utils.shr64_lo;
    var sum64 = utils.sum64;
    var sum64_hi = utils.sum64_hi;
    var sum64_lo = utils.sum64_lo;
    var sum64_4_hi = utils.sum64_4_hi;
    var sum64_4_lo = utils.sum64_4_lo;
    var sum64_5_hi = utils.sum64_5_hi;
    var sum64_5_lo = utils.sum64_5_lo;
    var BlockHash = common.BlockHash;
    var sha512_K = [ 1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591 ];
    function SHA512() {
      if (!(this instanceof SHA512)) return new SHA512();
      BlockHash.call(this);
      this.h = [ 1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209 ];
      this.k = sha512_K;
      this.W = new Array(160);
    }
    utils.inherits(SHA512, BlockHash);
    module.exports = SHA512;
    SHA512.blockSize = 1024;
    SHA512.outSize = 512;
    SHA512.hmacStrength = 192;
    SHA512.padLength = 128;
    SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
      var W = this.W;
      for (var i = 0; i < 32; i++) W[i] = msg[start + i];
      for (;i < W.length; i += 2) {
        var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);
        var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
        var c1_hi = W[i - 14];
        var c1_lo = W[i - 13];
        var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);
        var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
        var c3_hi = W[i - 32];
        var c3_lo = W[i - 31];
        W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
        W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);
      }
    };
    SHA512.prototype._update = function _update(msg, start) {
      this._prepareBlock(msg, start);
      var W = this.W;
      var ah = this.h[0];
      var al = this.h[1];
      var bh = this.h[2];
      var bl = this.h[3];
      var ch = this.h[4];
      var cl = this.h[5];
      var dh = this.h[6];
      var dl = this.h[7];
      var eh = this.h[8];
      var el = this.h[9];
      var fh = this.h[10];
      var fl = this.h[11];
      var gh = this.h[12];
      var gl = this.h[13];
      var hh = this.h[14];
      var hl = this.h[15];
      assert(this.k.length === W.length);
      for (var i = 0; i < W.length; i += 2) {
        var c0_hi = hh;
        var c0_lo = hl;
        var c1_hi = s1_512_hi(eh, el);
        var c1_lo = s1_512_lo(eh, el);
        var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
        var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
        var c3_hi = this.k[i];
        var c3_lo = this.k[i + 1];
        var c4_hi = W[i];
        var c4_lo = W[i + 1];
        var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);
        c0_hi = s0_512_hi(ah, al);
        c0_lo = s0_512_lo(ah, al);
        c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
        c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
        var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
        var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        eh = sum64_hi(dh, dl, T1_hi, T1_lo);
        el = sum64_lo(dl, dl, T1_hi, T1_lo);
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
        al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
      }
      sum64(this.h, 0, ah, al);
      sum64(this.h, 2, bh, bl);
      sum64(this.h, 4, ch, cl);
      sum64(this.h, 6, dh, dl);
      sum64(this.h, 8, eh, el);
      sum64(this.h, 10, fh, fl);
      sum64(this.h, 12, gh, gl);
      sum64(this.h, 14, hh, hl);
    };
    SHA512.prototype._digest = function digest(enc) {
      return "hex" === enc ? utils.toHex32(this.h, "big") : utils.split32(this.h, "big");
    };
    function ch64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ ~xh & zh;
      r < 0 && (r += 4294967296);
      return r;
    }
    function ch64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ ~xl & zl;
      r < 0 && (r += 4294967296);
      return r;
    }
    function maj64_hi(xh, xl, yh, yl, zh) {
      var r = xh & yh ^ xh & zh ^ yh & zh;
      r < 0 && (r += 4294967296);
      return r;
    }
    function maj64_lo(xh, xl, yh, yl, zh, zl) {
      var r = xl & yl ^ xl & zl ^ yl & zl;
      r < 0 && (r += 4294967296);
      return r;
    }
    function s0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 28);
      var c1_hi = rotr64_hi(xl, xh, 2);
      var c2_hi = rotr64_hi(xl, xh, 7);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      r < 0 && (r += 4294967296);
      return r;
    }
    function s0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 28);
      var c1_lo = rotr64_lo(xl, xh, 2);
      var c2_lo = rotr64_lo(xl, xh, 7);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      r < 0 && (r += 4294967296);
      return r;
    }
    function s1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 14);
      var c1_hi = rotr64_hi(xh, xl, 18);
      var c2_hi = rotr64_hi(xl, xh, 9);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      r < 0 && (r += 4294967296);
      return r;
    }
    function s1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 14);
      var c1_lo = rotr64_lo(xh, xl, 18);
      var c2_lo = rotr64_lo(xl, xh, 9);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      r < 0 && (r += 4294967296);
      return r;
    }
    function g0_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 1);
      var c1_hi = rotr64_hi(xh, xl, 8);
      var c2_hi = shr64_hi(xh, xl, 7);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      r < 0 && (r += 4294967296);
      return r;
    }
    function g0_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 1);
      var c1_lo = rotr64_lo(xh, xl, 8);
      var c2_lo = shr64_lo(xh, xl, 7);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      r < 0 && (r += 4294967296);
      return r;
    }
    function g1_512_hi(xh, xl) {
      var c0_hi = rotr64_hi(xh, xl, 19);
      var c1_hi = rotr64_hi(xl, xh, 29);
      var c2_hi = shr64_hi(xh, xl, 6);
      var r = c0_hi ^ c1_hi ^ c2_hi;
      r < 0 && (r += 4294967296);
      return r;
    }
    function g1_512_lo(xh, xl) {
      var c0_lo = rotr64_lo(xh, xl, 19);
      var c1_lo = rotr64_lo(xl, xh, 29);
      var c2_lo = shr64_lo(xh, xl, 6);
      var r = c0_lo ^ c1_lo ^ c2_lo;
      r < 0 && (r += 4294967296);
      return r;
    }
  }, {
    "../common": 87,
    "../utils": 97,
    "minimalistic-assert": 105
  } ],
  96: [ function(require, module, exports) {
    "use strict";
    var utils = require("../utils");
    var rotr32 = utils.rotr32;
    function ft_1(s, x, y, z) {
      if (0 === s) return ch32(x, y, z);
      if (1 === s || 3 === s) return p32(x, y, z);
      if (2 === s) return maj32(x, y, z);
    }
    exports.ft_1 = ft_1;
    function ch32(x, y, z) {
      return x & y ^ ~x & z;
    }
    exports.ch32 = ch32;
    function maj32(x, y, z) {
      return x & y ^ x & z ^ y & z;
    }
    exports.maj32 = maj32;
    function p32(x, y, z) {
      return x ^ y ^ z;
    }
    exports.p32 = p32;
    function s0_256(x) {
      return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
    }
    exports.s0_256 = s0_256;
    function s1_256(x) {
      return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
    }
    exports.s1_256 = s1_256;
    function g0_256(x) {
      return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
    }
    exports.g0_256 = g0_256;
    function g1_256(x) {
      return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
    }
    exports.g1_256 = g1_256;
  }, {
    "../utils": 97
  } ],
  97: [ function(require, module, exports) {
    "use strict";
    var assert = require("minimalistic-assert");
    var inherits = require("inherits");
    exports.inherits = inherits;
    function isSurrogatePair(msg, i) {
      if (55296 !== (64512 & msg.charCodeAt(i))) return false;
      if (i < 0 || i + 1 >= msg.length) return false;
      return 56320 === (64512 & msg.charCodeAt(i + 1));
    }
    function toArray(msg, enc) {
      if (Array.isArray(msg)) return msg.slice();
      if (!msg) return [];
      var res = [];
      if ("string" === typeof msg) if (enc) {
        if ("hex" === enc) {
          msg = msg.replace(/[^a-z0-9]+/gi, "");
          msg.length % 2 !== 0 && (msg = "0" + msg);
          for (i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
        }
      } else {
        var p = 0;
        for (var i = 0; i < msg.length; i++) {
          var c = msg.charCodeAt(i);
          if (c < 128) res[p++] = c; else if (c < 2048) {
            res[p++] = c >> 6 | 192;
            res[p++] = 63 & c | 128;
          } else if (isSurrogatePair(msg, i)) {
            c = 65536 + ((1023 & c) << 10) + (1023 & msg.charCodeAt(++i));
            res[p++] = c >> 18 | 240;
            res[p++] = c >> 12 & 63 | 128;
            res[p++] = c >> 6 & 63 | 128;
            res[p++] = 63 & c | 128;
          } else {
            res[p++] = c >> 12 | 224;
            res[p++] = c >> 6 & 63 | 128;
            res[p++] = 63 & c | 128;
          }
        }
      } else for (i = 0; i < msg.length; i++) res[i] = 0 | msg[i];
      return res;
    }
    exports.toArray = toArray;
    function toHex(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
      return res;
    }
    exports.toHex = toHex;
    function htonl(w) {
      var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (255 & w) << 24;
      return res >>> 0;
    }
    exports.htonl = htonl;
    function toHex32(msg, endian) {
      var res = "";
      for (var i = 0; i < msg.length; i++) {
        var w = msg[i];
        "little" === endian && (w = htonl(w));
        res += zero8(w.toString(16));
      }
      return res;
    }
    exports.toHex32 = toHex32;
    function zero2(word) {
      return 1 === word.length ? "0" + word : word;
    }
    exports.zero2 = zero2;
    function zero8(word) {
      return 7 === word.length ? "0" + word : 6 === word.length ? "00" + word : 5 === word.length ? "000" + word : 4 === word.length ? "0000" + word : 3 === word.length ? "00000" + word : 2 === word.length ? "000000" + word : 1 === word.length ? "0000000" + word : word;
    }
    exports.zero8 = zero8;
    function join32(msg, start, end, endian) {
      var len = end - start;
      assert(len % 4 === 0);
      var res = new Array(len / 4);
      for (var i = 0, k = start; i < res.length; i++, k += 4) {
        var w;
        w = "big" === endian ? msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3] : msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
        res[i] = w >>> 0;
      }
      return res;
    }
    exports.join32 = join32;
    function split32(msg, endian) {
      var res = new Array(4 * msg.length);
      for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
        var m = msg[i];
        if ("big" === endian) {
          res[k] = m >>> 24;
          res[k + 1] = m >>> 16 & 255;
          res[k + 2] = m >>> 8 & 255;
          res[k + 3] = 255 & m;
        } else {
          res[k + 3] = m >>> 24;
          res[k + 2] = m >>> 16 & 255;
          res[k + 1] = m >>> 8 & 255;
          res[k] = 255 & m;
        }
      }
      return res;
    }
    exports.split32 = split32;
    function rotr32(w, b) {
      return w >>> b | w << 32 - b;
    }
    exports.rotr32 = rotr32;
    function rotl32(w, b) {
      return w << b | w >>> 32 - b;
    }
    exports.rotl32 = rotl32;
    function sum32(a, b) {
      return a + b >>> 0;
    }
    exports.sum32 = sum32;
    function sum32_3(a, b, c) {
      return a + b + c >>> 0;
    }
    exports.sum32_3 = sum32_3;
    function sum32_4(a, b, c, d) {
      return a + b + c + d >>> 0;
    }
    exports.sum32_4 = sum32_4;
    function sum32_5(a, b, c, d, e) {
      return a + b + c + d + e >>> 0;
    }
    exports.sum32_5 = sum32_5;
    function sum64(buf, pos, ah, al) {
      var bh = buf[pos];
      var bl = buf[pos + 1];
      var lo = al + bl >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      buf[pos] = hi >>> 0;
      buf[pos + 1] = lo;
    }
    exports.sum64 = sum64;
    function sum64_hi(ah, al, bh, bl) {
      var lo = al + bl >>> 0;
      var hi = (lo < al ? 1 : 0) + ah + bh;
      return hi >>> 0;
    }
    exports.sum64_hi = sum64_hi;
    function sum64_lo(ah, al, bh, bl) {
      var lo = al + bl;
      return lo >>> 0;
    }
    exports.sum64_lo = sum64_lo;
    function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
      var carry = 0;
      var lo = al;
      lo = lo + bl >>> 0;
      carry += lo < al ? 1 : 0;
      lo = lo + cl >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = lo + dl >>> 0;
      carry += lo < dl ? 1 : 0;
      var hi = ah + bh + ch + dh + carry;
      return hi >>> 0;
    }
    exports.sum64_4_hi = sum64_4_hi;
    function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
      var lo = al + bl + cl + dl;
      return lo >>> 0;
    }
    exports.sum64_4_lo = sum64_4_lo;
    function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var carry = 0;
      var lo = al;
      lo = lo + bl >>> 0;
      carry += lo < al ? 1 : 0;
      lo = lo + cl >>> 0;
      carry += lo < cl ? 1 : 0;
      lo = lo + dl >>> 0;
      carry += lo < dl ? 1 : 0;
      lo = lo + el >>> 0;
      carry += lo < el ? 1 : 0;
      var hi = ah + bh + ch + dh + eh + carry;
      return hi >>> 0;
    }
    exports.sum64_5_hi = sum64_5_hi;
    function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
      var lo = al + bl + cl + dl + el;
      return lo >>> 0;
    }
    exports.sum64_5_lo = sum64_5_lo;
    function rotr64_hi(ah, al, num) {
      var r = al << 32 - num | ah >>> num;
      return r >>> 0;
    }
    exports.rotr64_hi = rotr64_hi;
    function rotr64_lo(ah, al, num) {
      var r = ah << 32 - num | al >>> num;
      return r >>> 0;
    }
    exports.rotr64_lo = rotr64_lo;
    function shr64_hi(ah, al, num) {
      return ah >>> num;
    }
    exports.shr64_hi = shr64_hi;
    function shr64_lo(ah, al, num) {
      var r = ah << 32 - num | al >>> num;
      return r >>> 0;
    }
    exports.shr64_lo = shr64_lo;
  }, {
    inherits: 101,
    "minimalistic-assert": 105
  } ],
  98: [ function(require, module, exports) {
    "use strict";
    var hash = require("hash.js");
    var utils = require("minimalistic-crypto-utils");
    var assert = require("minimalistic-assert");
    function HmacDRBG(options) {
      if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);
      this.hash = options.hash;
      this.predResist = !!options.predResist;
      this.outLen = this.hash.outSize;
      this.minEntropy = options.minEntropy || this.hash.hmacStrength;
      this._reseed = null;
      this.reseedInterval = null;
      this.K = null;
      this.V = null;
      var entropy = utils.toArray(options.entropy, options.entropyEnc || "hex");
      var nonce = utils.toArray(options.nonce, options.nonceEnc || "hex");
      var pers = utils.toArray(options.pers, options.persEnc || "hex");
      assert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
      this._init(entropy, nonce, pers);
    }
    module.exports = HmacDRBG;
    HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
      var seed = entropy.concat(nonce).concat(pers);
      this.K = new Array(this.outLen / 8);
      this.V = new Array(this.outLen / 8);
      for (var i = 0; i < this.V.length; i++) {
        this.K[i] = 0;
        this.V[i] = 1;
      }
      this._update(seed);
      this._reseed = 1;
      this.reseedInterval = 281474976710656;
    };
    HmacDRBG.prototype._hmac = function hmac() {
      return new hash.hmac(this.hash, this.K);
    };
    HmacDRBG.prototype._update = function update(seed) {
      var kmac = this._hmac().update(this.V).update([ 0 ]);
      seed && (kmac = kmac.update(seed));
      this.K = kmac.digest();
      this.V = this._hmac().update(this.V).digest();
      if (!seed) return;
      this.K = this._hmac().update(this.V).update([ 1 ]).update(seed).digest();
      this.V = this._hmac().update(this.V).digest();
    };
    HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
      if ("string" !== typeof entropyEnc) {
        addEnc = add;
        add = entropyEnc;
        entropyEnc = null;
      }
      entropy = utils.toArray(entropy, entropyEnc);
      add = utils.toArray(add, addEnc);
      assert(entropy.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits");
      this._update(entropy.concat(add || []));
      this._reseed = 1;
    };
    HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
      if (this._reseed > this.reseedInterval) throw new Error("Reseed is required");
      if ("string" !== typeof enc) {
        addEnc = add;
        add = enc;
        enc = null;
      }
      if (add) {
        add = utils.toArray(add, addEnc || "hex");
        this._update(add);
      }
      var temp = [];
      while (temp.length < len) {
        this.V = this._hmac().update(this.V).digest();
        temp = temp.concat(this.V);
      }
      var res = temp.slice(0, len);
      this._update(add);
      this._reseed++;
      return utils.encode(res, enc);
    };
  }, {
    "hash.js": 86,
    "minimalistic-assert": 105,
    "minimalistic-crypto-utils": 106
  } ],
  99: [ function(require, module, exports) {
    exports.read = function(buffer, offset, isLE, mLen, nBytes) {
      var e, m;
      var eLen = 8 * nBytes - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var nBits = -7;
      var i = isLE ? nBytes - 1 : 0;
      var d = isLE ? -1 : 1;
      var s = buffer[offset + i];
      i += d;
      e = s & (1 << -nBits) - 1;
      s >>= -nBits;
      nBits += eLen;
      for (;nBits > 0; e = 256 * e + buffer[offset + i], i += d, nBits -= 8) ;
      m = e & (1 << -nBits) - 1;
      e >>= -nBits;
      nBits += mLen;
      for (;nBits > 0; m = 256 * m + buffer[offset + i], i += d, nBits -= 8) ;
      if (0 === e) e = 1 - eBias; else {
        if (e === eMax) return m ? NaN : Infinity * (s ? -1 : 1);
        m += Math.pow(2, mLen);
        e -= eBias;
      }
      return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
    };
    exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
      var e, m, c;
      var eLen = 8 * nBytes - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var rt = 23 === mLen ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
      var i = isLE ? 0 : nBytes - 1;
      var d = isLE ? 1 : -1;
      var s = value < 0 || 0 === value && 1 / value < 0 ? 1 : 0;
      value = Math.abs(value);
      if (isNaN(value) || Infinity === value) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
      } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
          e--;
          c *= 2;
        }
        value += e + eBias >= 1 ? rt / c : rt * Math.pow(2, 1 - eBias);
        if (value * c >= 2) {
          e++;
          c /= 2;
        }
        if (e + eBias >= eMax) {
          m = 0;
          e = eMax;
        } else if (e + eBias >= 1) {
          m = (value * c - 1) * Math.pow(2, mLen);
          e += eBias;
        } else {
          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
          e = 0;
        }
      }
      for (;mLen >= 8; buffer[offset + i] = 255 & m, i += d, m /= 256, mLen -= 8) ;
      e = e << mLen | m;
      eLen += mLen;
      for (;eLen > 0; buffer[offset + i] = 255 & e, i += d, e /= 256, eLen -= 8) ;
      buffer[offset + i - d] |= 128 * s;
    };
  }, {} ],
  100: [ function(require, module, exports) {
    var indexOf = [].indexOf;
    module.exports = function(arr, obj) {
      if (indexOf) return arr.indexOf(obj);
      for (var i = 0; i < arr.length; ++i) if (arr[i] === obj) return i;
      return -1;
    };
  }, {} ],
  101: [ function(require, module, exports) {
    "function" === typeof Object.create ? module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
          constructor: {
            value: ctor,
            enumerable: false,
            writable: true,
            configurable: true
          }
        });
      }
    } : module.exports = function inherits(ctor, superCtor) {
      if (superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {};
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
    };
  }, {} ],
  102: [ function(require, module, exports) {
    module.exports = function(obj) {
      return null != obj && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);
    };
    function isBuffer(obj) {
      return !!obj.constructor && "function" === typeof obj.constructor.isBuffer && obj.constructor.isBuffer(obj);
    }
    function isSlowBuffer(obj) {
      return "function" === typeof obj.readFloatLE && "function" === typeof obj.slice && isBuffer(obj.slice(0, 0));
    }
  }, {} ],
  103: [ function(require, module, exports) {
    "use strict";
    var inherits = require("inherits");
    var HashBase = require("hash-base");
    var Buffer = require("safe-buffer").Buffer;
    var ARRAY16 = new Array(16);
    function MD5() {
      HashBase.call(this, 64);
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
    }
    inherits(MD5, HashBase);
    MD5.prototype._update = function() {
      var M = ARRAY16;
      for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(4 * i);
      var a = this._a;
      var b = this._b;
      var c = this._c;
      var d = this._d;
      a = fnF(a, b, c, d, M[0], 3614090360, 7);
      d = fnF(d, a, b, c, M[1], 3905402710, 12);
      c = fnF(c, d, a, b, M[2], 606105819, 17);
      b = fnF(b, c, d, a, M[3], 3250441966, 22);
      a = fnF(a, b, c, d, M[4], 4118548399, 7);
      d = fnF(d, a, b, c, M[5], 1200080426, 12);
      c = fnF(c, d, a, b, M[6], 2821735955, 17);
      b = fnF(b, c, d, a, M[7], 4249261313, 22);
      a = fnF(a, b, c, d, M[8], 1770035416, 7);
      d = fnF(d, a, b, c, M[9], 2336552879, 12);
      c = fnF(c, d, a, b, M[10], 4294925233, 17);
      b = fnF(b, c, d, a, M[11], 2304563134, 22);
      a = fnF(a, b, c, d, M[12], 1804603682, 7);
      d = fnF(d, a, b, c, M[13], 4254626195, 12);
      c = fnF(c, d, a, b, M[14], 2792965006, 17);
      b = fnF(b, c, d, a, M[15], 1236535329, 22);
      a = fnG(a, b, c, d, M[1], 4129170786, 5);
      d = fnG(d, a, b, c, M[6], 3225465664, 9);
      c = fnG(c, d, a, b, M[11], 643717713, 14);
      b = fnG(b, c, d, a, M[0], 3921069994, 20);
      a = fnG(a, b, c, d, M[5], 3593408605, 5);
      d = fnG(d, a, b, c, M[10], 38016083, 9);
      c = fnG(c, d, a, b, M[15], 3634488961, 14);
      b = fnG(b, c, d, a, M[4], 3889429448, 20);
      a = fnG(a, b, c, d, M[9], 568446438, 5);
      d = fnG(d, a, b, c, M[14], 3275163606, 9);
      c = fnG(c, d, a, b, M[3], 4107603335, 14);
      b = fnG(b, c, d, a, M[8], 1163531501, 20);
      a = fnG(a, b, c, d, M[13], 2850285829, 5);
      d = fnG(d, a, b, c, M[2], 4243563512, 9);
      c = fnG(c, d, a, b, M[7], 1735328473, 14);
      b = fnG(b, c, d, a, M[12], 2368359562, 20);
      a = fnH(a, b, c, d, M[5], 4294588738, 4);
      d = fnH(d, a, b, c, M[8], 2272392833, 11);
      c = fnH(c, d, a, b, M[11], 1839030562, 16);
      b = fnH(b, c, d, a, M[14], 4259657740, 23);
      a = fnH(a, b, c, d, M[1], 2763975236, 4);
      d = fnH(d, a, b, c, M[4], 1272893353, 11);
      c = fnH(c, d, a, b, M[7], 4139469664, 16);
      b = fnH(b, c, d, a, M[10], 3200236656, 23);
      a = fnH(a, b, c, d, M[13], 681279174, 4);
      d = fnH(d, a, b, c, M[0], 3936430074, 11);
      c = fnH(c, d, a, b, M[3], 3572445317, 16);
      b = fnH(b, c, d, a, M[6], 76029189, 23);
      a = fnH(a, b, c, d, M[9], 3654602809, 4);
      d = fnH(d, a, b, c, M[12], 3873151461, 11);
      c = fnH(c, d, a, b, M[15], 530742520, 16);
      b = fnH(b, c, d, a, M[2], 3299628645, 23);
      a = fnI(a, b, c, d, M[0], 4096336452, 6);
      d = fnI(d, a, b, c, M[7], 1126891415, 10);
      c = fnI(c, d, a, b, M[14], 2878612391, 15);
      b = fnI(b, c, d, a, M[5], 4237533241, 21);
      a = fnI(a, b, c, d, M[12], 1700485571, 6);
      d = fnI(d, a, b, c, M[3], 2399980690, 10);
      c = fnI(c, d, a, b, M[10], 4293915773, 15);
      b = fnI(b, c, d, a, M[1], 2240044497, 21);
      a = fnI(a, b, c, d, M[8], 1873313359, 6);
      d = fnI(d, a, b, c, M[15], 4264355552, 10);
      c = fnI(c, d, a, b, M[6], 2734768916, 15);
      b = fnI(b, c, d, a, M[13], 1309151649, 21);
      a = fnI(a, b, c, d, M[4], 4149444226, 6);
      d = fnI(d, a, b, c, M[11], 3174756917, 10);
      c = fnI(c, d, a, b, M[2], 718787259, 15);
      b = fnI(b, c, d, a, M[9], 3951481745, 21);
      this._a = this._a + a | 0;
      this._b = this._b + b | 0;
      this._c = this._c + c | 0;
      this._d = this._d + d | 0;
    };
    MD5.prototype._digest = function() {
      this._block[this._blockOffset++] = 128;
      if (this._blockOffset > 56) {
        this._block.fill(0, this._blockOffset, 64);
        this._update();
        this._blockOffset = 0;
      }
      this._block.fill(0, this._blockOffset, 56);
      this._block.writeUInt32LE(this._length[0], 56);
      this._block.writeUInt32LE(this._length[1], 60);
      this._update();
      var buffer = Buffer.allocUnsafe(16);
      buffer.writeInt32LE(this._a, 0);
      buffer.writeInt32LE(this._b, 4);
      buffer.writeInt32LE(this._c, 8);
      buffer.writeInt32LE(this._d, 12);
      return buffer;
    };
    function rotl(x, n) {
      return x << n | x >>> 32 - n;
    }
    function fnF(a, b, c, d, m, k, s) {
      return rotl(a + (b & c | ~b & d) + m + k | 0, s) + b | 0;
    }
    function fnG(a, b, c, d, m, k, s) {
      return rotl(a + (b & d | c & ~d) + m + k | 0, s) + b | 0;
    }
    function fnH(a, b, c, d, m, k, s) {
      return rotl(a + (b ^ c ^ d) + m + k | 0, s) + b | 0;
    }
    function fnI(a, b, c, d, m, k, s) {
      return rotl(a + (c ^ (b | ~d)) + m + k | 0, s) + b | 0;
    }
    module.exports = MD5;
  }, {
    "hash-base": 85,
    inherits: 101,
    "safe-buffer": 143
  } ],
  104: [ function(require, module, exports) {
    var bn = require("bn.js");
    var brorand = require("brorand");
    function MillerRabin(rand) {
      this.rand = rand || new brorand.Rand();
    }
    module.exports = MillerRabin;
    MillerRabin.create = function create(rand) {
      return new MillerRabin(rand);
    };
    MillerRabin.prototype._randbelow = function _randbelow(n) {
      var len = n.bitLength();
      var min_bytes = Math.ceil(len / 8);
      do {
        var a = new bn(this.rand.generate(min_bytes));
      } while (a.cmp(n) >= 0);
      return a;
    };
    MillerRabin.prototype._randrange = function _randrange(start, stop) {
      var size = stop.sub(start);
      return start.add(this._randbelow(size));
    };
    MillerRabin.prototype.test = function test(n, k, cb) {
      var len = n.bitLength();
      var red = bn.mont(n);
      var rone = new bn(1).toRed(red);
      k || (k = Math.max(1, len / 48 | 0));
      var n1 = n.subn(1);
      for (var s = 0; !n1.testn(s); s++) ;
      var d = n.shrn(s);
      var rn1 = n1.toRed(red);
      var prime = true;
      for (;k > 0; k--) {
        var a = this._randrange(new bn(2), n1);
        cb && cb(a);
        var x = a.toRed(red).redPow(d);
        if (0 === x.cmp(rone) || 0 === x.cmp(rn1)) continue;
        for (var i = 1; i < s; i++) {
          x = x.redSqr();
          if (0 === x.cmp(rone)) return false;
          if (0 === x.cmp(rn1)) break;
        }
        if (i === s) return false;
      }
      return prime;
    };
    MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
      var len = n.bitLength();
      var red = bn.mont(n);
      var rone = new bn(1).toRed(red);
      k || (k = Math.max(1, len / 48 | 0));
      var n1 = n.subn(1);
      for (var s = 0; !n1.testn(s); s++) ;
      var d = n.shrn(s);
      var rn1 = n1.toRed(red);
      for (;k > 0; k--) {
        var a = this._randrange(new bn(2), n1);
        var g = n.gcd(a);
        if (0 !== g.cmpn(1)) return g;
        var x = a.toRed(red).redPow(d);
        if (0 === x.cmp(rone) || 0 === x.cmp(rn1)) continue;
        for (var i = 1; i < s; i++) {
          x = x.redSqr();
          if (0 === x.cmp(rone)) return x.fromRed().subn(1).gcd(n);
          if (0 === x.cmp(rn1)) break;
        }
        if (i === s) {
          x = x.redSqr();
          return x.fromRed().subn(1).gcd(n);
        }
      }
      return false;
    };
  }, {
    "bn.js": 16,
    brorand: 17
  } ],
  105: [ function(require, module, exports) {
    module.exports = assert;
    function assert(val, msg) {
      if (!val) throw new Error(msg || "Assertion failed");
    }
    assert.equal = function assertEqual(l, r, msg) {
      if (l != r) throw new Error(msg || "Assertion failed: " + l + " != " + r);
    };
  }, {} ],
  106: [ function(require, module, exports) {
    "use strict";
    var utils = exports;
    function toArray(msg, enc) {
      if (Array.isArray(msg)) return msg.slice();
      if (!msg) return [];
      var res = [];
      if ("string" !== typeof msg) {
        for (var i = 0; i < msg.length; i++) res[i] = 0 | msg[i];
        return res;
      }
      if ("hex" === enc) {
        msg = msg.replace(/[^a-z0-9]+/gi, "");
        msg.length % 2 !== 0 && (msg = "0" + msg);
        for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));
      } else for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = 255 & c;
        hi ? res.push(hi, lo) : res.push(lo);
      }
      return res;
    }
    utils.toArray = toArray;
    function zero2(word) {
      return 1 === word.length ? "0" + word : word;
    }
    utils.zero2 = zero2;
    function toHex(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));
      return res;
    }
    utils.toHex = toHex;
    utils.encode = function encode(arr, enc) {
      return "hex" === enc ? toHex(arr) : arr;
    };
  }, {} ],
  107: [ function(require, module, exports) {
    module.exports = {
      "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
      "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
      "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
      "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
      "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
      "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
      "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
      "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
      "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
      "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
      "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
      "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
    };
  }, {} ],
  108: [ function(require, module, exports) {
    "use strict";
    var asn1 = require("asn1.js");
    exports.certificate = require("./certificate");
    var RSAPrivateKey = asn1.define("RSAPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
    });
    exports.RSAPrivateKey = RSAPrivateKey;
    var RSAPublicKey = asn1.define("RSAPublicKey", function() {
      this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
    });
    exports.RSAPublicKey = RSAPublicKey;
    var PublicKey = asn1.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPublicKey").bitstr());
    });
    exports.PublicKey = PublicKey;
    var AlgorithmIdentifier = asn1.define("AlgorithmIdentifier", function() {
      this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
    });
    var PrivateKeyInfo = asn1.define("PrivateKeyInfo", function() {
      this.seq().obj(this.key("version").int(), this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPrivateKey").octstr());
    });
    exports.PrivateKey = PrivateKeyInfo;
    var EncryptedPrivateKeyInfo = asn1.define("EncryptedPrivateKeyInfo", function() {
      this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
    });
    exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo;
    var DSAPrivateKey = asn1.define("DSAPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
    });
    exports.DSAPrivateKey = DSAPrivateKey;
    exports.DSAparam = asn1.define("DSAparam", function() {
      this.int();
    });
    var ECPrivateKey = asn1.define("ECPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(ECParameters), this.key("publicKey").optional().explicit(1).bitstr());
    });
    exports.ECPrivateKey = ECPrivateKey;
    var ECParameters = asn1.define("ECParameters", function() {
      this.choice({
        namedCurve: this.objid()
      });
    });
    exports.signature = asn1.define("signature", function() {
      this.seq().obj(this.key("r").int(), this.key("s").int());
    });
  }, {
    "./certificate": 109,
    "asn1.js": 1
  } ],
  109: [ function(require, module, exports) {
    "use strict";
    var asn = require("asn1.js");
    var Time = asn.define("Time", function() {
      this.choice({
        utcTime: this.utctime(),
        generalTime: this.gentime()
      });
    });
    var AttributeTypeValue = asn.define("AttributeTypeValue", function() {
      this.seq().obj(this.key("type").objid(), this.key("value").any());
    });
    var AlgorithmIdentifier = asn.define("AlgorithmIdentifier", function() {
      this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
    });
    var SubjectPublicKeyInfo = asn.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(this.key("algorithm").use(AlgorithmIdentifier), this.key("subjectPublicKey").bitstr());
    });
    var RelativeDistinguishedName = asn.define("RelativeDistinguishedName", function() {
      this.setof(AttributeTypeValue);
    });
    var RDNSequence = asn.define("RDNSequence", function() {
      this.seqof(RelativeDistinguishedName);
    });
    var Name = asn.define("Name", function() {
      this.choice({
        rdnSequence: this.use(RDNSequence)
      });
    });
    var Validity = asn.define("Validity", function() {
      this.seq().obj(this.key("notBefore").use(Time), this.key("notAfter").use(Time));
    });
    var Extension = asn.define("Extension", function() {
      this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(false), this.key("extnValue").octstr());
    });
    var TBSCertificate = asn.define("TBSCertificate", function() {
      this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(AlgorithmIdentifier), this.key("issuer").use(Name), this.key("validity").use(Validity), this.key("subject").use(Name), this.key("subjectPublicKeyInfo").use(SubjectPublicKeyInfo), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(Extension).optional());
    });
    var X509Certificate = asn.define("X509Certificate", function() {
      this.seq().obj(this.key("tbsCertificate").use(TBSCertificate), this.key("signatureAlgorithm").use(AlgorithmIdentifier), this.key("signatureValue").bitstr());
    });
    module.exports = X509Certificate;
  }, {
    "asn1.js": 1
  } ],
  110: [ function(require, module, exports) {
    var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m;
    var startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;
    var fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m;
    var evp = require("evp_bytestokey");
    var ciphers = require("browserify-aes");
    var Buffer = require("safe-buffer").Buffer;
    module.exports = function(okey, password) {
      var key = okey.toString();
      var match = key.match(findProc);
      var decrypted;
      if (match) {
        var suite = "aes" + match[1];
        var iv = Buffer.from(match[2], "hex");
        var cipherText = Buffer.from(match[3].replace(/[\r\n]/g, ""), "base64");
        var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key;
        var out = [];
        var cipher = ciphers.createDecipheriv(suite, cipherKey, iv);
        out.push(cipher.update(cipherText));
        out.push(cipher.final());
        decrypted = Buffer.concat(out);
      } else {
        var match2 = key.match(fullRegex);
        decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ""), "base64");
      }
      var tag = key.match(startRegex)[1];
      return {
        tag: tag,
        data: decrypted
      };
    };
  }, {
    "browserify-aes": 21,
    evp_bytestokey: 84,
    "safe-buffer": 143
  } ],
  111: [ function(require, module, exports) {
    var asn1 = require("./asn1");
    var aesid = require("./aesid.json");
    var fixProc = require("./fixProc");
    var ciphers = require("browserify-aes");
    var compat = require("pbkdf2");
    var Buffer = require("safe-buffer").Buffer;
    module.exports = parseKeys;
    function parseKeys(buffer) {
      var password;
      if ("object" === typeof buffer && !Buffer.isBuffer(buffer)) {
        password = buffer.passphrase;
        buffer = buffer.key;
      }
      "string" === typeof buffer && (buffer = Buffer.from(buffer));
      var stripped = fixProc(buffer, password);
      var type = stripped.tag;
      var data = stripped.data;
      var subtype, ndata;
      switch (type) {
       case "CERTIFICATE":
        ndata = asn1.certificate.decode(data, "der").tbsCertificate.subjectPublicKeyInfo;

       case "PUBLIC KEY":
        ndata || (ndata = asn1.PublicKey.decode(data, "der"));
        subtype = ndata.algorithm.algorithm.join(".");
        switch (subtype) {
         case "1.2.840.113549.1.1.1":
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, "der");

         case "1.2.840.10045.2.1":
          ndata.subjectPrivateKey = ndata.subjectPublicKey;
          return {
            type: "ec",
            data: ndata
          };

         case "1.2.840.10040.4.1":
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, "der");
          return {
            type: "dsa",
            data: ndata.algorithm.params
          };

         default:
          throw new Error("unknown key id " + subtype);
        }
        throw new Error("unknown key type " + type);

       case "ENCRYPTED PRIVATE KEY":
        data = asn1.EncryptedPrivateKey.decode(data, "der");
        data = decrypt(data, password);

       case "PRIVATE KEY":
        ndata = asn1.PrivateKey.decode(data, "der");
        subtype = ndata.algorithm.algorithm.join(".");
        switch (subtype) {
         case "1.2.840.113549.1.1.1":
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, "der");

         case "1.2.840.10045.2.1":
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, "der").privateKey
          };

         case "1.2.840.10040.4.1":
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, "der");
          return {
            type: "dsa",
            params: ndata.algorithm.params
          };

         default:
          throw new Error("unknown key id " + subtype);
        }
        throw new Error("unknown key type " + type);

       case "RSA PUBLIC KEY":
        return asn1.RSAPublicKey.decode(data, "der");

       case "RSA PRIVATE KEY":
        return asn1.RSAPrivateKey.decode(data, "der");

       case "DSA PRIVATE KEY":
        return {
          type: "dsa",
          params: asn1.DSAPrivateKey.decode(data, "der")
        };

       case "EC PRIVATE KEY":
        data = asn1.ECPrivateKey.decode(data, "der");
        return {
          curve: data.parameters.value,
          privateKey: data.privateKey
        };

       default:
        throw new Error("unknown key type " + type);
      }
    }
    parseKeys.signature = asn1.signature;
    function decrypt(data, password) {
      var salt = data.algorithm.decrypt.kde.kdeparams.salt;
      var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);
      var algo = aesid[data.algorithm.decrypt.cipher.algo.join(".")];
      var iv = data.algorithm.decrypt.cipher.iv;
      var cipherText = data.subjectPrivateKey;
      var keylen = parseInt(algo.split("-")[1], 10) / 8;
      var key = compat.pbkdf2Sync(password, salt, iters, keylen, "sha1");
      var cipher = ciphers.createDecipheriv(algo, key, iv);
      var out = [];
      out.push(cipher.update(cipherText));
      out.push(cipher.final());
      return Buffer.concat(out);
    }
  }, {
    "./aesid.json": 107,
    "./asn1": 108,
    "./fixProc": 110,
    "browserify-aes": 21,
    pbkdf2: 112,
    "safe-buffer": 143
  } ],
  112: [ function(require, module, exports) {
    exports.pbkdf2 = require("./lib/async");
    exports.pbkdf2Sync = require("./lib/sync");
  }, {
    "./lib/async": 113,
    "./lib/sync": 116
  } ],
  113: [ function(require, module, exports) {
    (function(process, global) {
      var checkParameters = require("./precondition");
      var defaultEncoding = require("./default-encoding");
      var sync = require("./sync");
      var Buffer = require("safe-buffer").Buffer;
      var ZERO_BUF;
      var subtle = global.crypto && global.crypto.subtle;
      var toBrowser = {
        sha: "SHA-1",
        "sha-1": "SHA-1",
        sha1: "SHA-1",
        sha256: "SHA-256",
        "sha-256": "SHA-256",
        sha384: "SHA-384",
        "sha-384": "SHA-384",
        "sha-512": "SHA-512",
        sha512: "SHA-512"
      };
      var checks = [];
      function checkNative(algo) {
        if (global.process && !global.process.browser) return Promise.resolve(false);
        if (!subtle || !subtle.importKey || !subtle.deriveBits) return Promise.resolve(false);
        if (void 0 !== checks[algo]) return checks[algo];
        ZERO_BUF = ZERO_BUF || Buffer.alloc(8);
        var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo).then(function() {
          return true;
        }).catch(function() {
          return false;
        });
        checks[algo] = prom;
        return prom;
      }
      function browserPbkdf2(password, salt, iterations, length, algo) {
        return subtle.importKey("raw", password, {
          name: "PBKDF2"
        }, false, [ "deriveBits" ]).then(function(key) {
          return subtle.deriveBits({
            name: "PBKDF2",
            salt: salt,
            iterations: iterations,
            hash: {
              name: algo
            }
          }, key, length << 3);
        }).then(function(res) {
          return Buffer.from(res);
        });
      }
      function resolvePromise(promise, callback) {
        promise.then(function(out) {
          process.nextTick(function() {
            callback(null, out);
          });
        }, function(e) {
          process.nextTick(function() {
            callback(e);
          });
        });
      }
      module.exports = function(password, salt, iterations, keylen, digest, callback) {
        if ("function" === typeof digest) {
          callback = digest;
          digest = void 0;
        }
        digest = digest || "sha1";
        var algo = toBrowser[digest.toLowerCase()];
        if (!algo || "function" !== typeof global.Promise) return process.nextTick(function() {
          var out;
          try {
            out = sync(password, salt, iterations, keylen, digest);
          } catch (e) {
            return callback(e);
          }
          callback(null, out);
        });
        checkParameters(password, salt, iterations, keylen);
        if ("function" !== typeof callback) throw new Error("No callback provided to pbkdf2");
        Buffer.isBuffer(password) || (password = Buffer.from(password, defaultEncoding));
        Buffer.isBuffer(salt) || (salt = Buffer.from(salt, defaultEncoding));
        resolvePromise(checkNative(algo).then(function(resp) {
          if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo);
          return sync(password, salt, iterations, keylen, digest);
        }), callback);
      };
    }).call(this, require("_process"), "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    "./default-encoding": 114,
    "./precondition": 115,
    "./sync": 116,
    _process: 118,
    "safe-buffer": 143
  } ],
  114: [ function(require, module, exports) {
    (function(process) {
      var defaultEncoding;
      if (process.browser) defaultEncoding = "utf-8"; else {
        var pVersionMajor = parseInt(process.version.split(".")[0].slice(1), 10);
        defaultEncoding = pVersionMajor >= 6 ? "utf-8" : "binary";
      }
      module.exports = defaultEncoding;
    }).call(this, require("_process"));
  }, {
    _process: 118
  } ],
  115: [ function(require, module, exports) {
    (function(Buffer) {
      var MAX_ALLOC = Math.pow(2, 30) - 1;
      function checkBuffer(buf, name) {
        if ("string" !== typeof buf && !Buffer.isBuffer(buf)) throw new TypeError(name + " must be a buffer or string");
      }
      module.exports = function(password, salt, iterations, keylen) {
        checkBuffer(password, "Password");
        checkBuffer(salt, "Salt");
        if ("number" !== typeof iterations) throw new TypeError("Iterations not a number");
        if (iterations < 0) throw new TypeError("Bad iterations");
        if ("number" !== typeof keylen) throw new TypeError("Key length not a number");
        if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) throw new TypeError("Bad key length");
      };
    }).call(this, {
      isBuffer: require("../../is-buffer/index.js")
    });
  }, {
    "../../is-buffer/index.js": 102
  } ],
  116: [ function(require, module, exports) {
    var md5 = require("create-hash/md5");
    var RIPEMD160 = require("ripemd160");
    var sha = require("sha.js");
    var checkParameters = require("./precondition");
    var defaultEncoding = require("./default-encoding");
    var Buffer = require("safe-buffer").Buffer;
    var ZEROS = Buffer.alloc(128);
    var sizes = {
      md5: 16,
      sha1: 20,
      sha224: 28,
      sha256: 32,
      sha384: 48,
      sha512: 64,
      rmd160: 20,
      ripemd160: 20
    };
    function Hmac(alg, key, saltLen) {
      var hash = getDigest(alg);
      var blocksize = "sha512" === alg || "sha384" === alg ? 128 : 64;
      key.length > blocksize ? key = hash(key) : key.length < blocksize && (key = Buffer.concat([ key, ZEROS ], blocksize));
      var ipad = Buffer.allocUnsafe(blocksize + sizes[alg]);
      var opad = Buffer.allocUnsafe(blocksize + sizes[alg]);
      for (var i = 0; i < blocksize; i++) {
        ipad[i] = 54 ^ key[i];
        opad[i] = 92 ^ key[i];
      }
      var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4);
      ipad.copy(ipad1, 0, 0, blocksize);
      this.ipad1 = ipad1;
      this.ipad2 = ipad;
      this.opad = opad;
      this.alg = alg;
      this.blocksize = blocksize;
      this.hash = hash;
      this.size = sizes[alg];
    }
    Hmac.prototype.run = function(data, ipad) {
      data.copy(ipad, this.blocksize);
      var h = this.hash(ipad);
      h.copy(this.opad, this.blocksize);
      return this.hash(this.opad);
    };
    function getDigest(alg) {
      function shaFunc(data) {
        return sha(alg).update(data).digest();
      }
      function rmd160Func(data) {
        return new RIPEMD160().update(data).digest();
      }
      if ("rmd160" === alg || "ripemd160" === alg) return rmd160Func;
      if ("md5" === alg) return md5;
      return shaFunc;
    }
    function pbkdf2(password, salt, iterations, keylen, digest) {
      checkParameters(password, salt, iterations, keylen);
      Buffer.isBuffer(password) || (password = Buffer.from(password, defaultEncoding));
      Buffer.isBuffer(salt) || (salt = Buffer.from(salt, defaultEncoding));
      digest = digest || "sha1";
      var hmac = new Hmac(digest, password, salt.length);
      var DK = Buffer.allocUnsafe(keylen);
      var block1 = Buffer.allocUnsafe(salt.length + 4);
      salt.copy(block1, 0, 0, salt.length);
      var destPos = 0;
      var hLen = sizes[digest];
      var l = Math.ceil(keylen / hLen);
      for (var i = 1; i <= l; i++) {
        block1.writeUInt32BE(i, salt.length);
        var T = hmac.run(block1, hmac.ipad1);
        var U = T;
        for (var j = 1; j < iterations; j++) {
          U = hmac.run(U, hmac.ipad2);
          for (var k = 0; k < hLen; k++) T[k] ^= U[k];
        }
        T.copy(DK, destPos);
        destPos += hLen;
      }
      return DK;
    }
    module.exports = pbkdf2;
  }, {
    "./default-encoding": 114,
    "./precondition": 115,
    "create-hash/md5": 53,
    ripemd160: 142,
    "safe-buffer": 143,
    "sha.js": 145
  } ],
  117: [ function(require, module, exports) {
    (function(process) {
      "use strict";
      "undefined" === typeof process || !process.version || 0 === process.version.indexOf("v0.") || 0 === process.version.indexOf("v1.") && 0 !== process.version.indexOf("v1.8.") ? module.exports = {
        nextTick: nextTick
      } : module.exports = process;
      function nextTick(fn, arg1, arg2, arg3) {
        if ("function" !== typeof fn) throw new TypeError('"callback" argument must be a function');
        var len = arguments.length;
        var args, i;
        switch (len) {
         case 0:
         case 1:
          return process.nextTick(fn);

         case 2:
          return process.nextTick(function afterTickOne() {
            fn.call(null, arg1);
          });

         case 3:
          return process.nextTick(function afterTickTwo() {
            fn.call(null, arg1, arg2);
          });

         case 4:
          return process.nextTick(function afterTickThree() {
            fn.call(null, arg1, arg2, arg3);
          });

         default:
          args = new Array(len - 1);
          i = 0;
          while (i < args.length) args[i++] = arguments[i];
          return process.nextTick(function afterTick() {
            fn.apply(null, args);
          });
        }
      }
    }).call(this, require("_process"));
  }, {
    _process: 118
  } ],
  118: [ function(require, module, exports) {
    var process = module.exports = {};
    var cachedSetTimeout;
    var cachedClearTimeout;
    function defaultSetTimout() {
      throw new Error("setTimeout has not been defined");
    }
    function defaultClearTimeout() {
      throw new Error("clearTimeout has not been defined");
    }
    (function() {
      try {
        cachedSetTimeout = "function" === typeof setTimeout ? setTimeout : defaultSetTimout;
      } catch (e) {
        cachedSetTimeout = defaultSetTimout;
      }
      try {
        cachedClearTimeout = "function" === typeof clearTimeout ? clearTimeout : defaultClearTimeout;
      } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
      }
    })();
    function runTimeout(fun) {
      if (cachedSetTimeout === setTimeout) return setTimeout(fun, 0);
      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
      }
      try {
        return cachedSetTimeout(fun, 0);
      } catch (e) {
        try {
          return cachedSetTimeout.call(null, fun, 0);
        } catch (e) {
          return cachedSetTimeout.call(this, fun, 0);
        }
      }
    }
    function runClearTimeout(marker) {
      if (cachedClearTimeout === clearTimeout) return clearTimeout(marker);
      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
      }
      try {
        return cachedClearTimeout(marker);
      } catch (e) {
        try {
          return cachedClearTimeout.call(null, marker);
        } catch (e) {
          return cachedClearTimeout.call(this, marker);
        }
      }
    }
    var queue = [];
    var draining = false;
    var currentQueue;
    var queueIndex = -1;
    function cleanUpNextTick() {
      if (!draining || !currentQueue) return;
      draining = false;
      currentQueue.length ? queue = currentQueue.concat(queue) : queueIndex = -1;
      queue.length && drainQueue();
    }
    function drainQueue() {
      if (draining) return;
      var timeout = runTimeout(cleanUpNextTick);
      draining = true;
      var len = queue.length;
      while (len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) currentQueue && currentQueue[queueIndex].run();
        queueIndex = -1;
        len = queue.length;
      }
      currentQueue = null;
      draining = false;
      runClearTimeout(timeout);
    }
    process.nextTick = function(fun) {
      var args = new Array(arguments.length - 1);
      if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) args[i - 1] = arguments[i];
      queue.push(new Item(fun, args));
      1 !== queue.length || draining || runTimeout(drainQueue);
    };
    function Item(fun, array) {
      this.fun = fun;
      this.array = array;
    }
    Item.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    process.title = "browser";
    process.browser = true;
    process.env = {};
    process.argv = [];
    process.version = "";
    process.versions = {};
    function noop() {}
    process.on = noop;
    process.addListener = noop;
    process.once = noop;
    process.off = noop;
    process.removeListener = noop;
    process.removeAllListeners = noop;
    process.emit = noop;
    process.prependListener = noop;
    process.prependOnceListener = noop;
    process.listeners = function(name) {
      return [];
    };
    process.binding = function(name) {
      throw new Error("process.binding is not supported");
    };
    process.cwd = function() {
      return "/";
    };
    process.chdir = function(dir) {
      throw new Error("process.chdir is not supported");
    };
    process.umask = function() {
      return 0;
    };
  }, {} ],
  119: [ function(require, module, exports) {
    exports.publicEncrypt = require("./publicEncrypt");
    exports.privateDecrypt = require("./privateDecrypt");
    exports.privateEncrypt = function privateEncrypt(key, buf) {
      return exports.publicEncrypt(key, buf, true);
    };
    exports.publicDecrypt = function publicDecrypt(key, buf) {
      return exports.privateDecrypt(key, buf, true);
    };
  }, {
    "./privateDecrypt": 121,
    "./publicEncrypt": 122
  } ],
  120: [ function(require, module, exports) {
    var createHash = require("create-hash");
    var Buffer = require("safe-buffer").Buffer;
    module.exports = function(seed, len) {
      var t = Buffer.alloc(0);
      var i = 0;
      var c;
      while (t.length < len) {
        c = i2ops(i++);
        t = Buffer.concat([ t, createHash("sha1").update(seed).update(c).digest() ]);
      }
      return t.slice(0, len);
    };
    function i2ops(c) {
      var out = Buffer.allocUnsafe(4);
      out.writeUInt32BE(c, 0);
      return out;
    }
  }, {
    "create-hash": 52,
    "safe-buffer": 143
  } ],
  121: [ function(require, module, exports) {
    var parseKeys = require("parse-asn1");
    var mgf = require("./mgf");
    var xor = require("./xor");
    var BN = require("bn.js");
    var crt = require("browserify-rsa");
    var createHash = require("create-hash");
    var withPublic = require("./withPublic");
    var Buffer = require("safe-buffer").Buffer;
    module.exports = function privateDecrypt(privateKey, enc, reverse) {
      var padding;
      padding = privateKey.padding ? privateKey.padding : reverse ? 1 : 4;
      var key = parseKeys(privateKey);
      var k = key.modulus.byteLength();
      if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) throw new Error("decryption error");
      var msg;
      msg = reverse ? withPublic(new BN(enc), key) : crt(enc, key);
      var zBuffer = Buffer.alloc(k - msg.length);
      msg = Buffer.concat([ zBuffer, msg ], k);
      if (4 === padding) return oaep(key, msg);
      if (1 === padding) return pkcs1(key, msg, reverse);
      if (3 === padding) return msg;
      throw new Error("unknown padding");
    };
    function oaep(key, msg) {
      var k = key.modulus.byteLength();
      var iHash = createHash("sha1").update(Buffer.alloc(0)).digest();
      var hLen = iHash.length;
      if (0 !== msg[0]) throw new Error("decryption error");
      var maskedSeed = msg.slice(1, hLen + 1);
      var maskedDb = msg.slice(hLen + 1);
      var seed = xor(maskedSeed, mgf(maskedDb, hLen));
      var db = xor(maskedDb, mgf(seed, k - hLen - 1));
      if (compare(iHash, db.slice(0, hLen))) throw new Error("decryption error");
      var i = hLen;
      while (0 === db[i]) i++;
      if (1 !== db[i++]) throw new Error("decryption error");
      return db.slice(i);
    }
    function pkcs1(key, msg, reverse) {
      var p1 = msg.slice(0, 2);
      var i = 2;
      var status = 0;
      while (0 !== msg[i++]) if (i >= msg.length) {
        status++;
        break;
      }
      var ps = msg.slice(2, i - 1);
      ("0002" !== p1.toString("hex") && !reverse || "0001" !== p1.toString("hex") && reverse) && status++;
      ps.length < 8 && status++;
      if (status) throw new Error("decryption error");
      return msg.slice(i);
    }
    function compare(a, b) {
      a = Buffer.from(a);
      b = Buffer.from(b);
      var dif = 0;
      var len = a.length;
      if (a.length !== b.length) {
        dif++;
        len = Math.min(a.length, b.length);
      }
      var i = -1;
      while (++i < len) dif += a[i] ^ b[i];
      return dif;
    }
  }, {
    "./mgf": 120,
    "./withPublic": 123,
    "./xor": 124,
    "bn.js": 16,
    "browserify-rsa": 39,
    "create-hash": 52,
    "parse-asn1": 111,
    "safe-buffer": 143
  } ],
  122: [ function(require, module, exports) {
    var parseKeys = require("parse-asn1");
    var randomBytes = require("randombytes");
    var createHash = require("create-hash");
    var mgf = require("./mgf");
    var xor = require("./xor");
    var BN = require("bn.js");
    var withPublic = require("./withPublic");
    var crt = require("browserify-rsa");
    var Buffer = require("safe-buffer").Buffer;
    module.exports = function publicEncrypt(publicKey, msg, reverse) {
      var padding;
      padding = publicKey.padding ? publicKey.padding : reverse ? 1 : 4;
      var key = parseKeys(publicKey);
      var paddedMsg;
      if (4 === padding) paddedMsg = oaep(key, msg); else if (1 === padding) paddedMsg = pkcs1(key, msg, reverse); else {
        if (3 !== padding) throw new Error("unknown padding");
        paddedMsg = new BN(msg);
        if (paddedMsg.cmp(key.modulus) >= 0) throw new Error("data too long for modulus");
      }
      return reverse ? crt(paddedMsg, key) : withPublic(paddedMsg, key);
    };
    function oaep(key, msg) {
      var k = key.modulus.byteLength();
      var mLen = msg.length;
      var iHash = createHash("sha1").update(Buffer.alloc(0)).digest();
      var hLen = iHash.length;
      var hLen2 = 2 * hLen;
      if (mLen > k - hLen2 - 2) throw new Error("message too long");
      var ps = Buffer.alloc(k - mLen - hLen2 - 2);
      var dblen = k - hLen - 1;
      var seed = randomBytes(hLen);
      var maskedDb = xor(Buffer.concat([ iHash, ps, Buffer.alloc(1, 1), msg ], dblen), mgf(seed, dblen));
      var maskedSeed = xor(seed, mgf(maskedDb, hLen));
      return new BN(Buffer.concat([ Buffer.alloc(1), maskedSeed, maskedDb ], k));
    }
    function pkcs1(key, msg, reverse) {
      var mLen = msg.length;
      var k = key.modulus.byteLength();
      if (mLen > k - 11) throw new Error("message too long");
      var ps;
      ps = reverse ? Buffer.alloc(k - mLen - 3, 255) : nonZero(k - mLen - 3);
      return new BN(Buffer.concat([ Buffer.from([ 0, reverse ? 1 : 2 ]), ps, Buffer.alloc(1), msg ], k));
    }
    function nonZero(len) {
      var out = Buffer.allocUnsafe(len);
      var i = 0;
      var cache = randomBytes(2 * len);
      var cur = 0;
      var num;
      while (i < len) {
        if (cur === cache.length) {
          cache = randomBytes(2 * len);
          cur = 0;
        }
        num = cache[cur++];
        num && (out[i++] = num);
      }
      return out;
    }
  }, {
    "./mgf": 120,
    "./withPublic": 123,
    "./xor": 124,
    "bn.js": 16,
    "browserify-rsa": 39,
    "create-hash": 52,
    "parse-asn1": 111,
    randombytes: 125,
    "safe-buffer": 143
  } ],
  123: [ function(require, module, exports) {
    var BN = require("bn.js");
    var Buffer = require("safe-buffer").Buffer;
    function withPublic(paddedMsg, key) {
      return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray());
    }
    module.exports = withPublic;
  }, {
    "bn.js": 16,
    "safe-buffer": 143
  } ],
  124: [ function(require, module, exports) {
    module.exports = function xor(a, b) {
      var len = a.length;
      var i = -1;
      while (++i < len) a[i] ^= b[i];
      return a;
    };
  }, {} ],
  125: [ function(require, module, exports) {
    (function(process, global) {
      "use strict";
      var MAX_BYTES = 65536;
      var MAX_UINT32 = 4294967295;
      function oldBrowser() {
        throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11");
      }
      var Buffer = require("safe-buffer").Buffer;
      var crypto = global.crypto || global.msCrypto;
      crypto && crypto.getRandomValues ? module.exports = randomBytes : module.exports = oldBrowser;
      function randomBytes(size, cb) {
        if (size > MAX_UINT32) throw new RangeError("requested too many random bytes");
        var bytes = Buffer.allocUnsafe(size);
        if (size > 0) if (size > MAX_BYTES) for (var generated = 0; generated < size; generated += MAX_BYTES) crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES)); else crypto.getRandomValues(bytes);
        if ("function" === typeof cb) return process.nextTick(function() {
          cb(null, bytes);
        });
        return bytes;
      }
    }).call(this, require("_process"), "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    _process: 118,
    "safe-buffer": 143
  } ],
  126: [ function(require, module, exports) {
    (function(process, global) {
      "use strict";
      function oldBrowser() {
        throw new Error("secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11");
      }
      var safeBuffer = require("safe-buffer");
      var randombytes = require("randombytes");
      var Buffer = safeBuffer.Buffer;
      var kBufferMaxLength = safeBuffer.kMaxLength;
      var crypto = global.crypto || global.msCrypto;
      var kMaxUint32 = Math.pow(2, 32) - 1;
      function assertOffset(offset, length) {
        if ("number" !== typeof offset || offset !== offset) throw new TypeError("offset must be a number");
        if (offset > kMaxUint32 || offset < 0) throw new TypeError("offset must be a uint32");
        if (offset > kBufferMaxLength || offset > length) throw new RangeError("offset out of range");
      }
      function assertSize(size, offset, length) {
        if ("number" !== typeof size || size !== size) throw new TypeError("size must be a number");
        if (size > kMaxUint32 || size < 0) throw new TypeError("size must be a uint32");
        if (size + offset > length || size > kBufferMaxLength) throw new RangeError("buffer too small");
      }
      if (crypto && crypto.getRandomValues || !process.browser) {
        exports.randomFill = randomFill;
        exports.randomFillSync = randomFillSync;
      } else {
        exports.randomFill = oldBrowser;
        exports.randomFillSync = oldBrowser;
      }
      function randomFill(buf, offset, size, cb) {
        if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
        if ("function" === typeof offset) {
          cb = offset;
          offset = 0;
          size = buf.length;
        } else if ("function" === typeof size) {
          cb = size;
          size = buf.length - offset;
        } else if ("function" !== typeof cb) throw new TypeError('"cb" argument must be a function');
        assertOffset(offset, buf.length);
        assertSize(size, offset, buf.length);
        return actualFill(buf, offset, size, cb);
      }
      function actualFill(buf, offset, size, cb) {
        if (process.browser) {
          var ourBuf = buf.buffer;
          var uint = new Uint8Array(ourBuf, offset, size);
          crypto.getRandomValues(uint);
          if (cb) {
            process.nextTick(function() {
              cb(null, buf);
            });
            return;
          }
          return buf;
        }
        if (cb) {
          randombytes(size, function(err, bytes) {
            if (err) return cb(err);
            bytes.copy(buf, offset);
            cb(null, buf);
          });
          return;
        }
        var bytes = randombytes(size);
        bytes.copy(buf, offset);
        return buf;
      }
      function randomFillSync(buf, offset, size) {
        "undefined" === typeof offset && (offset = 0);
        if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
        assertOffset(offset, buf.length);
        void 0 === size && (size = buf.length - offset);
        assertSize(size, offset, buf.length);
        return actualFill(buf, offset, size);
      }
    }).call(this, require("_process"), "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    _process: 118,
    randombytes: 125,
    "safe-buffer": 143
  } ],
  127: [ function(require, module, exports) {
    module.exports = require("./lib/_stream_duplex.js");
  }, {
    "./lib/_stream_duplex.js": 128
  } ],
  128: [ function(require, module, exports) {
    "use strict";
    var pna = require("process-nextick-args");
    var objectKeys = Object.keys || function(obj) {
      var keys = [];
      for (var key in obj) keys.push(key);
      return keys;
    };
    module.exports = Duplex;
    var util = require("core-util-is");
    util.inherits = require("inherits");
    var Readable = require("./_stream_readable");
    var Writable = require("./_stream_writable");
    util.inherits(Duplex, Readable);
    var keys = objectKeys(Writable.prototype);
    for (var v = 0; v < keys.length; v++) {
      var method = keys[v];
      Duplex.prototype[method] || (Duplex.prototype[method] = Writable.prototype[method]);
    }
    function Duplex(options) {
      if (!(this instanceof Duplex)) return new Duplex(options);
      Readable.call(this, options);
      Writable.call(this, options);
      options && false === options.readable && (this.readable = false);
      options && false === options.writable && (this.writable = false);
      this.allowHalfOpen = true;
      options && false === options.allowHalfOpen && (this.allowHalfOpen = false);
      this.once("end", onend);
    }
    Object.defineProperty(Duplex.prototype, "writableHighWaterMark", {
      enumerable: false,
      get: function() {
        return this._writableState.highWaterMark;
      }
    });
    function onend() {
      if (this.allowHalfOpen || this._writableState.ended) return;
      pna.nextTick(onEndNT, this);
    }
    function onEndNT(self) {
      self.end();
    }
    Object.defineProperty(Duplex.prototype, "destroyed", {
      get: function() {
        if (void 0 === this._readableState || void 0 === this._writableState) return false;
        return this._readableState.destroyed && this._writableState.destroyed;
      },
      set: function(value) {
        if (void 0 === this._readableState || void 0 === this._writableState) return;
        this._readableState.destroyed = value;
        this._writableState.destroyed = value;
      }
    });
    Duplex.prototype._destroy = function(err, cb) {
      this.push(null);
      this.end();
      pna.nextTick(cb, err);
    };
  }, {
    "./_stream_readable": 130,
    "./_stream_writable": 132,
    "core-util-is": 50,
    inherits: 101,
    "process-nextick-args": 117
  } ],
  129: [ function(require, module, exports) {
    "use strict";
    module.exports = PassThrough;
    var Transform = require("./_stream_transform");
    var util = require("core-util-is");
    util.inherits = require("inherits");
    util.inherits(PassThrough, Transform);
    function PassThrough(options) {
      if (!(this instanceof PassThrough)) return new PassThrough(options);
      Transform.call(this, options);
    }
    PassThrough.prototype._transform = function(chunk, encoding, cb) {
      cb(null, chunk);
    };
  }, {
    "./_stream_transform": 131,
    "core-util-is": 50,
    inherits: 101
  } ],
  130: [ function(require, module, exports) {
    (function(process, global) {
      "use strict";
      var pna = require("process-nextick-args");
      module.exports = Readable;
      var isArray = require("isarray");
      var Duplex;
      Readable.ReadableState = ReadableState;
      var EE = require("events").EventEmitter;
      var EElistenerCount = function(emitter, type) {
        return emitter.listeners(type).length;
      };
      var Stream = require("./internal/streams/stream");
      var Buffer = require("safe-buffer").Buffer;
      var OurUint8Array = global.Uint8Array || function() {};
      function _uint8ArrayToBuffer(chunk) {
        return Buffer.from(chunk);
      }
      function _isUint8Array(obj) {
        return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
      }
      var util = require("core-util-is");
      util.inherits = require("inherits");
      var debugUtil = require("util");
      var debug = void 0;
      debug = debugUtil && debugUtil.debuglog ? debugUtil.debuglog("stream") : function() {};
      var BufferList = require("./internal/streams/BufferList");
      var destroyImpl = require("./internal/streams/destroy");
      var StringDecoder;
      util.inherits(Readable, Stream);
      var kProxyEvents = [ "error", "close", "destroy", "pause", "resume" ];
      function prependListener(emitter, event, fn) {
        if ("function" === typeof emitter.prependListener) return emitter.prependListener(event, fn);
        emitter._events && emitter._events[event] ? isArray(emitter._events[event]) ? emitter._events[event].unshift(fn) : emitter._events[event] = [ fn, emitter._events[event] ] : emitter.on(event, fn);
      }
      function ReadableState(options, stream) {
        Duplex = Duplex || require("./_stream_duplex");
        options = options || {};
        var isDuplex = stream instanceof Duplex;
        this.objectMode = !!options.objectMode;
        isDuplex && (this.objectMode = this.objectMode || !!options.readableObjectMode);
        var hwm = options.highWaterMark;
        var readableHwm = options.readableHighWaterMark;
        var defaultHwm = this.objectMode ? 16 : 16384;
        this.highWaterMark = hwm || 0 === hwm ? hwm : isDuplex && (readableHwm || 0 === readableHwm) ? readableHwm : defaultHwm;
        this.highWaterMark = Math.floor(this.highWaterMark);
        this.buffer = new BufferList();
        this.length = 0;
        this.pipes = null;
        this.pipesCount = 0;
        this.flowing = null;
        this.ended = false;
        this.endEmitted = false;
        this.reading = false;
        this.sync = true;
        this.needReadable = false;
        this.emittedReadable = false;
        this.readableListening = false;
        this.resumeScheduled = false;
        this.destroyed = false;
        this.defaultEncoding = options.defaultEncoding || "utf8";
        this.awaitDrain = 0;
        this.readingMore = false;
        this.decoder = null;
        this.encoding = null;
        if (options.encoding) {
          StringDecoder || (StringDecoder = require("string_decoder/").StringDecoder);
          this.decoder = new StringDecoder(options.encoding);
          this.encoding = options.encoding;
        }
      }
      function Readable(options) {
        Duplex = Duplex || require("./_stream_duplex");
        if (!(this instanceof Readable)) return new Readable(options);
        this._readableState = new ReadableState(options, this);
        this.readable = true;
        if (options) {
          "function" === typeof options.read && (this._read = options.read);
          "function" === typeof options.destroy && (this._destroy = options.destroy);
        }
        Stream.call(this);
      }
      Object.defineProperty(Readable.prototype, "destroyed", {
        get: function() {
          if (void 0 === this._readableState) return false;
          return this._readableState.destroyed;
        },
        set: function(value) {
          if (!this._readableState) return;
          this._readableState.destroyed = value;
        }
      });
      Readable.prototype.destroy = destroyImpl.destroy;
      Readable.prototype._undestroy = destroyImpl.undestroy;
      Readable.prototype._destroy = function(err, cb) {
        this.push(null);
        cb(err);
      };
      Readable.prototype.push = function(chunk, encoding) {
        var state = this._readableState;
        var skipChunkCheck;
        if (state.objectMode) skipChunkCheck = true; else if ("string" === typeof chunk) {
          encoding = encoding || state.defaultEncoding;
          if (encoding !== state.encoding) {
            chunk = Buffer.from(chunk, encoding);
            encoding = "";
          }
          skipChunkCheck = true;
        }
        return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
      };
      Readable.prototype.unshift = function(chunk) {
        return readableAddChunk(this, chunk, null, true, false);
      };
      function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
        var state = stream._readableState;
        if (null === chunk) {
          state.reading = false;
          onEofChunk(stream, state);
        } else {
          var er;
          skipChunkCheck || (er = chunkInvalid(state, chunk));
          if (er) stream.emit("error", er); else if (state.objectMode || chunk && chunk.length > 0) {
            "string" === typeof chunk || state.objectMode || Object.getPrototypeOf(chunk) === Buffer.prototype || (chunk = _uint8ArrayToBuffer(chunk));
            if (addToFront) state.endEmitted ? stream.emit("error", new Error("stream.unshift() after end event")) : addChunk(stream, state, chunk, true); else if (state.ended) stream.emit("error", new Error("stream.push() after EOF")); else {
              state.reading = false;
              if (state.decoder && !encoding) {
                chunk = state.decoder.write(chunk);
                state.objectMode || 0 !== chunk.length ? addChunk(stream, state, chunk, false) : maybeReadMore(stream, state);
              } else addChunk(stream, state, chunk, false);
            }
          } else addToFront || (state.reading = false);
        }
        return needMoreData(state);
      }
      function addChunk(stream, state, chunk, addToFront) {
        if (state.flowing && 0 === state.length && !state.sync) {
          stream.emit("data", chunk);
          stream.read(0);
        } else {
          state.length += state.objectMode ? 1 : chunk.length;
          addToFront ? state.buffer.unshift(chunk) : state.buffer.push(chunk);
          state.needReadable && emitReadable(stream);
        }
        maybeReadMore(stream, state);
      }
      function chunkInvalid(state, chunk) {
        var er;
        _isUint8Array(chunk) || "string" === typeof chunk || void 0 === chunk || state.objectMode || (er = new TypeError("Invalid non-string/buffer chunk"));
        return er;
      }
      function needMoreData(state) {
        return !state.ended && (state.needReadable || state.length < state.highWaterMark || 0 === state.length);
      }
      Readable.prototype.isPaused = function() {
        return false === this._readableState.flowing;
      };
      Readable.prototype.setEncoding = function(enc) {
        StringDecoder || (StringDecoder = require("string_decoder/").StringDecoder);
        this._readableState.decoder = new StringDecoder(enc);
        this._readableState.encoding = enc;
        return this;
      };
      var MAX_HWM = 8388608;
      function computeNewHighWaterMark(n) {
        if (n >= MAX_HWM) n = MAX_HWM; else {
          n--;
          n |= n >>> 1;
          n |= n >>> 2;
          n |= n >>> 4;
          n |= n >>> 8;
          n |= n >>> 16;
          n++;
        }
        return n;
      }
      function howMuchToRead(n, state) {
        if (n <= 0 || 0 === state.length && state.ended) return 0;
        if (state.objectMode) return 1;
        if (n !== n) return state.flowing && state.length ? state.buffer.head.data.length : state.length;
        n > state.highWaterMark && (state.highWaterMark = computeNewHighWaterMark(n));
        if (n <= state.length) return n;
        if (!state.ended) {
          state.needReadable = true;
          return 0;
        }
        return state.length;
      }
      Readable.prototype.read = function(n) {
        debug("read", n);
        n = parseInt(n, 10);
        var state = this._readableState;
        var nOrig = n;
        0 !== n && (state.emittedReadable = false);
        if (0 === n && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
          debug("read: emitReadable", state.length, state.ended);
          0 === state.length && state.ended ? endReadable(this) : emitReadable(this);
          return null;
        }
        n = howMuchToRead(n, state);
        if (0 === n && state.ended) {
          0 === state.length && endReadable(this);
          return null;
        }
        var doRead = state.needReadable;
        debug("need readable", doRead);
        if (0 === state.length || state.length - n < state.highWaterMark) {
          doRead = true;
          debug("length less than watermark", doRead);
        }
        if (state.ended || state.reading) {
          doRead = false;
          debug("reading or ended", doRead);
        } else if (doRead) {
          debug("do read");
          state.reading = true;
          state.sync = true;
          0 === state.length && (state.needReadable = true);
          this._read(state.highWaterMark);
          state.sync = false;
          state.reading || (n = howMuchToRead(nOrig, state));
        }
        var ret;
        ret = n > 0 ? fromList(n, state) : null;
        if (null === ret) {
          state.needReadable = true;
          n = 0;
        } else state.length -= n;
        if (0 === state.length) {
          state.ended || (state.needReadable = true);
          nOrig !== n && state.ended && endReadable(this);
        }
        null !== ret && this.emit("data", ret);
        return ret;
      };
      function onEofChunk(stream, state) {
        if (state.ended) return;
        if (state.decoder) {
          var chunk = state.decoder.end();
          if (chunk && chunk.length) {
            state.buffer.push(chunk);
            state.length += state.objectMode ? 1 : chunk.length;
          }
        }
        state.ended = true;
        emitReadable(stream);
      }
      function emitReadable(stream) {
        var state = stream._readableState;
        state.needReadable = false;
        if (!state.emittedReadable) {
          debug("emitReadable", state.flowing);
          state.emittedReadable = true;
          state.sync ? pna.nextTick(emitReadable_, stream) : emitReadable_(stream);
        }
      }
      function emitReadable_(stream) {
        debug("emit readable");
        stream.emit("readable");
        flow(stream);
      }
      function maybeReadMore(stream, state) {
        if (!state.readingMore) {
          state.readingMore = true;
          pna.nextTick(maybeReadMore_, stream, state);
        }
      }
      function maybeReadMore_(stream, state) {
        var len = state.length;
        while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
          debug("maybeReadMore read 0");
          stream.read(0);
          if (len === state.length) break;
          len = state.length;
        }
        state.readingMore = false;
      }
      Readable.prototype._read = function(n) {
        this.emit("error", new Error("_read() is not implemented"));
      };
      Readable.prototype.pipe = function(dest, pipeOpts) {
        var src = this;
        var state = this._readableState;
        switch (state.pipesCount) {
         case 0:
          state.pipes = dest;
          break;

         case 1:
          state.pipes = [ state.pipes, dest ];
          break;

         default:
          state.pipes.push(dest);
        }
        state.pipesCount += 1;
        debug("pipe count=%d opts=%j", state.pipesCount, pipeOpts);
        var doEnd = (!pipeOpts || false !== pipeOpts.end) && dest !== process.stdout && dest !== process.stderr;
        var endFn = doEnd ? onend : unpipe;
        state.endEmitted ? pna.nextTick(endFn) : src.once("end", endFn);
        dest.on("unpipe", onunpipe);
        function onunpipe(readable, unpipeInfo) {
          debug("onunpipe");
          if (readable === src && unpipeInfo && false === unpipeInfo.hasUnpiped) {
            unpipeInfo.hasUnpiped = true;
            cleanup();
          }
        }
        function onend() {
          debug("onend");
          dest.end();
        }
        var ondrain = pipeOnDrain(src);
        dest.on("drain", ondrain);
        var cleanedUp = false;
        function cleanup() {
          debug("cleanup");
          dest.removeListener("close", onclose);
          dest.removeListener("finish", onfinish);
          dest.removeListener("drain", ondrain);
          dest.removeListener("error", onerror);
          dest.removeListener("unpipe", onunpipe);
          src.removeListener("end", onend);
          src.removeListener("end", unpipe);
          src.removeListener("data", ondata);
          cleanedUp = true;
          !state.awaitDrain || dest._writableState && !dest._writableState.needDrain || ondrain();
        }
        var increasedAwaitDrain = false;
        src.on("data", ondata);
        function ondata(chunk) {
          debug("ondata");
          increasedAwaitDrain = false;
          var ret = dest.write(chunk);
          if (false === ret && !increasedAwaitDrain) {
            if ((1 === state.pipesCount && state.pipes === dest || state.pipesCount > 1 && -1 !== indexOf(state.pipes, dest)) && !cleanedUp) {
              debug("false write response, pause", src._readableState.awaitDrain);
              src._readableState.awaitDrain++;
              increasedAwaitDrain = true;
            }
            src.pause();
          }
        }
        function onerror(er) {
          debug("onerror", er);
          unpipe();
          dest.removeListener("error", onerror);
          0 === EElistenerCount(dest, "error") && dest.emit("error", er);
        }
        prependListener(dest, "error", onerror);
        function onclose() {
          dest.removeListener("finish", onfinish);
          unpipe();
        }
        dest.once("close", onclose);
        function onfinish() {
          debug("onfinish");
          dest.removeListener("close", onclose);
          unpipe();
        }
        dest.once("finish", onfinish);
        function unpipe() {
          debug("unpipe");
          src.unpipe(dest);
        }
        dest.emit("pipe", src);
        if (!state.flowing) {
          debug("pipe resume");
          src.resume();
        }
        return dest;
      };
      function pipeOnDrain(src) {
        return function() {
          var state = src._readableState;
          debug("pipeOnDrain", state.awaitDrain);
          state.awaitDrain && state.awaitDrain--;
          if (0 === state.awaitDrain && EElistenerCount(src, "data")) {
            state.flowing = true;
            flow(src);
          }
        };
      }
      Readable.prototype.unpipe = function(dest) {
        var state = this._readableState;
        var unpipeInfo = {
          hasUnpiped: false
        };
        if (0 === state.pipesCount) return this;
        if (1 === state.pipesCount) {
          if (dest && dest !== state.pipes) return this;
          dest || (dest = state.pipes);
          state.pipes = null;
          state.pipesCount = 0;
          state.flowing = false;
          dest && dest.emit("unpipe", this, unpipeInfo);
          return this;
        }
        if (!dest) {
          var dests = state.pipes;
          var len = state.pipesCount;
          state.pipes = null;
          state.pipesCount = 0;
          state.flowing = false;
          for (var i = 0; i < len; i++) dests[i].emit("unpipe", this, unpipeInfo);
          return this;
        }
        var index = indexOf(state.pipes, dest);
        if (-1 === index) return this;
        state.pipes.splice(index, 1);
        state.pipesCount -= 1;
        1 === state.pipesCount && (state.pipes = state.pipes[0]);
        dest.emit("unpipe", this, unpipeInfo);
        return this;
      };
      Readable.prototype.on = function(ev, fn) {
        var res = Stream.prototype.on.call(this, ev, fn);
        if ("data" === ev) false !== this._readableState.flowing && this.resume(); else if ("readable" === ev) {
          var state = this._readableState;
          if (!state.endEmitted && !state.readableListening) {
            state.readableListening = state.needReadable = true;
            state.emittedReadable = false;
            state.reading ? state.length && emitReadable(this) : pna.nextTick(nReadingNextTick, this);
          }
        }
        return res;
      };
      Readable.prototype.addListener = Readable.prototype.on;
      function nReadingNextTick(self) {
        debug("readable nexttick read 0");
        self.read(0);
      }
      Readable.prototype.resume = function() {
        var state = this._readableState;
        if (!state.flowing) {
          debug("resume");
          state.flowing = true;
          resume(this, state);
        }
        return this;
      };
      function resume(stream, state) {
        if (!state.resumeScheduled) {
          state.resumeScheduled = true;
          pna.nextTick(resume_, stream, state);
        }
      }
      function resume_(stream, state) {
        if (!state.reading) {
          debug("resume read 0");
          stream.read(0);
        }
        state.resumeScheduled = false;
        state.awaitDrain = 0;
        stream.emit("resume");
        flow(stream);
        state.flowing && !state.reading && stream.read(0);
      }
      Readable.prototype.pause = function() {
        debug("call pause flowing=%j", this._readableState.flowing);
        if (false !== this._readableState.flowing) {
          debug("pause");
          this._readableState.flowing = false;
          this.emit("pause");
        }
        return this;
      };
      function flow(stream) {
        var state = stream._readableState;
        debug("flow", state.flowing);
        while (state.flowing && null !== stream.read()) ;
      }
      Readable.prototype.wrap = function(stream) {
        var _this = this;
        var state = this._readableState;
        var paused = false;
        stream.on("end", function() {
          debug("wrapped end");
          if (state.decoder && !state.ended) {
            var chunk = state.decoder.end();
            chunk && chunk.length && _this.push(chunk);
          }
          _this.push(null);
        });
        stream.on("data", function(chunk) {
          debug("wrapped data");
          state.decoder && (chunk = state.decoder.write(chunk));
          if (state.objectMode && (null === chunk || void 0 === chunk)) return;
          if (!state.objectMode && (!chunk || !chunk.length)) return;
          var ret = _this.push(chunk);
          if (!ret) {
            paused = true;
            stream.pause();
          }
        });
        for (var i in stream) void 0 === this[i] && "function" === typeof stream[i] && (this[i] = function(method) {
          return function() {
            return stream[method].apply(stream, arguments);
          };
        }(i));
        for (var n = 0; n < kProxyEvents.length; n++) stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
        this._read = function(n) {
          debug("wrapped _read", n);
          if (paused) {
            paused = false;
            stream.resume();
          }
        };
        return this;
      };
      Object.defineProperty(Readable.prototype, "readableHighWaterMark", {
        enumerable: false,
        get: function() {
          return this._readableState.highWaterMark;
        }
      });
      Readable._fromList = fromList;
      function fromList(n, state) {
        if (0 === state.length) return null;
        var ret;
        if (state.objectMode) ret = state.buffer.shift(); else if (!n || n >= state.length) {
          ret = state.decoder ? state.buffer.join("") : 1 === state.buffer.length ? state.buffer.head.data : state.buffer.concat(state.length);
          state.buffer.clear();
        } else ret = fromListPartial(n, state.buffer, state.decoder);
        return ret;
      }
      function fromListPartial(n, list, hasStrings) {
        var ret;
        if (n < list.head.data.length) {
          ret = list.head.data.slice(0, n);
          list.head.data = list.head.data.slice(n);
        } else ret = n === list.head.data.length ? list.shift() : hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
        return ret;
      }
      function copyFromBufferString(n, list) {
        var p = list.head;
        var c = 1;
        var ret = p.data;
        n -= ret.length;
        while (p = p.next) {
          var str = p.data;
          var nb = n > str.length ? str.length : n;
          nb === str.length ? ret += str : ret += str.slice(0, n);
          n -= nb;
          if (0 === n) {
            if (nb === str.length) {
              ++c;
              p.next ? list.head = p.next : list.head = list.tail = null;
            } else {
              list.head = p;
              p.data = str.slice(nb);
            }
            break;
          }
          ++c;
        }
        list.length -= c;
        return ret;
      }
      function copyFromBuffer(n, list) {
        var ret = Buffer.allocUnsafe(n);
        var p = list.head;
        var c = 1;
        p.data.copy(ret);
        n -= p.data.length;
        while (p = p.next) {
          var buf = p.data;
          var nb = n > buf.length ? buf.length : n;
          buf.copy(ret, ret.length - n, 0, nb);
          n -= nb;
          if (0 === n) {
            if (nb === buf.length) {
              ++c;
              p.next ? list.head = p.next : list.head = list.tail = null;
            } else {
              list.head = p;
              p.data = buf.slice(nb);
            }
            break;
          }
          ++c;
        }
        list.length -= c;
        return ret;
      }
      function endReadable(stream) {
        var state = stream._readableState;
        if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');
        if (!state.endEmitted) {
          state.ended = true;
          pna.nextTick(endReadableNT, state, stream);
        }
      }
      function endReadableNT(state, stream) {
        if (!state.endEmitted && 0 === state.length) {
          state.endEmitted = true;
          stream.readable = false;
          stream.emit("end");
        }
      }
      function indexOf(xs, x) {
        for (var i = 0, l = xs.length; i < l; i++) if (xs[i] === x) return i;
        return -1;
      }
    }).call(this, require("_process"), "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    "./_stream_duplex": 128,
    "./internal/streams/BufferList": 133,
    "./internal/streams/destroy": 134,
    "./internal/streams/stream": 135,
    _process: 118,
    "core-util-is": 50,
    events: 83,
    inherits: 101,
    isarray: 136,
    "process-nextick-args": 117,
    "safe-buffer": 143,
    "string_decoder/": 137,
    util: 18
  } ],
  131: [ function(require, module, exports) {
    "use strict";
    module.exports = Transform;
    var Duplex = require("./_stream_duplex");
    var util = require("core-util-is");
    util.inherits = require("inherits");
    util.inherits(Transform, Duplex);
    function afterTransform(er, data) {
      var ts = this._transformState;
      ts.transforming = false;
      var cb = ts.writecb;
      if (!cb) return this.emit("error", new Error("write callback called multiple times"));
      ts.writechunk = null;
      ts.writecb = null;
      null != data && this.push(data);
      cb(er);
      var rs = this._readableState;
      rs.reading = false;
      (rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
    }
    function Transform(options) {
      if (!(this instanceof Transform)) return new Transform(options);
      Duplex.call(this, options);
      this._transformState = {
        afterTransform: afterTransform.bind(this),
        needTransform: false,
        transforming: false,
        writecb: null,
        writechunk: null,
        writeencoding: null
      };
      this._readableState.needReadable = true;
      this._readableState.sync = false;
      if (options) {
        "function" === typeof options.transform && (this._transform = options.transform);
        "function" === typeof options.flush && (this._flush = options.flush);
      }
      this.on("prefinish", prefinish);
    }
    function prefinish() {
      var _this = this;
      "function" === typeof this._flush ? this._flush(function(er, data) {
        done(_this, er, data);
      }) : done(this, null, null);
    }
    Transform.prototype.push = function(chunk, encoding) {
      this._transformState.needTransform = false;
      return Duplex.prototype.push.call(this, chunk, encoding);
    };
    Transform.prototype._transform = function(chunk, encoding, cb) {
      throw new Error("_transform() is not implemented");
    };
    Transform.prototype._write = function(chunk, encoding, cb) {
      var ts = this._transformState;
      ts.writecb = cb;
      ts.writechunk = chunk;
      ts.writeencoding = encoding;
      if (!ts.transforming) {
        var rs = this._readableState;
        (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) && this._read(rs.highWaterMark);
      }
    };
    Transform.prototype._read = function(n) {
      var ts = this._transformState;
      if (null !== ts.writechunk && ts.writecb && !ts.transforming) {
        ts.transforming = true;
        this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
      } else ts.needTransform = true;
    };
    Transform.prototype._destroy = function(err, cb) {
      var _this2 = this;
      Duplex.prototype._destroy.call(this, err, function(err2) {
        cb(err2);
        _this2.emit("close");
      });
    };
    function done(stream, er, data) {
      if (er) return stream.emit("error", er);
      null != data && stream.push(data);
      if (stream._writableState.length) throw new Error("Calling transform done when ws.length != 0");
      if (stream._transformState.transforming) throw new Error("Calling transform done when still transforming");
      return stream.push(null);
    }
  }, {
    "./_stream_duplex": 128,
    "core-util-is": 50,
    inherits: 101
  } ],
  132: [ function(require, module, exports) {
    (function(process, global) {
      "use strict";
      var pna = require("process-nextick-args");
      module.exports = Writable;
      function WriteReq(chunk, encoding, cb) {
        this.chunk = chunk;
        this.encoding = encoding;
        this.callback = cb;
        this.next = null;
      }
      function CorkedRequest(state) {
        var _this = this;
        this.next = null;
        this.entry = null;
        this.finish = function() {
          onCorkedFinish(_this, state);
        };
      }
      var asyncWrite = !process.browser && [ "v0.10", "v0.9." ].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
      var Duplex;
      Writable.WritableState = WritableState;
      var util = require("core-util-is");
      util.inherits = require("inherits");
      var internalUtil = {
        deprecate: require("util-deprecate")
      };
      var Stream = require("./internal/streams/stream");
      var Buffer = require("safe-buffer").Buffer;
      var OurUint8Array = global.Uint8Array || function() {};
      function _uint8ArrayToBuffer(chunk) {
        return Buffer.from(chunk);
      }
      function _isUint8Array(obj) {
        return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
      }
      var destroyImpl = require("./internal/streams/destroy");
      util.inherits(Writable, Stream);
      function nop() {}
      function WritableState(options, stream) {
        Duplex = Duplex || require("./_stream_duplex");
        options = options || {};
        var isDuplex = stream instanceof Duplex;
        this.objectMode = !!options.objectMode;
        isDuplex && (this.objectMode = this.objectMode || !!options.writableObjectMode);
        var hwm = options.highWaterMark;
        var writableHwm = options.writableHighWaterMark;
        var defaultHwm = this.objectMode ? 16 : 16384;
        this.highWaterMark = hwm || 0 === hwm ? hwm : isDuplex && (writableHwm || 0 === writableHwm) ? writableHwm : defaultHwm;
        this.highWaterMark = Math.floor(this.highWaterMark);
        this.finalCalled = false;
        this.needDrain = false;
        this.ending = false;
        this.ended = false;
        this.finished = false;
        this.destroyed = false;
        var noDecode = false === options.decodeStrings;
        this.decodeStrings = !noDecode;
        this.defaultEncoding = options.defaultEncoding || "utf8";
        this.length = 0;
        this.writing = false;
        this.corked = 0;
        this.sync = true;
        this.bufferProcessing = false;
        this.onwrite = function(er) {
          onwrite(stream, er);
        };
        this.writecb = null;
        this.writelen = 0;
        this.bufferedRequest = null;
        this.lastBufferedRequest = null;
        this.pendingcb = 0;
        this.prefinished = false;
        this.errorEmitted = false;
        this.bufferedRequestCount = 0;
        this.corkedRequestsFree = new CorkedRequest(this);
      }
      WritableState.prototype.getBuffer = function getBuffer() {
        var current = this.bufferedRequest;
        var out = [];
        while (current) {
          out.push(current);
          current = current.next;
        }
        return out;
      };
      (function() {
        try {
          Object.defineProperty(WritableState.prototype, "buffer", {
            get: internalUtil.deprecate(function() {
              return this.getBuffer();
            }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
          });
        } catch (_) {}
      })();
      var realHasInstance;
      if ("function" === typeof Symbol && Symbol.hasInstance && "function" === typeof Function.prototype[Symbol.hasInstance]) {
        realHasInstance = Function.prototype[Symbol.hasInstance];
        Object.defineProperty(Writable, Symbol.hasInstance, {
          value: function(object) {
            if (realHasInstance.call(this, object)) return true;
            if (this !== Writable) return false;
            return object && object._writableState instanceof WritableState;
          }
        });
      } else realHasInstance = function(object) {
        return object instanceof this;
      };
      function Writable(options) {
        Duplex = Duplex || require("./_stream_duplex");
        if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) return new Writable(options);
        this._writableState = new WritableState(options, this);
        this.writable = true;
        if (options) {
          "function" === typeof options.write && (this._write = options.write);
          "function" === typeof options.writev && (this._writev = options.writev);
          "function" === typeof options.destroy && (this._destroy = options.destroy);
          "function" === typeof options.final && (this._final = options.final);
        }
        Stream.call(this);
      }
      Writable.prototype.pipe = function() {
        this.emit("error", new Error("Cannot pipe, not readable"));
      };
      function writeAfterEnd(stream, cb) {
        var er = new Error("write after end");
        stream.emit("error", er);
        pna.nextTick(cb, er);
      }
      function validChunk(stream, state, chunk, cb) {
        var valid = true;
        var er = false;
        null === chunk ? er = new TypeError("May not write null values to stream") : "string" === typeof chunk || void 0 === chunk || state.objectMode || (er = new TypeError("Invalid non-string/buffer chunk"));
        if (er) {
          stream.emit("error", er);
          pna.nextTick(cb, er);
          valid = false;
        }
        return valid;
      }
      Writable.prototype.write = function(chunk, encoding, cb) {
        var state = this._writableState;
        var ret = false;
        var isBuf = !state.objectMode && _isUint8Array(chunk);
        isBuf && !Buffer.isBuffer(chunk) && (chunk = _uint8ArrayToBuffer(chunk));
        if ("function" === typeof encoding) {
          cb = encoding;
          encoding = null;
        }
        isBuf ? encoding = "buffer" : encoding || (encoding = state.defaultEncoding);
        "function" !== typeof cb && (cb = nop);
        if (state.ended) writeAfterEnd(this, cb); else if (isBuf || validChunk(this, state, chunk, cb)) {
          state.pendingcb++;
          ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
        }
        return ret;
      };
      Writable.prototype.cork = function() {
        var state = this._writableState;
        state.corked++;
      };
      Writable.prototype.uncork = function() {
        var state = this._writableState;
        if (state.corked) {
          state.corked--;
          state.writing || state.corked || state.finished || state.bufferProcessing || !state.bufferedRequest || clearBuffer(this, state);
        }
      };
      Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
        "string" === typeof encoding && (encoding = encoding.toLowerCase());
        if (!([ "hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw" ].indexOf((encoding + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + encoding);
        this._writableState.defaultEncoding = encoding;
        return this;
      };
      function decodeChunk(state, chunk, encoding) {
        state.objectMode || false === state.decodeStrings || "string" !== typeof chunk || (chunk = Buffer.from(chunk, encoding));
        return chunk;
      }
      Object.defineProperty(Writable.prototype, "writableHighWaterMark", {
        enumerable: false,
        get: function() {
          return this._writableState.highWaterMark;
        }
      });
      function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
        if (!isBuf) {
          var newChunk = decodeChunk(state, chunk, encoding);
          if (chunk !== newChunk) {
            isBuf = true;
            encoding = "buffer";
            chunk = newChunk;
          }
        }
        var len = state.objectMode ? 1 : chunk.length;
        state.length += len;
        var ret = state.length < state.highWaterMark;
        ret || (state.needDrain = true);
        if (state.writing || state.corked) {
          var last = state.lastBufferedRequest;
          state.lastBufferedRequest = {
            chunk: chunk,
            encoding: encoding,
            isBuf: isBuf,
            callback: cb,
            next: null
          };
          last ? last.next = state.lastBufferedRequest : state.bufferedRequest = state.lastBufferedRequest;
          state.bufferedRequestCount += 1;
        } else doWrite(stream, state, false, len, chunk, encoding, cb);
        return ret;
      }
      function doWrite(stream, state, writev, len, chunk, encoding, cb) {
        state.writelen = len;
        state.writecb = cb;
        state.writing = true;
        state.sync = true;
        writev ? stream._writev(chunk, state.onwrite) : stream._write(chunk, encoding, state.onwrite);
        state.sync = false;
      }
      function onwriteError(stream, state, sync, er, cb) {
        --state.pendingcb;
        if (sync) {
          pna.nextTick(cb, er);
          pna.nextTick(finishMaybe, stream, state);
          stream._writableState.errorEmitted = true;
          stream.emit("error", er);
        } else {
          cb(er);
          stream._writableState.errorEmitted = true;
          stream.emit("error", er);
          finishMaybe(stream, state);
        }
      }
      function onwriteStateUpdate(state) {
        state.writing = false;
        state.writecb = null;
        state.length -= state.writelen;
        state.writelen = 0;
      }
      function onwrite(stream, er) {
        var state = stream._writableState;
        var sync = state.sync;
        var cb = state.writecb;
        onwriteStateUpdate(state);
        if (er) onwriteError(stream, state, sync, er, cb); else {
          var finished = needFinish(state);
          finished || state.corked || state.bufferProcessing || !state.bufferedRequest || clearBuffer(stream, state);
          sync ? asyncWrite(afterWrite, stream, state, finished, cb) : afterWrite(stream, state, finished, cb);
        }
      }
      function afterWrite(stream, state, finished, cb) {
        finished || onwriteDrain(stream, state);
        state.pendingcb--;
        cb();
        finishMaybe(stream, state);
      }
      function onwriteDrain(stream, state) {
        if (0 === state.length && state.needDrain) {
          state.needDrain = false;
          stream.emit("drain");
        }
      }
      function clearBuffer(stream, state) {
        state.bufferProcessing = true;
        var entry = state.bufferedRequest;
        if (stream._writev && entry && entry.next) {
          var l = state.bufferedRequestCount;
          var buffer = new Array(l);
          var holder = state.corkedRequestsFree;
          holder.entry = entry;
          var count = 0;
          var allBuffers = true;
          while (entry) {
            buffer[count] = entry;
            entry.isBuf || (allBuffers = false);
            entry = entry.next;
            count += 1;
          }
          buffer.allBuffers = allBuffers;
          doWrite(stream, state, true, state.length, buffer, "", holder.finish);
          state.pendingcb++;
          state.lastBufferedRequest = null;
          if (holder.next) {
            state.corkedRequestsFree = holder.next;
            holder.next = null;
          } else state.corkedRequestsFree = new CorkedRequest(state);
          state.bufferedRequestCount = 0;
        } else {
          while (entry) {
            var chunk = entry.chunk;
            var encoding = entry.encoding;
            var cb = entry.callback;
            var len = state.objectMode ? 1 : chunk.length;
            doWrite(stream, state, false, len, chunk, encoding, cb);
            entry = entry.next;
            state.bufferedRequestCount--;
            if (state.writing) break;
          }
          null === entry && (state.lastBufferedRequest = null);
        }
        state.bufferedRequest = entry;
        state.bufferProcessing = false;
      }
      Writable.prototype._write = function(chunk, encoding, cb) {
        cb(new Error("_write() is not implemented"));
      };
      Writable.prototype._writev = null;
      Writable.prototype.end = function(chunk, encoding, cb) {
        var state = this._writableState;
        if ("function" === typeof chunk) {
          cb = chunk;
          chunk = null;
          encoding = null;
        } else if ("function" === typeof encoding) {
          cb = encoding;
          encoding = null;
        }
        null !== chunk && void 0 !== chunk && this.write(chunk, encoding);
        if (state.corked) {
          state.corked = 1;
          this.uncork();
        }
        state.ending || state.finished || endWritable(this, state, cb);
      };
      function needFinish(state) {
        return state.ending && 0 === state.length && null === state.bufferedRequest && !state.finished && !state.writing;
      }
      function callFinal(stream, state) {
        stream._final(function(err) {
          state.pendingcb--;
          err && stream.emit("error", err);
          state.prefinished = true;
          stream.emit("prefinish");
          finishMaybe(stream, state);
        });
      }
      function prefinish(stream, state) {
        if (!state.prefinished && !state.finalCalled) if ("function" === typeof stream._final) {
          state.pendingcb++;
          state.finalCalled = true;
          pna.nextTick(callFinal, stream, state);
        } else {
          state.prefinished = true;
          stream.emit("prefinish");
        }
      }
      function finishMaybe(stream, state) {
        var need = needFinish(state);
        if (need) {
          prefinish(stream, state);
          if (0 === state.pendingcb) {
            state.finished = true;
            stream.emit("finish");
          }
        }
        return need;
      }
      function endWritable(stream, state, cb) {
        state.ending = true;
        finishMaybe(stream, state);
        cb && (state.finished ? pna.nextTick(cb) : stream.once("finish", cb));
        state.ended = true;
        stream.writable = false;
      }
      function onCorkedFinish(corkReq, state, err) {
        var entry = corkReq.entry;
        corkReq.entry = null;
        while (entry) {
          var cb = entry.callback;
          state.pendingcb--;
          cb(err);
          entry = entry.next;
        }
        state.corkedRequestsFree ? state.corkedRequestsFree.next = corkReq : state.corkedRequestsFree = corkReq;
      }
      Object.defineProperty(Writable.prototype, "destroyed", {
        get: function() {
          if (void 0 === this._writableState) return false;
          return this._writableState.destroyed;
        },
        set: function(value) {
          if (!this._writableState) return;
          this._writableState.destroyed = value;
        }
      });
      Writable.prototype.destroy = destroyImpl.destroy;
      Writable.prototype._undestroy = destroyImpl.undestroy;
      Writable.prototype._destroy = function(err, cb) {
        this.end();
        cb(err);
      };
    }).call(this, require("_process"), "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    "./_stream_duplex": 128,
    "./internal/streams/destroy": 134,
    "./internal/streams/stream": 135,
    _process: 118,
    "core-util-is": 50,
    inherits: 101,
    "process-nextick-args": 117,
    "safe-buffer": 143,
    "util-deprecate": 154
  } ],
  133: [ function(require, module, exports) {
    "use strict";
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    var Buffer = require("safe-buffer").Buffer;
    var util = require("util");
    function copyBuffer(src, target, offset) {
      src.copy(target, offset);
    }
    module.exports = function() {
      function BufferList() {
        _classCallCheck(this, BufferList);
        this.head = null;
        this.tail = null;
        this.length = 0;
      }
      BufferList.prototype.push = function push(v) {
        var entry = {
          data: v,
          next: null
        };
        this.length > 0 ? this.tail.next = entry : this.head = entry;
        this.tail = entry;
        ++this.length;
      };
      BufferList.prototype.unshift = function unshift(v) {
        var entry = {
          data: v,
          next: this.head
        };
        0 === this.length && (this.tail = entry);
        this.head = entry;
        ++this.length;
      };
      BufferList.prototype.shift = function shift() {
        if (0 === this.length) return;
        var ret = this.head.data;
        1 === this.length ? this.head = this.tail = null : this.head = this.head.next;
        --this.length;
        return ret;
      };
      BufferList.prototype.clear = function clear() {
        this.head = this.tail = null;
        this.length = 0;
      };
      BufferList.prototype.join = function join(s) {
        if (0 === this.length) return "";
        var p = this.head;
        var ret = "" + p.data;
        while (p = p.next) ret += s + p.data;
        return ret;
      };
      BufferList.prototype.concat = function concat(n) {
        if (0 === this.length) return Buffer.alloc(0);
        if (1 === this.length) return this.head.data;
        var ret = Buffer.allocUnsafe(n >>> 0);
        var p = this.head;
        var i = 0;
        while (p) {
          copyBuffer(p.data, ret, i);
          i += p.data.length;
          p = p.next;
        }
        return ret;
      };
      return BufferList;
    }();
    util && util.inspect && util.inspect.custom && (module.exports.prototype[util.inspect.custom] = function() {
      var obj = util.inspect({
        length: this.length
      });
      return this.constructor.name + " " + obj;
    });
  }, {
    "safe-buffer": 143,
    util: 18
  } ],
  134: [ function(require, module, exports) {
    "use strict";
    var pna = require("process-nextick-args");
    function destroy(err, cb) {
      var _this = this;
      var readableDestroyed = this._readableState && this._readableState.destroyed;
      var writableDestroyed = this._writableState && this._writableState.destroyed;
      if (readableDestroyed || writableDestroyed) {
        cb ? cb(err) : !err || this._writableState && this._writableState.errorEmitted || pna.nextTick(emitErrorNT, this, err);
        return this;
      }
      this._readableState && (this._readableState.destroyed = true);
      this._writableState && (this._writableState.destroyed = true);
      this._destroy(err || null, function(err) {
        if (!cb && err) {
          pna.nextTick(emitErrorNT, _this, err);
          _this._writableState && (_this._writableState.errorEmitted = true);
        } else cb && cb(err);
      });
      return this;
    }
    function undestroy() {
      if (this._readableState) {
        this._readableState.destroyed = false;
        this._readableState.reading = false;
        this._readableState.ended = false;
        this._readableState.endEmitted = false;
      }
      if (this._writableState) {
        this._writableState.destroyed = false;
        this._writableState.ended = false;
        this._writableState.ending = false;
        this._writableState.finished = false;
        this._writableState.errorEmitted = false;
      }
    }
    function emitErrorNT(self, err) {
      self.emit("error", err);
    }
    module.exports = {
      destroy: destroy,
      undestroy: undestroy
    };
  }, {
    "process-nextick-args": 117
  } ],
  135: [ function(require, module, exports) {
    module.exports = require("events").EventEmitter;
  }, {
    events: 83
  } ],
  136: [ function(require, module, exports) {
    arguments[4][48][0].apply(exports, arguments);
  }, {
    dup: 48
  } ],
  137: [ function(require, module, exports) {
    "use strict";
    var Buffer = require("safe-buffer").Buffer;
    var isEncoding = Buffer.isEncoding || function(encoding) {
      encoding = "" + encoding;
      switch (encoding && encoding.toLowerCase()) {
       case "hex":
       case "utf8":
       case "utf-8":
       case "ascii":
       case "binary":
       case "base64":
       case "ucs2":
       case "ucs-2":
       case "utf16le":
       case "utf-16le":
       case "raw":
        return true;

       default:
        return false;
      }
    };
    function _normalizeEncoding(enc) {
      if (!enc) return "utf8";
      var retried;
      while (true) switch (enc) {
       case "utf8":
       case "utf-8":
        return "utf8";

       case "ucs2":
       case "ucs-2":
       case "utf16le":
       case "utf-16le":
        return "utf16le";

       case "latin1":
       case "binary":
        return "latin1";

       case "base64":
       case "ascii":
       case "hex":
        return enc;

       default:
        if (retried) return;
        enc = ("" + enc).toLowerCase();
        retried = true;
      }
    }
    function normalizeEncoding(enc) {
      var nenc = _normalizeEncoding(enc);
      if ("string" !== typeof nenc && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error("Unknown encoding: " + enc);
      return nenc || enc;
    }
    exports.StringDecoder = StringDecoder;
    function StringDecoder(encoding) {
      this.encoding = normalizeEncoding(encoding);
      var nb;
      switch (this.encoding) {
       case "utf16le":
        this.text = utf16Text;
        this.end = utf16End;
        nb = 4;
        break;

       case "utf8":
        this.fillLast = utf8FillLast;
        nb = 4;
        break;

       case "base64":
        this.text = base64Text;
        this.end = base64End;
        nb = 3;
        break;

       default:
        this.write = simpleWrite;
        this.end = simpleEnd;
        return;
      }
      this.lastNeed = 0;
      this.lastTotal = 0;
      this.lastChar = Buffer.allocUnsafe(nb);
    }
    StringDecoder.prototype.write = function(buf) {
      if (0 === buf.length) return "";
      var r;
      var i;
      if (this.lastNeed) {
        r = this.fillLast(buf);
        if (void 0 === r) return "";
        i = this.lastNeed;
        this.lastNeed = 0;
      } else i = 0;
      if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
      return r || "";
    };
    StringDecoder.prototype.end = utf8End;
    StringDecoder.prototype.text = utf8Text;
    StringDecoder.prototype.fillLast = function(buf) {
      if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
      }
      buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
      this.lastNeed -= buf.length;
    };
    function utf8CheckByte(byte) {
      if (byte <= 127) return 0;
      if (byte >> 5 === 6) return 2;
      if (byte >> 4 === 14) return 3;
      if (byte >> 3 === 30) return 4;
      return byte >> 6 === 2 ? -1 : -2;
    }
    function utf8CheckIncomplete(self, buf, i) {
      var j = buf.length - 1;
      if (j < i) return 0;
      var nb = utf8CheckByte(buf[j]);
      if (nb >= 0) {
        nb > 0 && (self.lastNeed = nb - 1);
        return nb;
      }
      if (--j < i || -2 === nb) return 0;
      nb = utf8CheckByte(buf[j]);
      if (nb >= 0) {
        nb > 0 && (self.lastNeed = nb - 2);
        return nb;
      }
      if (--j < i || -2 === nb) return 0;
      nb = utf8CheckByte(buf[j]);
      if (nb >= 0) {
        nb > 0 && (2 === nb ? nb = 0 : self.lastNeed = nb - 3);
        return nb;
      }
      return 0;
    }
    function utf8CheckExtraBytes(self, buf, p) {
      if (128 !== (192 & buf[0])) {
        self.lastNeed = 0;
        return "\ufffd";
      }
      if (self.lastNeed > 1 && buf.length > 1) {
        if (128 !== (192 & buf[1])) {
          self.lastNeed = 1;
          return "\ufffd";
        }
        if (self.lastNeed > 2 && buf.length > 2 && 128 !== (192 & buf[2])) {
          self.lastNeed = 2;
          return "\ufffd";
        }
      }
    }
    function utf8FillLast(buf) {
      var p = this.lastTotal - this.lastNeed;
      var r = utf8CheckExtraBytes(this, buf, p);
      if (void 0 !== r) return r;
      if (this.lastNeed <= buf.length) {
        buf.copy(this.lastChar, p, 0, this.lastNeed);
        return this.lastChar.toString(this.encoding, 0, this.lastTotal);
      }
      buf.copy(this.lastChar, p, 0, buf.length);
      this.lastNeed -= buf.length;
    }
    function utf8Text(buf, i) {
      var total = utf8CheckIncomplete(this, buf, i);
      if (!this.lastNeed) return buf.toString("utf8", i);
      this.lastTotal = total;
      var end = buf.length - (total - this.lastNeed);
      buf.copy(this.lastChar, 0, end);
      return buf.toString("utf8", i, end);
    }
    function utf8End(buf) {
      var r = buf && buf.length ? this.write(buf) : "";
      if (this.lastNeed) return r + "\ufffd";
      return r;
    }
    function utf16Text(buf, i) {
      if ((buf.length - i) % 2 === 0) {
        var r = buf.toString("utf16le", i);
        if (r) {
          var c = r.charCodeAt(r.length - 1);
          if (c >= 55296 && c <= 56319) {
            this.lastNeed = 2;
            this.lastTotal = 4;
            this.lastChar[0] = buf[buf.length - 2];
            this.lastChar[1] = buf[buf.length - 1];
            return r.slice(0, -1);
          }
        }
        return r;
      }
      this.lastNeed = 1;
      this.lastTotal = 2;
      this.lastChar[0] = buf[buf.length - 1];
      return buf.toString("utf16le", i, buf.length - 1);
    }
    function utf16End(buf) {
      var r = buf && buf.length ? this.write(buf) : "";
      if (this.lastNeed) {
        var end = this.lastTotal - this.lastNeed;
        return r + this.lastChar.toString("utf16le", 0, end);
      }
      return r;
    }
    function base64Text(buf, i) {
      var n = (buf.length - i) % 3;
      if (0 === n) return buf.toString("base64", i);
      this.lastNeed = 3 - n;
      this.lastTotal = 3;
      if (1 === n) this.lastChar[0] = buf[buf.length - 1]; else {
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
      }
      return buf.toString("base64", i, buf.length - n);
    }
    function base64End(buf) {
      var r = buf && buf.length ? this.write(buf) : "";
      if (this.lastNeed) return r + this.lastChar.toString("base64", 0, 3 - this.lastNeed);
      return r;
    }
    function simpleWrite(buf) {
      return buf.toString(this.encoding);
    }
    function simpleEnd(buf) {
      return buf && buf.length ? this.write(buf) : "";
    }
  }, {
    "safe-buffer": 143
  } ],
  138: [ function(require, module, exports) {
    module.exports = require("./readable").PassThrough;
  }, {
    "./readable": 139
  } ],
  139: [ function(require, module, exports) {
    exports = module.exports = require("./lib/_stream_readable.js");
    exports.Stream = exports;
    exports.Readable = exports;
    exports.Writable = require("./lib/_stream_writable.js");
    exports.Duplex = require("./lib/_stream_duplex.js");
    exports.Transform = require("./lib/_stream_transform.js");
    exports.PassThrough = require("./lib/_stream_passthrough.js");
  }, {
    "./lib/_stream_duplex.js": 128,
    "./lib/_stream_passthrough.js": 129,
    "./lib/_stream_readable.js": 130,
    "./lib/_stream_transform.js": 131,
    "./lib/_stream_writable.js": 132
  } ],
  140: [ function(require, module, exports) {
    module.exports = require("./readable").Transform;
  }, {
    "./readable": 139
  } ],
  141: [ function(require, module, exports) {
    module.exports = require("./lib/_stream_writable.js");
  }, {
    "./lib/_stream_writable.js": 132
  } ],
  142: [ function(require, module, exports) {
    "use strict";
    var Buffer = require("buffer").Buffer;
    var inherits = require("inherits");
    var HashBase = require("hash-base");
    var ARRAY16 = new Array(16);
    var zl = [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13 ];
    var zr = [ 5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11 ];
    var sl = [ 11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6 ];
    var sr = [ 8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11 ];
    var hl = [ 0, 1518500249, 1859775393, 2400959708, 2840853838 ];
    var hr = [ 1352829926, 1548603684, 1836072691, 2053994217, 0 ];
    function RIPEMD160() {
      HashBase.call(this, 64);
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
    }
    inherits(RIPEMD160, HashBase);
    RIPEMD160.prototype._update = function() {
      var words = ARRAY16;
      for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(4 * j);
      var al = 0 | this._a;
      var bl = 0 | this._b;
      var cl = 0 | this._c;
      var dl = 0 | this._d;
      var el = 0 | this._e;
      var ar = 0 | this._a;
      var br = 0 | this._b;
      var cr = 0 | this._c;
      var dr = 0 | this._d;
      var er = 0 | this._e;
      for (var i = 0; i < 80; i += 1) {
        var tl;
        var tr;
        if (i < 16) {
          tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);
          tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);
        } else if (i < 32) {
          tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);
          tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);
        } else if (i < 48) {
          tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);
          tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);
        } else if (i < 64) {
          tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);
          tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);
        } else {
          tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);
          tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);
        }
        al = el;
        el = dl;
        dl = rotl(cl, 10);
        cl = bl;
        bl = tl;
        ar = er;
        er = dr;
        dr = rotl(cr, 10);
        cr = br;
        br = tr;
      }
      var t = this._b + cl + dr | 0;
      this._b = this._c + dl + er | 0;
      this._c = this._d + el + ar | 0;
      this._d = this._e + al + br | 0;
      this._e = this._a + bl + cr | 0;
      this._a = t;
    };
    RIPEMD160.prototype._digest = function() {
      this._block[this._blockOffset++] = 128;
      if (this._blockOffset > 56) {
        this._block.fill(0, this._blockOffset, 64);
        this._update();
        this._blockOffset = 0;
      }
      this._block.fill(0, this._blockOffset, 56);
      this._block.writeUInt32LE(this._length[0], 56);
      this._block.writeUInt32LE(this._length[1], 60);
      this._update();
      var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20);
      buffer.writeInt32LE(this._a, 0);
      buffer.writeInt32LE(this._b, 4);
      buffer.writeInt32LE(this._c, 8);
      buffer.writeInt32LE(this._d, 12);
      buffer.writeInt32LE(this._e, 16);
      return buffer;
    };
    function rotl(x, n) {
      return x << n | x >>> 32 - n;
    }
    function fn1(a, b, c, d, e, m, k, s) {
      return rotl(a + (b ^ c ^ d) + m + k | 0, s) + e | 0;
    }
    function fn2(a, b, c, d, e, m, k, s) {
      return rotl(a + (b & c | ~b & d) + m + k | 0, s) + e | 0;
    }
    function fn3(a, b, c, d, e, m, k, s) {
      return rotl(a + ((b | ~c) ^ d) + m + k | 0, s) + e | 0;
    }
    function fn4(a, b, c, d, e, m, k, s) {
      return rotl(a + (b & d | c & ~d) + m + k | 0, s) + e | 0;
    }
    function fn5(a, b, c, d, e, m, k, s) {
      return rotl(a + (b ^ (c | ~d)) + m + k | 0, s) + e | 0;
    }
    module.exports = RIPEMD160;
  }, {
    buffer: 47,
    "hash-base": 85,
    inherits: 101
  } ],
  143: [ function(require, module, exports) {
    var buffer = require("buffer");
    var Buffer = buffer.Buffer;
    function copyProps(src, dst) {
      for (var key in src) dst[key] = src[key];
    }
    if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) module.exports = buffer; else {
      copyProps(buffer, exports);
      exports.Buffer = SafeBuffer;
    }
    function SafeBuffer(arg, encodingOrOffset, length) {
      return Buffer(arg, encodingOrOffset, length);
    }
    copyProps(Buffer, SafeBuffer);
    SafeBuffer.from = function(arg, encodingOrOffset, length) {
      if ("number" === typeof arg) throw new TypeError("Argument must not be a number");
      return Buffer(arg, encodingOrOffset, length);
    };
    SafeBuffer.alloc = function(size, fill, encoding) {
      if ("number" !== typeof size) throw new TypeError("Argument must be a number");
      var buf = Buffer(size);
      void 0 !== fill ? "string" === typeof encoding ? buf.fill(fill, encoding) : buf.fill(fill) : buf.fill(0);
      return buf;
    };
    SafeBuffer.allocUnsafe = function(size) {
      if ("number" !== typeof size) throw new TypeError("Argument must be a number");
      return Buffer(size);
    };
    SafeBuffer.allocUnsafeSlow = function(size) {
      if ("number" !== typeof size) throw new TypeError("Argument must be a number");
      return buffer.SlowBuffer(size);
    };
  }, {
    buffer: 47
  } ],
  144: [ function(require, module, exports) {
    var Buffer = require("safe-buffer").Buffer;
    function Hash(blockSize, finalSize) {
      this._block = Buffer.alloc(blockSize);
      this._finalSize = finalSize;
      this._blockSize = blockSize;
      this._len = 0;
    }
    Hash.prototype.update = function(data, enc) {
      if ("string" === typeof data) {
        enc = enc || "utf8";
        data = Buffer.from(data, enc);
      }
      var block = this._block;
      var blockSize = this._blockSize;
      var length = data.length;
      var accum = this._len;
      for (var offset = 0; offset < length; ) {
        var assigned = accum % blockSize;
        var remainder = Math.min(length - offset, blockSize - assigned);
        for (var i = 0; i < remainder; i++) block[assigned + i] = data[offset + i];
        accum += remainder;
        offset += remainder;
        accum % blockSize === 0 && this._update(block);
      }
      this._len += length;
      return this;
    };
    Hash.prototype.digest = function(enc) {
      var rem = this._len % this._blockSize;
      this._block[rem] = 128;
      this._block.fill(0, rem + 1);
      if (rem >= this._finalSize) {
        this._update(this._block);
        this._block.fill(0);
      }
      var bits = 8 * this._len;
      if (bits <= 4294967295) this._block.writeUInt32BE(bits, this._blockSize - 4); else {
        var lowBits = (4294967295 & bits) >>> 0;
        var highBits = (bits - lowBits) / 4294967296;
        this._block.writeUInt32BE(highBits, this._blockSize - 8);
        this._block.writeUInt32BE(lowBits, this._blockSize - 4);
      }
      this._update(this._block);
      var hash = this._hash();
      return enc ? hash.toString(enc) : hash;
    };
    Hash.prototype._update = function() {
      throw new Error("_update must be implemented by subclass");
    };
    module.exports = Hash;
  }, {
    "safe-buffer": 143
  } ],
  145: [ function(require, module, exports) {
    var exports = module.exports = function SHA(algorithm) {
      algorithm = algorithm.toLowerCase();
      var Algorithm = exports[algorithm];
      if (!Algorithm) throw new Error(algorithm + " is not supported (we accept pull requests)");
      return new Algorithm();
    };
    exports.sha = require("./sha");
    exports.sha1 = require("./sha1");
    exports.sha224 = require("./sha224");
    exports.sha256 = require("./sha256");
    exports.sha384 = require("./sha384");
    exports.sha512 = require("./sha512");
  }, {
    "./sha": 146,
    "./sha1": 147,
    "./sha224": 148,
    "./sha256": 149,
    "./sha384": 150,
    "./sha512": 151
  } ],
  146: [ function(require, module, exports) {
    var inherits = require("inherits");
    var Hash = require("./hash");
    var Buffer = require("safe-buffer").Buffer;
    var K = [ 1518500249, 1859775393, -1894007588, -899497514 ];
    var W = new Array(80);
    function Sha() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha, Hash);
    Sha.prototype.init = function() {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    function rotl5(num) {
      return num << 5 | num >>> 27;
    }
    function rotl30(num) {
      return num << 30 | num >>> 2;
    }
    function ft(s, b, c, d) {
      if (0 === s) return b & c | ~b & d;
      if (2 === s) return b & c | b & d | c & d;
      return b ^ c ^ d;
    }
    Sha.prototype._update = function(M) {
      var W = this._w;
      var a = 0 | this._a;
      var b = 0 | this._b;
      var c = 0 | this._c;
      var d = 0 | this._d;
      var e = 0 | this._e;
      for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(4 * i);
      for (;i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
      for (var j = 0; j < 80; ++j) {
        var s = ~~(j / 20);
        var t = rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s] | 0;
        e = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e + this._e | 0;
    };
    Sha.prototype._hash = function() {
      var H = Buffer.allocUnsafe(20);
      H.writeInt32BE(0 | this._a, 0);
      H.writeInt32BE(0 | this._b, 4);
      H.writeInt32BE(0 | this._c, 8);
      H.writeInt32BE(0 | this._d, 12);
      H.writeInt32BE(0 | this._e, 16);
      return H;
    };
    module.exports = Sha;
  }, {
    "./hash": 144,
    inherits: 101,
    "safe-buffer": 143
  } ],
  147: [ function(require, module, exports) {
    var inherits = require("inherits");
    var Hash = require("./hash");
    var Buffer = require("safe-buffer").Buffer;
    var K = [ 1518500249, 1859775393, -1894007588, -899497514 ];
    var W = new Array(80);
    function Sha1() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha1, Hash);
    Sha1.prototype.init = function() {
      this._a = 1732584193;
      this._b = 4023233417;
      this._c = 2562383102;
      this._d = 271733878;
      this._e = 3285377520;
      return this;
    };
    function rotl1(num) {
      return num << 1 | num >>> 31;
    }
    function rotl5(num) {
      return num << 5 | num >>> 27;
    }
    function rotl30(num) {
      return num << 30 | num >>> 2;
    }
    function ft(s, b, c, d) {
      if (0 === s) return b & c | ~b & d;
      if (2 === s) return b & c | b & d | c & d;
      return b ^ c ^ d;
    }
    Sha1.prototype._update = function(M) {
      var W = this._w;
      var a = 0 | this._a;
      var b = 0 | this._b;
      var c = 0 | this._c;
      var d = 0 | this._d;
      var e = 0 | this._e;
      for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(4 * i);
      for (;i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]);
      for (var j = 0; j < 80; ++j) {
        var s = ~~(j / 20);
        var t = rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s] | 0;
        e = d;
        d = c;
        c = rotl30(b);
        b = a;
        a = t;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e + this._e | 0;
    };
    Sha1.prototype._hash = function() {
      var H = Buffer.allocUnsafe(20);
      H.writeInt32BE(0 | this._a, 0);
      H.writeInt32BE(0 | this._b, 4);
      H.writeInt32BE(0 | this._c, 8);
      H.writeInt32BE(0 | this._d, 12);
      H.writeInt32BE(0 | this._e, 16);
      return H;
    };
    module.exports = Sha1;
  }, {
    "./hash": 144,
    inherits: 101,
    "safe-buffer": 143
  } ],
  148: [ function(require, module, exports) {
    var inherits = require("inherits");
    var Sha256 = require("./sha256");
    var Hash = require("./hash");
    var Buffer = require("safe-buffer").Buffer;
    var W = new Array(64);
    function Sha224() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha224, Sha256);
    Sha224.prototype.init = function() {
      this._a = 3238371032;
      this._b = 914150663;
      this._c = 812702999;
      this._d = 4144912697;
      this._e = 4290775857;
      this._f = 1750603025;
      this._g = 1694076839;
      this._h = 3204075428;
      return this;
    };
    Sha224.prototype._hash = function() {
      var H = Buffer.allocUnsafe(28);
      H.writeInt32BE(this._a, 0);
      H.writeInt32BE(this._b, 4);
      H.writeInt32BE(this._c, 8);
      H.writeInt32BE(this._d, 12);
      H.writeInt32BE(this._e, 16);
      H.writeInt32BE(this._f, 20);
      H.writeInt32BE(this._g, 24);
      return H;
    };
    module.exports = Sha224;
  }, {
    "./hash": 144,
    "./sha256": 149,
    inherits: 101,
    "safe-buffer": 143
  } ],
  149: [ function(require, module, exports) {
    var inherits = require("inherits");
    var Hash = require("./hash");
    var Buffer = require("safe-buffer").Buffer;
    var K = [ 1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298 ];
    var W = new Array(64);
    function Sha256() {
      this.init();
      this._w = W;
      Hash.call(this, 64, 56);
    }
    inherits(Sha256, Hash);
    Sha256.prototype.init = function() {
      this._a = 1779033703;
      this._b = 3144134277;
      this._c = 1013904242;
      this._d = 2773480762;
      this._e = 1359893119;
      this._f = 2600822924;
      this._g = 528734635;
      this._h = 1541459225;
      return this;
    };
    function ch(x, y, z) {
      return z ^ x & (y ^ z);
    }
    function maj(x, y, z) {
      return x & y | z & (x | y);
    }
    function sigma0(x) {
      return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10);
    }
    function sigma1(x) {
      return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7);
    }
    function gamma0(x) {
      return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ x >>> 3;
    }
    function gamma1(x) {
      return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ x >>> 10;
    }
    Sha256.prototype._update = function(M) {
      var W = this._w;
      var a = 0 | this._a;
      var b = 0 | this._b;
      var c = 0 | this._c;
      var d = 0 | this._d;
      var e = 0 | this._e;
      var f = 0 | this._f;
      var g = 0 | this._g;
      var h = 0 | this._h;
      for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(4 * i);
      for (;i < 64; ++i) W[i] = gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16] | 0;
      for (var j = 0; j < 64; ++j) {
        var T1 = h + sigma1(e) + ch(e, f, g) + K[j] + W[j] | 0;
        var T2 = sigma0(a) + maj(a, b, c) | 0;
        h = g;
        g = f;
        f = e;
        e = d + T1 | 0;
        d = c;
        c = b;
        b = a;
        a = T1 + T2 | 0;
      }
      this._a = a + this._a | 0;
      this._b = b + this._b | 0;
      this._c = c + this._c | 0;
      this._d = d + this._d | 0;
      this._e = e + this._e | 0;
      this._f = f + this._f | 0;
      this._g = g + this._g | 0;
      this._h = h + this._h | 0;
    };
    Sha256.prototype._hash = function() {
      var H = Buffer.allocUnsafe(32);
      H.writeInt32BE(this._a, 0);
      H.writeInt32BE(this._b, 4);
      H.writeInt32BE(this._c, 8);
      H.writeInt32BE(this._d, 12);
      H.writeInt32BE(this._e, 16);
      H.writeInt32BE(this._f, 20);
      H.writeInt32BE(this._g, 24);
      H.writeInt32BE(this._h, 28);
      return H;
    };
    module.exports = Sha256;
  }, {
    "./hash": 144,
    inherits: 101,
    "safe-buffer": 143
  } ],
  150: [ function(require, module, exports) {
    var inherits = require("inherits");
    var SHA512 = require("./sha512");
    var Hash = require("./hash");
    var Buffer = require("safe-buffer").Buffer;
    var W = new Array(160);
    function Sha384() {
      this.init();
      this._w = W;
      Hash.call(this, 128, 112);
    }
    inherits(Sha384, SHA512);
    Sha384.prototype.init = function() {
      this._ah = 3418070365;
      this._bh = 1654270250;
      this._ch = 2438529370;
      this._dh = 355462360;
      this._eh = 1731405415;
      this._fh = 2394180231;
      this._gh = 3675008525;
      this._hh = 1203062813;
      this._al = 3238371032;
      this._bl = 914150663;
      this._cl = 812702999;
      this._dl = 4144912697;
      this._el = 4290775857;
      this._fl = 1750603025;
      this._gl = 1694076839;
      this._hl = 3204075428;
      return this;
    };
    Sha384.prototype._hash = function() {
      var H = Buffer.allocUnsafe(48);
      function writeInt64BE(h, l, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l, offset + 4);
      }
      writeInt64BE(this._ah, this._al, 0);
      writeInt64BE(this._bh, this._bl, 8);
      writeInt64BE(this._ch, this._cl, 16);
      writeInt64BE(this._dh, this._dl, 24);
      writeInt64BE(this._eh, this._el, 32);
      writeInt64BE(this._fh, this._fl, 40);
      return H;
    };
    module.exports = Sha384;
  }, {
    "./hash": 144,
    "./sha512": 151,
    inherits: 101,
    "safe-buffer": 143
  } ],
  151: [ function(require, module, exports) {
    var inherits = require("inherits");
    var Hash = require("./hash");
    var Buffer = require("safe-buffer").Buffer;
    var K = [ 1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591 ];
    var W = new Array(160);
    function Sha512() {
      this.init();
      this._w = W;
      Hash.call(this, 128, 112);
    }
    inherits(Sha512, Hash);
    Sha512.prototype.init = function() {
      this._ah = 1779033703;
      this._bh = 3144134277;
      this._ch = 1013904242;
      this._dh = 2773480762;
      this._eh = 1359893119;
      this._fh = 2600822924;
      this._gh = 528734635;
      this._hh = 1541459225;
      this._al = 4089235720;
      this._bl = 2227873595;
      this._cl = 4271175723;
      this._dl = 1595750129;
      this._el = 2917565137;
      this._fl = 725511199;
      this._gl = 4215389547;
      this._hl = 327033209;
      return this;
    };
    function Ch(x, y, z) {
      return z ^ x & (y ^ z);
    }
    function maj(x, y, z) {
      return x & y | z & (x | y);
    }
    function sigma0(x, xl) {
      return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25);
    }
    function sigma1(x, xl) {
      return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23);
    }
    function Gamma0(x, xl) {
      return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ x >>> 7;
    }
    function Gamma0l(x, xl) {
      return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25);
    }
    function Gamma1(x, xl) {
      return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ x >>> 6;
    }
    function Gamma1l(x, xl) {
      return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26);
    }
    function getCarry(a, b) {
      return a >>> 0 < b >>> 0 ? 1 : 0;
    }
    Sha512.prototype._update = function(M) {
      var W = this._w;
      var ah = 0 | this._ah;
      var bh = 0 | this._bh;
      var ch = 0 | this._ch;
      var dh = 0 | this._dh;
      var eh = 0 | this._eh;
      var fh = 0 | this._fh;
      var gh = 0 | this._gh;
      var hh = 0 | this._hh;
      var al = 0 | this._al;
      var bl = 0 | this._bl;
      var cl = 0 | this._cl;
      var dl = 0 | this._dl;
      var el = 0 | this._el;
      var fl = 0 | this._fl;
      var gl = 0 | this._gl;
      var hl = 0 | this._hl;
      for (var i = 0; i < 32; i += 2) {
        W[i] = M.readInt32BE(4 * i);
        W[i + 1] = M.readInt32BE(4 * i + 4);
      }
      for (;i < 160; i += 2) {
        var xh = W[i - 30];
        var xl = W[i - 30 + 1];
        var gamma0 = Gamma0(xh, xl);
        var gamma0l = Gamma0l(xl, xh);
        xh = W[i - 4];
        xl = W[i - 4 + 1];
        var gamma1 = Gamma1(xh, xl);
        var gamma1l = Gamma1l(xl, xh);
        var Wi7h = W[i - 14];
        var Wi7l = W[i - 14 + 1];
        var Wi16h = W[i - 32];
        var Wi16l = W[i - 32 + 1];
        var Wil = gamma0l + Wi7l | 0;
        var Wih = gamma0 + Wi7h + getCarry(Wil, gamma0l) | 0;
        Wil = Wil + gamma1l | 0;
        Wih = Wih + gamma1 + getCarry(Wil, gamma1l) | 0;
        Wil = Wil + Wi16l | 0;
        Wih = Wih + Wi16h + getCarry(Wil, Wi16l) | 0;
        W[i] = Wih;
        W[i + 1] = Wil;
      }
      for (var j = 0; j < 160; j += 2) {
        Wih = W[j];
        Wil = W[j + 1];
        var majh = maj(ah, bh, ch);
        var majl = maj(al, bl, cl);
        var sigma0h = sigma0(ah, al);
        var sigma0l = sigma0(al, ah);
        var sigma1h = sigma1(eh, el);
        var sigma1l = sigma1(el, eh);
        var Kih = K[j];
        var Kil = K[j + 1];
        var chh = Ch(eh, fh, gh);
        var chl = Ch(el, fl, gl);
        var t1l = hl + sigma1l | 0;
        var t1h = hh + sigma1h + getCarry(t1l, hl) | 0;
        t1l = t1l + chl | 0;
        t1h = t1h + chh + getCarry(t1l, chl) | 0;
        t1l = t1l + Kil | 0;
        t1h = t1h + Kih + getCarry(t1l, Kil) | 0;
        t1l = t1l + Wil | 0;
        t1h = t1h + Wih + getCarry(t1l, Wil) | 0;
        var t2l = sigma0l + majl | 0;
        var t2h = sigma0h + majh + getCarry(t2l, sigma0l) | 0;
        hh = gh;
        hl = gl;
        gh = fh;
        gl = fl;
        fh = eh;
        fl = el;
        el = dl + t1l | 0;
        eh = dh + t1h + getCarry(el, dl) | 0;
        dh = ch;
        dl = cl;
        ch = bh;
        cl = bl;
        bh = ah;
        bl = al;
        al = t1l + t2l | 0;
        ah = t1h + t2h + getCarry(al, t1l) | 0;
      }
      this._al = this._al + al | 0;
      this._bl = this._bl + bl | 0;
      this._cl = this._cl + cl | 0;
      this._dl = this._dl + dl | 0;
      this._el = this._el + el | 0;
      this._fl = this._fl + fl | 0;
      this._gl = this._gl + gl | 0;
      this._hl = this._hl + hl | 0;
      this._ah = this._ah + ah + getCarry(this._al, al) | 0;
      this._bh = this._bh + bh + getCarry(this._bl, bl) | 0;
      this._ch = this._ch + ch + getCarry(this._cl, cl) | 0;
      this._dh = this._dh + dh + getCarry(this._dl, dl) | 0;
      this._eh = this._eh + eh + getCarry(this._el, el) | 0;
      this._fh = this._fh + fh + getCarry(this._fl, fl) | 0;
      this._gh = this._gh + gh + getCarry(this._gl, gl) | 0;
      this._hh = this._hh + hh + getCarry(this._hl, hl) | 0;
    };
    Sha512.prototype._hash = function() {
      var H = Buffer.allocUnsafe(64);
      function writeInt64BE(h, l, offset) {
        H.writeInt32BE(h, offset);
        H.writeInt32BE(l, offset + 4);
      }
      writeInt64BE(this._ah, this._al, 0);
      writeInt64BE(this._bh, this._bl, 8);
      writeInt64BE(this._ch, this._cl, 16);
      writeInt64BE(this._dh, this._dl, 24);
      writeInt64BE(this._eh, this._el, 32);
      writeInt64BE(this._fh, this._fl, 40);
      writeInt64BE(this._gh, this._gl, 48);
      writeInt64BE(this._hh, this._hl, 56);
      return H;
    };
    module.exports = Sha512;
  }, {
    "./hash": 144,
    inherits: 101,
    "safe-buffer": 143
  } ],
  152: [ function(require, module, exports) {
    module.exports = Stream;
    var EE = require("events").EventEmitter;
    var inherits = require("inherits");
    inherits(Stream, EE);
    Stream.Readable = require("readable-stream/readable.js");
    Stream.Writable = require("readable-stream/writable.js");
    Stream.Duplex = require("readable-stream/duplex.js");
    Stream.Transform = require("readable-stream/transform.js");
    Stream.PassThrough = require("readable-stream/passthrough.js");
    Stream.Stream = Stream;
    function Stream() {
      EE.call(this);
    }
    Stream.prototype.pipe = function(dest, options) {
      var source = this;
      function ondata(chunk) {
        dest.writable && false === dest.write(chunk) && source.pause && source.pause();
      }
      source.on("data", ondata);
      function ondrain() {
        source.readable && source.resume && source.resume();
      }
      dest.on("drain", ondrain);
      if (!dest._isStdio && (!options || false !== options.end)) {
        source.on("end", onend);
        source.on("close", onclose);
      }
      var didOnEnd = false;
      function onend() {
        if (didOnEnd) return;
        didOnEnd = true;
        dest.end();
      }
      function onclose() {
        if (didOnEnd) return;
        didOnEnd = true;
        "function" === typeof dest.destroy && dest.destroy();
      }
      function onerror(er) {
        cleanup();
        if (0 === EE.listenerCount(this, "error")) throw er;
      }
      source.on("error", onerror);
      dest.on("error", onerror);
      function cleanup() {
        source.removeListener("data", ondata);
        dest.removeListener("drain", ondrain);
        source.removeListener("end", onend);
        source.removeListener("close", onclose);
        source.removeListener("error", onerror);
        dest.removeListener("error", onerror);
        source.removeListener("end", cleanup);
        source.removeListener("close", cleanup);
        dest.removeListener("close", cleanup);
      }
      source.on("end", cleanup);
      source.on("close", cleanup);
      dest.on("close", cleanup);
      dest.emit("pipe", source);
      return dest;
    };
  }, {
    events: 83,
    inherits: 101,
    "readable-stream/duplex.js": 127,
    "readable-stream/passthrough.js": 138,
    "readable-stream/readable.js": 139,
    "readable-stream/transform.js": 140,
    "readable-stream/writable.js": 141
  } ],
  153: [ function(require, module, exports) {
    var Buffer = require("buffer").Buffer;
    var isBufferEncoding = Buffer.isEncoding || function(encoding) {
      switch (encoding && encoding.toLowerCase()) {
       case "hex":
       case "utf8":
       case "utf-8":
       case "ascii":
       case "binary":
       case "base64":
       case "ucs2":
       case "ucs-2":
       case "utf16le":
       case "utf-16le":
       case "raw":
        return true;

       default:
        return false;
      }
    };
    function assertEncoding(encoding) {
      if (encoding && !isBufferEncoding(encoding)) throw new Error("Unknown encoding: " + encoding);
    }
    var StringDecoder = exports.StringDecoder = function(encoding) {
      this.encoding = (encoding || "utf8").toLowerCase().replace(/[-_]/, "");
      assertEncoding(encoding);
      switch (this.encoding) {
       case "utf8":
        this.surrogateSize = 3;
        break;

       case "ucs2":
       case "utf16le":
        this.surrogateSize = 2;
        this.detectIncompleteChar = utf16DetectIncompleteChar;
        break;

       case "base64":
        this.surrogateSize = 3;
        this.detectIncompleteChar = base64DetectIncompleteChar;
        break;

       default:
        this.write = passThroughWrite;
        return;
      }
      this.charBuffer = new Buffer(6);
      this.charReceived = 0;
      this.charLength = 0;
    };
    StringDecoder.prototype.write = function(buffer) {
      var charStr = "";
      while (this.charLength) {
        var available = buffer.length >= this.charLength - this.charReceived ? this.charLength - this.charReceived : buffer.length;
        buffer.copy(this.charBuffer, this.charReceived, 0, available);
        this.charReceived += available;
        if (this.charReceived < this.charLength) return "";
        buffer = buffer.slice(available, buffer.length);
        charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);
        var charCode = charStr.charCodeAt(charStr.length - 1);
        if (charCode >= 55296 && charCode <= 56319) {
          this.charLength += this.surrogateSize;
          charStr = "";
          continue;
        }
        this.charReceived = this.charLength = 0;
        if (0 === buffer.length) return charStr;
        break;
      }
      this.detectIncompleteChar(buffer);
      var end = buffer.length;
      if (this.charLength) {
        buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
        end -= this.charReceived;
      }
      charStr += buffer.toString(this.encoding, 0, end);
      var end = charStr.length - 1;
      var charCode = charStr.charCodeAt(end);
      if (charCode >= 55296 && charCode <= 56319) {
        var size = this.surrogateSize;
        this.charLength += size;
        this.charReceived += size;
        this.charBuffer.copy(this.charBuffer, size, 0, size);
        buffer.copy(this.charBuffer, 0, 0, size);
        return charStr.substring(0, end);
      }
      return charStr;
    };
    StringDecoder.prototype.detectIncompleteChar = function(buffer) {
      var i = buffer.length >= 3 ? 3 : buffer.length;
      for (;i > 0; i--) {
        var c = buffer[buffer.length - i];
        if (1 == i && c >> 5 == 6) {
          this.charLength = 2;
          break;
        }
        if (i <= 2 && c >> 4 == 14) {
          this.charLength = 3;
          break;
        }
        if (i <= 3 && c >> 3 == 30) {
          this.charLength = 4;
          break;
        }
      }
      this.charReceived = i;
    };
    StringDecoder.prototype.end = function(buffer) {
      var res = "";
      buffer && buffer.length && (res = this.write(buffer));
      if (this.charReceived) {
        var cr = this.charReceived;
        var buf = this.charBuffer;
        var enc = this.encoding;
        res += buf.slice(0, cr).toString(enc);
      }
      return res;
    };
    function passThroughWrite(buffer) {
      return buffer.toString(this.encoding);
    }
    function utf16DetectIncompleteChar(buffer) {
      this.charReceived = buffer.length % 2;
      this.charLength = this.charReceived ? 2 : 0;
    }
    function base64DetectIncompleteChar(buffer) {
      this.charReceived = buffer.length % 3;
      this.charLength = this.charReceived ? 3 : 0;
    }
  }, {
    buffer: 47
  } ],
  154: [ function(require, module, exports) {
    (function(global) {
      module.exports = deprecate;
      function deprecate(fn, msg) {
        if (config("noDeprecation")) return fn;
        var warned = false;
        function deprecated() {
          if (!warned) {
            if (config("throwDeprecation")) throw new Error(msg);
            config("traceDeprecation") ? console.trace(msg) : console.warn(msg);
            warned = true;
          }
          return fn.apply(this, arguments);
        }
        return deprecated;
      }
      function config(name) {
        try {
          if (!global.localStorage) return false;
        } catch (_) {
          return false;
        }
        var val = global.localStorage[name];
        if (null == val) return false;
        return "true" === String(val).toLowerCase();
      }
    }).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {} ],
  155: [ function(require, module, exports) {
    var indexOf = require("indexof");
    var Object_keys = function(obj) {
      if (Object.keys) return Object.keys(obj);
      var res = [];
      for (var key in obj) res.push(key);
      return res;
    };
    var forEach = function(xs, fn) {
      if (xs.forEach) return xs.forEach(fn);
      for (var i = 0; i < xs.length; i++) fn(xs[i], i, xs);
    };
    var defineProp = function() {
      try {
        Object.defineProperty({}, "_", {});
        return function(obj, name, value) {
          Object.defineProperty(obj, name, {
            writable: true,
            enumerable: false,
            configurable: true,
            value: value
          });
        };
      } catch (e) {
        return function(obj, name, value) {
          obj[name] = value;
        };
      }
    }();
    var globals = [ "Array", "Boolean", "Date", "Error", "EvalError", "Function", "Infinity", "JSON", "Math", "NaN", "Number", "Object", "RangeError", "ReferenceError", "RegExp", "String", "SyntaxError", "TypeError", "URIError", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "escape", "eval", "isFinite", "isNaN", "parseFloat", "parseInt", "undefined", "unescape" ];
    function Context() {}
    Context.prototype = {};
    var Script = exports.Script = function NodeScript(code) {
      if (!(this instanceof Script)) return new Script(code);
      this.code = code;
    };
    Script.prototype.runInContext = function(context) {
      if (!(context instanceof Context)) throw new TypeError("needs a 'context' argument.");
      var iframe = document.createElement("iframe");
      iframe.style || (iframe.style = {});
      iframe.style.display = "none";
      document.body.appendChild(iframe);
      var win = iframe.contentWindow;
      var wEval = win.eval, wExecScript = win.execScript;
      if (!wEval && wExecScript) {
        wExecScript.call(win, "null");
        wEval = win.eval;
      }
      forEach(Object_keys(context), function(key) {
        win[key] = context[key];
      });
      forEach(globals, function(key) {
        context[key] && (win[key] = context[key]);
      });
      var winKeys = Object_keys(win);
      var res = wEval.call(win, this.code);
      forEach(Object_keys(win), function(key) {
        (key in context || -1 === indexOf(winKeys, key)) && (context[key] = win[key]);
      });
      forEach(globals, function(key) {
        key in context || defineProp(context, key, win[key]);
      });
      document.body.removeChild(iframe);
      return res;
    };
    Script.prototype.runInThisContext = function() {
      return eval(this.code);
    };
    Script.prototype.runInNewContext = function(context) {
      var ctx = Script.createContext(context);
      var res = this.runInContext(ctx);
      forEach(Object_keys(ctx), function(key) {
        context[key] = ctx[key];
      });
      return res;
    };
    forEach(Object_keys(Script.prototype), function(name) {
      exports[name] = Script[name] = function(code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
      };
    });
    exports.createScript = function(code) {
      return exports.Script(code);
    };
    exports.createContext = Script.createContext = function(context) {
      var copy = new Context();
      "object" === typeof context && forEach(Object_keys(context), function(key) {
        copy[key] = context[key];
      });
      return copy;
    };
  }, {
    indexof: 100
  } ],
  156: [ function(require, module, exports) {
    (function webpackUniversalModuleDefinition(root, factory) {
      "object" === typeof exports && "object" === typeof module ? module.exports = factory() : "function" === typeof define && define.amd ? define("StateMachine", [], factory) : "object" === typeof exports ? exports["StateMachine"] = factory() : root["StateMachine"] = factory();
    })(this, function() {
      return function(modules) {
        var installedModules = {};
        function __webpack_require__(moduleId) {
          if (installedModules[moduleId]) return installedModules[moduleId].exports;
          var module = installedModules[moduleId] = {
            i: moduleId,
            l: false,
            exports: {}
          };
          modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
          module.l = true;
          return module.exports;
        }
        __webpack_require__.m = modules;
        __webpack_require__.c = installedModules;
        __webpack_require__.i = function(value) {
          return value;
        };
        __webpack_require__.d = function(exports, name, getter) {
          __webpack_require__.o(exports, name) || Object.defineProperty(exports, name, {
            configurable: false,
            enumerable: true,
            get: getter
          });
        };
        __webpack_require__.n = function(module) {
          var getter = module && module.__esModule ? function getDefault() {
            return module["default"];
          } : function getModuleExports() {
            return module;
          };
          __webpack_require__.d(getter, "a", getter);
          return getter;
        };
        __webpack_require__.o = function(object, property) {
          return Object.prototype.hasOwnProperty.call(object, property);
        };
        __webpack_require__.p = "";
        return __webpack_require__(__webpack_require__.s = 5);
      }([ function(module, exports, __webpack_require__) {
        "use strict";
        module.exports = function(target, sources) {
          var n, source, key;
          for (n = 1; n < arguments.length; n++) {
            source = arguments[n];
            for (key in source) source.hasOwnProperty(key) && (target[key] = source[key]);
          }
          return target;
        };
      }, function(module, exports, __webpack_require__) {
        "use strict";
        var mixin = __webpack_require__(0);
        module.exports = {
          build: function(target, config) {
            var n, max, plugin, plugins = config.plugins;
            for (n = 0, max = plugins.length; n < max; n++) {
              plugin = plugins[n];
              plugin.methods && mixin(target, plugin.methods);
              plugin.properties && Object.defineProperties(target, plugin.properties);
            }
          },
          hook: function(fsm, name, additional) {
            var n, max, method, plugin, plugins = fsm.config.plugins, args = [ fsm.context ];
            additional && (args = args.concat(additional));
            for (n = 0, max = plugins.length; n < max; n++) {
              plugin = plugins[n];
              method = plugins[n][name];
              method && method.apply(plugin, args);
            }
          }
        };
      }, function(module, exports, __webpack_require__) {
        "use strict";
        function camelize(label) {
          if (0 === label.length) return label;
          var n, result, word, words = label.split(/[_-]/);
          if (1 === words.length && words[0][0].toLowerCase() === words[0][0]) return label;
          result = words[0].toLowerCase();
          for (n = 1; n < words.length; n++) result = result + words[n].charAt(0).toUpperCase() + words[n].substring(1).toLowerCase();
          return result;
        }
        camelize.prepended = function(prepend, label) {
          label = camelize(label);
          return prepend + label[0].toUpperCase() + label.substring(1);
        };
        module.exports = camelize;
      }, function(module, exports, __webpack_require__) {
        "use strict";
        var mixin = __webpack_require__(0), camelize = __webpack_require__(2);
        function Config(options, StateMachine) {
          options = options || {};
          this.options = options;
          this.defaults = StateMachine.defaults;
          this.states = [];
          this.transitions = [];
          this.map = {};
          this.lifecycle = this.configureLifecycle();
          this.init = this.configureInitTransition(options.init);
          this.data = this.configureData(options.data);
          this.methods = this.configureMethods(options.methods);
          this.map[this.defaults.wildcard] = {};
          this.configureTransitions(options.transitions || []);
          this.plugins = this.configurePlugins(options.plugins, StateMachine.plugin);
        }
        mixin(Config.prototype, {
          addState: function(name) {
            if (!this.map[name]) {
              this.states.push(name);
              this.addStateLifecycleNames(name);
              this.map[name] = {};
            }
          },
          addStateLifecycleNames: function(name) {
            this.lifecycle.onEnter[name] = camelize.prepended("onEnter", name);
            this.lifecycle.onLeave[name] = camelize.prepended("onLeave", name);
            this.lifecycle.on[name] = camelize.prepended("on", name);
          },
          addTransition: function(name) {
            if (this.transitions.indexOf(name) < 0) {
              this.transitions.push(name);
              this.addTransitionLifecycleNames(name);
            }
          },
          addTransitionLifecycleNames: function(name) {
            this.lifecycle.onBefore[name] = camelize.prepended("onBefore", name);
            this.lifecycle.onAfter[name] = camelize.prepended("onAfter", name);
            this.lifecycle.on[name] = camelize.prepended("on", name);
          },
          mapTransition: function(transition) {
            var name = transition.name, from = transition.from, to = transition.to;
            this.addState(from);
            "function" !== typeof to && this.addState(to);
            this.addTransition(name);
            this.map[from][name] = transition;
            return transition;
          },
          configureLifecycle: function() {
            return {
              onBefore: {
                transition: "onBeforeTransition"
              },
              onAfter: {
                transition: "onAfterTransition"
              },
              onEnter: {
                state: "onEnterState"
              },
              onLeave: {
                state: "onLeaveState"
              },
              on: {
                transition: "onTransition"
              }
            };
          },
          configureInitTransition: function(init) {
            if ("string" === typeof init) return this.mapTransition(mixin({}, this.defaults.init, {
              to: init,
              active: true
            }));
            if ("object" === typeof init) return this.mapTransition(mixin({}, this.defaults.init, init, {
              active: true
            }));
            this.addState(this.defaults.init.from);
            return this.defaults.init;
          },
          configureData: function(data) {
            return "function" === typeof data ? data : "object" === typeof data ? function() {
              return data;
            } : function() {
              return {};
            };
          },
          configureMethods: function(methods) {
            return methods || {};
          },
          configurePlugins: function(plugins, builtin) {
            plugins = plugins || [];
            var n, max, plugin;
            for (n = 0, max = plugins.length; n < max; n++) {
              plugin = plugins[n];
              "function" === typeof plugin && (plugins[n] = plugin = plugin());
              plugin.configure && plugin.configure(this);
            }
            return plugins;
          },
          configureTransitions: function(transitions) {
            var i, n, transition, from, to, wildcard = this.defaults.wildcard;
            for (n = 0; n < transitions.length; n++) {
              transition = transitions[n];
              from = Array.isArray(transition.from) ? transition.from : [ transition.from || wildcard ];
              to = transition.to || wildcard;
              for (i = 0; i < from.length; i++) this.mapTransition({
                name: transition.name,
                from: from[i],
                to: to
              });
            }
          },
          transitionFor: function(state, transition) {
            var wildcard = this.defaults.wildcard;
            return this.map[state][transition] || this.map[wildcard][transition];
          },
          transitionsFor: function(state) {
            var wildcard = this.defaults.wildcard;
            return Object.keys(this.map[state]).concat(Object.keys(this.map[wildcard]));
          },
          allStates: function() {
            return this.states;
          },
          allTransitions: function() {
            return this.transitions;
          }
        });
        module.exports = Config;
      }, function(module, exports, __webpack_require__) {
        var mixin = __webpack_require__(0), Exception = __webpack_require__(6), plugin = __webpack_require__(1), UNOBSERVED = [ null, [] ];
        function JSM(context, config) {
          this.context = context;
          this.config = config;
          this.state = config.init.from;
          this.observers = [ context ];
        }
        mixin(JSM.prototype, {
          init: function(args) {
            mixin(this.context, this.config.data.apply(this.context, args));
            plugin.hook(this, "init");
            if (this.config.init.active) return this.fire(this.config.init.name, []);
          },
          is: function(state) {
            return Array.isArray(state) ? state.indexOf(this.state) >= 0 : this.state === state;
          },
          isPending: function() {
            return this.pending;
          },
          can: function(transition) {
            return !this.isPending() && !!this.seek(transition);
          },
          cannot: function(transition) {
            return !this.can(transition);
          },
          allStates: function() {
            return this.config.allStates();
          },
          allTransitions: function() {
            return this.config.allTransitions();
          },
          transitions: function() {
            return this.config.transitionsFor(this.state);
          },
          seek: function(transition, args) {
            var wildcard = this.config.defaults.wildcard, entry = this.config.transitionFor(this.state, transition), to = entry && entry.to;
            return "function" === typeof to ? to.apply(this.context, args) : to === wildcard ? this.state : to;
          },
          fire: function(transition, args) {
            return this.transit(transition, this.state, this.seek(transition, args), args);
          },
          transit: function(transition, from, to, args) {
            var lifecycle = this.config.lifecycle, changed = this.config.options.observeUnchangedState || from !== to;
            if (!to) return this.context.onInvalidTransition(transition, from, to);
            if (this.isPending()) return this.context.onPendingTransition(transition, from, to);
            this.config.addState(to);
            this.beginTransit();
            args.unshift({
              transition: transition,
              from: from,
              to: to,
              fsm: this.context
            });
            return this.observeEvents([ this.observersForEvent(lifecycle.onBefore.transition), this.observersForEvent(lifecycle.onBefore[transition]), changed ? this.observersForEvent(lifecycle.onLeave.state) : UNOBSERVED, changed ? this.observersForEvent(lifecycle.onLeave[from]) : UNOBSERVED, this.observersForEvent(lifecycle.on.transition), changed ? [ "doTransit", [ this ] ] : UNOBSERVED, changed ? this.observersForEvent(lifecycle.onEnter.state) : UNOBSERVED, changed ? this.observersForEvent(lifecycle.onEnter[to]) : UNOBSERVED, changed ? this.observersForEvent(lifecycle.on[to]) : UNOBSERVED, this.observersForEvent(lifecycle.onAfter.transition), this.observersForEvent(lifecycle.onAfter[transition]), this.observersForEvent(lifecycle.on[transition]) ], args);
          },
          beginTransit: function() {
            this.pending = true;
          },
          endTransit: function(result) {
            this.pending = false;
            return result;
          },
          failTransit: function(result) {
            this.pending = false;
            throw result;
          },
          doTransit: function(lifecycle) {
            this.state = lifecycle.to;
          },
          observe: function(args) {
            if (2 === args.length) {
              var observer = {};
              observer[args[0]] = args[1];
              this.observers.push(observer);
            } else this.observers.push(args[0]);
          },
          observersForEvent: function(event) {
            var n = 0, max = this.observers.length, observer, result = [];
            for (;n < max; n++) {
              observer = this.observers[n];
              observer[event] && result.push(observer);
            }
            return [ event, result, true ];
          },
          observeEvents: function(events, args, previousEvent, previousResult) {
            if (0 === events.length) return this.endTransit(void 0 === previousResult || previousResult);
            var event = events[0][0], observers = events[0][1], pluggable = events[0][2];
            args[0].event = event;
            event && pluggable && event !== previousEvent && plugin.hook(this, "lifecycle", args);
            if (0 === observers.length) {
              events.shift();
              return this.observeEvents(events, args, event, previousResult);
            }
            var observer = observers.shift(), result = observer[event].apply(observer, args);
            return result && "function" === typeof result.then ? result.then(this.observeEvents.bind(this, events, args, event)).catch(this.failTransit.bind(this)) : false === result ? this.endTransit(false) : this.observeEvents(events, args, event, result);
          },
          onInvalidTransition: function(transition, from, to) {
            throw new Exception("transition is invalid in current state", transition, from, to, this.state);
          },
          onPendingTransition: function(transition, from, to) {
            throw new Exception("transition is invalid while previous transition is still in progress", transition, from, to, this.state);
          }
        });
        module.exports = JSM;
      }, function(module, exports, __webpack_require__) {
        "use strict";
        var mixin = __webpack_require__(0), camelize = __webpack_require__(2), plugin = __webpack_require__(1), Config = __webpack_require__(3), JSM = __webpack_require__(4);
        var PublicMethods = {
          is: function(state) {
            return this._fsm.is(state);
          },
          can: function(transition) {
            return this._fsm.can(transition);
          },
          cannot: function(transition) {
            return this._fsm.cannot(transition);
          },
          observe: function() {
            return this._fsm.observe(arguments);
          },
          transitions: function() {
            return this._fsm.transitions();
          },
          allTransitions: function() {
            return this._fsm.allTransitions();
          },
          allStates: function() {
            return this._fsm.allStates();
          },
          onInvalidTransition: function(t, from, to) {
            return this._fsm.onInvalidTransition(t, from, to);
          },
          onPendingTransition: function(t, from, to) {
            return this._fsm.onPendingTransition(t, from, to);
          }
        };
        var PublicProperties = {
          state: {
            configurable: false,
            enumerable: true,
            get: function() {
              return this._fsm.state;
            },
            set: function(state) {
              throw Error("use transitions to change state");
            }
          }
        };
        function StateMachine(options) {
          return apply(this || {}, options);
        }
        function factory() {
          var cstor, options;
          if ("function" === typeof arguments[0]) {
            cstor = arguments[0];
            options = arguments[1] || {};
          } else {
            cstor = function() {
              this._fsm.apply(this, arguments);
            };
            options = arguments[0] || {};
          }
          var config = new Config(options, StateMachine);
          build(cstor.prototype, config);
          cstor.prototype._fsm.config = config;
          return cstor;
        }
        function apply(instance, options) {
          var config = new Config(options, StateMachine);
          build(instance, config);
          instance._fsm();
          return instance;
        }
        function build(target, config) {
          if ("object" !== typeof target || Array.isArray(target)) throw Error("StateMachine can only be applied to objects");
          plugin.build(target, config);
          Object.defineProperties(target, PublicProperties);
          mixin(target, PublicMethods);
          mixin(target, config.methods);
          config.allTransitions().forEach(function(transition) {
            target[camelize(transition)] = function() {
              return this._fsm.fire(transition, [].slice.call(arguments));
            };
          });
          target._fsm = function() {
            this._fsm = new JSM(this, config);
            this._fsm.init(arguments);
          };
        }
        StateMachine.version = "3.0.1";
        StateMachine.factory = factory;
        StateMachine.apply = apply;
        StateMachine.defaults = {
          wildcard: "*",
          init: {
            name: "init",
            from: "none"
          }
        };
        module.exports = StateMachine;
      }, function(module, exports, __webpack_require__) {
        "use strict";
        module.exports = function(message, transition, from, to, current) {
          this.message = message;
          this.transition = transition;
          this.from = from;
          this.to = to;
          this.current = current;
        };
      } ]);
    });
  }, {} ],
  157: [ function(require, module, exports) {
    (function(global) {
      (function() {
        var undefined;
        var VERSION = "4.17.21";
        var LARGE_ARRAY_SIZE = 200;
        var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
        var HASH_UNDEFINED = "__lodash_hash_undefined__";
        var MAX_MEMOIZE_SIZE = 500;
        var PLACEHOLDER = "__lodash_placeholder__";
        var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
        var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
        var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
        var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
        var HOT_COUNT = 800, HOT_SPAN = 16;
        var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
        var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 1.7976931348623157e308, NAN = NaN;
        var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
        var wrapFlags = [ [ "ary", WRAP_ARY_FLAG ], [ "bind", WRAP_BIND_FLAG ], [ "bindKey", WRAP_BIND_KEY_FLAG ], [ "curry", WRAP_CURRY_FLAG ], [ "curryRight", WRAP_CURRY_RIGHT_FLAG ], [ "flip", WRAP_FLIP_FLAG ], [ "partial", WRAP_PARTIAL_FLAG ], [ "partialRight", WRAP_PARTIAL_RIGHT_FLAG ], [ "rearg", WRAP_REARG_FLAG ] ];
        var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
        var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
        var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
        var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
        var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
        var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
        var reTrimStart = /^\s+/;
        var reWhitespace = /\s/;
        var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
        var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
        var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
        var reEscapeChar = /\\(\\)?/g;
        var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
        var reFlags = /\w*$/;
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
        var reIsBinary = /^0b[01]+$/i;
        var reIsHostCtor = /^\[object .+?Constructor\]$/;
        var reIsOctal = /^0o[0-7]+$/i;
        var reIsUint = /^(?:0|[1-9]\d*)$/;
        var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
        var reNoMatch = /($^)/;
        var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
        var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
        var rsApos = "['\u2019]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
        var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [ rsNonAstral, rsRegional, rsSurrPair ].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [ rsDingbat, rsRegional, rsSurrPair ].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [ rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral ].join("|") + ")";
        var reApos = RegExp(rsApos, "g");
        var reComboMark = RegExp(rsCombo, "g");
        var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
        var reUnicodeWord = RegExp([ rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [ rsBreak, rsUpper, "$" ].join("|") + ")", rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [ rsBreak, rsUpper + rsMiscLower, "$" ].join("|") + ")", rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower, rsUpper + "+" + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji ].join("|"), "g");
        var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
        var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
        var contextProps = [ "Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout" ];
        var templateCounter = -1;
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
        var cloneableTags = {};
        cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
        cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
        var deburredLetters = {
          "\xc0": "A",
          "\xc1": "A",
          "\xc2": "A",
          "\xc3": "A",
          "\xc4": "A",
          "\xc5": "A",
          "\xe0": "a",
          "\xe1": "a",
          "\xe2": "a",
          "\xe3": "a",
          "\xe4": "a",
          "\xe5": "a",
          "\xc7": "C",
          "\xe7": "c",
          "\xd0": "D",
          "\xf0": "d",
          "\xc8": "E",
          "\xc9": "E",
          "\xca": "E",
          "\xcb": "E",
          "\xe8": "e",
          "\xe9": "e",
          "\xea": "e",
          "\xeb": "e",
          "\xcc": "I",
          "\xcd": "I",
          "\xce": "I",
          "\xcf": "I",
          "\xec": "i",
          "\xed": "i",
          "\xee": "i",
          "\xef": "i",
          "\xd1": "N",
          "\xf1": "n",
          "\xd2": "O",
          "\xd3": "O",
          "\xd4": "O",
          "\xd5": "O",
          "\xd6": "O",
          "\xd8": "O",
          "\xf2": "o",
          "\xf3": "o",
          "\xf4": "o",
          "\xf5": "o",
          "\xf6": "o",
          "\xf8": "o",
          "\xd9": "U",
          "\xda": "U",
          "\xdb": "U",
          "\xdc": "U",
          "\xf9": "u",
          "\xfa": "u",
          "\xfb": "u",
          "\xfc": "u",
          "\xdd": "Y",
          "\xfd": "y",
          "\xff": "y",
          "\xc6": "Ae",
          "\xe6": "ae",
          "\xde": "Th",
          "\xfe": "th",
          "\xdf": "ss",
          "\u0100": "A",
          "\u0102": "A",
          "\u0104": "A",
          "\u0101": "a",
          "\u0103": "a",
          "\u0105": "a",
          "\u0106": "C",
          "\u0108": "C",
          "\u010a": "C",
          "\u010c": "C",
          "\u0107": "c",
          "\u0109": "c",
          "\u010b": "c",
          "\u010d": "c",
          "\u010e": "D",
          "\u0110": "D",
          "\u010f": "d",
          "\u0111": "d",
          "\u0112": "E",
          "\u0114": "E",
          "\u0116": "E",
          "\u0118": "E",
          "\u011a": "E",
          "\u0113": "e",
          "\u0115": "e",
          "\u0117": "e",
          "\u0119": "e",
          "\u011b": "e",
          "\u011c": "G",
          "\u011e": "G",
          "\u0120": "G",
          "\u0122": "G",
          "\u011d": "g",
          "\u011f": "g",
          "\u0121": "g",
          "\u0123": "g",
          "\u0124": "H",
          "\u0126": "H",
          "\u0125": "h",
          "\u0127": "h",
          "\u0128": "I",
          "\u012a": "I",
          "\u012c": "I",
          "\u012e": "I",
          "\u0130": "I",
          "\u0129": "i",
          "\u012b": "i",
          "\u012d": "i",
          "\u012f": "i",
          "\u0131": "i",
          "\u0134": "J",
          "\u0135": "j",
          "\u0136": "K",
          "\u0137": "k",
          "\u0138": "k",
          "\u0139": "L",
          "\u013b": "L",
          "\u013d": "L",
          "\u013f": "L",
          "\u0141": "L",
          "\u013a": "l",
          "\u013c": "l",
          "\u013e": "l",
          "\u0140": "l",
          "\u0142": "l",
          "\u0143": "N",
          "\u0145": "N",
          "\u0147": "N",
          "\u014a": "N",
          "\u0144": "n",
          "\u0146": "n",
          "\u0148": "n",
          "\u014b": "n",
          "\u014c": "O",
          "\u014e": "O",
          "\u0150": "O",
          "\u014d": "o",
          "\u014f": "o",
          "\u0151": "o",
          "\u0154": "R",
          "\u0156": "R",
          "\u0158": "R",
          "\u0155": "r",
          "\u0157": "r",
          "\u0159": "r",
          "\u015a": "S",
          "\u015c": "S",
          "\u015e": "S",
          "\u0160": "S",
          "\u015b": "s",
          "\u015d": "s",
          "\u015f": "s",
          "\u0161": "s",
          "\u0162": "T",
          "\u0164": "T",
          "\u0166": "T",
          "\u0163": "t",
          "\u0165": "t",
          "\u0167": "t",
          "\u0168": "U",
          "\u016a": "U",
          "\u016c": "U",
          "\u016e": "U",
          "\u0170": "U",
          "\u0172": "U",
          "\u0169": "u",
          "\u016b": "u",
          "\u016d": "u",
          "\u016f": "u",
          "\u0171": "u",
          "\u0173": "u",
          "\u0174": "W",
          "\u0175": "w",
          "\u0176": "Y",
          "\u0177": "y",
          "\u0178": "Y",
          "\u0179": "Z",
          "\u017b": "Z",
          "\u017d": "Z",
          "\u017a": "z",
          "\u017c": "z",
          "\u017e": "z",
          "\u0132": "IJ",
          "\u0133": "ij",
          "\u0152": "Oe",
          "\u0153": "oe",
          "\u0149": "'n",
          "\u017f": "s"
        };
        var htmlEscapes = {
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&#39;"
        };
        var htmlUnescapes = {
          "&amp;": "&",
          "&lt;": "<",
          "&gt;": ">",
          "&quot;": '"',
          "&#39;": "'"
        };
        var stringEscapes = {
          "\\": "\\",
          "'": "'",
          "\n": "n",
          "\r": "r",
          "\u2028": "u2028",
          "\u2029": "u2029"
        };
        var freeParseFloat = parseFloat, freeParseInt = parseInt;
        var freeGlobal = "object" == typeof global && global && global.Object === Object && global;
        var freeSelf = "object" == typeof self && self && self.Object === Object && self;
        var root = freeGlobal || freeSelf || Function("return this")();
        var freeExports = "object" == typeof exports && exports && !exports.nodeType && exports;
        var freeModule = freeExports && "object" == typeof module && module && !module.nodeType && module;
        var moduleExports = freeModule && freeModule.exports === freeExports;
        var freeProcess = moduleExports && freeGlobal.process;
        var nodeUtil = function() {
          try {
            var types = freeModule && freeModule.require && freeModule.require("util").types;
            if (types) return types;
            return freeProcess && freeProcess.binding && freeProcess.binding("util");
          } catch (e) {}
        }();
        var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
        function apply(func, thisArg, args) {
          switch (args.length) {
           case 0:
            return func.call(thisArg);

           case 1:
            return func.call(thisArg, args[0]);

           case 2:
            return func.call(thisArg, args[0], args[1]);

           case 3:
            return func.call(thisArg, args[0], args[1], args[2]);
          }
          return func.apply(thisArg, args);
        }
        function arrayAggregator(array, setter, iteratee, accumulator) {
          var index = -1, length = null == array ? 0 : array.length;
          while (++index < length) {
            var value = array[index];
            setter(accumulator, value, iteratee(value), array);
          }
          return accumulator;
        }
        function arrayEach(array, iteratee) {
          var index = -1, length = null == array ? 0 : array.length;
          while (++index < length) if (false === iteratee(array[index], index, array)) break;
          return array;
        }
        function arrayEachRight(array, iteratee) {
          var length = null == array ? 0 : array.length;
          while (length--) if (false === iteratee(array[length], length, array)) break;
          return array;
        }
        function arrayEvery(array, predicate) {
          var index = -1, length = null == array ? 0 : array.length;
          while (++index < length) if (!predicate(array[index], index, array)) return false;
          return true;
        }
        function arrayFilter(array, predicate) {
          var index = -1, length = null == array ? 0 : array.length, resIndex = 0, result = [];
          while (++index < length) {
            var value = array[index];
            predicate(value, index, array) && (result[resIndex++] = value);
          }
          return result;
        }
        function arrayIncludes(array, value) {
          var length = null == array ? 0 : array.length;
          return !!length && baseIndexOf(array, value, 0) > -1;
        }
        function arrayIncludesWith(array, value, comparator) {
          var index = -1, length = null == array ? 0 : array.length;
          while (++index < length) if (comparator(value, array[index])) return true;
          return false;
        }
        function arrayMap(array, iteratee) {
          var index = -1, length = null == array ? 0 : array.length, result = Array(length);
          while (++index < length) result[index] = iteratee(array[index], index, array);
          return result;
        }
        function arrayPush(array, values) {
          var index = -1, length = values.length, offset = array.length;
          while (++index < length) array[offset + index] = values[index];
          return array;
        }
        function arrayReduce(array, iteratee, accumulator, initAccum) {
          var index = -1, length = null == array ? 0 : array.length;
          initAccum && length && (accumulator = array[++index]);
          while (++index < length) accumulator = iteratee(accumulator, array[index], index, array);
          return accumulator;
        }
        function arrayReduceRight(array, iteratee, accumulator, initAccum) {
          var length = null == array ? 0 : array.length;
          initAccum && length && (accumulator = array[--length]);
          while (length--) accumulator = iteratee(accumulator, array[length], length, array);
          return accumulator;
        }
        function arraySome(array, predicate) {
          var index = -1, length = null == array ? 0 : array.length;
          while (++index < length) if (predicate(array[index], index, array)) return true;
          return false;
        }
        var asciiSize = baseProperty("length");
        function asciiToArray(string) {
          return string.split("");
        }
        function asciiWords(string) {
          return string.match(reAsciiWord) || [];
        }
        function baseFindKey(collection, predicate, eachFunc) {
          var result;
          eachFunc(collection, function(value, key, collection) {
            if (predicate(value, key, collection)) {
              result = key;
              return false;
            }
          });
          return result;
        }
        function baseFindIndex(array, predicate, fromIndex, fromRight) {
          var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
          while (fromRight ? index-- : ++index < length) if (predicate(array[index], index, array)) return index;
          return -1;
        }
        function baseIndexOf(array, value, fromIndex) {
          return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
        }
        function baseIndexOfWith(array, value, fromIndex, comparator) {
          var index = fromIndex - 1, length = array.length;
          while (++index < length) if (comparator(array[index], value)) return index;
          return -1;
        }
        function baseIsNaN(value) {
          return value !== value;
        }
        function baseMean(array, iteratee) {
          var length = null == array ? 0 : array.length;
          return length ? baseSum(array, iteratee) / length : NAN;
        }
        function baseProperty(key) {
          return function(object) {
            return null == object ? undefined : object[key];
          };
        }
        function basePropertyOf(object) {
          return function(key) {
            return null == object ? undefined : object[key];
          };
        }
        function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
          eachFunc(collection, function(value, index, collection) {
            accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
          });
          return accumulator;
        }
        function baseSortBy(array, comparer) {
          var length = array.length;
          array.sort(comparer);
          while (length--) array[length] = array[length].value;
          return array;
        }
        function baseSum(array, iteratee) {
          var result, index = -1, length = array.length;
          while (++index < length) {
            var current = iteratee(array[index]);
            current !== undefined && (result = result === undefined ? current : result + current);
          }
          return result;
        }
        function baseTimes(n, iteratee) {
          var index = -1, result = Array(n);
          while (++index < n) result[index] = iteratee(index);
          return result;
        }
        function baseToPairs(object, props) {
          return arrayMap(props, function(key) {
            return [ key, object[key] ];
          });
        }
        function baseTrim(string) {
          return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
        }
        function baseUnary(func) {
          return function(value) {
            return func(value);
          };
        }
        function baseValues(object, props) {
          return arrayMap(props, function(key) {
            return object[key];
          });
        }
        function cacheHas(cache, key) {
          return cache.has(key);
        }
        function charsStartIndex(strSymbols, chrSymbols) {
          var index = -1, length = strSymbols.length;
          while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) ;
          return index;
        }
        function charsEndIndex(strSymbols, chrSymbols) {
          var index = strSymbols.length;
          while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) ;
          return index;
        }
        function countHolders(array, placeholder) {
          var length = array.length, result = 0;
          while (length--) array[length] === placeholder && ++result;
          return result;
        }
        var deburrLetter = basePropertyOf(deburredLetters);
        var escapeHtmlChar = basePropertyOf(htmlEscapes);
        function escapeStringChar(chr) {
          return "\\" + stringEscapes[chr];
        }
        function getValue(object, key) {
          return null == object ? undefined : object[key];
        }
        function hasUnicode(string) {
          return reHasUnicode.test(string);
        }
        function hasUnicodeWord(string) {
          return reHasUnicodeWord.test(string);
        }
        function iteratorToArray(iterator) {
          var data, result = [];
          while (!(data = iterator.next()).done) result.push(data.value);
          return result;
        }
        function mapToArray(map) {
          var index = -1, result = Array(map.size);
          map.forEach(function(value, key) {
            result[++index] = [ key, value ];
          });
          return result;
        }
        function overArg(func, transform) {
          return function(arg) {
            return func(transform(arg));
          };
        }
        function replaceHolders(array, placeholder) {
          var index = -1, length = array.length, resIndex = 0, result = [];
          while (++index < length) {
            var value = array[index];
            if (value === placeholder || value === PLACEHOLDER) {
              array[index] = PLACEHOLDER;
              result[resIndex++] = index;
            }
          }
          return result;
        }
        function setToArray(set) {
          var index = -1, result = Array(set.size);
          set.forEach(function(value) {
            result[++index] = value;
          });
          return result;
        }
        function setToPairs(set) {
          var index = -1, result = Array(set.size);
          set.forEach(function(value) {
            result[++index] = [ value, value ];
          });
          return result;
        }
        function strictIndexOf(array, value, fromIndex) {
          var index = fromIndex - 1, length = array.length;
          while (++index < length) if (array[index] === value) return index;
          return -1;
        }
        function strictLastIndexOf(array, value, fromIndex) {
          var index = fromIndex + 1;
          while (index--) if (array[index] === value) return index;
          return index;
        }
        function stringSize(string) {
          return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
        }
        function stringToArray(string) {
          return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
        }
        function trimmedEndIndex(string) {
          var index = string.length;
          while (index-- && reWhitespace.test(string.charAt(index))) ;
          return index;
        }
        var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
        function unicodeSize(string) {
          var result = reUnicode.lastIndex = 0;
          while (reUnicode.test(string)) ++result;
          return result;
        }
        function unicodeToArray(string) {
          return string.match(reUnicode) || [];
        }
        function unicodeWords(string) {
          return string.match(reUnicodeWord) || [];
        }
        var runInContext = function runInContext(context) {
          context = null == context ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
          var Array = context.Array, Date = context.Date, Error = context.Error, Function = context.Function, Math = context.Math, Object = context.Object, RegExp = context.RegExp, String = context.String, TypeError = context.TypeError;
          var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;
          var coreJsData = context["__core-js_shared__"];
          var funcToString = funcProto.toString;
          var hasOwnProperty = objectProto.hasOwnProperty;
          var idCounter = 0;
          var maskSrcKey = function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
            return uid ? "Symbol(src)_1." + uid : "";
          }();
          var nativeObjectToString = objectProto.toString;
          var objectCtorString = funcToString.call(Object);
          var oldDash = root._;
          var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
          var Buffer = moduleExports ? context.Buffer : undefined, Symbol = context.Symbol, Uint8Array = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined, getPrototype = overArg(Object.getPrototypeOf, Object), objectCreate = Object.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined, symIterator = Symbol ? Symbol.iterator : undefined, symToStringTag = Symbol ? Symbol.toStringTag : undefined;
          var defineProperty = function() {
            try {
              var func = getNative(Object, "defineProperty");
              func({}, "", {});
              return func;
            } catch (e) {}
          }();
          var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date && Date.now !== root.Date.now && Date.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
          var nativeCeil = Math.ceil, nativeFloor = Math.floor, nativeGetSymbols = Object.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object.keys, Object), nativeMax = Math.max, nativeMin = Math.min, nativeNow = Date.now, nativeParseInt = context.parseInt, nativeRandom = Math.random, nativeReverse = arrayProto.reverse;
          var DataView = getNative(context, "DataView"), Map = getNative(context, "Map"), Promise = getNative(context, "Promise"), Set = getNative(context, "Set"), WeakMap = getNative(context, "WeakMap"), nativeCreate = getNative(Object, "create");
          var metaMap = WeakMap && new WeakMap();
          var realNames = {};
          var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);
          var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined, symbolToString = symbolProto ? symbolProto.toString : undefined;
          function lodash(value) {
            if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
              if (value instanceof LodashWrapper) return value;
              if (hasOwnProperty.call(value, "__wrapped__")) return wrapperClone(value);
            }
            return new LodashWrapper(value);
          }
          var baseCreate = function() {
            function object() {}
            return function(proto) {
              if (!isObject(proto)) return {};
              if (objectCreate) return objectCreate(proto);
              object.prototype = proto;
              var result = new object();
              object.prototype = undefined;
              return result;
            };
          }();
          function baseLodash() {}
          function LodashWrapper(value, chainAll) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__chain__ = !!chainAll;
            this.__index__ = 0;
            this.__values__ = undefined;
          }
          lodash.templateSettings = {
            escape: reEscape,
            evaluate: reEvaluate,
            interpolate: reInterpolate,
            variable: "",
            imports: {
              _: lodash
            }
          };
          lodash.prototype = baseLodash.prototype;
          lodash.prototype.constructor = lodash;
          LodashWrapper.prototype = baseCreate(baseLodash.prototype);
          LodashWrapper.prototype.constructor = LodashWrapper;
          function LazyWrapper(value) {
            this.__wrapped__ = value;
            this.__actions__ = [];
            this.__dir__ = 1;
            this.__filtered__ = false;
            this.__iteratees__ = [];
            this.__takeCount__ = MAX_ARRAY_LENGTH;
            this.__views__ = [];
          }
          function lazyClone() {
            var result = new LazyWrapper(this.__wrapped__);
            result.__actions__ = copyArray(this.__actions__);
            result.__dir__ = this.__dir__;
            result.__filtered__ = this.__filtered__;
            result.__iteratees__ = copyArray(this.__iteratees__);
            result.__takeCount__ = this.__takeCount__;
            result.__views__ = copyArray(this.__views__);
            return result;
          }
          function lazyReverse() {
            if (this.__filtered__) {
              var result = new LazyWrapper(this);
              result.__dir__ = -1;
              result.__filtered__ = true;
            } else {
              result = this.clone();
              result.__dir__ *= -1;
            }
            return result;
          }
          function lazyValue() {
            var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
            if (!isArr || !isRight && arrLength == length && takeCount == length) return baseWrapperValue(array, this.__actions__);
            var result = [];
            outer: while (length-- && resIndex < takeCount) {
              index += dir;
              var iterIndex = -1, value = array[index];
              while (++iterIndex < iterLength) {
                var data = iteratees[iterIndex], iteratee = data.iteratee, type = data.type, computed = iteratee(value);
                if (type == LAZY_MAP_FLAG) value = computed; else if (!computed) {
                  if (type == LAZY_FILTER_FLAG) continue outer;
                  break outer;
                }
              }
              result[resIndex++] = value;
            }
            return result;
          }
          LazyWrapper.prototype = baseCreate(baseLodash.prototype);
          LazyWrapper.prototype.constructor = LazyWrapper;
          function Hash(entries) {
            var index = -1, length = null == entries ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }
          function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
            this.size = 0;
          }
          function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key];
            this.size -= result ? 1 : 0;
            return result;
          }
          function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
              var result = data[key];
              return result === HASH_UNDEFINED ? undefined : result;
            }
            return hasOwnProperty.call(data, key) ? data[key] : undefined;
          }
          function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
          }
          function hashSet(key, value) {
            var data = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
            return this;
          }
          Hash.prototype.clear = hashClear;
          Hash.prototype["delete"] = hashDelete;
          Hash.prototype.get = hashGet;
          Hash.prototype.has = hashHas;
          Hash.prototype.set = hashSet;
          function ListCache(entries) {
            var index = -1, length = null == entries ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }
          function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
          }
          function listCacheDelete(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) return false;
            var lastIndex = data.length - 1;
            index == lastIndex ? data.pop() : splice.call(data, index, 1);
            --this.size;
            return true;
          }
          function listCacheGet(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            return index < 0 ? undefined : data[index][1];
          }
          function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
          }
          function listCacheSet(key, value) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) {
              ++this.size;
              data.push([ key, value ]);
            } else data[index][1] = value;
            return this;
          }
          ListCache.prototype.clear = listCacheClear;
          ListCache.prototype["delete"] = listCacheDelete;
          ListCache.prototype.get = listCacheGet;
          ListCache.prototype.has = listCacheHas;
          ListCache.prototype.set = listCacheSet;
          function MapCache(entries) {
            var index = -1, length = null == entries ? 0 : entries.length;
            this.clear();
            while (++index < length) {
              var entry = entries[index];
              this.set(entry[0], entry[1]);
            }
          }
          function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
              hash: new Hash(),
              map: new (Map || ListCache)(),
              string: new Hash()
            };
          }
          function mapCacheDelete(key) {
            var result = getMapData(this, key)["delete"](key);
            this.size -= result ? 1 : 0;
            return result;
          }
          function mapCacheGet(key) {
            return getMapData(this, key).get(key);
          }
          function mapCacheHas(key) {
            return getMapData(this, key).has(key);
          }
          function mapCacheSet(key, value) {
            var data = getMapData(this, key), size = data.size;
            data.set(key, value);
            this.size += data.size == size ? 0 : 1;
            return this;
          }
          MapCache.prototype.clear = mapCacheClear;
          MapCache.prototype["delete"] = mapCacheDelete;
          MapCache.prototype.get = mapCacheGet;
          MapCache.prototype.has = mapCacheHas;
          MapCache.prototype.set = mapCacheSet;
          function SetCache(values) {
            var index = -1, length = null == values ? 0 : values.length;
            this.__data__ = new MapCache();
            while (++index < length) this.add(values[index]);
          }
          function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
          }
          function setCacheHas(value) {
            return this.__data__.has(value);
          }
          SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
          SetCache.prototype.has = setCacheHas;
          function Stack(entries) {
            var data = this.__data__ = new ListCache(entries);
            this.size = data.size;
          }
          function stackClear() {
            this.__data__ = new ListCache();
            this.size = 0;
          }
          function stackDelete(key) {
            var data = this.__data__, result = data["delete"](key);
            this.size = data.size;
            return result;
          }
          function stackGet(key) {
            return this.__data__.get(key);
          }
          function stackHas(key) {
            return this.__data__.has(key);
          }
          function stackSet(key, value) {
            var data = this.__data__;
            if (data instanceof ListCache) {
              var pairs = data.__data__;
              if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                pairs.push([ key, value ]);
                this.size = ++data.size;
                return this;
              }
              data = this.__data__ = new MapCache(pairs);
            }
            data.set(key, value);
            this.size = data.size;
            return this;
          }
          Stack.prototype.clear = stackClear;
          Stack.prototype["delete"] = stackDelete;
          Stack.prototype.get = stackGet;
          Stack.prototype.has = stackHas;
          Stack.prototype.set = stackSet;
          function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
            for (var key in value) !inherited && !hasOwnProperty.call(value, key) || skipIndexes && ("length" == key || isBuff && ("offset" == key || "parent" == key) || isType && ("buffer" == key || "byteLength" == key || "byteOffset" == key) || isIndex(key, length)) || result.push(key);
            return result;
          }
          function arraySample(array) {
            var length = array.length;
            return length ? array[baseRandom(0, length - 1)] : undefined;
          }
          function arraySampleSize(array, n) {
            return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
          }
          function arrayShuffle(array) {
            return shuffleSelf(copyArray(array));
          }
          function assignMergeValue(object, key, value) {
            (value === undefined || eq(object[key], value)) && (value !== undefined || key in object) || baseAssignValue(object, key, value);
          }
          function assignValue(object, key, value) {
            var objValue = object[key];
            hasOwnProperty.call(object, key) && eq(objValue, value) && (value !== undefined || key in object) || baseAssignValue(object, key, value);
          }
          function assocIndexOf(array, key) {
            var length = array.length;
            while (length--) if (eq(array[length][0], key)) return length;
            return -1;
          }
          function baseAggregator(collection, setter, iteratee, accumulator) {
            baseEach(collection, function(value, key, collection) {
              setter(accumulator, value, iteratee(value), collection);
            });
            return accumulator;
          }
          function baseAssign(object, source) {
            return object && copyObject(source, keys(source), object);
          }
          function baseAssignIn(object, source) {
            return object && copyObject(source, keysIn(source), object);
          }
          function baseAssignValue(object, key, value) {
            "__proto__" == key && defineProperty ? defineProperty(object, key, {
              configurable: true,
              enumerable: true,
              value: value,
              writable: true
            }) : object[key] = value;
          }
          function baseAt(object, paths) {
            var index = -1, length = paths.length, result = Array(length), skip = null == object;
            while (++index < length) result[index] = skip ? undefined : get(object, paths[index]);
            return result;
          }
          function baseClamp(number, lower, upper) {
            if (number === number) {
              upper !== undefined && (number = number <= upper ? number : upper);
              lower !== undefined && (number = number >= lower ? number : lower);
            }
            return number;
          }
          function baseClone(value, bitmask, customizer, key, object, stack) {
            var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
            customizer && (result = object ? customizer(value, key, object, stack) : customizer(value));
            if (result !== undefined) return result;
            if (!isObject(value)) return value;
            var isArr = isArray(value);
            if (isArr) {
              result = initCloneArray(value);
              if (!isDeep) return copyArray(value, result);
            } else {
              var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
              if (isBuffer(value)) return cloneBuffer(value, isDeep);
              if (tag == objectTag || tag == argsTag || isFunc && !object) {
                result = isFlat || isFunc ? {} : initCloneObject(value);
                if (!isDeep) return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
              } else {
                if (!cloneableTags[tag]) return object ? value : {};
                result = initCloneByTag(value, tag, isDeep);
              }
            }
            stack || (stack = new Stack());
            var stacked = stack.get(value);
            if (stacked) return stacked;
            stack.set(value, result);
            isSet(value) ? value.forEach(function(subValue) {
              result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
            }) : isMap(value) && value.forEach(function(subValue, key) {
              result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
            });
            var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
            var props = isArr ? undefined : keysFunc(value);
            arrayEach(props || value, function(subValue, key) {
              if (props) {
                key = subValue;
                subValue = value[key];
              }
              assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
            });
            return result;
          }
          function baseConforms(source) {
            var props = keys(source);
            return function(object) {
              return baseConformsTo(object, source, props);
            };
          }
          function baseConformsTo(object, source, props) {
            var length = props.length;
            if (null == object) return !length;
            object = Object(object);
            while (length--) {
              var key = props[length], predicate = source[key], value = object[key];
              if (value === undefined && !(key in object) || !predicate(value)) return false;
            }
            return true;
          }
          function baseDelay(func, wait, args) {
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            return setTimeout(function() {
              func.apply(undefined, args);
            }, wait);
          }
          function baseDifference(array, values, iteratee, comparator) {
            var index = -1, includes = arrayIncludes, isCommon = true, length = array.length, result = [], valuesLength = values.length;
            if (!length) return result;
            iteratee && (values = arrayMap(values, baseUnary(iteratee)));
            if (comparator) {
              includes = arrayIncludesWith;
              isCommon = false;
            } else if (values.length >= LARGE_ARRAY_SIZE) {
              includes = cacheHas;
              isCommon = false;
              values = new SetCache(values);
            }
            outer: while (++index < length) {
              var value = array[index], computed = null == iteratee ? value : iteratee(value);
              value = comparator || 0 !== value ? value : 0;
              if (isCommon && computed === computed) {
                var valuesIndex = valuesLength;
                while (valuesIndex--) if (values[valuesIndex] === computed) continue outer;
                result.push(value);
              } else includes(values, computed, comparator) || result.push(value);
            }
            return result;
          }
          var baseEach = createBaseEach(baseForOwn);
          var baseEachRight = createBaseEach(baseForOwnRight, true);
          function baseEvery(collection, predicate) {
            var result = true;
            baseEach(collection, function(value, index, collection) {
              result = !!predicate(value, index, collection);
              return result;
            });
            return result;
          }
          function baseExtremum(array, iteratee, comparator) {
            var index = -1, length = array.length;
            while (++index < length) {
              var value = array[index], current = iteratee(value);
              if (null != current && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) var computed = current, result = value;
            }
            return result;
          }
          function baseFill(array, value, start, end) {
            var length = array.length;
            start = toInteger(start);
            start < 0 && (start = -start > length ? 0 : length + start);
            end = end === undefined || end > length ? length : toInteger(end);
            end < 0 && (end += length);
            end = start > end ? 0 : toLength(end);
            while (start < end) array[start++] = value;
            return array;
          }
          function baseFilter(collection, predicate) {
            var result = [];
            baseEach(collection, function(value, index, collection) {
              predicate(value, index, collection) && result.push(value);
            });
            return result;
          }
          function baseFlatten(array, depth, predicate, isStrict, result) {
            var index = -1, length = array.length;
            predicate || (predicate = isFlattenable);
            result || (result = []);
            while (++index < length) {
              var value = array[index];
              depth > 0 && predicate(value) ? depth > 1 ? baseFlatten(value, depth - 1, predicate, isStrict, result) : arrayPush(result, value) : isStrict || (result[result.length] = value);
            }
            return result;
          }
          var baseFor = createBaseFor();
          var baseForRight = createBaseFor(true);
          function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys);
          }
          function baseForOwnRight(object, iteratee) {
            return object && baseForRight(object, iteratee, keys);
          }
          function baseFunctions(object, props) {
            return arrayFilter(props, function(key) {
              return isFunction(object[key]);
            });
          }
          function baseGet(object, path) {
            path = castPath(path, object);
            var index = 0, length = path.length;
            while (null != object && index < length) object = object[toKey(path[index++])];
            return index && index == length ? object : undefined;
          }
          function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object);
            return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
          }
          function baseGetTag(value) {
            if (null == value) return value === undefined ? undefinedTag : nullTag;
            return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
          }
          function baseGt(value, other) {
            return value > other;
          }
          function baseHas(object, key) {
            return null != object && hasOwnProperty.call(object, key);
          }
          function baseHasIn(object, key) {
            return null != object && key in Object(object);
          }
          function baseInRange(number, start, end) {
            return number >= nativeMin(start, end) && number < nativeMax(start, end);
          }
          function baseIntersection(arrays, iteratee, comparator) {
            var includes = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = Infinity, result = [];
            while (othIndex--) {
              var array = arrays[othIndex];
              othIndex && iteratee && (array = arrayMap(array, baseUnary(iteratee)));
              maxLength = nativeMin(array.length, maxLength);
              caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
            }
            array = arrays[0];
            var index = -1, seen = caches[0];
            outer: while (++index < length && result.length < maxLength) {
              var value = array[index], computed = iteratee ? iteratee(value) : value;
              value = comparator || 0 !== value ? value : 0;
              if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
                othIndex = othLength;
                while (--othIndex) {
                  var cache = caches[othIndex];
                  if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) continue outer;
                }
                seen && seen.push(computed);
                result.push(value);
              }
            }
            return result;
          }
          function baseInverter(object, setter, iteratee, accumulator) {
            baseForOwn(object, function(value, key, object) {
              setter(accumulator, iteratee(value), key, object);
            });
            return accumulator;
          }
          function baseInvoke(object, path, args) {
            path = castPath(path, object);
            object = parent(object, path);
            var func = null == object ? object : object[toKey(last(path))];
            return null == func ? undefined : apply(func, object, args);
          }
          function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
          }
          function baseIsArrayBuffer(value) {
            return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
          }
          function baseIsDate(value) {
            return isObjectLike(value) && baseGetTag(value) == dateTag;
          }
          function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) return true;
            if (null == value || null == other || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
          }
          function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;
            var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
            if (isSameTag && isBuffer(object)) {
              if (!isBuffer(other)) return false;
              objIsArr = true;
              objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
              stack || (stack = new Stack());
              return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
              var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
              if (objIsWrapped || othIsWrapped) {
                var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                stack || (stack = new Stack());
                return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
              }
            }
            if (!isSameTag) return false;
            stack || (stack = new Stack());
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
          }
          function baseIsMap(value) {
            return isObjectLike(value) && getTag(value) == mapTag;
          }
          function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length, length = index, noCustomizer = !customizer;
            if (null == object) return !length;
            object = Object(object);
            while (index--) {
              var data = matchData[index];
              if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return false;
            }
            while (++index < length) {
              data = matchData[index];
              var key = data[0], objValue = object[key], srcValue = data[1];
              if (noCustomizer && data[2]) {
                if (objValue === undefined && !(key in object)) return false;
              } else {
                var stack = new Stack();
                if (customizer) var result = customizer(objValue, srcValue, key, object, source, stack);
                if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) return false;
              }
            }
            return true;
          }
          function baseIsNative(value) {
            if (!isObject(value) || isMasked(value)) return false;
            var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
          }
          function baseIsRegExp(value) {
            return isObjectLike(value) && baseGetTag(value) == regexpTag;
          }
          function baseIsSet(value) {
            return isObjectLike(value) && getTag(value) == setTag;
          }
          function baseIsTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
          }
          function baseIteratee(value) {
            if ("function" == typeof value) return value;
            if (null == value) return identity;
            if ("object" == typeof value) return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
            return property(value);
          }
          function baseKeys(object) {
            if (!isPrototype(object)) return nativeKeys(object);
            var result = [];
            for (var key in Object(object)) hasOwnProperty.call(object, key) && "constructor" != key && result.push(key);
            return result;
          }
          function baseKeysIn(object) {
            if (!isObject(object)) return nativeKeysIn(object);
            var isProto = isPrototype(object), result = [];
            for (var key in object) "constructor" == key && (isProto || !hasOwnProperty.call(object, key)) || result.push(key);
            return result;
          }
          function baseLt(value, other) {
            return value < other;
          }
          function baseMap(collection, iteratee) {
            var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
            baseEach(collection, function(value, key, collection) {
              result[++index] = iteratee(value, key, collection);
            });
            return result;
          }
          function baseMatches(source) {
            var matchData = getMatchData(source);
            if (1 == matchData.length && matchData[0][2]) return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            return function(object) {
              return object === source || baseIsMatch(object, source, matchData);
            };
          }
          function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) return matchesStrictComparable(toKey(path), srcValue);
            return function(object) {
              var objValue = get(object, path);
              return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            };
          }
          function baseMerge(object, source, srcIndex, customizer, stack) {
            if (object === source) return;
            baseFor(source, function(srcValue, key) {
              stack || (stack = new Stack());
              if (isObject(srcValue)) baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack); else {
                var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined;
                newValue === undefined && (newValue = srcValue);
                assignMergeValue(object, key, newValue);
              }
            }, keysIn);
          }
          function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
            var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
            if (stacked) {
              assignMergeValue(object, key, stacked);
              return;
            }
            var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined;
            var isCommon = newValue === undefined;
            if (isCommon) {
              var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
              newValue = srcValue;
              if (isArr || isBuff || isTyped) if (isArray(objValue)) newValue = objValue; else if (isArrayLikeObject(objValue)) newValue = copyArray(objValue); else if (isBuff) {
                isCommon = false;
                newValue = cloneBuffer(srcValue, true);
              } else if (isTyped) {
                isCommon = false;
                newValue = cloneTypedArray(srcValue, true);
              } else newValue = []; else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                newValue = objValue;
                isArguments(objValue) ? newValue = toPlainObject(objValue) : isObject(objValue) && !isFunction(objValue) || (newValue = initCloneObject(srcValue));
              } else isCommon = false;
            }
            if (isCommon) {
              stack.set(srcValue, newValue);
              mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
              stack["delete"](srcValue);
            }
            assignMergeValue(object, key, newValue);
          }
          function baseNth(array, n) {
            var length = array.length;
            if (!length) return;
            n += n < 0 ? length : 0;
            return isIndex(n, length) ? array[n] : undefined;
          }
          function baseOrderBy(collection, iteratees, orders) {
            iteratees = iteratees.length ? arrayMap(iteratees, function(iteratee) {
              if (isArray(iteratee)) return function(value) {
                return baseGet(value, 1 === iteratee.length ? iteratee[0] : iteratee);
              };
              return iteratee;
            }) : [ identity ];
            var index = -1;
            iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
            var result = baseMap(collection, function(value, key, collection) {
              var criteria = arrayMap(iteratees, function(iteratee) {
                return iteratee(value);
              });
              return {
                criteria: criteria,
                index: ++index,
                value: value
              };
            });
            return baseSortBy(result, function(object, other) {
              return compareMultiple(object, other, orders);
            });
          }
          function basePick(object, paths) {
            return basePickBy(object, paths, function(value, path) {
              return hasIn(object, path);
            });
          }
          function basePickBy(object, paths, predicate) {
            var index = -1, length = paths.length, result = {};
            while (++index < length) {
              var path = paths[index], value = baseGet(object, path);
              predicate(value, path) && baseSet(result, castPath(path, object), value);
            }
            return result;
          }
          function basePropertyDeep(path) {
            return function(object) {
              return baseGet(object, path);
            };
          }
          function basePullAll(array, values, iteratee, comparator) {
            var indexOf = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values.length, seen = array;
            array === values && (values = copyArray(values));
            iteratee && (seen = arrayMap(array, baseUnary(iteratee)));
            while (++index < length) {
              var fromIndex = 0, value = values[index], computed = iteratee ? iteratee(value) : value;
              while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
                seen !== array && splice.call(seen, fromIndex, 1);
                splice.call(array, fromIndex, 1);
              }
            }
            return array;
          }
          function basePullAt(array, indexes) {
            var length = array ? indexes.length : 0, lastIndex = length - 1;
            while (length--) {
              var index = indexes[length];
              if (length == lastIndex || index !== previous) {
                var previous = index;
                isIndex(index) ? splice.call(array, index, 1) : baseUnset(array, index);
              }
            }
            return array;
          }
          function baseRandom(lower, upper) {
            return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
          }
          function baseRange(start, end, step, fromRight) {
            var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array(length);
            while (length--) {
              result[fromRight ? length : ++index] = start;
              start += step;
            }
            return result;
          }
          function baseRepeat(string, n) {
            var result = "";
            if (!string || n < 1 || n > MAX_SAFE_INTEGER) return result;
            do {
              n % 2 && (result += string);
              n = nativeFloor(n / 2);
              n && (string += string);
            } while (n);
            return result;
          }
          function baseRest(func, start) {
            return setToString(overRest(func, start, identity), func + "");
          }
          function baseSample(collection) {
            return arraySample(values(collection));
          }
          function baseSampleSize(collection, n) {
            var array = values(collection);
            return shuffleSelf(array, baseClamp(n, 0, array.length));
          }
          function baseSet(object, path, value, customizer) {
            if (!isObject(object)) return object;
            path = castPath(path, object);
            var index = -1, length = path.length, lastIndex = length - 1, nested = object;
            while (null != nested && ++index < length) {
              var key = toKey(path[index]), newValue = value;
              if ("__proto__" === key || "constructor" === key || "prototype" === key) return object;
              if (index != lastIndex) {
                var objValue = nested[key];
                newValue = customizer ? customizer(objValue, key, nested) : undefined;
                newValue === undefined && (newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {});
              }
              assignValue(nested, key, newValue);
              nested = nested[key];
            }
            return object;
          }
          var baseSetData = metaMap ? function(func, data) {
            metaMap.set(func, data);
            return func;
          } : identity;
          var baseSetToString = defineProperty ? function(func, string) {
            return defineProperty(func, "toString", {
              configurable: true,
              enumerable: false,
              value: constant(string),
              writable: true
            });
          } : identity;
          function baseShuffle(collection) {
            return shuffleSelf(values(collection));
          }
          function baseSlice(array, start, end) {
            var index = -1, length = array.length;
            start < 0 && (start = -start > length ? 0 : length + start);
            end = end > length ? length : end;
            end < 0 && (end += length);
            length = start > end ? 0 : end - start >>> 0;
            start >>>= 0;
            var result = Array(length);
            while (++index < length) result[index] = array[index + start];
            return result;
          }
          function baseSome(collection, predicate) {
            var result;
            baseEach(collection, function(value, index, collection) {
              result = predicate(value, index, collection);
              return !result;
            });
            return !!result;
          }
          function baseSortedIndex(array, value, retHighest) {
            var low = 0, high = null == array ? low : array.length;
            if ("number" == typeof value && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
              while (low < high) {
                var mid = low + high >>> 1, computed = array[mid];
                null !== computed && !isSymbol(computed) && (retHighest ? computed <= value : computed < value) ? low = mid + 1 : high = mid;
              }
              return high;
            }
            return baseSortedIndexBy(array, value, identity, retHighest);
          }
          function baseSortedIndexBy(array, value, iteratee, retHighest) {
            var low = 0, high = null == array ? 0 : array.length;
            if (0 === high) return 0;
            value = iteratee(value);
            var valIsNaN = value !== value, valIsNull = null === value, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined;
            while (low < high) {
              var mid = nativeFloor((low + high) / 2), computed = iteratee(array[mid]), othIsDefined = computed !== undefined, othIsNull = null === computed, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
              if (valIsNaN) var setLow = retHighest || othIsReflexive; else setLow = valIsUndefined ? othIsReflexive && (retHighest || othIsDefined) : valIsNull ? othIsReflexive && othIsDefined && (retHighest || !othIsNull) : valIsSymbol ? othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol) : !othIsNull && !othIsSymbol && (retHighest ? computed <= value : computed < value);
              setLow ? low = mid + 1 : high = mid;
            }
            return nativeMin(high, MAX_ARRAY_INDEX);
          }
          function baseSortedUniq(array, iteratee) {
            var index = -1, length = array.length, resIndex = 0, result = [];
            while (++index < length) {
              var value = array[index], computed = iteratee ? iteratee(value) : value;
              if (!index || !eq(computed, seen)) {
                var seen = computed;
                result[resIndex++] = 0 === value ? 0 : value;
              }
            }
            return result;
          }
          function baseToNumber(value) {
            if ("number" == typeof value) return value;
            if (isSymbol(value)) return NAN;
            return +value;
          }
          function baseToString(value) {
            if ("string" == typeof value) return value;
            if (isArray(value)) return arrayMap(value, baseToString) + "";
            if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : "";
            var result = value + "";
            return "0" == result && 1 / value == -INFINITY ? "-0" : result;
          }
          function baseUniq(array, iteratee, comparator) {
            var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
            if (comparator) {
              isCommon = false;
              includes = arrayIncludesWith;
            } else if (length >= LARGE_ARRAY_SIZE) {
              var set = iteratee ? null : createSet(array);
              if (set) return setToArray(set);
              isCommon = false;
              includes = cacheHas;
              seen = new SetCache();
            } else seen = iteratee ? [] : result;
            outer: while (++index < length) {
              var value = array[index], computed = iteratee ? iteratee(value) : value;
              value = comparator || 0 !== value ? value : 0;
              if (isCommon && computed === computed) {
                var seenIndex = seen.length;
                while (seenIndex--) if (seen[seenIndex] === computed) continue outer;
                iteratee && seen.push(computed);
                result.push(value);
              } else if (!includes(seen, computed, comparator)) {
                seen !== result && seen.push(computed);
                result.push(value);
              }
            }
            return result;
          }
          function baseUnset(object, path) {
            path = castPath(path, object);
            object = parent(object, path);
            return null == object || delete object[toKey(last(path))];
          }
          function baseUpdate(object, path, updater, customizer) {
            return baseSet(object, path, updater(baseGet(object, path)), customizer);
          }
          function baseWhile(array, predicate, isDrop, fromRight) {
            var length = array.length, index = fromRight ? length : -1;
            while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) ;
            return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
          }
          function baseWrapperValue(value, actions) {
            var result = value;
            result instanceof LazyWrapper && (result = result.value());
            return arrayReduce(actions, function(result, action) {
              return action.func.apply(action.thisArg, arrayPush([ result ], action.args));
            }, result);
          }
          function baseXor(arrays, iteratee, comparator) {
            var length = arrays.length;
            if (length < 2) return length ? baseUniq(arrays[0]) : [];
            var index = -1, result = Array(length);
            while (++index < length) {
              var array = arrays[index], othIndex = -1;
              while (++othIndex < length) othIndex != index && (result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator));
            }
            return baseUniq(baseFlatten(result, 1), iteratee, comparator);
          }
          function baseZipObject(props, values, assignFunc) {
            var index = -1, length = props.length, valsLength = values.length, result = {};
            while (++index < length) {
              var value = index < valsLength ? values[index] : undefined;
              assignFunc(result, props[index], value);
            }
            return result;
          }
          function castArrayLikeObject(value) {
            return isArrayLikeObject(value) ? value : [];
          }
          function castFunction(value) {
            return "function" == typeof value ? value : identity;
          }
          function castPath(value, object) {
            if (isArray(value)) return value;
            return isKey(value, object) ? [ value ] : stringToPath(toString(value));
          }
          var castRest = baseRest;
          function castSlice(array, start, end) {
            var length = array.length;
            end = end === undefined ? length : end;
            return !start && end >= length ? array : baseSlice(array, start, end);
          }
          var clearTimeout = ctxClearTimeout || function(id) {
            return root.clearTimeout(id);
          };
          function cloneBuffer(buffer, isDeep) {
            if (isDeep) return buffer.slice();
            var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
            buffer.copy(result);
            return result;
          }
          function cloneArrayBuffer(arrayBuffer) {
            var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
            new Uint8Array(result).set(new Uint8Array(arrayBuffer));
            return result;
          }
          function cloneDataView(dataView, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
            return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
          }
          function cloneRegExp(regexp) {
            var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
            result.lastIndex = regexp.lastIndex;
            return result;
          }
          function cloneSymbol(symbol) {
            return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
          }
          function cloneTypedArray(typedArray, isDeep) {
            var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
            return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
          }
          function compareAscending(value, other) {
            if (value !== other) {
              var valIsDefined = value !== undefined, valIsNull = null === value, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
              var othIsDefined = other !== undefined, othIsNull = null === other, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
              if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) return 1;
              if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) return -1;
            }
            return 0;
          }
          function compareMultiple(object, other, orders) {
            var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
            while (++index < length) {
              var result = compareAscending(objCriteria[index], othCriteria[index]);
              if (result) {
                if (index >= ordersLength) return result;
                var order = orders[index];
                return result * ("desc" == order ? -1 : 1);
              }
            }
            return object.index - other.index;
          }
          function composeArgs(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(leftLength + rangeLength), isUncurried = !isCurried;
            while (++leftIndex < leftLength) result[leftIndex] = partials[leftIndex];
            while (++argsIndex < holdersLength) (isUncurried || argsIndex < argsLength) && (result[holders[argsIndex]] = args[argsIndex]);
            while (rangeLength--) result[leftIndex++] = args[argsIndex++];
            return result;
          }
          function composeArgsRight(args, partials, holders, isCurried) {
            var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(rangeLength + rightLength), isUncurried = !isCurried;
            while (++argsIndex < rangeLength) result[argsIndex] = args[argsIndex];
            var offset = argsIndex;
            while (++rightIndex < rightLength) result[offset + rightIndex] = partials[rightIndex];
            while (++holdersIndex < holdersLength) (isUncurried || argsIndex < argsLength) && (result[offset + holders[holdersIndex]] = args[argsIndex++]);
            return result;
          }
          function copyArray(source, array) {
            var index = -1, length = source.length;
            array || (array = Array(length));
            while (++index < length) array[index] = source[index];
            return array;
          }
          function copyObject(source, props, object, customizer) {
            var isNew = !object;
            object || (object = {});
            var index = -1, length = props.length;
            while (++index < length) {
              var key = props[index];
              var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
              newValue === undefined && (newValue = source[key]);
              isNew ? baseAssignValue(object, key, newValue) : assignValue(object, key, newValue);
            }
            return object;
          }
          function copySymbols(source, object) {
            return copyObject(source, getSymbols(source), object);
          }
          function copySymbolsIn(source, object) {
            return copyObject(source, getSymbolsIn(source), object);
          }
          function createAggregator(setter, initializer) {
            return function(collection, iteratee) {
              var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
              return func(collection, setter, getIteratee(iteratee, 2), accumulator);
            };
          }
          function createAssigner(assigner) {
            return baseRest(function(object, sources) {
              var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined, guard = length > 2 ? sources[2] : undefined;
              customizer = assigner.length > 3 && "function" == typeof customizer ? (length--, 
              customizer) : undefined;
              if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                customizer = length < 3 ? undefined : customizer;
                length = 1;
              }
              object = Object(object);
              while (++index < length) {
                var source = sources[index];
                source && assigner(object, source, index, customizer);
              }
              return object;
            });
          }
          function createBaseEach(eachFunc, fromRight) {
            return function(collection, iteratee) {
              if (null == collection) return collection;
              if (!isArrayLike(collection)) return eachFunc(collection, iteratee);
              var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
              while (fromRight ? index-- : ++index < length) if (false === iteratee(iterable[index], index, iterable)) break;
              return collection;
            };
          }
          function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
              var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
              while (length--) {
                var key = props[fromRight ? length : ++index];
                if (false === iteratee(iterable[key], key, iterable)) break;
              }
              return object;
            };
          }
          function createBind(func, bitmask, thisArg) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
              var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              return fn.apply(isBind ? thisArg : this, arguments);
            }
            return wrapper;
          }
          function createCaseFirst(methodName) {
            return function(string) {
              string = toString(string);
              var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
              var chr = strSymbols ? strSymbols[0] : string.charAt(0);
              var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
              return chr[methodName]() + trailing;
            };
          }
          function createCompounder(callback) {
            return function(string) {
              return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
            };
          }
          function createCtor(Ctor) {
            return function() {
              var args = arguments;
              switch (args.length) {
               case 0:
                return new Ctor();

               case 1:
                return new Ctor(args[0]);

               case 2:
                return new Ctor(args[0], args[1]);

               case 3:
                return new Ctor(args[0], args[1], args[2]);

               case 4:
                return new Ctor(args[0], args[1], args[2], args[3]);

               case 5:
                return new Ctor(args[0], args[1], args[2], args[3], args[4]);

               case 6:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);

               case 7:
                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
              }
              var thisBinding = baseCreate(Ctor.prototype), result = Ctor.apply(thisBinding, args);
              return isObject(result) ? result : thisBinding;
            };
          }
          function createCurry(func, bitmask, arity) {
            var Ctor = createCtor(func);
            function wrapper() {
              var length = arguments.length, args = Array(length), index = length, placeholder = getHolder(wrapper);
              while (index--) args[index] = arguments[index];
              var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
              length -= holders.length;
              if (length < arity) return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
              var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              return apply(fn, this, args);
            }
            return wrapper;
          }
          function createFind(findIndexFunc) {
            return function(collection, predicate, fromIndex) {
              var iterable = Object(collection);
              if (!isArrayLike(collection)) {
                var iteratee = getIteratee(predicate, 3);
                collection = keys(collection);
                predicate = function(key) {
                  return iteratee(iterable[key], key, iterable);
                };
              }
              var index = findIndexFunc(collection, predicate, fromIndex);
              return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
            };
          }
          function createFlow(fromRight) {
            return flatRest(function(funcs) {
              var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
              fromRight && funcs.reverse();
              while (index--) {
                var func = funcs[index];
                if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                if (prereq && !wrapper && "wrapper" == getFuncName(func)) var wrapper = new LodashWrapper([], true);
              }
              index = wrapper ? index : length;
              while (++index < length) {
                func = funcs[index];
                var funcName = getFuncName(func), data = "wrapper" == funcName ? getData(func) : undefined;
                wrapper = data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && 1 == data[9] ? wrapper[getFuncName(data[0])].apply(wrapper, data[3]) : 1 == func.length && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
              }
              return function() {
                var args = arguments, value = args[0];
                if (wrapper && 1 == args.length && isArray(value)) return wrapper.plant(value).value();
                var index = 0, result = length ? funcs[index].apply(this, args) : value;
                while (++index < length) result = funcs[index].call(this, result);
                return result;
              };
            });
          }
          function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
            var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined : createCtor(func);
            function wrapper() {
              var length = arguments.length, args = Array(length), index = length;
              while (index--) args[index] = arguments[index];
              if (isCurried) var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
              partials && (args = composeArgs(args, partials, holders, isCurried));
              partialsRight && (args = composeArgsRight(args, partialsRight, holdersRight, isCurried));
              length -= holdersCount;
              if (isCurried && length < arity) {
                var newHolders = replaceHolders(args, placeholder);
                return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
              }
              var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
              length = args.length;
              argPos ? args = reorder(args, argPos) : isFlip && length > 1 && args.reverse();
              isAry && ary < length && (args.length = ary);
              this && this !== root && this instanceof wrapper && (fn = Ctor || createCtor(fn));
              return fn.apply(thisBinding, args);
            }
            return wrapper;
          }
          function createInverter(setter, toIteratee) {
            return function(object, iteratee) {
              return baseInverter(object, setter, toIteratee(iteratee), {});
            };
          }
          function createMathOperation(operator, defaultValue) {
            return function(value, other) {
              var result;
              if (value === undefined && other === undefined) return defaultValue;
              value !== undefined && (result = value);
              if (other !== undefined) {
                if (result === undefined) return other;
                if ("string" == typeof value || "string" == typeof other) {
                  value = baseToString(value);
                  other = baseToString(other);
                } else {
                  value = baseToNumber(value);
                  other = baseToNumber(other);
                }
                result = operator(value, other);
              }
              return result;
            };
          }
          function createOver(arrayFunc) {
            return flatRest(function(iteratees) {
              iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
              return baseRest(function(args) {
                var thisArg = this;
                return arrayFunc(iteratees, function(iteratee) {
                  return apply(iteratee, thisArg, args);
                });
              });
            });
          }
          function createPadding(length, chars) {
            chars = chars === undefined ? " " : baseToString(chars);
            var charsLength = chars.length;
            if (charsLength < 2) return charsLength ? baseRepeat(chars, length) : chars;
            var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
            return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join("") : result.slice(0, length);
          }
          function createPartial(func, bitmask, thisArg, partials) {
            var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
            function wrapper() {
              var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
              while (++leftIndex < leftLength) args[leftIndex] = partials[leftIndex];
              while (argsLength--) args[leftIndex++] = arguments[++argsIndex];
              return apply(fn, isBind ? thisArg : this, args);
            }
            return wrapper;
          }
          function createRange(fromRight) {
            return function(start, end, step) {
              step && "number" != typeof step && isIterateeCall(start, end, step) && (end = step = undefined);
              start = toFinite(start);
              if (end === undefined) {
                end = start;
                start = 0;
              } else end = toFinite(end);
              step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
              return baseRange(start, end, step, fromRight);
            };
          }
          function createRelationalOperation(operator) {
            return function(value, other) {
              if (!("string" == typeof value && "string" == typeof other)) {
                value = toNumber(value);
                other = toNumber(other);
              }
              return operator(value, other);
            };
          }
          function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
            var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined, newHoldersRight = isCurry ? undefined : holders, newPartials = isCurry ? partials : undefined, newPartialsRight = isCurry ? undefined : partials;
            bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
            bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
            bitmask & WRAP_CURRY_BOUND_FLAG || (bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG));
            var newData = [ func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity ];
            var result = wrapFunc.apply(undefined, newData);
            isLaziable(func) && setData(result, newData);
            result.placeholder = placeholder;
            return setWrapToString(result, func, bitmask);
          }
          function createRound(methodName) {
            var func = Math[methodName];
            return function(number, precision) {
              number = toNumber(number);
              precision = null == precision ? 0 : nativeMin(toInteger(precision), 292);
              if (precision && nativeIsFinite(number)) {
                var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
                pair = (toString(value) + "e").split("e");
                return +(pair[0] + "e" + (+pair[1] - precision));
              }
              return func(number);
            };
          }
          var createSet = Set && 1 / setToArray(new Set([ , -0 ]))[1] == INFINITY ? function(values) {
            return new Set(values);
          } : noop;
          function createToPairs(keysFunc) {
            return function(object) {
              var tag = getTag(object);
              if (tag == mapTag) return mapToArray(object);
              if (tag == setTag) return setToPairs(object);
              return baseToPairs(object, keysFunc(object));
            };
          }
          function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
            var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
            if (!isBindKey && "function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            var length = partials ? partials.length : 0;
            if (!length) {
              bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
              partials = holders = undefined;
            }
            ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
            arity = arity === undefined ? arity : toInteger(arity);
            length -= holders ? holders.length : 0;
            if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
              var partialsRight = partials, holdersRight = holders;
              partials = holders = undefined;
            }
            var data = isBindKey ? undefined : getData(func);
            var newData = [ func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity ];
            data && mergeData(newData, data);
            func = newData[0];
            bitmask = newData[1];
            thisArg = newData[2];
            partials = newData[3];
            holders = newData[4];
            arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
            !arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG) && (bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG));
            if (bitmask && bitmask != WRAP_BIND_FLAG) result = bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG ? createCurry(func, bitmask, arity) : bitmask != WRAP_PARTIAL_FLAG && bitmask != (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG) || holders.length ? createHybrid.apply(undefined, newData) : createPartial(func, bitmask, thisArg, partials); else var result = createBind(func, bitmask, thisArg);
            var setter = data ? baseSetData : setData;
            return setWrapToString(setter(result, newData), func, bitmask);
          }
          function customDefaultsAssignIn(objValue, srcValue, key, object) {
            if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) return srcValue;
            return objValue;
          }
          function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
            if (isObject(objValue) && isObject(srcValue)) {
              stack.set(srcValue, objValue);
              baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
              stack["delete"](srcValue);
            }
            return objValue;
          }
          function customOmitClone(value) {
            return isPlainObject(value) ? undefined : value;
          }
          function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
            if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
            var arrStacked = stack.get(array);
            var othStacked = stack.get(other);
            if (arrStacked && othStacked) return arrStacked == other && othStacked == array;
            var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;
            stack.set(array, other);
            stack.set(other, array);
            while (++index < arrLength) {
              var arrValue = array[index], othValue = other[index];
              if (customizer) var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
              if (compared !== undefined) {
                if (compared) continue;
                result = false;
                break;
              }
              if (seen) {
                if (!arraySome(other, function(othValue, othIndex) {
                  if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) return seen.push(othIndex);
                })) {
                  result = false;
                  break;
                }
              } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                result = false;
                break;
              }
            }
            stack["delete"](array);
            stack["delete"](other);
            return result;
          }
          function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
            switch (tag) {
             case dataViewTag:
              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return false;
              object = object.buffer;
              other = other.buffer;

             case arrayBufferTag:
              if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) return false;
              return true;

             case boolTag:
             case dateTag:
             case numberTag:
              return eq(+object, +other);

             case errorTag:
              return object.name == other.name && object.message == other.message;

             case regexpTag:
             case stringTag:
              return object == other + "";

             case mapTag:
              var convert = mapToArray;

             case setTag:
              var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
              convert || (convert = setToArray);
              if (object.size != other.size && !isPartial) return false;
              var stacked = stack.get(object);
              if (stacked) return stacked == other;
              bitmask |= COMPARE_UNORDERED_FLAG;
              stack.set(object, other);
              var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
              stack["delete"](object);
              return result;

             case symbolTag:
              if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
            }
            return false;
          }
          function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
            if (objLength != othLength && !isPartial) return false;
            var index = objLength;
            while (index--) {
              var key = objProps[index];
              if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
            }
            var objStacked = stack.get(object);
            var othStacked = stack.get(other);
            if (objStacked && othStacked) return objStacked == other && othStacked == object;
            var result = true;
            stack.set(object, other);
            stack.set(other, object);
            var skipCtor = isPartial;
            while (++index < objLength) {
              key = objProps[index];
              var objValue = object[key], othValue = other[key];
              if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
              if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                result = false;
                break;
              }
              skipCtor || (skipCtor = "constructor" == key);
            }
            if (result && !skipCtor) {
              var objCtor = object.constructor, othCtor = other.constructor;
              objCtor != othCtor && "constructor" in object && "constructor" in other && !("function" == typeof objCtor && objCtor instanceof objCtor && "function" == typeof othCtor && othCtor instanceof othCtor) && (result = false);
            }
            stack["delete"](object);
            stack["delete"](other);
            return result;
          }
          function flatRest(func) {
            return setToString(overRest(func, undefined, flatten), func + "");
          }
          function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
          }
          function getAllKeysIn(object) {
            return baseGetAllKeys(object, keysIn, getSymbolsIn);
          }
          var getData = metaMap ? function(func) {
            return metaMap.get(func);
          } : noop;
          function getFuncName(func) {
            var result = func.name + "", array = realNames[result], length = hasOwnProperty.call(realNames, result) ? array.length : 0;
            while (length--) {
              var data = array[length], otherFunc = data.func;
              if (null == otherFunc || otherFunc == func) return data.name;
            }
            return result;
          }
          function getHolder(func) {
            var object = hasOwnProperty.call(lodash, "placeholder") ? lodash : func;
            return object.placeholder;
          }
          function getIteratee() {
            var result = lodash.iteratee || iteratee;
            result = result === iteratee ? baseIteratee : result;
            return arguments.length ? result(arguments[0], arguments[1]) : result;
          }
          function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ? data["string" == typeof key ? "string" : "hash"] : data.map;
          }
          function getMatchData(object) {
            var result = keys(object), length = result.length;
            while (length--) {
              var key = result[length], value = object[key];
              result[length] = [ key, value, isStrictComparable(value) ];
            }
            return result;
          }
          function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : undefined;
          }
          function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
            try {
              value[symToStringTag] = undefined;
              var unmasked = true;
            } catch (e) {}
            var result = nativeObjectToString.call(value);
            unmasked && (isOwn ? value[symToStringTag] = tag : delete value[symToStringTag]);
            return result;
          }
          var getSymbols = nativeGetSymbols ? function(object) {
            if (null == object) return [];
            object = Object(object);
            return arrayFilter(nativeGetSymbols(object), function(symbol) {
              return propertyIsEnumerable.call(object, symbol);
            });
          } : stubArray;
          var getSymbolsIn = nativeGetSymbols ? function(object) {
            var result = [];
            while (object) {
              arrayPush(result, getSymbols(object));
              object = getPrototype(object);
            }
            return result;
          } : stubArray;
          var getTag = baseGetTag;
          (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) && (getTag = function(value) {
            var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : "";
            if (ctorString) switch (ctorString) {
             case dataViewCtorString:
              return dataViewTag;

             case mapCtorString:
              return mapTag;

             case promiseCtorString:
              return promiseTag;

             case setCtorString:
              return setTag;

             case weakMapCtorString:
              return weakMapTag;
            }
            return result;
          });
          function getView(start, end, transforms) {
            var index = -1, length = transforms.length;
            while (++index < length) {
              var data = transforms[index], size = data.size;
              switch (data.type) {
               case "drop":
                start += size;
                break;

               case "dropRight":
                end -= size;
                break;

               case "take":
                end = nativeMin(end, start + size);
                break;

               case "takeRight":
                start = nativeMax(start, end - size);
              }
            }
            return {
              start: start,
              end: end
            };
          }
          function getWrapDetails(source) {
            var match = source.match(reWrapDetails);
            return match ? match[1].split(reSplitDetails) : [];
          }
          function hasPath(object, path, hasFunc) {
            path = castPath(path, object);
            var index = -1, length = path.length, result = false;
            while (++index < length) {
              var key = toKey(path[index]);
              if (!(result = null != object && hasFunc(object, key))) break;
              object = object[key];
            }
            if (result || ++index != length) return result;
            length = null == object ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
          }
          function initCloneArray(array) {
            var length = array.length, result = new array.constructor(length);
            if (length && "string" == typeof array[0] && hasOwnProperty.call(array, "index")) {
              result.index = array.index;
              result.input = array.input;
            }
            return result;
          }
          function initCloneObject(object) {
            return "function" != typeof object.constructor || isPrototype(object) ? {} : baseCreate(getPrototype(object));
          }
          function initCloneByTag(object, tag, isDeep) {
            var Ctor = object.constructor;
            switch (tag) {
             case arrayBufferTag:
              return cloneArrayBuffer(object);

             case boolTag:
             case dateTag:
              return new Ctor(+object);

             case dataViewTag:
              return cloneDataView(object, isDeep);

             case float32Tag:
             case float64Tag:
             case int8Tag:
             case int16Tag:
             case int32Tag:
             case uint8Tag:
             case uint8ClampedTag:
             case uint16Tag:
             case uint32Tag:
              return cloneTypedArray(object, isDeep);

             case mapTag:
              return new Ctor();

             case numberTag:
             case stringTag:
              return new Ctor(object);

             case regexpTag:
              return cloneRegExp(object);

             case setTag:
              return new Ctor();

             case symbolTag:
              return cloneSymbol(object);
            }
          }
          function insertWrapDetails(source, details) {
            var length = details.length;
            if (!length) return source;
            var lastIndex = length - 1;
            details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
            details = details.join(length > 2 ? ", " : " ");
            return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
          }
          function isFlattenable(value) {
            return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
          }
          function isIndex(value, length) {
            var type = typeof value;
            length = null == length ? MAX_SAFE_INTEGER : length;
            return !!length && ("number" == type || "symbol" != type && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
          }
          function isIterateeCall(value, index, object) {
            if (!isObject(object)) return false;
            var type = typeof index;
            if ("number" == type ? isArrayLike(object) && isIndex(index, object.length) : "string" == type && index in object) return eq(object[index], value);
            return false;
          }
          function isKey(value, object) {
            if (isArray(value)) return false;
            var type = typeof value;
            if ("number" == type || "symbol" == type || "boolean" == type || null == value || isSymbol(value)) return true;
            return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || null != object && value in Object(object);
          }
          function isKeyable(value) {
            var type = typeof value;
            return "string" == type || "number" == type || "symbol" == type || "boolean" == type ? "__proto__" !== value : null === value;
          }
          function isLaziable(func) {
            var funcName = getFuncName(func), other = lodash[funcName];
            if ("function" != typeof other || !(funcName in LazyWrapper.prototype)) return false;
            if (func === other) return true;
            var data = getData(other);
            return !!data && func === data[0];
          }
          function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
          }
          var isMaskable = coreJsData ? isFunction : stubFalse;
          function isPrototype(value) {
            var Ctor = value && value.constructor, proto = "function" == typeof Ctor && Ctor.prototype || objectProto;
            return value === proto;
          }
          function isStrictComparable(value) {
            return value === value && !isObject(value);
          }
          function matchesStrictComparable(key, srcValue) {
            return function(object) {
              if (null == object) return false;
              return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
            };
          }
          function memoizeCapped(func) {
            var result = memoize(func, function(key) {
              cache.size === MAX_MEMOIZE_SIZE && cache.clear();
              return key;
            });
            var cache = result.cache;
            return result;
          }
          function mergeData(data, source) {
            var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
            var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
            if (!(isCommon || isCombo)) return data;
            if (srcBitmask & WRAP_BIND_FLAG) {
              data[2] = source[2];
              newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
            }
            var value = source[3];
            if (value) {
              var partials = data[3];
              data[3] = partials ? composeArgs(partials, value, source[4]) : value;
              data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
            }
            value = source[5];
            if (value) {
              partials = data[5];
              data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
              data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
            }
            value = source[7];
            value && (data[7] = value);
            srcBitmask & WRAP_ARY_FLAG && (data[8] = null == data[8] ? source[8] : nativeMin(data[8], source[8]));
            null == data[9] && (data[9] = source[9]);
            data[0] = source[0];
            data[1] = newBitmask;
            return data;
          }
          function nativeKeysIn(object) {
            var result = [];
            if (null != object) for (var key in Object(object)) result.push(key);
            return result;
          }
          function objectToString(value) {
            return nativeObjectToString.call(value);
          }
          function overRest(func, start, transform) {
            start = nativeMax(start === undefined ? func.length - 1 : start, 0);
            return function() {
              var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
              while (++index < length) array[index] = args[start + index];
              index = -1;
              var otherArgs = Array(start + 1);
              while (++index < start) otherArgs[index] = args[index];
              otherArgs[start] = transform(array);
              return apply(func, this, otherArgs);
            };
          }
          function parent(object, path) {
            return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
          }
          function reorder(array, indexes) {
            var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
            while (length--) {
              var index = indexes[length];
              array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
            }
            return array;
          }
          function safeGet(object, key) {
            if ("constructor" === key && "function" === typeof object[key]) return;
            if ("__proto__" == key) return;
            return object[key];
          }
          var setData = shortOut(baseSetData);
          var setTimeout = ctxSetTimeout || function(func, wait) {
            return root.setTimeout(func, wait);
          };
          var setToString = shortOut(baseSetToString);
          function setWrapToString(wrapper, reference, bitmask) {
            var source = reference + "";
            return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
          }
          function shortOut(func) {
            var count = 0, lastCalled = 0;
            return function() {
              var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
              lastCalled = stamp;
              if (remaining > 0) {
                if (++count >= HOT_COUNT) return arguments[0];
              } else count = 0;
              return func.apply(undefined, arguments);
            };
          }
          function shuffleSelf(array, size) {
            var index = -1, length = array.length, lastIndex = length - 1;
            size = size === undefined ? length : size;
            while (++index < size) {
              var rand = baseRandom(index, lastIndex), value = array[rand];
              array[rand] = array[index];
              array[index] = value;
            }
            array.length = size;
            return array;
          }
          var stringToPath = memoizeCapped(function(string) {
            var result = [];
            46 === string.charCodeAt(0) && result.push("");
            string.replace(rePropName, function(match, number, quote, subString) {
              result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
            });
            return result;
          });
          function toKey(value) {
            if ("string" == typeof value || isSymbol(value)) return value;
            var result = value + "";
            return "0" == result && 1 / value == -INFINITY ? "-0" : result;
          }
          function toSource(func) {
            if (null != func) {
              try {
                return funcToString.call(func);
              } catch (e) {}
              try {
                return func + "";
              } catch (e) {}
            }
            return "";
          }
          function updateWrapDetails(details, bitmask) {
            arrayEach(wrapFlags, function(pair) {
              var value = "_." + pair[0];
              bitmask & pair[1] && !arrayIncludes(details, value) && details.push(value);
            });
            return details.sort();
          }
          function wrapperClone(wrapper) {
            if (wrapper instanceof LazyWrapper) return wrapper.clone();
            var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
            result.__actions__ = copyArray(wrapper.__actions__);
            result.__index__ = wrapper.__index__;
            result.__values__ = wrapper.__values__;
            return result;
          }
          function chunk(array, size, guard) {
            size = (guard ? isIterateeCall(array, size, guard) : size === undefined) ? 1 : nativeMax(toInteger(size), 0);
            var length = null == array ? 0 : array.length;
            if (!length || size < 1) return [];
            var index = 0, resIndex = 0, result = Array(nativeCeil(length / size));
            while (index < length) result[resIndex++] = baseSlice(array, index, index += size);
            return result;
          }
          function compact(array) {
            var index = -1, length = null == array ? 0 : array.length, resIndex = 0, result = [];
            while (++index < length) {
              var value = array[index];
              value && (result[resIndex++] = value);
            }
            return result;
          }
          function concat() {
            var length = arguments.length;
            if (!length) return [];
            var args = Array(length - 1), array = arguments[0], index = length;
            while (index--) args[index - 1] = arguments[index];
            return arrayPush(isArray(array) ? copyArray(array) : [ array ], baseFlatten(args, 1));
          }
          var difference = baseRest(function(array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
          });
          var differenceBy = baseRest(function(array, values) {
            var iteratee = last(values);
            isArrayLikeObject(iteratee) && (iteratee = undefined);
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
          });
          var differenceWith = baseRest(function(array, values) {
            var comparator = last(values);
            isArrayLikeObject(comparator) && (comparator = undefined);
            return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
          });
          function drop(array, n, guard) {
            var length = null == array ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, n < 0 ? 0 : n, length);
          }
          function dropRight(array, n, guard) {
            var length = null == array ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, 0, n < 0 ? 0 : n);
          }
          function dropRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
          }
          function dropWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
          }
          function fill(array, value, start, end) {
            var length = null == array ? 0 : array.length;
            if (!length) return [];
            if (start && "number" != typeof start && isIterateeCall(array, value, start)) {
              start = 0;
              end = length;
            }
            return baseFill(array, value, start, end);
          }
          function findIndex(array, predicate, fromIndex) {
            var length = null == array ? 0 : array.length;
            if (!length) return -1;
            var index = null == fromIndex ? 0 : toInteger(fromIndex);
            index < 0 && (index = nativeMax(length + index, 0));
            return baseFindIndex(array, getIteratee(predicate, 3), index);
          }
          function findLastIndex(array, predicate, fromIndex) {
            var length = null == array ? 0 : array.length;
            if (!length) return -1;
            var index = length - 1;
            if (fromIndex !== undefined) {
              index = toInteger(fromIndex);
              index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return baseFindIndex(array, getIteratee(predicate, 3), index, true);
          }
          function flatten(array) {
            var length = null == array ? 0 : array.length;
            return length ? baseFlatten(array, 1) : [];
          }
          function flattenDeep(array) {
            var length = null == array ? 0 : array.length;
            return length ? baseFlatten(array, INFINITY) : [];
          }
          function flattenDepth(array, depth) {
            var length = null == array ? 0 : array.length;
            if (!length) return [];
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(array, depth);
          }
          function fromPairs(pairs) {
            var index = -1, length = null == pairs ? 0 : pairs.length, result = {};
            while (++index < length) {
              var pair = pairs[index];
              result[pair[0]] = pair[1];
            }
            return result;
          }
          function head(array) {
            return array && array.length ? array[0] : undefined;
          }
          function indexOf(array, value, fromIndex) {
            var length = null == array ? 0 : array.length;
            if (!length) return -1;
            var index = null == fromIndex ? 0 : toInteger(fromIndex);
            index < 0 && (index = nativeMax(length + index, 0));
            return baseIndexOf(array, value, index);
          }
          function initial(array) {
            var length = null == array ? 0 : array.length;
            return length ? baseSlice(array, 0, -1) : [];
          }
          var intersection = baseRest(function(arrays) {
            var mapped = arrayMap(arrays, castArrayLikeObject);
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
          });
          var intersectionBy = baseRest(function(arrays) {
            var iteratee = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            iteratee === last(mapped) ? iteratee = undefined : mapped.pop();
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
          });
          var intersectionWith = baseRest(function(arrays) {
            var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
            comparator = "function" == typeof comparator ? comparator : undefined;
            comparator && mapped.pop();
            return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
          });
          function join(array, separator) {
            return null == array ? "" : nativeJoin.call(array, separator);
          }
          function last(array) {
            var length = null == array ? 0 : array.length;
            return length ? array[length - 1] : undefined;
          }
          function lastIndexOf(array, value, fromIndex) {
            var length = null == array ? 0 : array.length;
            if (!length) return -1;
            var index = length;
            if (fromIndex !== undefined) {
              index = toInteger(fromIndex);
              index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
            }
            return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
          }
          function nth(array, n) {
            return array && array.length ? baseNth(array, toInteger(n)) : undefined;
          }
          var pull = baseRest(pullAll);
          function pullAll(array, values) {
            return array && array.length && values && values.length ? basePullAll(array, values) : array;
          }
          function pullAllBy(array, values, iteratee) {
            return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
          }
          function pullAllWith(array, values, comparator) {
            return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
          }
          var pullAt = flatRest(function(array, indexes) {
            var length = null == array ? 0 : array.length, result = baseAt(array, indexes);
            basePullAt(array, arrayMap(indexes, function(index) {
              return isIndex(index, length) ? +index : index;
            }).sort(compareAscending));
            return result;
          });
          function remove(array, predicate) {
            var result = [];
            if (!(array && array.length)) return result;
            var index = -1, indexes = [], length = array.length;
            predicate = getIteratee(predicate, 3);
            while (++index < length) {
              var value = array[index];
              if (predicate(value, index, array)) {
                result.push(value);
                indexes.push(index);
              }
            }
            basePullAt(array, indexes);
            return result;
          }
          function reverse(array) {
            return null == array ? array : nativeReverse.call(array);
          }
          function slice(array, start, end) {
            var length = null == array ? 0 : array.length;
            if (!length) return [];
            if (end && "number" != typeof end && isIterateeCall(array, start, end)) {
              start = 0;
              end = length;
            } else {
              start = null == start ? 0 : toInteger(start);
              end = end === undefined ? length : toInteger(end);
            }
            return baseSlice(array, start, end);
          }
          function sortedIndex(array, value) {
            return baseSortedIndex(array, value);
          }
          function sortedIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
          }
          function sortedIndexOf(array, value) {
            var length = null == array ? 0 : array.length;
            if (length) {
              var index = baseSortedIndex(array, value);
              if (index < length && eq(array[index], value)) return index;
            }
            return -1;
          }
          function sortedLastIndex(array, value) {
            return baseSortedIndex(array, value, true);
          }
          function sortedLastIndexBy(array, value, iteratee) {
            return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
          }
          function sortedLastIndexOf(array, value) {
            var length = null == array ? 0 : array.length;
            if (length) {
              var index = baseSortedIndex(array, value, true) - 1;
              if (eq(array[index], value)) return index;
            }
            return -1;
          }
          function sortedUniq(array) {
            return array && array.length ? baseSortedUniq(array) : [];
          }
          function sortedUniqBy(array, iteratee) {
            return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
          }
          function tail(array) {
            var length = null == array ? 0 : array.length;
            return length ? baseSlice(array, 1, length) : [];
          }
          function take(array, n, guard) {
            if (!(array && array.length)) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            return baseSlice(array, 0, n < 0 ? 0 : n);
          }
          function takeRight(array, n, guard) {
            var length = null == array ? 0 : array.length;
            if (!length) return [];
            n = guard || n === undefined ? 1 : toInteger(n);
            n = length - n;
            return baseSlice(array, n < 0 ? 0 : n, length);
          }
          function takeRightWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
          }
          function takeWhile(array, predicate) {
            return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
          }
          var union = baseRest(function(arrays) {
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
          });
          var unionBy = baseRest(function(arrays) {
            var iteratee = last(arrays);
            isArrayLikeObject(iteratee) && (iteratee = undefined);
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
          });
          var unionWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = "function" == typeof comparator ? comparator : undefined;
            return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
          });
          function uniq(array) {
            return array && array.length ? baseUniq(array) : [];
          }
          function uniqBy(array, iteratee) {
            return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
          }
          function uniqWith(array, comparator) {
            comparator = "function" == typeof comparator ? comparator : undefined;
            return array && array.length ? baseUniq(array, undefined, comparator) : [];
          }
          function unzip(array) {
            if (!(array && array.length)) return [];
            var length = 0;
            array = arrayFilter(array, function(group) {
              if (isArrayLikeObject(group)) {
                length = nativeMax(group.length, length);
                return true;
              }
            });
            return baseTimes(length, function(index) {
              return arrayMap(array, baseProperty(index));
            });
          }
          function unzipWith(array, iteratee) {
            if (!(array && array.length)) return [];
            var result = unzip(array);
            if (null == iteratee) return result;
            return arrayMap(result, function(group) {
              return apply(iteratee, undefined, group);
            });
          }
          var without = baseRest(function(array, values) {
            return isArrayLikeObject(array) ? baseDifference(array, values) : [];
          });
          var xor = baseRest(function(arrays) {
            return baseXor(arrayFilter(arrays, isArrayLikeObject));
          });
          var xorBy = baseRest(function(arrays) {
            var iteratee = last(arrays);
            isArrayLikeObject(iteratee) && (iteratee = undefined);
            return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
          });
          var xorWith = baseRest(function(arrays) {
            var comparator = last(arrays);
            comparator = "function" == typeof comparator ? comparator : undefined;
            return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
          });
          var zip = baseRest(unzip);
          function zipObject(props, values) {
            return baseZipObject(props || [], values || [], assignValue);
          }
          function zipObjectDeep(props, values) {
            return baseZipObject(props || [], values || [], baseSet);
          }
          var zipWith = baseRest(function(arrays) {
            var length = arrays.length, iteratee = length > 1 ? arrays[length - 1] : undefined;
            iteratee = "function" == typeof iteratee ? (arrays.pop(), iteratee) : undefined;
            return unzipWith(arrays, iteratee);
          });
          function chain(value) {
            var result = lodash(value);
            result.__chain__ = true;
            return result;
          }
          function tap(value, interceptor) {
            interceptor(value);
            return value;
          }
          function thru(value, interceptor) {
            return interceptor(value);
          }
          var wrapperAt = flatRest(function(paths) {
            var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
              return baseAt(object, paths);
            };
            if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) return this.thru(interceptor);
            value = value.slice(start, +start + (length ? 1 : 0));
            value.__actions__.push({
              func: thru,
              args: [ interceptor ],
              thisArg: undefined
            });
            return new LodashWrapper(value, this.__chain__).thru(function(array) {
              length && !array.length && array.push(undefined);
              return array;
            });
          });
          function wrapperChain() {
            return chain(this);
          }
          function wrapperCommit() {
            return new LodashWrapper(this.value(), this.__chain__);
          }
          function wrapperNext() {
            this.__values__ === undefined && (this.__values__ = toArray(this.value()));
            var done = this.__index__ >= this.__values__.length, value = done ? undefined : this.__values__[this.__index__++];
            return {
              done: done,
              value: value
            };
          }
          function wrapperToIterator() {
            return this;
          }
          function wrapperPlant(value) {
            var result, parent = this;
            while (parent instanceof baseLodash) {
              var clone = wrapperClone(parent);
              clone.__index__ = 0;
              clone.__values__ = undefined;
              result ? previous.__wrapped__ = clone : result = clone;
              var previous = clone;
              parent = parent.__wrapped__;
            }
            previous.__wrapped__ = value;
            return result;
          }
          function wrapperReverse() {
            var value = this.__wrapped__;
            if (value instanceof LazyWrapper) {
              var wrapped = value;
              this.__actions__.length && (wrapped = new LazyWrapper(this));
              wrapped = wrapped.reverse();
              wrapped.__actions__.push({
                func: thru,
                args: [ reverse ],
                thisArg: undefined
              });
              return new LodashWrapper(wrapped, this.__chain__);
            }
            return this.thru(reverse);
          }
          function wrapperValue() {
            return baseWrapperValue(this.__wrapped__, this.__actions__);
          }
          var countBy = createAggregator(function(result, value, key) {
            hasOwnProperty.call(result, key) ? ++result[key] : baseAssignValue(result, key, 1);
          });
          function every(collection, predicate, guard) {
            var func = isArray(collection) ? arrayEvery : baseEvery;
            guard && isIterateeCall(collection, predicate, guard) && (predicate = undefined);
            return func(collection, getIteratee(predicate, 3));
          }
          function filter(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, getIteratee(predicate, 3));
          }
          var find = createFind(findIndex);
          var findLast = createFind(findLastIndex);
          function flatMap(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), 1);
          }
          function flatMapDeep(collection, iteratee) {
            return baseFlatten(map(collection, iteratee), INFINITY);
          }
          function flatMapDepth(collection, iteratee, depth) {
            depth = depth === undefined ? 1 : toInteger(depth);
            return baseFlatten(map(collection, iteratee), depth);
          }
          function forEach(collection, iteratee) {
            var func = isArray(collection) ? arrayEach : baseEach;
            return func(collection, getIteratee(iteratee, 3));
          }
          function forEachRight(collection, iteratee) {
            var func = isArray(collection) ? arrayEachRight : baseEachRight;
            return func(collection, getIteratee(iteratee, 3));
          }
          var groupBy = createAggregator(function(result, value, key) {
            hasOwnProperty.call(result, key) ? result[key].push(value) : baseAssignValue(result, key, [ value ]);
          });
          function includes(collection, value, fromIndex, guard) {
            collection = isArrayLike(collection) ? collection : values(collection);
            fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
            var length = collection.length;
            fromIndex < 0 && (fromIndex = nativeMax(length + fromIndex, 0));
            return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
          }
          var invokeMap = baseRest(function(collection, path, args) {
            var index = -1, isFunc = "function" == typeof path, result = isArrayLike(collection) ? Array(collection.length) : [];
            baseEach(collection, function(value) {
              result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
            });
            return result;
          });
          var keyBy = createAggregator(function(result, value, key) {
            baseAssignValue(result, key, value);
          });
          function map(collection, iteratee) {
            var func = isArray(collection) ? arrayMap : baseMap;
            return func(collection, getIteratee(iteratee, 3));
          }
          function orderBy(collection, iteratees, orders, guard) {
            if (null == collection) return [];
            isArray(iteratees) || (iteratees = null == iteratees ? [] : [ iteratees ]);
            orders = guard ? undefined : orders;
            isArray(orders) || (orders = null == orders ? [] : [ orders ]);
            return baseOrderBy(collection, iteratees, orders);
          }
          var partition = createAggregator(function(result, value, key) {
            result[key ? 0 : 1].push(value);
          }, function() {
            return [ [], [] ];
          });
          function reduce(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
          }
          function reduceRight(collection, iteratee, accumulator) {
            var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
            return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
          }
          function reject(collection, predicate) {
            var func = isArray(collection) ? arrayFilter : baseFilter;
            return func(collection, negate(getIteratee(predicate, 3)));
          }
          function sample(collection) {
            var func = isArray(collection) ? arraySample : baseSample;
            return func(collection);
          }
          function sampleSize(collection, n, guard) {
            n = (guard ? isIterateeCall(collection, n, guard) : n === undefined) ? 1 : toInteger(n);
            var func = isArray(collection) ? arraySampleSize : baseSampleSize;
            return func(collection, n);
          }
          function shuffle(collection) {
            var func = isArray(collection) ? arrayShuffle : baseShuffle;
            return func(collection);
          }
          function size(collection) {
            if (null == collection) return 0;
            if (isArrayLike(collection)) return isString(collection) ? stringSize(collection) : collection.length;
            var tag = getTag(collection);
            if (tag == mapTag || tag == setTag) return collection.size;
            return baseKeys(collection).length;
          }
          function some(collection, predicate, guard) {
            var func = isArray(collection) ? arraySome : baseSome;
            guard && isIterateeCall(collection, predicate, guard) && (predicate = undefined);
            return func(collection, getIteratee(predicate, 3));
          }
          var sortBy = baseRest(function(collection, iteratees) {
            if (null == collection) return [];
            var length = iteratees.length;
            length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1]) ? iteratees = [] : length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2]) && (iteratees = [ iteratees[0] ]);
            return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
          });
          var now = ctxNow || function() {
            return root.Date.now();
          };
          function after(n, func) {
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            n = toInteger(n);
            return function() {
              if (--n < 1) return func.apply(this, arguments);
            };
          }
          function ary(func, n, guard) {
            n = guard ? undefined : n;
            n = func && null == n ? func.length : n;
            return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
          }
          function before(n, func) {
            var result;
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            n = toInteger(n);
            return function() {
              --n > 0 && (result = func.apply(this, arguments));
              n <= 1 && (func = undefined);
              return result;
            };
          }
          var bind = baseRest(function(func, thisArg, partials) {
            var bitmask = WRAP_BIND_FLAG;
            if (partials.length) {
              var holders = replaceHolders(partials, getHolder(bind));
              bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(func, bitmask, thisArg, partials, holders);
          });
          var bindKey = baseRest(function(object, key, partials) {
            var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
            if (partials.length) {
              var holders = replaceHolders(partials, getHolder(bindKey));
              bitmask |= WRAP_PARTIAL_FLAG;
            }
            return createWrap(key, bitmask, object, partials, holders);
          });
          function curry(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curry.placeholder;
            return result;
          }
          function curryRight(func, arity, guard) {
            arity = guard ? undefined : arity;
            var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
            result.placeholder = curryRight.placeholder;
            return result;
          }
          function debounce(func, wait, options) {
            var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            wait = toNumber(wait) || 0;
            if (isObject(options)) {
              leading = !!options.leading;
              maxing = "maxWait" in options;
              maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
              trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            function invokeFunc(time) {
              var args = lastArgs, thisArg = lastThis;
              lastArgs = lastThis = undefined;
              lastInvokeTime = time;
              result = func.apply(thisArg, args);
              return result;
            }
            function leadingEdge(time) {
              lastInvokeTime = time;
              timerId = setTimeout(timerExpired, wait);
              return leading ? invokeFunc(time) : result;
            }
            function remainingWait(time) {
              var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
              return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            }
            function shouldInvoke(time) {
              var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
              return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
            }
            function timerExpired() {
              var time = now();
              if (shouldInvoke(time)) return trailingEdge(time);
              timerId = setTimeout(timerExpired, remainingWait(time));
            }
            function trailingEdge(time) {
              timerId = undefined;
              if (trailing && lastArgs) return invokeFunc(time);
              lastArgs = lastThis = undefined;
              return result;
            }
            function cancel() {
              timerId !== undefined && clearTimeout(timerId);
              lastInvokeTime = 0;
              lastArgs = lastCallTime = lastThis = timerId = undefined;
            }
            function flush() {
              return timerId === undefined ? result : trailingEdge(now());
            }
            function debounced() {
              var time = now(), isInvoking = shouldInvoke(time);
              lastArgs = arguments;
              lastThis = this;
              lastCallTime = time;
              if (isInvoking) {
                if (timerId === undefined) return leadingEdge(lastCallTime);
                if (maxing) {
                  clearTimeout(timerId);
                  timerId = setTimeout(timerExpired, wait);
                  return invokeFunc(lastCallTime);
                }
              }
              timerId === undefined && (timerId = setTimeout(timerExpired, wait));
              return result;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
          }
          var defer = baseRest(function(func, args) {
            return baseDelay(func, 1, args);
          });
          var delay = baseRest(function(func, wait, args) {
            return baseDelay(func, toNumber(wait) || 0, args);
          });
          function flip(func) {
            return createWrap(func, WRAP_FLIP_FLAG);
          }
          function memoize(func, resolver) {
            if ("function" != typeof func || null != resolver && "function" != typeof resolver) throw new TypeError(FUNC_ERROR_TEXT);
            var memoized = function() {
              var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
              if (cache.has(key)) return cache.get(key);
              var result = func.apply(this, args);
              memoized.cache = cache.set(key, result) || cache;
              return result;
            };
            memoized.cache = new (memoize.Cache || MapCache)();
            return memoized;
          }
          memoize.Cache = MapCache;
          function negate(predicate) {
            if ("function" != typeof predicate) throw new TypeError(FUNC_ERROR_TEXT);
            return function() {
              var args = arguments;
              switch (args.length) {
               case 0:
                return !predicate.call(this);

               case 1:
                return !predicate.call(this, args[0]);

               case 2:
                return !predicate.call(this, args[0], args[1]);

               case 3:
                return !predicate.call(this, args[0], args[1], args[2]);
              }
              return !predicate.apply(this, args);
            };
          }
          function once(func) {
            return before(2, func);
          }
          var overArgs = castRest(function(func, transforms) {
            transforms = 1 == transforms.length && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
            var funcsLength = transforms.length;
            return baseRest(function(args) {
              var index = -1, length = nativeMin(args.length, funcsLength);
              while (++index < length) args[index] = transforms[index].call(this, args[index]);
              return apply(func, this, args);
            });
          });
          var partial = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partial));
            return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
          });
          var partialRight = baseRest(function(func, partials) {
            var holders = replaceHolders(partials, getHolder(partialRight));
            return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
          });
          var rearg = flatRest(function(func, indexes) {
            return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
          });
          function rest(func, start) {
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            start = start === undefined ? start : toInteger(start);
            return baseRest(func, start);
          }
          function spread(func, start) {
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            start = null == start ? 0 : nativeMax(toInteger(start), 0);
            return baseRest(function(args) {
              var array = args[start], otherArgs = castSlice(args, 0, start);
              array && arrayPush(otherArgs, array);
              return apply(func, this, otherArgs);
            });
          }
          function throttle(func, wait, options) {
            var leading = true, trailing = true;
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            if (isObject(options)) {
              leading = "leading" in options ? !!options.leading : leading;
              trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
              leading: leading,
              maxWait: wait,
              trailing: trailing
            });
          }
          function unary(func) {
            return ary(func, 1);
          }
          function wrap(value, wrapper) {
            return partial(castFunction(wrapper), value);
          }
          function castArray() {
            if (!arguments.length) return [];
            var value = arguments[0];
            return isArray(value) ? value : [ value ];
          }
          function clone(value) {
            return baseClone(value, CLONE_SYMBOLS_FLAG);
          }
          function cloneWith(value, customizer) {
            customizer = "function" == typeof customizer ? customizer : undefined;
            return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
          }
          function cloneDeep(value) {
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
          }
          function cloneDeepWith(value, customizer) {
            customizer = "function" == typeof customizer ? customizer : undefined;
            return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
          }
          function conformsTo(object, source) {
            return null == source || baseConformsTo(object, source, keys(source));
          }
          function eq(value, other) {
            return value === other || value !== value && other !== other;
          }
          var gt = createRelationalOperation(baseGt);
          var gte = createRelationalOperation(function(value, other) {
            return value >= other;
          });
          var isArguments = baseIsArguments(function() {
            return arguments;
          }()) ? baseIsArguments : function(value) {
            return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
          };
          var isArray = Array.isArray;
          var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
          function isArrayLike(value) {
            return null != value && isLength(value.length) && !isFunction(value);
          }
          function isArrayLikeObject(value) {
            return isObjectLike(value) && isArrayLike(value);
          }
          function isBoolean(value) {
            return true === value || false === value || isObjectLike(value) && baseGetTag(value) == boolTag;
          }
          var isBuffer = nativeIsBuffer || stubFalse;
          var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
          function isElement(value) {
            return isObjectLike(value) && 1 === value.nodeType && !isPlainObject(value);
          }
          function isEmpty(value) {
            if (null == value) return true;
            if (isArrayLike(value) && (isArray(value) || "string" == typeof value || "function" == typeof value.splice || isBuffer(value) || isTypedArray(value) || isArguments(value))) return !value.length;
            var tag = getTag(value);
            if (tag == mapTag || tag == setTag) return !value.size;
            if (isPrototype(value)) return !baseKeys(value).length;
            for (var key in value) if (hasOwnProperty.call(value, key)) return false;
            return true;
          }
          function isEqual(value, other) {
            return baseIsEqual(value, other);
          }
          function isEqualWith(value, other, customizer) {
            customizer = "function" == typeof customizer ? customizer : undefined;
            var result = customizer ? customizer(value, other) : undefined;
            return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
          }
          function isError(value) {
            if (!isObjectLike(value)) return false;
            var tag = baseGetTag(value);
            return tag == errorTag || tag == domExcTag || "string" == typeof value.message && "string" == typeof value.name && !isPlainObject(value);
          }
          function isFinite(value) {
            return "number" == typeof value && nativeIsFinite(value);
          }
          function isFunction(value) {
            if (!isObject(value)) return false;
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
          }
          function isInteger(value) {
            return "number" == typeof value && value == toInteger(value);
          }
          function isLength(value) {
            return "number" == typeof value && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
          }
          function isObject(value) {
            var type = typeof value;
            return null != value && ("object" == type || "function" == type);
          }
          function isObjectLike(value) {
            return null != value && "object" == typeof value;
          }
          var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
          function isMatch(object, source) {
            return object === source || baseIsMatch(object, source, getMatchData(source));
          }
          function isMatchWith(object, source, customizer) {
            customizer = "function" == typeof customizer ? customizer : undefined;
            return baseIsMatch(object, source, getMatchData(source), customizer);
          }
          function isNaN(value) {
            return isNumber(value) && value != +value;
          }
          function isNative(value) {
            if (isMaskable(value)) throw new Error(CORE_ERROR_TEXT);
            return baseIsNative(value);
          }
          function isNull(value) {
            return null === value;
          }
          function isNil(value) {
            return null == value;
          }
          function isNumber(value) {
            return "number" == typeof value || isObjectLike(value) && baseGetTag(value) == numberTag;
          }
          function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) return false;
            var proto = getPrototype(value);
            if (null === proto) return true;
            var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
            return "function" == typeof Ctor && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
          }
          var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
          function isSafeInteger(value) {
            return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
          }
          var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
          function isString(value) {
            return "string" == typeof value || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
          }
          function isSymbol(value) {
            return "symbol" == typeof value || isObjectLike(value) && baseGetTag(value) == symbolTag;
          }
          var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
          function isUndefined(value) {
            return value === undefined;
          }
          function isWeakMap(value) {
            return isObjectLike(value) && getTag(value) == weakMapTag;
          }
          function isWeakSet(value) {
            return isObjectLike(value) && baseGetTag(value) == weakSetTag;
          }
          var lt = createRelationalOperation(baseLt);
          var lte = createRelationalOperation(function(value, other) {
            return value <= other;
          });
          function toArray(value) {
            if (!value) return [];
            if (isArrayLike(value)) return isString(value) ? stringToArray(value) : copyArray(value);
            if (symIterator && value[symIterator]) return iteratorToArray(value[symIterator]());
            var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
            return func(value);
          }
          function toFinite(value) {
            if (!value) return 0 === value ? value : 0;
            value = toNumber(value);
            if (value === INFINITY || value === -INFINITY) {
              var sign = value < 0 ? -1 : 1;
              return sign * MAX_INTEGER;
            }
            return value === value ? value : 0;
          }
          function toInteger(value) {
            var result = toFinite(value), remainder = result % 1;
            return result === result ? remainder ? result - remainder : result : 0;
          }
          function toLength(value) {
            return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
          }
          function toNumber(value) {
            if ("number" == typeof value) return value;
            if (isSymbol(value)) return NAN;
            if (isObject(value)) {
              var other = "function" == typeof value.valueOf ? value.valueOf() : value;
              value = isObject(other) ? other + "" : other;
            }
            if ("string" != typeof value) return 0 === value ? value : +value;
            value = baseTrim(value);
            var isBinary = reIsBinary.test(value);
            return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
          }
          function toPlainObject(value) {
            return copyObject(value, keysIn(value));
          }
          function toSafeInteger(value) {
            return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : 0 === value ? value : 0;
          }
          function toString(value) {
            return null == value ? "" : baseToString(value);
          }
          var assign = createAssigner(function(object, source) {
            if (isPrototype(source) || isArrayLike(source)) {
              copyObject(source, keys(source), object);
              return;
            }
            for (var key in source) hasOwnProperty.call(source, key) && assignValue(object, key, source[key]);
          });
          var assignIn = createAssigner(function(object, source) {
            copyObject(source, keysIn(source), object);
          });
          var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keysIn(source), object, customizer);
          });
          var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
            copyObject(source, keys(source), object, customizer);
          });
          var at = flatRest(baseAt);
          function create(prototype, properties) {
            var result = baseCreate(prototype);
            return null == properties ? result : baseAssign(result, properties);
          }
          var defaults = baseRest(function(object, sources) {
            object = Object(object);
            var index = -1;
            var length = sources.length;
            var guard = length > 2 ? sources[2] : undefined;
            guard && isIterateeCall(sources[0], sources[1], guard) && (length = 1);
            while (++index < length) {
              var source = sources[index];
              var props = keysIn(source);
              var propsIndex = -1;
              var propsLength = props.length;
              while (++propsIndex < propsLength) {
                var key = props[propsIndex];
                var value = object[key];
                (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) && (object[key] = source[key]);
              }
            }
            return object;
          });
          var defaultsDeep = baseRest(function(args) {
            args.push(undefined, customDefaultsMerge);
            return apply(mergeWith, undefined, args);
          });
          function findKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
          }
          function findLastKey(object, predicate) {
            return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
          }
          function forIn(object, iteratee) {
            return null == object ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
          }
          function forInRight(object, iteratee) {
            return null == object ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
          }
          function forOwn(object, iteratee) {
            return object && baseForOwn(object, getIteratee(iteratee, 3));
          }
          function forOwnRight(object, iteratee) {
            return object && baseForOwnRight(object, getIteratee(iteratee, 3));
          }
          function functions(object) {
            return null == object ? [] : baseFunctions(object, keys(object));
          }
          function functionsIn(object) {
            return null == object ? [] : baseFunctions(object, keysIn(object));
          }
          function get(object, path, defaultValue) {
            var result = null == object ? undefined : baseGet(object, path);
            return result === undefined ? defaultValue : result;
          }
          function has(object, path) {
            return null != object && hasPath(object, path, baseHas);
          }
          function hasIn(object, path) {
            return null != object && hasPath(object, path, baseHasIn);
          }
          var invert = createInverter(function(result, value, key) {
            null != value && "function" != typeof value.toString && (value = nativeObjectToString.call(value));
            result[value] = key;
          }, constant(identity));
          var invertBy = createInverter(function(result, value, key) {
            null != value && "function" != typeof value.toString && (value = nativeObjectToString.call(value));
            hasOwnProperty.call(result, value) ? result[value].push(key) : result[value] = [ key ];
          }, getIteratee);
          var invoke = baseRest(baseInvoke);
          function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
          }
          function keysIn(object) {
            return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
          }
          function mapKeys(object, iteratee) {
            var result = {};
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function(value, key, object) {
              baseAssignValue(result, iteratee(value, key, object), value);
            });
            return result;
          }
          function mapValues(object, iteratee) {
            var result = {};
            iteratee = getIteratee(iteratee, 3);
            baseForOwn(object, function(value, key, object) {
              baseAssignValue(result, key, iteratee(value, key, object));
            });
            return result;
          }
          var merge = createAssigner(function(object, source, srcIndex) {
            baseMerge(object, source, srcIndex);
          });
          var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
            baseMerge(object, source, srcIndex, customizer);
          });
          var omit = flatRest(function(object, paths) {
            var result = {};
            if (null == object) return result;
            var isDeep = false;
            paths = arrayMap(paths, function(path) {
              path = castPath(path, object);
              isDeep || (isDeep = path.length > 1);
              return path;
            });
            copyObject(object, getAllKeysIn(object), result);
            isDeep && (result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone));
            var length = paths.length;
            while (length--) baseUnset(result, paths[length]);
            return result;
          });
          function omitBy(object, predicate) {
            return pickBy(object, negate(getIteratee(predicate)));
          }
          var pick = flatRest(function(object, paths) {
            return null == object ? {} : basePick(object, paths);
          });
          function pickBy(object, predicate) {
            if (null == object) return {};
            var props = arrayMap(getAllKeysIn(object), function(prop) {
              return [ prop ];
            });
            predicate = getIteratee(predicate);
            return basePickBy(object, props, function(value, path) {
              return predicate(value, path[0]);
            });
          }
          function result(object, path, defaultValue) {
            path = castPath(path, object);
            var index = -1, length = path.length;
            if (!length) {
              length = 1;
              object = undefined;
            }
            while (++index < length) {
              var value = null == object ? undefined : object[toKey(path[index])];
              if (value === undefined) {
                index = length;
                value = defaultValue;
              }
              object = isFunction(value) ? value.call(object) : value;
            }
            return object;
          }
          function set(object, path, value) {
            return null == object ? object : baseSet(object, path, value);
          }
          function setWith(object, path, value, customizer) {
            customizer = "function" == typeof customizer ? customizer : undefined;
            return null == object ? object : baseSet(object, path, value, customizer);
          }
          var toPairs = createToPairs(keys);
          var toPairsIn = createToPairs(keysIn);
          function transform(object, iteratee, accumulator) {
            var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
            iteratee = getIteratee(iteratee, 4);
            if (null == accumulator) {
              var Ctor = object && object.constructor;
              accumulator = isArrLike ? isArr ? new Ctor() : [] : isObject(object) && isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
            }
            (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
              return iteratee(accumulator, value, index, object);
            });
            return accumulator;
          }
          function unset(object, path) {
            return null == object || baseUnset(object, path);
          }
          function update(object, path, updater) {
            return null == object ? object : baseUpdate(object, path, castFunction(updater));
          }
          function updateWith(object, path, updater, customizer) {
            customizer = "function" == typeof customizer ? customizer : undefined;
            return null == object ? object : baseUpdate(object, path, castFunction(updater), customizer);
          }
          function values(object) {
            return null == object ? [] : baseValues(object, keys(object));
          }
          function valuesIn(object) {
            return null == object ? [] : baseValues(object, keysIn(object));
          }
          function clamp(number, lower, upper) {
            if (upper === undefined) {
              upper = lower;
              lower = undefined;
            }
            if (upper !== undefined) {
              upper = toNumber(upper);
              upper = upper === upper ? upper : 0;
            }
            if (lower !== undefined) {
              lower = toNumber(lower);
              lower = lower === lower ? lower : 0;
            }
            return baseClamp(toNumber(number), lower, upper);
          }
          function inRange(number, start, end) {
            start = toFinite(start);
            if (end === undefined) {
              end = start;
              start = 0;
            } else end = toFinite(end);
            number = toNumber(number);
            return baseInRange(number, start, end);
          }
          function random(lower, upper, floating) {
            floating && "boolean" != typeof floating && isIterateeCall(lower, upper, floating) && (upper = floating = undefined);
            if (floating === undefined) if ("boolean" == typeof upper) {
              floating = upper;
              upper = undefined;
            } else if ("boolean" == typeof lower) {
              floating = lower;
              lower = undefined;
            }
            if (lower === undefined && upper === undefined) {
              lower = 0;
              upper = 1;
            } else {
              lower = toFinite(lower);
              if (upper === undefined) {
                upper = lower;
                lower = 0;
              } else upper = toFinite(upper);
            }
            if (lower > upper) {
              var temp = lower;
              lower = upper;
              upper = temp;
            }
            if (floating || lower % 1 || upper % 1) {
              var rand = nativeRandom();
              return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
            }
            return baseRandom(lower, upper);
          }
          var camelCase = createCompounder(function(result, word, index) {
            word = word.toLowerCase();
            return result + (index ? capitalize(word) : word);
          });
          function capitalize(string) {
            return upperFirst(toString(string).toLowerCase());
          }
          function deburr(string) {
            string = toString(string);
            return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
          }
          function endsWith(string, target, position) {
            string = toString(string);
            target = baseToString(target);
            var length = string.length;
            position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
            var end = position;
            position -= target.length;
            return position >= 0 && string.slice(position, end) == target;
          }
          function escape(string) {
            string = toString(string);
            return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
          }
          function escapeRegExp(string) {
            string = toString(string);
            return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
          }
          var kebabCase = createCompounder(function(result, word, index) {
            return result + (index ? "-" : "") + word.toLowerCase();
          });
          var lowerCase = createCompounder(function(result, word, index) {
            return result + (index ? " " : "") + word.toLowerCase();
          });
          var lowerFirst = createCaseFirst("toLowerCase");
          function pad(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            if (!length || strLength >= length) return string;
            var mid = (length - strLength) / 2;
            return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
          }
          function padEnd(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
          }
          function padStart(string, length, chars) {
            string = toString(string);
            length = toInteger(length);
            var strLength = length ? stringSize(string) : 0;
            return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
          }
          function parseInt(string, radix, guard) {
            guard || null == radix ? radix = 0 : radix && (radix = +radix);
            return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
          }
          function repeat(string, n, guard) {
            n = (guard ? isIterateeCall(string, n, guard) : n === undefined) ? 1 : toInteger(n);
            return baseRepeat(toString(string), n);
          }
          function replace() {
            var args = arguments, string = toString(args[0]);
            return args.length < 3 ? string : string.replace(args[1], args[2]);
          }
          var snakeCase = createCompounder(function(result, word, index) {
            return result + (index ? "_" : "") + word.toLowerCase();
          });
          function split(string, separator, limit) {
            limit && "number" != typeof limit && isIterateeCall(string, separator, limit) && (separator = limit = undefined);
            limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
            if (!limit) return [];
            string = toString(string);
            if (string && ("string" == typeof separator || null != separator && !isRegExp(separator))) {
              separator = baseToString(separator);
              if (!separator && hasUnicode(string)) return castSlice(stringToArray(string), 0, limit);
            }
            return string.split(separator, limit);
          }
          var startCase = createCompounder(function(result, word, index) {
            return result + (index ? " " : "") + upperFirst(word);
          });
          function startsWith(string, target, position) {
            string = toString(string);
            position = null == position ? 0 : baseClamp(toInteger(position), 0, string.length);
            target = baseToString(target);
            return string.slice(position, position + target.length) == target;
          }
          function template(string, options, guard) {
            var settings = lodash.templateSettings;
            guard && isIterateeCall(string, options, guard) && (options = undefined);
            string = toString(string);
            options = assignInWith({}, options, settings, customDefaultsAssignIn);
            var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
            var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
            var reDelimiters = RegExp((options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$", "g");
            var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
            string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
              interpolateValue || (interpolateValue = esTemplateValue);
              source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
              if (escapeValue) {
                isEscaping = true;
                source += "' +\n__e(" + escapeValue + ") +\n'";
              }
              if (evaluateValue) {
                isEvaluating = true;
                source += "';\n" + evaluateValue + ";\n__p += '";
              }
              interpolateValue && (source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'");
              index = offset + match.length;
              return match;
            });
            source += "';\n";
            var variable = hasOwnProperty.call(options, "variable") && options.variable;
            if (variable) {
              if (reForbiddenIdentifierChars.test(variable)) throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
            } else source = "with (obj) {\n" + source + "\n}\n";
            source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
            source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
            var result = attempt(function() {
              return Function(importsKeys, sourceURL + "return " + source).apply(undefined, importsValues);
            });
            result.source = source;
            if (isError(result)) throw result;
            return result;
          }
          function toLower(value) {
            return toString(value).toLowerCase();
          }
          function toUpper(value) {
            return toString(value).toUpperCase();
          }
          function trim(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return baseTrim(string);
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
            return castSlice(strSymbols, start, end).join("");
          }
          function trimEnd(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return string.slice(0, trimmedEndIndex(string) + 1);
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
            return castSlice(strSymbols, 0, end).join("");
          }
          function trimStart(string, chars, guard) {
            string = toString(string);
            if (string && (guard || chars === undefined)) return string.replace(reTrimStart, "");
            if (!string || !(chars = baseToString(chars))) return string;
            var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
            return castSlice(strSymbols, start).join("");
          }
          function truncate(string, options) {
            var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
            if (isObject(options)) {
              var separator = "separator" in options ? options.separator : separator;
              length = "length" in options ? toInteger(options.length) : length;
              omission = "omission" in options ? baseToString(options.omission) : omission;
            }
            string = toString(string);
            var strLength = string.length;
            if (hasUnicode(string)) {
              var strSymbols = stringToArray(string);
              strLength = strSymbols.length;
            }
            if (length >= strLength) return string;
            var end = length - stringSize(omission);
            if (end < 1) return omission;
            var result = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
            if (separator === undefined) return result + omission;
            strSymbols && (end += result.length - end);
            if (isRegExp(separator)) {
              if (string.slice(end).search(separator)) {
                var match, substring = result;
                separator.global || (separator = RegExp(separator.source, toString(reFlags.exec(separator)) + "g"));
                separator.lastIndex = 0;
                while (match = separator.exec(substring)) var newEnd = match.index;
                result = result.slice(0, newEnd === undefined ? end : newEnd);
              }
            } else if (string.indexOf(baseToString(separator), end) != end) {
              var index = result.lastIndexOf(separator);
              index > -1 && (result = result.slice(0, index));
            }
            return result + omission;
          }
          function unescape(string) {
            string = toString(string);
            return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
          }
          var upperCase = createCompounder(function(result, word, index) {
            return result + (index ? " " : "") + word.toUpperCase();
          });
          var upperFirst = createCaseFirst("toUpperCase");
          function words(string, pattern, guard) {
            string = toString(string);
            pattern = guard ? undefined : pattern;
            if (pattern === undefined) return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
            return string.match(pattern) || [];
          }
          var attempt = baseRest(function(func, args) {
            try {
              return apply(func, undefined, args);
            } catch (e) {
              return isError(e) ? e : new Error(e);
            }
          });
          var bindAll = flatRest(function(object, methodNames) {
            arrayEach(methodNames, function(key) {
              key = toKey(key);
              baseAssignValue(object, key, bind(object[key], object));
            });
            return object;
          });
          function cond(pairs) {
            var length = null == pairs ? 0 : pairs.length, toIteratee = getIteratee();
            pairs = length ? arrayMap(pairs, function(pair) {
              if ("function" != typeof pair[1]) throw new TypeError(FUNC_ERROR_TEXT);
              return [ toIteratee(pair[0]), pair[1] ];
            }) : [];
            return baseRest(function(args) {
              var index = -1;
              while (++index < length) {
                var pair = pairs[index];
                if (apply(pair[0], this, args)) return apply(pair[1], this, args);
              }
            });
          }
          function conforms(source) {
            return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
          }
          function constant(value) {
            return function() {
              return value;
            };
          }
          function defaultTo(value, defaultValue) {
            return null == value || value !== value ? defaultValue : value;
          }
          var flow = createFlow();
          var flowRight = createFlow(true);
          function identity(value) {
            return value;
          }
          function iteratee(func) {
            return baseIteratee("function" == typeof func ? func : baseClone(func, CLONE_DEEP_FLAG));
          }
          function matches(source) {
            return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
          }
          function matchesProperty(path, srcValue) {
            return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
          }
          var method = baseRest(function(path, args) {
            return function(object) {
              return baseInvoke(object, path, args);
            };
          });
          var methodOf = baseRest(function(object, args) {
            return function(path) {
              return baseInvoke(object, path, args);
            };
          });
          function mixin(object, source, options) {
            var props = keys(source), methodNames = baseFunctions(source, props);
            if (null == options && !(isObject(source) && (methodNames.length || !props.length))) {
              options = source;
              source = object;
              object = this;
              methodNames = baseFunctions(source, keys(source));
            }
            var chain = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
            arrayEach(methodNames, function(methodName) {
              var func = source[methodName];
              object[methodName] = func;
              isFunc && (object.prototype[methodName] = function() {
                var chainAll = this.__chain__;
                if (chain || chainAll) {
                  var result = object(this.__wrapped__), actions = result.__actions__ = copyArray(this.__actions__);
                  actions.push({
                    func: func,
                    args: arguments,
                    thisArg: object
                  });
                  result.__chain__ = chainAll;
                  return result;
                }
                return func.apply(object, arrayPush([ this.value() ], arguments));
              });
            });
            return object;
          }
          function noConflict() {
            root._ === this && (root._ = oldDash);
            return this;
          }
          function noop() {}
          function nthArg(n) {
            n = toInteger(n);
            return baseRest(function(args) {
              return baseNth(args, n);
            });
          }
          var over = createOver(arrayMap);
          var overEvery = createOver(arrayEvery);
          var overSome = createOver(arraySome);
          function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
          }
          function propertyOf(object) {
            return function(path) {
              return null == object ? undefined : baseGet(object, path);
            };
          }
          var range = createRange();
          var rangeRight = createRange(true);
          function stubArray() {
            return [];
          }
          function stubFalse() {
            return false;
          }
          function stubObject() {
            return {};
          }
          function stubString() {
            return "";
          }
          function stubTrue() {
            return true;
          }
          function times(n, iteratee) {
            n = toInteger(n);
            if (n < 1 || n > MAX_SAFE_INTEGER) return [];
            var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
            iteratee = getIteratee(iteratee);
            n -= MAX_ARRAY_LENGTH;
            var result = baseTimes(length, iteratee);
            while (++index < n) iteratee(index);
            return result;
          }
          function toPath(value) {
            if (isArray(value)) return arrayMap(value, toKey);
            return isSymbol(value) ? [ value ] : copyArray(stringToPath(toString(value)));
          }
          function uniqueId(prefix) {
            var id = ++idCounter;
            return toString(prefix) + id;
          }
          var add = createMathOperation(function(augend, addend) {
            return augend + addend;
          }, 0);
          var ceil = createRound("ceil");
          var divide = createMathOperation(function(dividend, divisor) {
            return dividend / divisor;
          }, 1);
          var floor = createRound("floor");
          function max(array) {
            return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
          }
          function maxBy(array, iteratee) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
          }
          function mean(array) {
            return baseMean(array, identity);
          }
          function meanBy(array, iteratee) {
            return baseMean(array, getIteratee(iteratee, 2));
          }
          function min(array) {
            return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
          }
          function minBy(array, iteratee) {
            return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
          }
          var multiply = createMathOperation(function(multiplier, multiplicand) {
            return multiplier * multiplicand;
          }, 1);
          var round = createRound("round");
          var subtract = createMathOperation(function(minuend, subtrahend) {
            return minuend - subtrahend;
          }, 0);
          function sum(array) {
            return array && array.length ? baseSum(array, identity) : 0;
          }
          function sumBy(array, iteratee) {
            return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
          }
          lodash.after = after;
          lodash.ary = ary;
          lodash.assign = assign;
          lodash.assignIn = assignIn;
          lodash.assignInWith = assignInWith;
          lodash.assignWith = assignWith;
          lodash.at = at;
          lodash.before = before;
          lodash.bind = bind;
          lodash.bindAll = bindAll;
          lodash.bindKey = bindKey;
          lodash.castArray = castArray;
          lodash.chain = chain;
          lodash.chunk = chunk;
          lodash.compact = compact;
          lodash.concat = concat;
          lodash.cond = cond;
          lodash.conforms = conforms;
          lodash.constant = constant;
          lodash.countBy = countBy;
          lodash.create = create;
          lodash.curry = curry;
          lodash.curryRight = curryRight;
          lodash.debounce = debounce;
          lodash.defaults = defaults;
          lodash.defaultsDeep = defaultsDeep;
          lodash.defer = defer;
          lodash.delay = delay;
          lodash.difference = difference;
          lodash.differenceBy = differenceBy;
          lodash.differenceWith = differenceWith;
          lodash.drop = drop;
          lodash.dropRight = dropRight;
          lodash.dropRightWhile = dropRightWhile;
          lodash.dropWhile = dropWhile;
          lodash.fill = fill;
          lodash.filter = filter;
          lodash.flatMap = flatMap;
          lodash.flatMapDeep = flatMapDeep;
          lodash.flatMapDepth = flatMapDepth;
          lodash.flatten = flatten;
          lodash.flattenDeep = flattenDeep;
          lodash.flattenDepth = flattenDepth;
          lodash.flip = flip;
          lodash.flow = flow;
          lodash.flowRight = flowRight;
          lodash.fromPairs = fromPairs;
          lodash.functions = functions;
          lodash.functionsIn = functionsIn;
          lodash.groupBy = groupBy;
          lodash.initial = initial;
          lodash.intersection = intersection;
          lodash.intersectionBy = intersectionBy;
          lodash.intersectionWith = intersectionWith;
          lodash.invert = invert;
          lodash.invertBy = invertBy;
          lodash.invokeMap = invokeMap;
          lodash.iteratee = iteratee;
          lodash.keyBy = keyBy;
          lodash.keys = keys;
          lodash.keysIn = keysIn;
          lodash.map = map;
          lodash.mapKeys = mapKeys;
          lodash.mapValues = mapValues;
          lodash.matches = matches;
          lodash.matchesProperty = matchesProperty;
          lodash.memoize = memoize;
          lodash.merge = merge;
          lodash.mergeWith = mergeWith;
          lodash.method = method;
          lodash.methodOf = methodOf;
          lodash.mixin = mixin;
          lodash.negate = negate;
          lodash.nthArg = nthArg;
          lodash.omit = omit;
          lodash.omitBy = omitBy;
          lodash.once = once;
          lodash.orderBy = orderBy;
          lodash.over = over;
          lodash.overArgs = overArgs;
          lodash.overEvery = overEvery;
          lodash.overSome = overSome;
          lodash.partial = partial;
          lodash.partialRight = partialRight;
          lodash.partition = partition;
          lodash.pick = pick;
          lodash.pickBy = pickBy;
          lodash.property = property;
          lodash.propertyOf = propertyOf;
          lodash.pull = pull;
          lodash.pullAll = pullAll;
          lodash.pullAllBy = pullAllBy;
          lodash.pullAllWith = pullAllWith;
          lodash.pullAt = pullAt;
          lodash.range = range;
          lodash.rangeRight = rangeRight;
          lodash.rearg = rearg;
          lodash.reject = reject;
          lodash.remove = remove;
          lodash.rest = rest;
          lodash.reverse = reverse;
          lodash.sampleSize = sampleSize;
          lodash.set = set;
          lodash.setWith = setWith;
          lodash.shuffle = shuffle;
          lodash.slice = slice;
          lodash.sortBy = sortBy;
          lodash.sortedUniq = sortedUniq;
          lodash.sortedUniqBy = sortedUniqBy;
          lodash.split = split;
          lodash.spread = spread;
          lodash.tail = tail;
          lodash.take = take;
          lodash.takeRight = takeRight;
          lodash.takeRightWhile = takeRightWhile;
          lodash.takeWhile = takeWhile;
          lodash.tap = tap;
          lodash.throttle = throttle;
          lodash.thru = thru;
          lodash.toArray = toArray;
          lodash.toPairs = toPairs;
          lodash.toPairsIn = toPairsIn;
          lodash.toPath = toPath;
          lodash.toPlainObject = toPlainObject;
          lodash.transform = transform;
          lodash.unary = unary;
          lodash.union = union;
          lodash.unionBy = unionBy;
          lodash.unionWith = unionWith;
          lodash.uniq = uniq;
          lodash.uniqBy = uniqBy;
          lodash.uniqWith = uniqWith;
          lodash.unset = unset;
          lodash.unzip = unzip;
          lodash.unzipWith = unzipWith;
          lodash.update = update;
          lodash.updateWith = updateWith;
          lodash.values = values;
          lodash.valuesIn = valuesIn;
          lodash.without = without;
          lodash.words = words;
          lodash.wrap = wrap;
          lodash.xor = xor;
          lodash.xorBy = xorBy;
          lodash.xorWith = xorWith;
          lodash.zip = zip;
          lodash.zipObject = zipObject;
          lodash.zipObjectDeep = zipObjectDeep;
          lodash.zipWith = zipWith;
          lodash.entries = toPairs;
          lodash.entriesIn = toPairsIn;
          lodash.extend = assignIn;
          lodash.extendWith = assignInWith;
          mixin(lodash, lodash);
          lodash.add = add;
          lodash.attempt = attempt;
          lodash.camelCase = camelCase;
          lodash.capitalize = capitalize;
          lodash.ceil = ceil;
          lodash.clamp = clamp;
          lodash.clone = clone;
          lodash.cloneDeep = cloneDeep;
          lodash.cloneDeepWith = cloneDeepWith;
          lodash.cloneWith = cloneWith;
          lodash.conformsTo = conformsTo;
          lodash.deburr = deburr;
          lodash.defaultTo = defaultTo;
          lodash.divide = divide;
          lodash.endsWith = endsWith;
          lodash.eq = eq;
          lodash.escape = escape;
          lodash.escapeRegExp = escapeRegExp;
          lodash.every = every;
          lodash.find = find;
          lodash.findIndex = findIndex;
          lodash.findKey = findKey;
          lodash.findLast = findLast;
          lodash.findLastIndex = findLastIndex;
          lodash.findLastKey = findLastKey;
          lodash.floor = floor;
          lodash.forEach = forEach;
          lodash.forEachRight = forEachRight;
          lodash.forIn = forIn;
          lodash.forInRight = forInRight;
          lodash.forOwn = forOwn;
          lodash.forOwnRight = forOwnRight;
          lodash.get = get;
          lodash.gt = gt;
          lodash.gte = gte;
          lodash.has = has;
          lodash.hasIn = hasIn;
          lodash.head = head;
          lodash.identity = identity;
          lodash.includes = includes;
          lodash.indexOf = indexOf;
          lodash.inRange = inRange;
          lodash.invoke = invoke;
          lodash.isArguments = isArguments;
          lodash.isArray = isArray;
          lodash.isArrayBuffer = isArrayBuffer;
          lodash.isArrayLike = isArrayLike;
          lodash.isArrayLikeObject = isArrayLikeObject;
          lodash.isBoolean = isBoolean;
          lodash.isBuffer = isBuffer;
          lodash.isDate = isDate;
          lodash.isElement = isElement;
          lodash.isEmpty = isEmpty;
          lodash.isEqual = isEqual;
          lodash.isEqualWith = isEqualWith;
          lodash.isError = isError;
          lodash.isFinite = isFinite;
          lodash.isFunction = isFunction;
          lodash.isInteger = isInteger;
          lodash.isLength = isLength;
          lodash.isMap = isMap;
          lodash.isMatch = isMatch;
          lodash.isMatchWith = isMatchWith;
          lodash.isNaN = isNaN;
          lodash.isNative = isNative;
          lodash.isNil = isNil;
          lodash.isNull = isNull;
          lodash.isNumber = isNumber;
          lodash.isObject = isObject;
          lodash.isObjectLike = isObjectLike;
          lodash.isPlainObject = isPlainObject;
          lodash.isRegExp = isRegExp;
          lodash.isSafeInteger = isSafeInteger;
          lodash.isSet = isSet;
          lodash.isString = isString;
          lodash.isSymbol = isSymbol;
          lodash.isTypedArray = isTypedArray;
          lodash.isUndefined = isUndefined;
          lodash.isWeakMap = isWeakMap;
          lodash.isWeakSet = isWeakSet;
          lodash.join = join;
          lodash.kebabCase = kebabCase;
          lodash.last = last;
          lodash.lastIndexOf = lastIndexOf;
          lodash.lowerCase = lowerCase;
          lodash.lowerFirst = lowerFirst;
          lodash.lt = lt;
          lodash.lte = lte;
          lodash.max = max;
          lodash.maxBy = maxBy;
          lodash.mean = mean;
          lodash.meanBy = meanBy;
          lodash.min = min;
          lodash.minBy = minBy;
          lodash.stubArray = stubArray;
          lodash.stubFalse = stubFalse;
          lodash.stubObject = stubObject;
          lodash.stubString = stubString;
          lodash.stubTrue = stubTrue;
          lodash.multiply = multiply;
          lodash.nth = nth;
          lodash.noConflict = noConflict;
          lodash.noop = noop;
          lodash.now = now;
          lodash.pad = pad;
          lodash.padEnd = padEnd;
          lodash.padStart = padStart;
          lodash.parseInt = parseInt;
          lodash.random = random;
          lodash.reduce = reduce;
          lodash.reduceRight = reduceRight;
          lodash.repeat = repeat;
          lodash.replace = replace;
          lodash.result = result;
          lodash.round = round;
          lodash.runInContext = runInContext;
          lodash.sample = sample;
          lodash.size = size;
          lodash.snakeCase = snakeCase;
          lodash.some = some;
          lodash.sortedIndex = sortedIndex;
          lodash.sortedIndexBy = sortedIndexBy;
          lodash.sortedIndexOf = sortedIndexOf;
          lodash.sortedLastIndex = sortedLastIndex;
          lodash.sortedLastIndexBy = sortedLastIndexBy;
          lodash.sortedLastIndexOf = sortedLastIndexOf;
          lodash.startCase = startCase;
          lodash.startsWith = startsWith;
          lodash.subtract = subtract;
          lodash.sum = sum;
          lodash.sumBy = sumBy;
          lodash.template = template;
          lodash.times = times;
          lodash.toFinite = toFinite;
          lodash.toInteger = toInteger;
          lodash.toLength = toLength;
          lodash.toLower = toLower;
          lodash.toNumber = toNumber;
          lodash.toSafeInteger = toSafeInteger;
          lodash.toString = toString;
          lodash.toUpper = toUpper;
          lodash.trim = trim;
          lodash.trimEnd = trimEnd;
          lodash.trimStart = trimStart;
          lodash.truncate = truncate;
          lodash.unescape = unescape;
          lodash.uniqueId = uniqueId;
          lodash.upperCase = upperCase;
          lodash.upperFirst = upperFirst;
          lodash.each = forEach;
          lodash.eachRight = forEachRight;
          lodash.first = head;
          mixin(lodash, function() {
            var source = {};
            baseForOwn(lodash, function(func, methodName) {
              hasOwnProperty.call(lodash.prototype, methodName) || (source[methodName] = func);
            });
            return source;
          }(), {
            chain: false
          });
          lodash.VERSION = VERSION;
          arrayEach([ "bind", "bindKey", "curry", "curryRight", "partial", "partialRight" ], function(methodName) {
            lodash[methodName].placeholder = lodash;
          });
          arrayEach([ "drop", "take" ], function(methodName, index) {
            LazyWrapper.prototype[methodName] = function(n) {
              n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
              var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
              result.__filtered__ ? result.__takeCount__ = nativeMin(n, result.__takeCount__) : result.__views__.push({
                size: nativeMin(n, MAX_ARRAY_LENGTH),
                type: methodName + (result.__dir__ < 0 ? "Right" : "")
              });
              return result;
            };
            LazyWrapper.prototype[methodName + "Right"] = function(n) {
              return this.reverse()[methodName](n).reverse();
            };
          });
          arrayEach([ "filter", "map", "takeWhile" ], function(methodName, index) {
            var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
            LazyWrapper.prototype[methodName] = function(iteratee) {
              var result = this.clone();
              result.__iteratees__.push({
                iteratee: getIteratee(iteratee, 3),
                type: type
              });
              result.__filtered__ = result.__filtered__ || isFilter;
              return result;
            };
          });
          arrayEach([ "head", "last" ], function(methodName, index) {
            var takeName = "take" + (index ? "Right" : "");
            LazyWrapper.prototype[methodName] = function() {
              return this[takeName](1).value()[0];
            };
          });
          arrayEach([ "initial", "tail" ], function(methodName, index) {
            var dropName = "drop" + (index ? "" : "Right");
            LazyWrapper.prototype[methodName] = function() {
              return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
            };
          });
          LazyWrapper.prototype.compact = function() {
            return this.filter(identity);
          };
          LazyWrapper.prototype.find = function(predicate) {
            return this.filter(predicate).head();
          };
          LazyWrapper.prototype.findLast = function(predicate) {
            return this.reverse().find(predicate);
          };
          LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
            if ("function" == typeof path) return new LazyWrapper(this);
            return this.map(function(value) {
              return baseInvoke(value, path, args);
            });
          });
          LazyWrapper.prototype.reject = function(predicate) {
            return this.filter(negate(getIteratee(predicate)));
          };
          LazyWrapper.prototype.slice = function(start, end) {
            start = toInteger(start);
            var result = this;
            if (result.__filtered__ && (start > 0 || end < 0)) return new LazyWrapper(result);
            start < 0 ? result = result.takeRight(-start) : start && (result = result.drop(start));
            if (end !== undefined) {
              end = toInteger(end);
              result = end < 0 ? result.dropRight(-end) : result.take(end - start);
            }
            return result;
          };
          LazyWrapper.prototype.takeRightWhile = function(predicate) {
            return this.reverse().takeWhile(predicate).reverse();
          };
          LazyWrapper.prototype.toArray = function() {
            return this.take(MAX_ARRAY_LENGTH);
          };
          baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + ("last" == methodName ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
            if (!lodashFunc) return;
            lodash.prototype[methodName] = function() {
              var value = this.__wrapped__, args = isTaker ? [ 1 ] : arguments, isLazy = value instanceof LazyWrapper, iteratee = args[0], useLazy = isLazy || isArray(value);
              var interceptor = function(value) {
                var result = lodashFunc.apply(lodash, arrayPush([ value ], args));
                return isTaker && chainAll ? result[0] : result;
              };
              useLazy && checkIteratee && "function" == typeof iteratee && 1 != iteratee.length && (isLazy = useLazy = false);
              var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
              if (!retUnwrapped && useLazy) {
                value = onlyLazy ? value : new LazyWrapper(this);
                var result = func.apply(value, args);
                result.__actions__.push({
                  func: thru,
                  args: [ interceptor ],
                  thisArg: undefined
                });
                return new LodashWrapper(result, chainAll);
              }
              if (isUnwrapped && onlyLazy) return func.apply(this, args);
              result = this.thru(interceptor);
              return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
            };
          });
          arrayEach([ "pop", "push", "shift", "sort", "splice", "unshift" ], function(methodName) {
            var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
            lodash.prototype[methodName] = function() {
              var args = arguments;
              if (retUnwrapped && !this.__chain__) {
                var value = this.value();
                return func.apply(isArray(value) ? value : [], args);
              }
              return this[chainName](function(value) {
                return func.apply(isArray(value) ? value : [], args);
              });
            };
          });
          baseForOwn(LazyWrapper.prototype, function(func, methodName) {
            var lodashFunc = lodash[methodName];
            if (lodashFunc) {
              var key = lodashFunc.name + "";
              hasOwnProperty.call(realNames, key) || (realNames[key] = []);
              realNames[key].push({
                name: methodName,
                func: lodashFunc
              });
            }
          });
          realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [ {
            name: "wrapper",
            func: undefined
          } ];
          LazyWrapper.prototype.clone = lazyClone;
          LazyWrapper.prototype.reverse = lazyReverse;
          LazyWrapper.prototype.value = lazyValue;
          lodash.prototype.at = wrapperAt;
          lodash.prototype.chain = wrapperChain;
          lodash.prototype.commit = wrapperCommit;
          lodash.prototype.next = wrapperNext;
          lodash.prototype.plant = wrapperPlant;
          lodash.prototype.reverse = wrapperReverse;
          lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
          lodash.prototype.first = lodash.prototype.head;
          symIterator && (lodash.prototype[symIterator] = wrapperToIterator);
          return lodash;
        };
        var _ = runInContext();
        if ("function" == typeof define && "object" == typeof define.amd && define.amd) {
          root._ = _;
          define(function() {
            return _;
          });
        } else if (freeModule) {
          (freeModule.exports = _)._ = _;
          freeExports._ = _;
        } else root._ = _;
      }).call(this);
    }).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {} ],
  158: [ function(require, module, exports) {
    (function(define, undefined) {
      define(function() {
        "use strict";
        var impl = {};
        impl.mobileDetectRules = {
          phones: {
            iPhone: "\\biPhone\\b|\\biPod\\b",
            BlackBerry: "BlackBerry|\\bBB10\\b|rim[0-9]+|\\b(BBA100|BBB100|BBD100|BBE100|BBF100|STH100)\\b-[0-9]+",
            Pixel: "; \\bPixel\\b",
            HTC: "HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel",
            Nexus: "Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 5X|Nexus 6",
            Dell: "Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b",
            Motorola: "Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b|XT1068|XT1092|XT1052",
            Samsung: "\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F|SM-G610F|SM-G981B|SM-G892A|SM-A530F",
            LG: "\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710",
            Sony: "SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533|SOV34|601SO|F8332",
            Asus: "Asus.*Galaxy|PadFone.*Mobile",
            Xiaomi: "^(?!.*\\bx11\\b).*xiaomi.*$|POCOPHONE F1|MI 8|Redmi Note 9S|Redmi Note 5A Prime|N2G47H|M2001J2G|M2001J2I|M1805E10A|M2004J11G|M1902F1G|M2002J9G|M2004J19G|M2003J6A1G",
            NokiaLumia: "Lumia [0-9]{3,4}",
            Micromax: "Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b",
            Palm: "PalmSource|Palm",
            Vertu: "Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature",
            Pantech: "PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790",
            Fly: "IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250",
            Wiko: "KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM",
            iMobile: "i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)",
            SimValley: "\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b",
            Wolfgang: "AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q",
            Alcatel: "Alcatel",
            Nintendo: "Nintendo (3DS|Switch)",
            Amoi: "Amoi",
            INQ: "INQ",
            OnePlus: "ONEPLUS",
            GenericPhone: "Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser"
          },
          tablets: {
            iPad: "iPad|iPad.*Mobile",
            NexusTablet: "Android.*Nexus[\\s]+(7|9|10)",
            GoogleTablet: "Android.*Pixel C",
            SamsungTablet: "SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V|SM-P610|SM-T290|SM-T515|SM-T590|SM-T595|SM-T725|SM-T817P|SM-P585N0|SM-T395|SM-T295|SM-T865|SM-P610N|SM-P615|SM-T970|SM-T380|SM-T5950|SM-T905|SM-T231|SM-T500|SM-T860",
            Kindle: "Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk/[0-9.]+ like Chrome/[0-9.]+ (?!Mobile)",
            SurfaceTablet: "Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)",
            HPTablet: "HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10",
            AsusTablet: "^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b|\\bP024\\b|\\bP00C\\b",
            BlackBerryTablet: "PlayBook|RIM Tablet",
            HTCtablet: "HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410",
            MotorolaTablet: "xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617",
            NookTablet: "Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2",
            AcerTablet: "Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30|A3-A40",
            ToshibaTablet: "Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO",
            LGTablet: "\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b",
            FujitsuTablet: "Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b",
            PrestigioTablet: "PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002",
            LenovoTablet: "Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X|TB-X704F|TB-X104F|TB3-X70F|TB-X705F|TB-8504F|TB3-X70L|TB3-710F|TB-X704L",
            DellTablet: "Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7",
            YarvikTablet: "Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b",
            MedionTablet: "Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB",
            ArnovaTablet: "97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2",
            IntensoTablet: "INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004",
            IRUTablet: "M702pro",
            MegafonTablet: "MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b",
            EbodaTablet: "E-Boda (Supreme|Impresspeed|Izzycomm|Essential)",
            AllViewTablet: "Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)",
            ArchosTablet: "\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b",
            AinolTablet: "NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark",
            NokiaLumiaTablet: "Lumia 2520",
            SonyTablet: "Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712",
            PhilipsTablet: "\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b",
            CubeTablet: "Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT",
            CobyTablet: "MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010",
            MIDTablet: "M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10",
            MSITablet: "MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b",
            SMiTTablet: "Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)",
            RockChipTablet: "Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A",
            FlyTablet: "IQ310|Fly Vision",
            bqTablet: "Android.*(bq)?.*\\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\\b|Maxwell.*Lite|Maxwell.*Plus",
            HuaweiTablet: "MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19",
            NecTablet: "\\bN-06D|\\bN-08D",
            PantechTablet: "Pantech.*P4100",
            BronchoTablet: "Broncho.*(N701|N708|N802|a710)",
            VersusTablet: "TOUCHPAD.*[78910]|\\bTOUCHTAB\\b",
            ZyncTablet: "z1000|Z99 2G|z930|z990|z909|Z919|z900",
            PositivoTablet: "TB07STA|TB10STA|TB07FTA|TB10FTA",
            NabiTablet: "Android.*\\bNabi",
            KoboTablet: "Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build",
            DanewTablet: "DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b",
            TexetTablet: "NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE",
            PlaystationTablet: "Playstation.*(Portable|Vita)",
            TrekstorTablet: "ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab",
            PyleAudioTablet: "\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b",
            AdvanTablet: "Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ",
            DanyTechTablet: "Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1",
            GalapadTablet: "Android [0-9.]+; [a-z-]+; \\bG1\\b",
            MicromaxTablet: "Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b",
            KarbonnTablet: "Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b",
            AllFineTablet: "Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide",
            PROSCANTablet: "\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b",
            YONESTablet: "BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026",
            ChangJiaTablet: "TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503",
            GUTablet: "TX-A1301|TX-M9002|Q702|kf026",
            PointOfViewTablet: "TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10",
            OvermaxTablet: "OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027",
            HCLTablet: "HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync",
            DPSTablet: "DPS Dream 9|DPS Dual 7",
            VistureTablet: "V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10",
            CrestaTablet: "CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989",
            MediatekTablet: "\\bMT8125|MT8389|MT8135|MT8377\\b",
            ConcordeTablet: "Concorde([ ]+)?Tab|ConCorde ReadMan",
            GoCleverTablet: "GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042",
            ModecomTablet: "FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003",
            VoninoTablet: "\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b",
            ECSTablet: "V07OT2|TM105A|S10OT1|TR10CS1",
            StorexTablet: "eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab",
            VodafoneTablet: "SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497|VFD 1400",
            EssentielBTablet: "Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2",
            RossMoorTablet: "RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711",
            iMobileTablet: "i-mobile i-note",
            TolinoTablet: "tolino tab [0-9.]+|tolino shine",
            AudioSonicTablet: "\\bC-22Q|T7-QC|T-17B|T-17P\\b",
            AMPETablet: "Android.* A78 ",
            SkkTablet: "Android.* (SKYPAD|PHOENIX|CYCLOPS)",
            TecnoTablet: "TECNO P9|TECNO DP8D",
            JXDTablet: "Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b",
            iJoyTablet: "Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)",
            FX2Tablet: "FX2 PAD7|FX2 PAD10",
            XoroTablet: "KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151",
            ViewsonicTablet: "ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a",
            VerizonTablet: "QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1",
            OdysTablet: "LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10",
            CaptivaTablet: "CAPTIVA PAD",
            IconbitTablet: "NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S",
            TeclastTablet: "T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi",
            OndaTablet: "\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+|V10 \\b4G\\b",
            JaytechTablet: "TPC-PA762",
            BlaupunktTablet: "Endeavour 800NG|Endeavour 1010",
            DigmaTablet: "\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b",
            EvolioTablet: "ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b",
            LavaTablet: "QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b",
            AocTablet: "MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712",
            MpmanTablet: "MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010",
            CelkonTablet: "CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b",
            WolderTablet: "miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b",
            MediacomTablet: "M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA",
            MiTablet: "\\bMI PAD\\b|\\bHM NOTE 1W\\b",
            NibiruTablet: "Nibiru M1|Nibiru Jupiter One",
            NexoTablet: "NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI",
            LeaderTablet: "TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100",
            UbislateTablet: "UbiSlate[\\s]?7C",
            PocketBookTablet: "Pocketbook",
            KocasoTablet: "\\b(TB-1207)\\b",
            HisenseTablet: "\\b(F5281|E2371)\\b",
            Hudl: "Hudl HT7S3|Hudl 2",
            TelstraTablet: "T-Hub2",
            GenericTablet: "Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b|WVT101|TM1088|KT107"
          },
          oss: {
            AndroidOS: "Android",
            BlackBerryOS: "blackberry|\\bBB10\\b|rim tablet os",
            PalmOS: "PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino",
            SymbianOS: "Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b",
            WindowsMobileOS: "Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Windows Mobile|Windows Phone [0-9.]+|WCE;",
            WindowsPhoneOS: "Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;",
            iOS: "\\biPhone.*Mobile|\\biPod|\\biPad|AppleCoreMedia",
            iPadOS: "CPU OS 13",
            SailfishOS: "Sailfish",
            MeeGoOS: "MeeGo",
            MaemoOS: "Maemo",
            JavaOS: "J2ME/|\\bMIDP\\b|\\bCLDC\\b",
            webOS: "webOS|hpwOS",
            badaOS: "\\bBada\\b",
            BREWOS: "BREW"
          },
          uas: {
            Chrome: "\\bCrMo\\b|CriOS|Android.*Chrome/[.0-9]* (Mobile)?",
            Dolfin: "\\bDolfin\\b",
            Opera: "Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR/[0-9.]+$|Coast/[0-9.]+",
            Skyfire: "Skyfire",
            Edge: "\\bEdgiOS\\b|Mobile Safari/[.0-9]* Edge",
            IE: "IEMobile|MSIEMobile",
            Firefox: "fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS",
            Bolt: "bolt",
            TeaShark: "teashark",
            Blazer: "Blazer",
            Safari: "Version((?!\\bEdgiOS\\b).)*Mobile.*Safari|Safari.*Mobile|MobileSafari",
            WeChat: "\\bMicroMessenger\\b",
            UCBrowser: "UC.*Browser|UCWEB",
            baiduboxapp: "baiduboxapp",
            baidubrowser: "baidubrowser",
            DiigoBrowser: "DiigoBrowser",
            Mercury: "\\bMercury\\b",
            ObigoBrowser: "Obigo",
            NetFront: "NF-Browser",
            GenericBrowser: "NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger",
            PaleMoon: "Android.*PaleMoon|Mobile.*PaleMoon"
          },
          props: {
            Mobile: "Mobile/[VER]",
            Build: "Build/[VER]",
            Version: "Version/[VER]",
            VendorID: "VendorID/[VER]",
            iPad: "iPad.*CPU[a-z ]+[VER]",
            iPhone: "iPhone.*CPU[a-z ]+[VER]",
            iPod: "iPod.*CPU[a-z ]+[VER]",
            Kindle: "Kindle/[VER]",
            Chrome: [ "Chrome/[VER]", "CriOS/[VER]", "CrMo/[VER]" ],
            Coast: [ "Coast/[VER]" ],
            Dolfin: "Dolfin/[VER]",
            Firefox: [ "Firefox/[VER]", "FxiOS/[VER]" ],
            Fennec: "Fennec/[VER]",
            Edge: "Edge/[VER]",
            IE: [ "IEMobile/[VER];", "IEMobile [VER]", "MSIE [VER];", "Trident/[0-9.]+;.*rv:[VER]" ],
            NetFront: "NetFront/[VER]",
            NokiaBrowser: "NokiaBrowser/[VER]",
            Opera: [ " OPR/[VER]", "Opera Mini/[VER]", "Version/[VER]" ],
            "Opera Mini": "Opera Mini/[VER]",
            "Opera Mobi": "Version/[VER]",
            UCBrowser: [ "UCWEB[VER]", "UC.*Browser/[VER]" ],
            MQQBrowser: "MQQBrowser/[VER]",
            MicroMessenger: "MicroMessenger/[VER]",
            baiduboxapp: "baiduboxapp/[VER]",
            baidubrowser: "baidubrowser/[VER]",
            SamsungBrowser: "SamsungBrowser/[VER]",
            Iron: "Iron/[VER]",
            Safari: [ "Version/[VER]", "Safari/[VER]" ],
            Skyfire: "Skyfire/[VER]",
            Tizen: "Tizen/[VER]",
            Webkit: "webkit[ /][VER]",
            PaleMoon: "PaleMoon/[VER]",
            SailfishBrowser: "SailfishBrowser/[VER]",
            Gecko: "Gecko/[VER]",
            Trident: "Trident/[VER]",
            Presto: "Presto/[VER]",
            Goanna: "Goanna/[VER]",
            iOS: " \\bi?OS\\b [VER][ ;]{1}",
            Android: "Android [VER]",
            Sailfish: "Sailfish [VER]",
            BlackBerry: [ "BlackBerry[\\w]+/[VER]", "BlackBerry.*Version/[VER]", "Version/[VER]" ],
            BREW: "BREW [VER]",
            Java: "Java/[VER]",
            "Windows Phone OS": [ "Windows Phone OS [VER]", "Windows Phone [VER]" ],
            "Windows Phone": "Windows Phone [VER]",
            "Windows CE": "Windows CE/[VER]",
            "Windows NT": "Windows NT [VER]",
            Symbian: [ "SymbianOS/[VER]", "Symbian/[VER]" ],
            webOS: [ "webOS/[VER]", "hpwOS/[VER];" ]
          },
          utils: {
            Bot: "Googlebot|facebookexternalhit|Google-AMPHTML|s~amp-validator|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|contentkingapp|AspiegelBot",
            MobileBot: "Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker/M1A1-R2D2",
            DesktopMode: "WPDesktop",
            TV: "SonyDTV|HbbTV",
            WebKit: "(webkit)[ /]([\\w.]+)",
            Console: "\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\b",
            Watch: "SM-V700"
          }
        };
        impl.detectMobileBrowsers = {
          fullPattern: /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
          shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
          tabletPattern: /android|ipad|playbook|silk/i
        };
        var hasOwnProp = Object.prototype.hasOwnProperty, isArray;
        impl.FALLBACK_PHONE = "UnknownPhone";
        impl.FALLBACK_TABLET = "UnknownTablet";
        impl.FALLBACK_MOBILE = "UnknownMobile";
        isArray = "isArray" in Array ? Array.isArray : function(value) {
          return "[object Array]" === Object.prototype.toString.call(value);
        };
        function equalIC(a, b) {
          return null != a && null != b && a.toLowerCase() === b.toLowerCase();
        }
        function containsIC(array, value) {
          var valueLC, i, len = array.length;
          if (!len || !value) return false;
          valueLC = value.toLowerCase();
          for (i = 0; i < len; ++i) if (valueLC === array[i].toLowerCase()) return true;
          return false;
        }
        function convertPropsToRegExp(object) {
          for (var key in object) hasOwnProp.call(object, key) && (object[key] = new RegExp(object[key], "i"));
        }
        function prepareUserAgent(userAgent) {
          return (userAgent || "").substr(0, 500);
        }
        (function init() {
          var key, values, value, i, len, verPos, mobileDetectRules = impl.mobileDetectRules;
          for (key in mobileDetectRules.props) if (hasOwnProp.call(mobileDetectRules.props, key)) {
            values = mobileDetectRules.props[key];
            isArray(values) || (values = [ values ]);
            len = values.length;
            for (i = 0; i < len; ++i) {
              value = values[i];
              verPos = value.indexOf("[VER]");
              verPos >= 0 && (value = value.substring(0, verPos) + "([\\w._\\+]+)" + value.substring(verPos + 5));
              values[i] = new RegExp(value, "i");
            }
            mobileDetectRules.props[key] = values;
          }
          convertPropsToRegExp(mobileDetectRules.oss);
          convertPropsToRegExp(mobileDetectRules.phones);
          convertPropsToRegExp(mobileDetectRules.tablets);
          convertPropsToRegExp(mobileDetectRules.uas);
          convertPropsToRegExp(mobileDetectRules.utils);
          mobileDetectRules.oss0 = {
            WindowsPhoneOS: mobileDetectRules.oss.WindowsPhoneOS,
            WindowsMobileOS: mobileDetectRules.oss.WindowsMobileOS
          };
        })();
        impl.findMatch = function(rules, userAgent) {
          for (var key in rules) if (hasOwnProp.call(rules, key) && rules[key].test(userAgent)) return key;
          return null;
        };
        impl.findMatches = function(rules, userAgent) {
          var result = [];
          for (var key in rules) hasOwnProp.call(rules, key) && rules[key].test(userAgent) && result.push(key);
          return result;
        };
        impl.getVersionStr = function(propertyName, userAgent) {
          var props = impl.mobileDetectRules.props, patterns, i, len, match;
          if (hasOwnProp.call(props, propertyName)) {
            patterns = props[propertyName];
            len = patterns.length;
            for (i = 0; i < len; ++i) {
              match = patterns[i].exec(userAgent);
              if (null !== match) return match[1];
            }
          }
          return null;
        };
        impl.getVersion = function(propertyName, userAgent) {
          var version = impl.getVersionStr(propertyName, userAgent);
          return version ? impl.prepareVersionNo(version) : NaN;
        };
        impl.prepareVersionNo = function(version) {
          var numbers;
          numbers = version.split(/[a-z._ \/\-]/i);
          1 === numbers.length && (version = numbers[0]);
          if (numbers.length > 1) {
            version = numbers[0] + ".";
            numbers.shift();
            version += numbers.join("");
          }
          return Number(version);
        };
        impl.isMobileFallback = function(userAgent) {
          return impl.detectMobileBrowsers.fullPattern.test(userAgent) || impl.detectMobileBrowsers.shortPattern.test(userAgent.substr(0, 4));
        };
        impl.isTabletFallback = function(userAgent) {
          return impl.detectMobileBrowsers.tabletPattern.test(userAgent);
        };
        impl.prepareDetectionCache = function(cache, userAgent, maxPhoneWidth) {
          if (cache.mobile !== undefined) return;
          var phone, tablet, phoneSized;
          tablet = impl.findMatch(impl.mobileDetectRules.tablets, userAgent);
          if (tablet) {
            cache.mobile = cache.tablet = tablet;
            cache.phone = null;
            return;
          }
          phone = impl.findMatch(impl.mobileDetectRules.phones, userAgent);
          if (phone) {
            cache.mobile = cache.phone = phone;
            cache.tablet = null;
            return;
          }
          if (impl.isMobileFallback(userAgent)) {
            phoneSized = MobileDetect.isPhoneSized(maxPhoneWidth);
            if (phoneSized === undefined) {
              cache.mobile = impl.FALLBACK_MOBILE;
              cache.tablet = cache.phone = null;
            } else if (phoneSized) {
              cache.mobile = cache.phone = impl.FALLBACK_PHONE;
              cache.tablet = null;
            } else {
              cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
              cache.phone = null;
            }
          } else if (impl.isTabletFallback(userAgent)) {
            cache.mobile = cache.tablet = impl.FALLBACK_TABLET;
            cache.phone = null;
          } else cache.mobile = cache.tablet = cache.phone = null;
        };
        impl.mobileGrade = function(t) {
          var $isMobile = null !== t.mobile();
          if (t.os("iOS") && t.version("iPad") >= 4.3 || t.os("iOS") && t.version("iPhone") >= 3.1 || t.os("iOS") && t.version("iPod") >= 3.1 || t.version("Android") > 2.1 && t.is("Webkit") || t.version("Windows Phone OS") >= 7 || t.is("BlackBerry") && t.version("BlackBerry") >= 6 || t.match("Playbook.*Tablet") || t.version("webOS") >= 1.4 && t.match("Palm|Pre|Pixi") || t.match("hp.*TouchPad") || t.is("Firefox") && t.version("Firefox") >= 12 || t.is("Chrome") && t.is("AndroidOS") && t.version("Android") >= 4 || t.is("Skyfire") && t.version("Skyfire") >= 4.1 && t.is("AndroidOS") && t.version("Android") >= 2.3 || t.is("Opera") && t.version("Opera Mobi") > 11 && t.is("AndroidOS") || t.is("MeeGoOS") || t.is("Tizen") || t.is("Dolfin") && t.version("Bada") >= 2 || (t.is("UC Browser") || t.is("Dolfin")) && t.version("Android") >= 2.3 || t.match("Kindle Fire") || t.is("Kindle") && t.version("Kindle") >= 3 || t.is("AndroidOS") && t.is("NookTablet") || t.version("Chrome") >= 11 && !$isMobile || t.version("Safari") >= 5 && !$isMobile || t.version("Firefox") >= 4 && !$isMobile || t.version("MSIE") >= 7 && !$isMobile || t.version("Opera") >= 10 && !$isMobile) return "A";
          if (t.os("iOS") && t.version("iPad") < 4.3 || t.os("iOS") && t.version("iPhone") < 3.1 || t.os("iOS") && t.version("iPod") < 3.1 || t.is("Blackberry") && t.version("BlackBerry") >= 5 && t.version("BlackBerry") < 6 || t.version("Opera Mini") >= 5 && t.version("Opera Mini") <= 6.5 && (t.version("Android") >= 2.3 || t.is("iOS")) || t.match("NokiaN8|NokiaC7|N97.*Series60|Symbian/3") || t.version("Opera Mobi") >= 11 && t.is("SymbianOS")) return "B";
          if (t.version("BlackBerry") < 5 || t.match("MSIEMobile|Windows CE.*Mobile") || t.version("Windows Mobile") <= 5.2) return "C";
          return "C";
        };
        impl.detectOS = function(ua) {
          return impl.findMatch(impl.mobileDetectRules.oss0, ua) || impl.findMatch(impl.mobileDetectRules.oss, ua);
        };
        impl.getDeviceSmallerSide = function() {
          return window.screen.width < window.screen.height ? window.screen.width : window.screen.height;
        };
        function MobileDetect(userAgent, maxPhoneWidth) {
          this.ua = prepareUserAgent(userAgent);
          this._cache = {};
          this.maxPhoneWidth = maxPhoneWidth || 600;
        }
        MobileDetect.prototype = {
          constructor: MobileDetect,
          mobile: function() {
            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
            return this._cache.mobile;
          },
          phone: function() {
            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
            return this._cache.phone;
          },
          tablet: function() {
            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);
            return this._cache.tablet;
          },
          userAgent: function() {
            this._cache.userAgent === undefined && (this._cache.userAgent = impl.findMatch(impl.mobileDetectRules.uas, this.ua));
            return this._cache.userAgent;
          },
          userAgents: function() {
            this._cache.userAgents === undefined && (this._cache.userAgents = impl.findMatches(impl.mobileDetectRules.uas, this.ua));
            return this._cache.userAgents;
          },
          os: function() {
            this._cache.os === undefined && (this._cache.os = impl.detectOS(this.ua));
            return this._cache.os;
          },
          version: function(key) {
            return impl.getVersion(key, this.ua);
          },
          versionStr: function(key) {
            return impl.getVersionStr(key, this.ua);
          },
          is: function(key) {
            return containsIC(this.userAgents(), key) || equalIC(key, this.os()) || equalIC(key, this.phone()) || equalIC(key, this.tablet()) || containsIC(impl.findMatches(impl.mobileDetectRules.utils, this.ua), key);
          },
          match: function(pattern) {
            pattern instanceof RegExp || (pattern = new RegExp(pattern, "i"));
            return pattern.test(this.ua);
          },
          isPhoneSized: function(maxPhoneWidth) {
            return MobileDetect.isPhoneSized(maxPhoneWidth || this.maxPhoneWidth);
          },
          mobileGrade: function() {
            this._cache.grade === undefined && (this._cache.grade = impl.mobileGrade(this));
            return this._cache.grade;
          }
        };
        "undefined" !== typeof window && window.screen ? MobileDetect.isPhoneSized = function(maxPhoneWidth) {
          return maxPhoneWidth < 0 ? undefined : impl.getDeviceSmallerSide() <= maxPhoneWidth;
        } : MobileDetect.isPhoneSized = function() {};
        MobileDetect._impl = impl;
        MobileDetect.version = "1.4.5 2021-03-13";
        return MobileDetect;
      });
    })(function(undefined) {
      if ("undefined" !== typeof module && module.exports) return function(factory) {
        module.exports = factory();
      };
      if ("function" === typeof define && define.amd) return define;
      if ("undefined" !== typeof window) return function(factory) {
        window.MobileDetect = factory();
      };
      throw new Error("unknown environment");
    }());
  }, {} ],
  ActionEffect: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4e002qwnwFMarPQnNQUR34d", "ActionEffect");
    "use strict";
    var ActionEffect = {
      shake: function shake(obj, time) {
        var delay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
        var timeFrame = time / 10;
        var posX = obj.x;
        var posY = obj.y;
        var effect = cc.sequence(cc.spawn(cc.moveTo(timeFrame, posX - 1, posY - 2), cc.rotateTo(timeFrame, -1)), cc.spawn(cc.moveTo(timeFrame, posX - 3, posY + 0), cc.rotateTo(timeFrame, 1)), cc.spawn(cc.moveTo(timeFrame, posX + 3, posY + 2), cc.rotateTo(timeFrame, 0)), cc.spawn(cc.moveTo(timeFrame, posX + 1, posY - 1), cc.rotateTo(timeFrame, 1)), cc.spawn(cc.moveTo(timeFrame, posX - 1, posY + 2), cc.rotateTo(timeFrame, -1)), cc.spawn(cc.moveTo(timeFrame, posX - 3, posY + 1), cc.rotateTo(timeFrame, 0)), cc.spawn(cc.moveTo(timeFrame, posX + 3, posY + 1), cc.rotateTo(timeFrame, -1)), cc.spawn(cc.moveTo(timeFrame, posX - 1, posY - 1), cc.rotateTo(timeFrame, 1)), cc.spawn(cc.moveTo(timeFrame, posX + 1, posY + 2), cc.rotateTo(timeFrame, 0)), cc.spawn(cc.moveTo(timeFrame, posX + 1, posY - 2), cc.rotateTo(timeFrame, -1)), cc.spawn(cc.moveTo(timeFrame, posX, posY), cc.rotateTo(timeFrame, 0)), cc.delayTime(delay));
        return effect;
      },
      jelloHorizontal: function jelloHorizontal(obj, time) {
        var delay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
        var timeFrame = time / 10;
        var effect = cc.sequence(cc.scaleTo(3 * timeFrame, 1, 1), cc.scaleTo(timeFrame, 1.25, .75), cc.scaleTo(timeFrame, .75, 1.25), cc.scaleTo(1.5 * timeFrame, 1.15, .85), cc.scaleTo(timeFrame, 1.05, .95), cc.scaleTo(2.5 * timeFrame, 1, 1), cc.delayTime(delay));
        return effect;
      },
      jelloVertical: function jelloVertical(obj, time) {
        var delay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
        var timeFrame = time / 10;
        var effect = cc.sequence(cc.scaleTo(3 * timeFrame, 1, 1), cc.scaleTo(timeFrame, .75, 1.25), cc.scaleTo(timeFrame, 1.25, .75), cc.scaleTo(1.5 * timeFrame, .85, 1.15), cc.scaleTo(timeFrame, .95, 1.05), cc.scaleTo(2.5 * timeFrame, 1, 1), cc.delayTime(delay));
        return effect;
      },
      jelloDiagonal: function jelloDiagonal(obj, time) {
        var delay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
        var timeFrame = time / 10;
        var effect = cc.sequence(cc.skewTo(3 * timeFrame, 0, 0), cc.skewTo(timeFrame, -25, -25), cc.skewTo(timeFrame, -15, -15), cc.skewTo(1.5 * timeFrame, 5, 5), cc.skewTo(timeFrame, -5, -5), cc.skewTo(2.5 * timeFrame, 0, 0), cc.delayTime(delay));
        return effect;
      },
      heartBeat: function heartBeat(obj, time) {
        var delay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
        var timeFrame = time / 10;
        var effect = cc.sequence(cc.scaleTo(timeFrame, 1, 1), cc.scaleTo(timeFrame, .91, .91), cc.scaleTo(.7 * timeFrame, .98, .98), cc.scaleTo(1.6 * timeFrame, .87, .87), cc.scaleTo(2.2 * timeFrame, 1, 1), cc.delayTime(delay));
        return effect;
      },
      wobbleHorBottom: function wobbleHorBottom(obj, time) {
        var delay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        var timeFrame = time / 10;
        var posX = obj.x;
        var posY = obj.y;
        var effect = cc.sequence(cc.spawn(cc.moveTo(1.5 * timeFrame, posX - 30, posY), cc.rotateTo(1.5 * timeFrame, -6)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX + 15, posY), cc.rotateTo(1.5 * timeFrame, 6)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX - 15, posY), cc.rotateTo(1.5 * timeFrame, -3.6)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX + 9, posY), cc.rotateTo(1.5 * timeFrame, 2.4)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX - 6, posY), cc.rotateTo(1.5 * timeFrame, -1.2)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX, posY), cc.rotateTo(1.5 * timeFrame, 0)), cc.delayTime(delay));
        return effect;
      },
      wobbleHorTop: function wobbleHorTop(obj, time) {
        var delay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        var timeFrame = time / 10;
        var posX = obj.x;
        var posY = obj.y;
        var effect = cc.sequence(cc.spawn(cc.moveTo(1.5 * timeFrame, posX - 30, posY), cc.rotateTo(1.5 * timeFrame, 6)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX + 15, posY), cc.rotateTo(1.5 * timeFrame, -6)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX - 15, posY), cc.rotateTo(1.5 * timeFrame, 3.6)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX + 9, posY), cc.rotateTo(1.5 * timeFrame, -2.4)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX - 6, posY), cc.rotateTo(1.5 * timeFrame, 1.2)), cc.spawn(cc.moveTo(1.5 * timeFrame, posX, posY), cc.rotateTo(1.5 * timeFrame, 0)), cc.delayTime(delay));
        return effect;
      },
      swildOutFwd: function swildOutFwd(obj, time) {
        var delay = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1;
        var effect = cc.sequence(cc.spawn(cc.rotateTo(0, 0), cc.scaleTo(0, 1, 1), cc.fadeIn(0)), cc.spawn(cc.rotateTo(time, 540), cc.scaleTo(time, 5), cc.fadeOut(time)), cc.delayTime(delay));
        return effect;
      },
      randomBenzier: function randomBenzier(obj, target, time) {
        var distanceX = Math.abs(obj.x - target.x);
        var curvePoint1 = cc.v2(Math.random() * distanceX + Math.min(target.x, obj.x), obj.y);
        var curvePoint2 = cc.v2(Math.random() * distanceX + Math.min(target.x, obj.x), target.y);
        var effect = cc.bezierTo(time, [ curvePoint1, curvePoint2, target ]);
        return effect;
      }
    };
    module.exports = ActionEffect;
    cc._RF.pop();
  }, {} ],
  ActorDialogSlot: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5bcb5+auoxIUb7TwN4E4eT6", "ActorDialogSlot");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        overlayLayer: cc.Node,
        lbMessage: cc.Label,
        btnOK: cc.Button,
        btnCancel: cc.Button
      },
      actionOK: null,
      actionCancel: null,
      onLoad: function onLoad() {
        var _this = this;
        this.btnCancel.node.on("click", function() {
          _this.closeMessage();
          _this.actionCancel && _this.actionCancel();
        });
        this.btnOK.node.on("click", function() {
          _this.closeMessage();
          _this.actionOK && _this.actionOK();
        });
      },
      showMessage: function showMessage(_ref) {
        var strText = _ref.strText, _ref$actionCancel = _ref.actionCancel, actionCancel = void 0 === _ref$actionCancel ? null : _ref$actionCancel, _ref$actionOK = _ref.actionOK, actionOK = void 0 === _ref$actionOK ? null : _ref$actionOK;
        if (!this.node) return;
        this.node.active = true;
        this.lbMessage.string = strText;
        this.actionCancel = actionCancel;
        this.actionOK = actionOK;
        this.btnCancel.node.active = false;
        this.btnCancel.node.active = null !== actionCancel;
        this.btnOK.node.active = null !== actionOK;
      },
      showNotifyMessage: function showNotifyMessage(_ref2) {
        var strText = _ref2.strText;
        if (!this.node) return;
        this.node.active = true;
        this.lbMessage.string = strText;
        this.btnOK.node.active = false;
        this.btnCancel.node.active = false;
      },
      closeMessage: function closeMessage() {
        this.node.active = false;
      },
      setBtnOkText: function setBtnOkText(text) {
        this.btnOK.node.getChildByName("Text").getComponent(cc.Label).string = text;
      },
      setBtnCancel: function setBtnCancel(text) {
        this.btnCancel.node.getChildByName("Text").getComponent(cc.Label).string = text;
      }
    });
    cc._RF.pop();
  }, {} ],
  AlignFullScreenButton: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "128b3DV9GxNDKEYlYkc/FY8", "AlignFullScreenButton");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        position: "TOP_RIGHT"
      },
      start: function start() {
        if (cc.sys.isBrowser && cc.sys.isMobile) {
          var loadConfigAsync = require("loadConfigAsync");
          var _loadConfigAsync$getC = loadConfigAsync.getConfig(), LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;
          if (LOGIN_IFRAME) {
            "TOP_RIGHT" == this.position ? this.alignFunc = this.alignTopRight.bind(this) : "BOT_LEFT" == this.position ? this.alignFunc = this.alignBotLeft.bind(this) : "BOT_LEFT_23" == this.position && (this.alignFunc = this.alignBotLeft23.bind(this));
            if (this.alignFunc) {
              this.alignFunc();
              window.addEventListener("resize", this.alignFunc);
            }
          }
        }
      },
      alignTopRight: function alignTopRight() {
        var enterFullscreen = document.getElementById("enterFullscreen");
        var exitFullscreen = document.getElementById("exitFullscreen");
        if (window.innerWidth > window.innerHeight) {
          if (enterFullscreen && exitFullscreen) {
            enterFullscreen.classList.add("alignTopRight");
            enterFullscreen.classList.remove("alignBotRight");
            exitFullscreen.classList.add("alignTopRight");
            exitFullscreen.classList.remove("alignBotRight");
          }
        } else if (enterFullscreen && exitFullscreen) {
          enterFullscreen.classList.add("alignBotRight");
          enterFullscreen.classList.remove("alignTopRight");
          exitFullscreen.classList.add("alignBotRight");
          exitFullscreen.classList.remove("alignTopRight");
        }
      },
      alignBotLeft: function alignBotLeft() {
        var enterFullscreen = document.getElementById("enterFullscreen");
        var exitFullscreen = document.getElementById("exitFullscreen");
        if (window.innerWidth > window.innerHeight) {
          if (enterFullscreen && exitFullscreen) {
            enterFullscreen.classList.add("alignBotLeft");
            enterFullscreen.classList.remove("alignTopLeft");
            exitFullscreen.classList.add("alignBotLeft");
            exitFullscreen.classList.remove("alignTopLeft");
          }
        } else if (enterFullscreen && exitFullscreen) {
          enterFullscreen.classList.add("alignTopLeft");
          enterFullscreen.classList.remove("alignBotLeft");
          exitFullscreen.classList.add("alignTopLeft");
          exitFullscreen.classList.remove("alignBotLeft");
        }
      },
      alignBotLeft23: function alignBotLeft23() {
        var enterFullscreen = document.getElementById("enterFullscreen");
        var exitFullscreen = document.getElementById("exitFullscreen");
        if (window.innerWidth > window.innerHeight) {
          if (enterFullscreen && exitFullscreen) {
            enterFullscreen.classList.add("alignBotLeft23");
            enterFullscreen.classList.remove("alignTopLeft23");
            exitFullscreen.classList.add("alignBotLeft23");
            exitFullscreen.classList.remove("alignTopLeft23");
          }
        } else if (enterFullscreen && exitFullscreen) {
          enterFullscreen.classList.add("alignTopLeft23");
          enterFullscreen.classList.remove("alignBotLeft23");
          exitFullscreen.classList.add("alignTopLeft23");
          exitFullscreen.classList.remove("alignBotLeft23");
        }
      },
      onDestroy: function onDestroy() {
        cc.sys.isBrowser && cc.sys.isMobile && this.alignFunc && window.removeEventListener("resize", this.alignFunc);
      }
    });
    cc._RF.pop();
  }, {
    loadConfigAsync: "loadConfigAsync"
  } ],
  AlignmentControl: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "36c2alLktpFF6viIqKg4fiK", "AlignmentControl");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        maxWidth: 1440,
        maxHeight: 2436,
        maxAlignByOrient: false
      },
      onLoad: function onLoad() {
        this._thisOnResized = this.onScreenResized.bind(this);
        cc.sys.isMobile ? window.addEventListener("resize", this._thisOnResized) : cc.view.on("canvas-resize", this._thisOnResized);
        this._widget = this.node.getComponent(cc.Widget);
      },
      start: function start() {
        this.onScreenResized();
      },
      onScreenResized: function onScreenResized() {
        if (this.node) {
          var visibleViewSize = cc.view.getVisibleSize();
          if (null != this._widget) {
            this._widget.enabled = true;
            this._widget.updateAlignment();
          } else this._widget = this.node.getComponent(cc.Widget);
          if (visibleViewSize.width > this.maxWidth) {
            null != this._widget && (this._widget.enabled = false);
            this.node.width = this.maxWidth;
          }
          if (visibleViewSize.height > this.maxHeight) {
            null != this._widget && (this._widget.enabled = false);
            this.node.height = this.maxHeight;
            cc.log("Align with Max Height");
          }
          if (this.maxAlignByOrient && this.node.height >= 3 * this.node.width / 4) {
            null != this._widget && (this._widget.enabled = false);
            this.node.height = 3 * this.node.width / 4;
          }
        }
      },
      onDestroy: function onDestroy() {
        cc.sys.isMobile ? window.removeEventListener("resize", this._thisOnResized) : cc.view.off("canvas-resize", this._thisOnResized);
      }
    });
    cc._RF.pop();
  }, {} ],
  AnimUtils: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "50d1fAMVpFIgoVF/oLEQOwu", "AnimUtils");
    "use strict";
    var TweenShaking = function TweenShaking(node, dur, repeat) {
      var tween = cc.tween(node);
      -1 === repeat && tween.repeatForever(cc.tween().by(dur, {
        position: cc.v2(-10, 0)
      }).by(dur, {
        position: cc.v2(10, 0)
      }).by(dur, {
        position: cc.v2(10, 0)
      }).by(dur, {
        position: cc.v2(-10, 0)
      }));
      return tween;
    };
    var lightBlinking = function lightBlinking(node, _ref) {
      var _ref$minOpacity = _ref.minOpacity, minOpacity = void 0 === _ref$minOpacity ? 100 : _ref$minOpacity, _ref$maxOpacity = _ref.maxOpacity, maxOpacity = void 0 === _ref$maxOpacity ? 255 : _ref$maxOpacity, _ref$dur = _ref.dur, dur = void 0 === _ref$dur ? .02 : _ref$dur;
      node.runAction(cc.repeatForever(cc.sequence(cc.fadeTo(dur, minOpacity), cc.fadeTo(dur, maxOpacity))));
    };
    module.exports = {
      TweenShaking: TweenShaking,
      lightBlinking: lightBlinking
    };
    cc._RF.pop();
  }, {} ],
  AppearCenterScreen: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "dc965t6jUBFca2FHhugRjy8", "AppearCenterScreen");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {},
      onLoad: function onLoad() {
        var viewSize = cc.view.getVisibleSize();
        var newPos = this.node.convertToWorldSpaceAR(this.node.position);
        this.node.setPosition(cc.v2(viewSize.width / 2 - newPos.x, viewSize.height / 2 - newPos.y));
      }
    });
    cc._RF.pop();
  }, {} ],
  AutoScaleBackground: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6cabacFlLFObrsWP7gSjCXV", "AutoScaleBackground");
    "use strict";
    cc.Class({
      extends: cc.Component,
      onLoad: function onLoad() {
        this._thisOnResized = this.onScreenResized.bind(this);
        cc.sys.isMobile ? window.addEventListener("resize", this._thisOnResized) : cc.view.on("canvas-resize", this._thisOnResized);
        this.scaleCanvasByOrientation();
      },
      scaleCanvasByOrientation: function scaleCanvasByOrientation() {
        var widthBackground = 960;
        var heightBackground = 640;
        var heightDefaultCanvas = 1280;
        var widthView = cc.view.getFrameSize().width;
        var heightView = cc.view.getFrameSize().height;
        var scaleHeightDevice = heightView / heightDefaultCanvas;
        var scaleWidthDevice = widthView / heightDefaultCanvas;
        var realScaleDevice = scaleHeightDevice > scaleWidthDevice ? scaleWidthDevice : scaleHeightDevice;
        var convertWithBG = widthBackground * realScaleDevice;
        var convertHeightBG = heightBackground * realScaleDevice;
        var ratioW = widthView / convertWithBG;
        var ratioH = heightView / convertHeightBG;
        this.node.scale = ratioW > ratioH ? ratioW : ratioH;
      },
      onDestroy: function onDestroy() {
        cc.sys.isMobile ? window.removeEventListener("resize", this._thisOnResized) : cc.view.off("canvas-resize", this._thisOnResized);
      },
      onScreenResized: function onScreenResized() {
        this.scaleCanvasByOrientation();
      }
    });
    cc._RF.pop();
  }, {} ],
  BaseCellHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5aa60El74pOI692dgYl4HKd", "BaseCellHistory");
    "use strict";
    var _require = require("utils"), formatMoney = _require.formatMoney;
    var _require2 = require("utils"), formatUserName = _require2.formatUserName;
    function addZero(i) {
      i < 10 && (i = "0" + i);
      return i;
    }
    cc.Class({
      extends: cc.Component,
      properties: {
        time: cc.Node,
        account: cc.Node,
        bet: cc.Node,
        winAmount: cc.Node,
        timeFormat: "DD/MM hh:mm:ss"
      },
      onLoad: function onLoad() {
        this.node.updateData = this.updateData.bind(this);
      },
      updateData: function updateData(data) {
        if (!data) return;
        this.time.getComponent(cc.Label).string = this.formatTimeStamp(data.time);
        this.account.getComponent(cc.Label).string = formatUserName(data.dn);
        this.bet.getComponent(cc.Label).string = formatMoney(data.betAmt);
        this.winAmount.getComponent(cc.Label).string = formatMoney(data.jpAmt);
      },
      formatTimeStamp: function formatTimeStamp(ts) {
        var date = new Date(ts);
        var time = "";
        var year = date.getFullYear();
        var month = addZero(date.getMonth() + 1);
        var day = addZero(date.getDate());
        var hours = addZero(date.getHours());
        var minutes = addZero(date.getMinutes());
        var seconds = addZero(date.getSeconds());
        time = this.timeFormat ? this.timeFormat.replace("YYYY", year).replace("MM", month).replace("DD", day).replace("hh", hours).replace("mm", minutes).replace("ss", seconds) : day + "/" + month + "/" + year + " " + hours + ":" + minutes + ":" + seconds;
        return time;
      }
    });
    cc._RF.pop();
  }, {
    utils: "utils"
  } ],
  BaseDirectorV2: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0f6a3eEFbNNTpGXGD4WkDFp", "BaseDirectorV2");
    "use strict";
    cc.Class({
      extends: cc.Component,
      onLoad: function onLoad() {
        this.node.director = this;
        this.lastCommand = null;
        this.onExtendedLoad();
      },
      start: function start() {
        this.writer = this.node.writer;
        this.forceToExitMode = false;
        this.exitScript = [];
      },
      onExtendedLoad: function onExtendedLoad() {},
      runAction: function runAction(actionName, data) {
        if (!this.writer || "function" !== typeof this.writer["makeScript" + actionName]) return;
        var script = this.writer["makeScript" + actionName](data);
        this.executeNextScript(script);
      },
      executeNextScript: function executeNextScript(script) {
        if (!this.writer || !script || 0 == script.length || this.isSkipAllScrips) return;
        this.script = script;
        this.forceToExitMode && this.exitScript && this.exitScript.length > 0 && (this.script = this.exitScript);
        var nextScript = this.script.shift();
        var command = nextScript.command, data = nextScript.data;
        command = this.getCommandName(command);
        this.lastCommand = command;
        if (this[command] && "function" === typeof this[command]) {
          cc.log(this.name + " run command", command, data);
          this[command](this.script, data);
        } else {
          cc.error("There is no " + this.name + " command", command);
          this.executeNextScript(this.script);
        }
      },
      getCommandName: function getCommandName(command) {
        var gameSpeed = this.getGameSpeed();
        while (gameSpeed > 0) {
          var commandWithSpeed = command + "_" + gameSpeed;
          if (this[commandWithSpeed] && "function" === typeof this[commandWithSpeed]) return commandWithSpeed;
          gameSpeed--;
        }
        return command;
      },
      destroyData: function destroyData() {
        this.runAction = function() {};
        this.executeNextScript = function() {};
        this.script = [];
      },
      forceToExit: function forceToExit(script) {
        this.forceToExitMode = true;
        this.exitScript = script;
      },
      resetGameSpeed: function resetGameSpeed() {
        this.node.gSlotDataStore.gameSpeed = this.getDefaultGameSpeed();
      },
      setGameSpeed: function setGameSpeed(gameSpeed) {
        this.node.gSlotDataStore.gameSpeed = gameSpeed || this.getDefaultGameSpeed();
      },
      setGameSpeedMode: function setGameSpeedMode() {
        var mode = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "NORMAL";
        var GAME_SPEED = this.getGameSpeedConfig();
        this.node.gSlotDataStore.gameSpeed = GAME_SPEED[mode] || GAME_SPEED.NORMAL;
      },
      getGameSpeed: function getGameSpeed() {
        return this.node.gSlotDataStore.gameSpeed || this.getDefaultGameSpeed();
      },
      getDefaultGameSpeed: function getDefaultGameSpeed() {
        var GAME_SPEED = this.getGameSpeedConfig();
        return this.node.gSlotDataStore.modeTurbo ? GAME_SPEED.TURBO : GAME_SPEED.NORMAL;
      },
      getGameSpeedConfig: function getGameSpeedConfig() {
        return this.node.config && this.node.config.GAME_SPEED ? this.node.config.GAME_SPEED : {
          NORMAL: 0,
          TURBO: 1,
          INSTANTLY: 2
        };
      },
      getRemainScripts: function getRemainScripts() {
        var result = [];
        this.script && (result = this.script.map(function(it) {
          return it.command;
        }));
        return result;
      },
      getLastCommand: function getLastCommand() {
        return this.lastCommand;
      }
    });
    cc._RF.pop();
  }, {} ],
  BaseHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "38becQJlTpI3ptsIKgyYKXe", "BaseHistory");
    "use strict";
    var serviceRest = require("serviceRest");
    cc.Class({
      extends: cc.Component,
      properties: {
        table: cc.Node,
        pageIndexView: cc.Node,
        itemPerPage: 7,
        loading: cc.Node,
        backBtn: cc.Node,
        nextBtn: cc.Node,
        errorMessage: cc.Node,
        hasExtraBet: false
      },
      onLoad: function onLoad() {
        this.initBase();
        this.isError = false;
      },
      initBase: function initBase() {
        this.currentPage = 1;
        this.totalPage = 1;
        this.pageDefault = 1;
        this.stopLoading();
        this.node.on("CLOSE_NOTICE", this.closeNotice, this);
        this.node.soundPlayer && (this.playSoundClick = this.node.soundPlayer.playSFXClick.bind(this.node.soundPlayer));
        this.table.getComponent("BaseTableHistory").initCells(this.itemPerPage);
        this.serverMessage = cc.instantiate(this.errorMessage);
        this.serverMessage.setParent(this.errorMessage.parent);
        this.serverMessage.active = false;
        this.nextBtn.on(cc.Node.EventType.TOUCH_START, this.onNextPage.bind(this));
        this.nextBtn.on(cc.Node.EventType.TOUCH_END, this.cancelChangePage.bind(this));
        this.nextBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.cancelChangePage.bind(this));
        this.nextBtn.on(cc.Node.EventType.MOUSE_LEAVE, this.cancelChangePage.bind(this));
        this.backBtn.on(cc.Node.EventType.TOUCH_START, this.onPrevPage.bind(this));
        this.backBtn.on(cc.Node.EventType.TOUCH_END, this.cancelChangePage.bind(this));
        this.backBtn.on(cc.Node.EventType.TOUCH_CANCEL, this.cancelChangePage.bind(this));
        this.backBtn.on(cc.Node.EventType.MOUSE_LEAVE, this.cancelChangePage.bind(this));
      },
      onNextPage: function onNextPage() {
        this.nextBtn.getComponent(cc.Button).interactable && (this.backBtn.getComponent(cc.Button).interactable = false);
      },
      onPrevPage: function onPrevPage() {
        this.backBtn.getComponent(cc.Button).interactable && (this.nextBtn.getComponent(cc.Button).interactable = false);
      },
      cancelChangePage: function cancelChangePage() {
        1 !== this.currentPage && (this.backBtn.getComponent(cc.Button).interactable = true);
        this.currentPage < this.totalPage && (this.nextBtn.getComponent(cc.Button).interactable = true);
      },
      openPanel: function openPanel() {
        this.node.active = true;
        this.node.opacity = 255;
        this.table && (this.table.opacity = 0);
        this.currentPage = 1;
        if (1 == this.currentPage) {
          this.backBtn.getComponent(cc.Button).interactable = false;
          this.nextBtn.getComponent(cc.Button).interactable = false;
        }
        this.updatePageIndexView(this.currentPage);
        this.errorMessage && (this.errorMessage.active = false);
        this.playLoading();
        this.requestDataPage(this.currentPage, this.itemPerPage, this.onRequestResponse.bind(this), this.requestErr.bind(this));
      },
      setDynamicBet: function setDynamicBet() {
        var mBet = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
        var listDataBet = mBet.split(",");
        var listBetId = listDataBet.map(function(item) {
          return item.split(";")[0];
        });
        this.betIds = listBetId.join("-");
      },
      playLoading: function playLoading() {
        this.loading.active = true;
        var anim = this.loading.getComponent(cc.Animation);
        anim.wrapMode = cc.WrapMode.Loop;
        anim.play("animLoading");
      },
      stopLoading: function stopLoading() {
        this.loading.active = false;
        var anim = this.loading.getComponent(cc.Animation);
        anim.stop("animLoading");
      },
      onNextButton: function onNextButton() {
        this.playSoundClick && this.playSoundClick();
        this.nextBtn.getComponent(cc.Button).interactable = false;
        this.isError || (this.pageDefault = this.currentPage);
        this.currentPage += 1;
        this.isError && (this.currentPage = this.pageDefault);
        this.playLoading();
        this.requestDataPage(this.currentPage, this.itemPerPage, this.onRequestResponse.bind(this), this.requestErr.bind(this));
      },
      onPreviousButton: function onPreviousButton() {
        this.playSoundClick && this.playSoundClick();
        if (1 == this.currentPage) return;
        this.backBtn.getComponent(cc.Button).interactable = false;
        this.isError || (this.pageDefault = this.currentPage);
        this.currentPage -= 1;
        this.isError && (this.currentPage = this.pageDefault);
        this.playLoading();
        this.requestDataPage(this.currentPage, this.itemPerPage, this.onRequestResponse.bind(this), this.requestErr.bind(this));
      },
      requestDataPage: function requestDataPage(page, quantity, callback, callbackErr) {
        var from = (page - 1) * quantity;
        var betIds = this.betIds;
        if (this.betIds && this.hasExtraBet && this.node.gSlotDataStore && this.node.gSlotDataStore.slotBetDataStore && this.node.gSlotDataStore.slotBetDataStore.data.extraSteps) {
          var listBetIds = this.betIds.split("-");
          var extraSteps = this.node.gSlotDataStore.slotBetDataStore.data.extraSteps;
          betIds = "";
          Object.keys(extraSteps).forEach(function(key, index) {
            listBetIds = listBetIds.map(function(item) {
              return item[0] + "" + key;
            });
            index > 0 && (betIds += "-");
            betIds += listBetIds.join("-");
          });
        }
        var requestParams = {
          serviceId: this.jpPrefix + this.gameId,
          from: from,
          size: quantity,
          type: this.jpList,
          betIds: betIds
        };
        this.errorMessage && (this.errorMessage.active = false);
        this.requestHistory(requestParams, callback, callbackErr);
      },
      requestHistory: function requestHistory() {
        var requestParams = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        var callback = arguments[1];
        var callbackErr = arguments[2];
        var headers = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
        if (!this.gameId) {
          cc.warn("GameId has not been set");
          callback({});
          return;
        }
        var currencyCode = this.getCurrencyCode();
        currencyCode && (requestParams.c = currencyCode);
        headers ? serviceRest.getWithHeader({
          url: this.url,
          params: requestParams,
          callback: callback,
          callbackErr: callbackErr,
          headers: headers
        }) : serviceRest.get({
          url: this.url,
          params: requestParams,
          callback: callback,
          callbackErr: callbackErr
        });
      },
      requestErr: function requestErr() {
        this.totalPage = 1;
        this.stopLoading();
        if (this.errorMessage) {
          this.errorMessage.active = true;
          this.isError = true;
          this.nextBtn.getComponent(cc.Button).interactable = false;
          this.backBtn.getComponent(cc.Button).interactable = false;
          this.table.emit("CLEAR_DATA");
        }
      },
      onRequestResponse: function onRequestResponse(res) {
        res.total && (this.totalPage = Math.ceil(res.total / this.itemPerPage));
        this.stopLoading();
        if (!res.error) {
          this.isError = false;
          if (Object.keys(res).length > 0 && res.data && res.data.length > 0) {
            this.nextBtn.getComponent(cc.Button).interactable = true;
            this.backBtn.getComponent(cc.Button).interactable = true;
            this.updatePageIndexView(this.currentPage);
            this.table && (this.table.opacity = 255);
            this.table.emit("UPDATE_DATA", res.data);
            1 == this.currentPage && (this.backBtn.getComponent(cc.Button).interactable = false);
            if (res.total <= this.currentPage * this.itemPerPage || res.data.length < this.itemPerPage) {
              this.nextBtn.getComponent(cc.Button).interactable = false;
              return;
            }
          } else {
            this.nextBtn.getComponent(cc.Button).interactable = false;
            this.backBtn.getComponent(cc.Button).interactable = false;
            this.updatePageIndexView(1);
            this.currentPage = 1;
            this.totalPage = 0;
            this.table.emit("UPDATE_DATA", res.data);
          }
        }
      },
      updatePageIndexView: function updatePageIndexView(content) {
        this.pageIndexView.getComponent(cc.Label).string = content;
      },
      closeNotice: function closeNotice() {
        this.errorMessage && (this.errorMessage.active = false);
      },
      getCurrencyCode: function getCurrencyCode() {
        if (this.node.gSlotDataStore && this.node.gSlotDataStore.currencyCode) return this.node.gSlotDataStore.currencyCode;
        return null;
      }
    });
    cc._RF.pop();
  }, {
    serviceRest: "serviceRest"
  } ],
  BaseTableHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6ec22dMhiNNebkKEkOn/Pyh", "BaseTableHistory");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        cell: cc.Prefab
      },
      onLoad: function onLoad() {
        this.node.on("UPDATE_DATA", this.updateData, this);
        this.node.on("CLEAR_DATA", this.clearData, this);
      },
      initCells: function initCells(itemPerPage) {
        for (var i = 0; i < itemPerPage; ++i) {
          var cell = cc.instantiate(this.cell);
          cell.parent = this.node;
          cell.opacity = 1;
        }
      },
      updateData: function updateData(data) {
        this.node.children.forEach(function(child, index) {
          if (index < data.length) {
            child.updateData(data[index]);
            child.active = true;
            child.opacity = 255;
          } else child.active = false;
        });
      },
      clearData: function clearData() {
        this.node.children.forEach(function(child) {
          return child.active = false;
        });
      }
    });
    cc._RF.pop();
  }, {} ],
  BetCellHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1602cOFw+VKPJ98V/r0AgKG", "BetCellHistory");
    "use strict";
    var _require = require("utils"), formatMoney = _require.formatMoney;
    cc.Class({
      extends: require("BaseCellHistory"),
      properties: {
        session: cc.Node,
        betDenom: cc.Node,
        betLines: cc.Node,
        totalbet: cc.Node,
        detailBtn: cc.Node,
        featureGroup: cc.Node,
        freeCircle: cc.Node,
        bonusCircle: cc.Node,
        topUpCircle: cc.Node,
        jackpotCircle: cc.Node,
        positionCircles: [ cc.Node ]
      },
      onLoad: function onLoad() {
        this._super();
        this.node.config.PAY_LINE_ALLWAYS && ("[3,3,3,3,3]" === JSON.stringify(this.node.config.TABLE_FORMAT) ? this.totalLineCount = "243" : this.totalLineCount = "All ways");
        this.freeCircle && (this.freeCircle.active = false);
        this.bonusCircle && (this.bonusCircle.active = false);
        this.topUpCircle && (this.topUpCircle.active = false);
        this.jackpotCircle && (this.jackpotCircle.active = false);
      },
      updateData: function updateData(data) {
        this.detailBtn.active = false;
        if (!data) return;
        this.playSessionId = data.sessionId;
        this.session.getComponent(cc.Label).string = "#" + data.sessionId.substring(data.sessionId.length - 8, data.sessionId.length);
        this.time.getComponent(cc.Label).string = this.formatTimeStamp(parseInt(data.time));
        this.betDenom && (this.betDenom.getComponent(cc.Label).string = Number(data.betDenom));
        this.totalbet.getComponent(cc.Label).string = formatMoney(Number(data.totalBetAmount));
        this.winAmount.getComponent(cc.Label).string = formatMoney(data.totalWinAmount);
        this.node.config.PAY_LINE_ALLWAYS ? this.betLines.getComponent(cc.Label).string = this.totalLineCount : this.betLines.getComponent(cc.Label).string = (data.bettingLines.match(/,/g) || []).length + 1;
        this.detailBtn.active = true;
        this.dataDetail = data;
        if (this.featureGroup) {
          this.freeCircle.active = data.freeGameTotal > 0;
          this.bonusCircle.active = data.totalBonusWinAmount > 0;
        }
        this.addCircle(data);
      },
      onClickDetail: function onClickDetail() {
        if (this.node.opacity < 255) return;
        this.clickItemEvent = new cc.Event.EventCustom("OPEN_BET_DETAIL", true);
        this.clickItemEvent.setUserData({
          sessionId: this.playSessionId,
          summaryData: this.dataDetail
        });
        this.node.dispatchEvent(this.clickItemEvent);
        this.node.soundPlayer && this.node.soundPlayer.playSFXClick();
      },
      addCircle: function addCircle(data) {
        var _this = this;
        if (!data) return;
        var listMode = [];
        this.freeCircle && (this.freeCircle.active = false);
        this.bonusCircle && (this.bonusCircle.active = false);
        this.topUpCircle && (this.topUpCircle.active = false);
        this.jackpotCircle && (this.jackpotCircle.active = false);
        var freeGameTotal = data.freeGameTotal, totalJpWinAmount = data.totalJpWinAmount, totalBonusWinAmount = data.totalBonusWinAmount;
        if (totalJpWinAmount && totalJpWinAmount > 0 && this.jackpotCircle) {
          this.jackpotCircle.active = true;
          listMode.push(this.jackpotCircle);
        }
        if (totalBonusWinAmount && totalBonusWinAmount > 0 && this.bonusCircle) {
          this.bonusCircle.active = true;
          listMode.push(this.bonusCircle);
        }
        if (freeGameTotal && this.freeCircle) {
          this.freeCircle.active = true;
          listMode.push(this.freeCircle);
        }
        listMode.length > 0 && this.positionCircles.length > 0 && listMode.forEach(function(item, index) {
          var position = _this.positionCircles[index].position;
          item.setPosition(position);
        });
      }
    });
    cc._RF.pop();
  }, {
    BaseCellHistory: "BaseCellHistory",
    utils: "utils"
  } ],
  BetTableHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5e5f8Du4CpKO52QndeKW7Y+", "BetTableHistory");
    "use strict";
    cc.Class({
      extends: require("BaseTableHistory")
    });
    cc._RF.pop();
  }, {
    BaseTableHistory: "BaseTableHistory"
  } ],
  ButtonScaler: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ba60dxFHwhLKJRBec7ljR4T", "ButtonScaler");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        pressedScale: 1,
        transDuration: 0
      },
      onLoad: function onLoad() {
        var self = this;
        self.initScale = this.node.scale;
        self.scaleDownAction = cc.scaleTo(self.transDuration, self.pressedScale);
        self.scaleUpAction = cc.scaleTo(self.transDuration, self.initScale);
        function onTouchDown() {
          if (!self.enabled) return;
          this.stopAllActions();
          this.runAction(self.scaleDownAction);
        }
        function onTouchUp() {
          if (!self.enabled) return;
          this.stopAllActions();
          this.runAction(self.scaleUpAction);
        }
        this.node.on("touchstart", onTouchDown, this.node);
        this.node.on("touchend", onTouchUp, this.node);
        this.node.on("touchcancel", onTouchUp, this.node);
      }
    });
    cc._RF.pop();
  }, {} ],
  CacheChildrenRender: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "93bb7Pjpw5LF6IAosYMpJN9", "CacheChildrenRender");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        pageIndex: 1,
        isCustomView: false,
        customWidth: 720,
        customHeight: 1280
      },
      onLoad: function onLoad() {
        var _this = this;
        this.positionCache = this.node.position;
        this.node.opacity = 0;
        this.node.x = 3e3;
        this.camera = this.node.addComponent(cc.Camera);
        this.camera.cullingMask = this.node._cullingMask;
        this.node.children.forEach(function(child) {
          child.group = _this.node.group;
        });
      },
      start: function start() {
        var _this2 = this;
        this.scheduleOnce(function() {
          _this2.node.opacity = 255;
          var renderTexture = new cc.RenderTexture();
          _this2.isCustomView ? renderTexture.initWithSize(_this2.customWidth, _this2.customHeight) : renderTexture.initWithSize(cc.winSize.width, cc.winSize.height);
          _this2.camera.targetTexture = renderTexture;
          _this2.camera.render(_this2.node);
          var spriteFrame = new cc.SpriteFrame(renderTexture);
          var sprieComp = _this2.node.getComponent(cc.Sprite);
          sprieComp || (sprieComp = _this2.node.addComponent(cc.Sprite));
          sprieComp.spriteFrame = spriteFrame;
          _this2.node.removeAllChildren();
          _this2.node.scaleY = -1;
          _this2.node.removeComponent(cc.Camera);
          _this2.node.position = _this2.positionCache;
        }, Number(.017 * (this.pageIndex > 0 ? this.pageIndex : 1)));
      }
    });
    cc._RF.pop();
  }, {} ],
  CanvasScaleByOrientation: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "489090MPSZEt4mU9TodEQWL", "CanvasScaleByOrientation");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        autoOrientation: false,
        isPortrait: true,
        canvas: cc.Canvas,
        fitByOrientation: true,
        useCustomDesignResolution: false,
        customDSWidth: 1280,
        customDSHeight: 720,
        widgetNodes: {
          type: cc.Widget,
          default: []
        },
        isDebug: false
      },
      onLoad: function onLoad() {
        this._thisOnResized = this.onScreenResized.bind(this);
        cc.sys.isMobile ? window.addEventListener("resize", this._thisOnResized) : cc.view.on("canvas-resize", this._thisOnResized);
        this.scaleCanvasByOrientation();
        if (!cc.sys.isNative) {
          var divFullscreen = document.getElementById("div_full_screen");
          this.isPortrait && divFullscreen && (divFullscreen.style.visibility = "hidden");
          this.autoOrientation ? cc.view.setOrientation(cc.macro.ORIENTATION_AUTO) : this.isPortrait ? cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT) : cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);
        }
      },
      start: function start() {
        if (cc.sys.isMobile) {
          var eventResize = new Event("gameShow");
          window.dispatchEvent(eventResize);
        }
        this.updateForLandscape();
      },
      updateForLandscape: function updateForLandscape() {
        var vjsb = window["vjsb"];
        if (vjsb && cc.sys.os == cc.sys.OS_ANDROID && !this.isPortrait) {
          this.node.rotation = 90;
          var fs = cc.view.getFrameSize();
          this.node.scaleY = fs.height / fs.width;
          this.node.scaleX = this.node.scaleY;
        }
      },
      scaleCanvasByOrientation: function scaleCanvasByOrientation() {
        this.autoOrientation ? cc.view.getFrameSize().width < cc.view.getFrameSize().height ? this.isPortrait = true : this.isPortrait = false : this.isPortrait ? cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT) : cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);
        if (this.canvas) {
          this.isDebug && cc.log("Canvas after update: ");
          this.isDebug && cc.log(this.canvas);
          this.canvas.alignWithScreen();
          if (this.fitByOrientation) {
            var loadConfigAsync = require("loadConfigAsync");
            var _loadConfigAsync$getC = loadConfigAsync.getConfig(), LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;
            var designRatio = this.useCustomDesignResolution && LOGIN_IFRAME ? this.customDSWidth / this.customDSHeight : this.canvas.designResolution.width / this.canvas.designResolution.height;
            var frameSize = cc.view.getFrameSize();
            var isLandscape = this.isLandscapeScreen();
            var screenRatio = frameSize.width / frameSize.height;
            this.isDebug && cc.log("View size:" + frameSize + ", Design Resolution: W: " + this.canvas.designResolution.width + ", H: " + this.canvas.designResolution.height + ",  Screen Ratio: " + screenRatio + ", Design Ratio: " + designRatio);
            if (this.isPortrait) {
              var windowRatio = isLandscape ? window.innerHeight / window.innerWidth : window.innerWidth / window.innerHeight;
              screenRatio = cc.sys.isMobile && cc.sys.isBrowser && windowRatio < screenRatio ? windowRatio : screenRatio;
              if (screenRatio < designRatio) {
                this.canvas.fitHeight = false;
                this.canvas.fitWidth = true;
                this.isDebug && cc.log("CANVAS FIT WIDTH");
              } else {
                this.canvas.fitHeight = true;
                this.canvas.fitWidth = false;
                this.isDebug && cc.log("CANVAS FIT HEIGHT");
              }
              this.rotateRootPortraitGame();
            } else {
              var _windowRatio = isLandscape ? window.innerWidth / window.innerHeight : window.innerHeight / window.innerWidth;
              screenRatio = cc.sys.isMobile && cc.sys.isBrowser && _windowRatio > screenRatio ? _windowRatio : screenRatio;
              if (screenRatio < designRatio) {
                this.canvas.fitHeight = false;
                this.canvas.fitWidth = true;
                this.isDebug && cc.log(isLandscape ? "LANDSCAPE ORIENTATION - CANVAS FIT WIDTH" : "PORTRAIT ORIENTATION - CANVAS FIT WIDTH");
              } else {
                this.canvas.fitHeight = true;
                this.canvas.fitWidth = false;
                this.isDebug && cc.log(isLandscape ? "LANDSCAPE ORIENTATION - CANVAS FIT HEIGHT" : "PORTRAIT ORIENTATION - CANVAS FIT HEIGHT");
              }
            }
          }
        } else this.isDebug && cc.log("No canvas component");
        if (this.widgetNodes && this.widgetNodes.length > 0) for (var i = 0; i < this.widgetNodes.length; i++) this.widgetNodes[i].updateAlignment();
      },
      rotateRootPortraitGame: function rotateRootPortraitGame() {
        if (!this.isPortrait) return;
        if (cc.sys.isMobile && cc.sys.isBrowser) {
          var isLandScapeView = this.isLandscapeScreen();
          this.node.children.forEach(function(child) {
            child.getComponent(cc.Camera) || (child.angle = isLandScapeView ? 180 : 0);
          });
        }
      },
      onScreenResized: function onScreenResized() {
        var _this = this;
        this.scaleCanvasCallback = function() {
          _this.scaleCanvasByOrientation();
          _this.scaleCanvasCallback = null;
        };
        this.scheduleOnce(this.scaleCanvasCallback, .5);
      },
      onDestroy: function onDestroy() {
        cc.sys.isMobile ? window.removeEventListener("resize", this._thisOnResized) : cc.view.off("canvas-resize", this._thisOnResized);
        this.scaleCanvasCallback && this.unschedule(this.scaleCanvasCallback);
        this.scaleCanvasCallback = null;
      },
      isLandscapeScreen: function isLandscapeScreen() {
        if (cc.sys.isBrowser && cc.sys.isMobile && "function" === typeof window.matchMedia) {
          if (window.matchMedia("(orientation: landscape)").matches) return true;
          if (window.matchMedia("(orientation: portrait)").matches) return false;
        }
        return true;
      }
    });
    cc._RF.pop();
  }, {
    loadConfigAsync: "loadConfigAsync"
  } ],
  CanvasScale: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bad304x97hA7ZENqUr6xGVU", "CanvasScale");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {},
      onLoad: function onLoad() {
        var viewSize = cc.view.getVisibleSize();
        var ratio = viewSize.height / viewSize.width;
        var canvas = this.node.getComponent(cc.Canvas);
        if (ratio <= .5625) {
          canvas.fitWidth = false;
          canvas.fitHeight = true;
        } else {
          canvas.fitWidth = true;
          canvas.fitHeight = false;
        }
      }
    });
    cc._RF.pop();
  }, {} ],
  CircleMove: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8dc3bARPU9JLqQ/2t39LDI+", "CircleMove");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        radius: 100,
        offsetWidthHeight: 10,
        speed: 20
      },
      onLoad: function onLoad() {
        this._particleSystem = this.node.getComponent(cc.ParticleSystem);
        this._angle = 0;
      },
      onDisable: function onDisable() {
        this._particleSystem.resetSystem();
      },
      update: function update(dt) {
        this._angle += Math.PI / 180 * this.speed * dt;
        var x = Math.cos(this._angle) * this.radius;
        var y = Math.sin(this._angle) * (this.radius - this.offsetWidthHeight);
        this.node.position = new cc.Vec2(x, y);
      }
    });
    cc._RF.pop();
  }, {} ],
  ClickAndShow: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6759cNbR+tPBKXN4o0zmLB1", "ClickAndShow");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        panel: cc.Node
      },
      onLoad: function onLoad() {
        this.node.on("SHOW_PANEL", this.enter, this);
        this.node.on("HIDE_PANEL", this.exit, this);
        this.node.on("CLOSE_PANEL", this.closePanel, this);
        this.panel.active = false;
        this.fadeSpeed = .2;
        this.isShowing = false;
      },
      enter: function enter() {
        this.node.soundPlayer && this.node.soundPlayer.playSFXClick();
        this.isShowing = true;
        this.panel.active = true;
        this.panel.runAction(cc.fadeIn(this.fadeSpeed));
      },
      exit: function exit() {
        if (!this.isShowing) return;
        this.node.soundPlayer && this.node.soundPlayer.playSFXClick();
        this.closePanel();
      },
      closePanel: function closePanel() {
        var _this = this;
        this.isShowing = false;
        this.panel.runAction(cc.sequence(cc.fadeOut(this.fadeSpeed), cc.callFunc(function() {
          _this.panel.active = false;
        })));
      }
    });
    cc._RF.pop();
  }, {} ],
  ControlBtn: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c6bccIyoRpJNr1fcXSycUo5", "ControlBtn");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        gamePrefab: cc.Prefab,
        parentNode: cc.Node
      },
      onLoad: function onLoad() {
        this.loaded = false;
        this.parentNode.on("PLT_SHOW_SCORE", this.showScore);
        this.parentNode.on("PLT_WALLET_UPDATE", this.showWallet);
        this.parentNode.on("PLT_BLUR", this.blur);
        this.parentNode.on("PLT_FOCUS", this.focus);
        this.parentNode.on("PLT_SPIN_START", this.spinStart);
      },
      loadGame: function loadGame() {
        this.gameNode = cc.instantiate(this.gamePrefab);
      },
      spinStart: function spinStart() {
        cc.log("PLT_Start_Spin");
      },
      showScore: function showScore(value) {
        cc.log("PLT_Score:", value);
      },
      showWallet: function showWallet(value) {
        cc.log("PLT_Wallet:", value);
      },
      blur: function blur() {
        cc.log("PLT_Blur!");
      },
      focus: function focus() {
        cc.log("PLT_Focus!");
      },
      openGame: function openGame() {
        if (this.loaded) {
          this.gameNodeScript.emit("OPEN_GAME");
          this.gameNodeDimFocusControl.focus && this.gameNodeDimFocusControl.focus();
        } else {
          this.gameNode.parent = this.parentNode;
          this.gameNode.active = true;
          this.gameNodeScript = this.gameNode.getChildByName("Scripts");
          this.gameNodeDimFocusControl = this.gameNode.getComponent("DimFocusControl");
          this.gameNodeScript.emit("CONNECT_GAME");
          this.loaded = true;
        }
        return this.gameNode;
      },
      outGame: function outGame() {
        if (this.loaded) {
          this.gameNodeScript.emit("OUT_GAME");
          this.parentNode.removeChild(this.gameNode);
          this.loaded = false;
        }
      },
      closeConnection: function closeConnection() {
        var globalNetwork = require("globalNetwork");
        globalNetwork.triggerUserLogout();
      }
    });
    cc._RF.pop();
  }, {
    globalNetwork: "globalNetwork"
  } ],
  CustomDataType: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4cd703PUoFJ143ZGtp8SsRE", "CustomDataType");
    "use strict";
    var jackpotStatic = cc.Class({
      name: "jackpotStatic",
      properties: {
        name: {
          default: ""
        },
        static: {
          type: cc.SpriteFrame,
          default: null
        }
      }
    });
    var BettingChipMapping = cc.Class({
      name: "BettingChip",
      properties: {
        value: 500,
        static: {
          type: cc.SpriteFrame,
          default: null
        }
      }
    });
    var DynamicSpine = cc.Class({
      name: "DynamicSpineData",
      properties: {
        name: {
          default: ""
        },
        texture: {
          type: cc.Texture2D,
          default: null
        },
        atlas: {
          type: cc.Asset,
          default: null
        },
        jsonFileName: {
          default: ""
        }
      }
    });
    var ButtonAsset = cc.Class({
      name: "ButtonAsset",
      properties: {
        name: {
          default: ""
        },
        normalSprite: {
          type: cc.SpriteFrame,
          default: null
        },
        pressedSprite: {
          type: cc.SpriteFrame,
          default: null
        },
        hoverSprite: {
          type: cc.SpriteFrame,
          default: null
        },
        disabledSprite: {
          type: cc.SpriteFrame,
          default: null
        }
      }
    });
    module.exports = {
      jackpotStatic: jackpotStatic,
      BettingChipMapping: BettingChipMapping,
      DynamicSpine: DynamicSpine,
      ButtonAsset: ButtonAsset
    };
    cc._RF.pop();
  }, {} ],
  CustomHTMLTextParser: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "378baf03V1AHZzAP0NJCwZG", "CustomHTMLTextParser");
    "use strict";
    var eventRegx = /^(click)(\s)*=|(param)(\s)*=/;
    var imageAttrReg = /(\s)*src(\s)*=|(\s)*height(\s)*=|(\s)*width(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=|(\s)*scale(\s)*=|(\s)*anchorY(\s)*=/;
    var CustomHtmlTextParser = function CustomHtmlTextParser() {
      this._parsedObject = {};
      this._specialSymbolArray = [];
      this._specialSymbolArray.push([ /&lt;/g, "<" ]);
      this._specialSymbolArray.push([ /&gt;/g, ">" ]);
      this._specialSymbolArray.push([ /&amp;/g, "&" ]);
      this._specialSymbolArray.push([ /&quot;/g, '"' ]);
      this._specialSymbolArray.push([ /&apos;/g, "'" ]);
    };
    CustomHtmlTextParser.prototype = {
      constructor: CustomHtmlTextParser,
      parse: function parse(htmlString) {
        this._resultObjectArray = [];
        this._stack = [];
        var startIndex = 0;
        var length = htmlString.length;
        while (startIndex < length) {
          var tagBeginIndex = htmlString.indexOf("<", startIndex);
          if (tagBeginIndex < 0) {
            this._stack.pop();
            this._processResult(htmlString.substring(startIndex));
            startIndex = length;
          } else {
            this._processResult(htmlString.substring(startIndex, tagBeginIndex));
            var tagEndIndex = htmlString.indexOf(">", startIndex);
            -1 === tagEndIndex ? tagEndIndex = tagBeginIndex : "/" === htmlString.charAt(tagBeginIndex + 1) ? this._stack.pop() : this._addToStack(htmlString.substring(tagBeginIndex + 1, tagEndIndex));
            startIndex = tagEndIndex + 1;
          }
        }
        return this._resultObjectArray;
      },
      _attributeToObject: function _attributeToObject(attribute) {
        attribute = attribute.trim();
        var obj = {};
        var header = attribute.match(/^(color|size)(\s)*=/);
        var tagName;
        var nextSpace;
        var eventObj;
        var eventHanlderString;
        if (header) {
          tagName = header[0];
          attribute = attribute.substring(tagName.length).trim();
          if ("" === attribute) return obj;
          nextSpace = attribute.indexOf(" ");
          switch (tagName[0]) {
           case "c":
            obj.color = nextSpace > -1 ? attribute.substring(0, nextSpace).trim() : attribute;
            break;

           case "s":
            obj.size = parseInt(attribute);
          }
          if (nextSpace > -1) {
            eventHanlderString = attribute.substring(nextSpace + 1).trim();
            eventObj = this._processEventHandler(eventHanlderString);
            obj.event = eventObj;
          }
          return obj;
        }
        header = attribute.match(/^(br(\s)*\/)/);
        if (header && header[0].length > 0) {
          tagName = header[0].trim();
          if (tagName.startsWith("br") && "/" === tagName[tagName.length - 1]) {
            obj.isNewLine = true;
            this._resultObjectArray.push({
              text: "",
              style: {
                newline: true
              }
            });
            return obj;
          }
        }
        header = attribute.match(/^(img(\s)*src(\s)*=[^>]+\/)/);
        if (header && header[0].length > 0) {
          tagName = header[0].trim();
          if (tagName.startsWith("img") && "/" === tagName[tagName.length - 1]) {
            header = attribute.match(imageAttrReg);
            var tagValue;
            var remainingArgument;
            var isValidImageTag = false;
            while (header) {
              attribute = attribute.substring(attribute.indexOf(header[0]));
              tagName = attribute.substr(0, header[0].length);
              remainingArgument = attribute.substring(tagName.length).trim();
              nextSpace = remainingArgument.indexOf(" ");
              tagValue = nextSpace > -1 ? remainingArgument.substr(0, nextSpace) : remainingArgument;
              tagName = tagName.replace(/[^a-zA-Z]/g, "").trim();
              tagName = tagName.toLocaleLowerCase();
              attribute = remainingArgument.substring(nextSpace).trim();
              if ("src" === tagName) {
                obj.isImage = true;
                tagValue.endsWith("/") && (tagValue = tagValue.substring(0, tagValue.length - 1));
                if (0 === tagValue.indexOf("'")) {
                  isValidImageTag = true;
                  tagValue = tagValue.substring(1, tagValue.length - 1);
                } else if (0 === tagValue.indexOf('"')) {
                  isValidImageTag = true;
                  tagValue = tagValue.substring(1, tagValue.length - 1);
                }
                obj.src = tagValue;
              } else "height" === tagName ? obj.imageHeight = parseInt(tagValue) : "width" === tagName ? obj.imageWidth = parseInt(tagValue) : "click" === tagName ? obj.event = this._processEventHandler(tagName + "=" + tagValue) : "scale" === tagName ? obj.scale = parseFloat(tagValue) : "anchorY" !== tagName && "anchory" !== tagName || (obj.anchorY = parseFloat(tagValue));
              obj.event && "param" === tagName && (obj.event.param = tagValue.replace(/^\"|\"$/g, ""));
              header = attribute.match(imageAttrReg);
            }
            isValidImageTag && obj.isImage && this._resultObjectArray.push({
              text: "",
              style: obj
            });
            return {};
          }
        }
        header = attribute.match(/^(outline(\s)*[^>]*)/);
        if (header) {
          attribute = header[0].substring("outline".length).trim();
          var defaultOutlineObject = {
            color: "#ffffff",
            width: 1
          };
          if (attribute) {
            var outlineAttrReg = /(\s)*color(\s)*=|(\s)*width(\s)*=|(\s)*click(\s)*=|(\s)*param(\s)*=/;
            header = attribute.match(outlineAttrReg);
            var tagValue;
            while (header) {
              attribute = attribute.substring(attribute.indexOf(header[0]));
              tagName = attribute.substr(0, header[0].length);
              remainingArgument = attribute.substring(tagName.length).trim();
              nextSpace = remainingArgument.indexOf(" ");
              tagValue = nextSpace > -1 ? remainingArgument.substr(0, nextSpace) : remainingArgument;
              tagName = tagName.replace(/[^a-zA-Z]/g, "").trim();
              tagName = tagName.toLocaleLowerCase();
              attribute = remainingArgument.substring(nextSpace).trim();
              "click" === tagName ? obj.event = this._processEventHandler(tagName + "=" + tagValue) : "color" === tagName ? defaultOutlineObject.color = tagValue : "width" === tagName && (defaultOutlineObject.width = parseInt(tagValue));
              obj.event && "param" === tagName && (obj.event.param = tagValue.replace(/^\"|\"$/g, ""));
              header = attribute.match(outlineAttrReg);
            }
          }
          obj.outline = defaultOutlineObject;
        }
        header = attribute.match(/^(on|u|b|i)(\s)*/);
        if (header && header[0].length > 0) {
          tagName = header[0];
          attribute = attribute.substring(tagName.length).trim();
          switch (tagName[0]) {
           case "u":
            obj.underline = true;
            break;

           case "i":
            obj.italic = true;
            break;

           case "b":
            obj.bold = true;
          }
          if ("" === attribute) return obj;
          eventObj = this._processEventHandler(attribute);
          obj.event = eventObj;
        }
        return obj;
      },
      _processEventHandler: function _processEventHandler(eventString) {
        var index = 0;
        var obj = {};
        var eventNames = eventString.match(eventRegx);
        var isValidTag = false;
        while (eventNames) {
          var eventName = eventNames[0];
          var eventValue = "";
          isValidTag = false;
          eventString = eventString.substring(eventName.length).trim();
          if ('"' === eventString.charAt(0)) {
            index = eventString.indexOf('"', 1);
            if (index > -1) {
              eventValue = eventString.substring(1, index).trim();
              isValidTag = true;
            }
            index++;
          } else if ("'" === eventString.charAt(0)) {
            index = eventString.indexOf("'", 1);
            if (index > -1) {
              eventValue = eventString.substring(1, index).trim();
              isValidTag = true;
            }
            index++;
          } else {
            var match = eventString.match(/(\S)+/);
            eventValue = match ? match[0] : "";
            index = eventValue.length;
          }
          if (isValidTag) {
            eventName = eventName.substring(0, eventName.length - 1).trim();
            obj[eventName] = eventValue;
          }
          eventString = eventString.substring(index).trim();
          eventNames = eventString.match(eventRegx);
        }
        return obj;
      },
      _addToStack: function _addToStack(attribute) {
        var obj = this._attributeToObject(attribute);
        if (0 === this._stack.length) this._stack.push(obj); else {
          if (obj.isNewLine || obj.isImage) return;
          var previousTagObj = this._stack[this._stack.length - 1];
          for (var key in previousTagObj) obj[key] || (obj[key] = previousTagObj[key]);
          this._stack.push(obj);
        }
      },
      _processResult: function _processResult(value) {
        if ("" === value) return;
        value = this._escapeSpecialSymbol(value);
        this._stack.length > 0 ? this._resultObjectArray.push({
          text: value,
          style: this._stack[this._stack.length - 1]
        }) : this._resultObjectArray.push({
          text: value
        });
      },
      _escapeSpecialSymbol: function _escapeSpecialSymbol(str) {
        for (var i = 0; i < this._specialSymbolArray.length; ++i) {
          var key = this._specialSymbolArray[i][0];
          var value = this._specialSymbolArray[i][1];
          str = str.replace(key, value);
        }
        return str;
      }
    };
    false;
    module.exports = CustomHtmlTextParser;
    cc._RF.pop();
  }, {} ],
  CustomRichText: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "64295hM9JRNIIiIlpuaJYhj", "CustomRichText");
    "use strict";
    var RichTextChildImageName = "RICHTEXT_Image_CHILD";
    var CustomHTMLTextParser = require("CustomHTMLTextParser");
    cc.RichText.prototype._addRichTextImageElement = function(richTextElement) {
      var spriteFrameName = richTextElement.style.src;
      var spriteFrame = this.imageAtlas.getSpriteFrame(spriteFrameName);
      var anchorY = richTextElement.style.anchorY || 0;
      if (spriteFrame) {
        var spriteNode = new cc.PrivateNode(RichTextChildImageName);
        var spriteComponent = spriteNode.addComponent(cc.Sprite);
        spriteNode.setAnchorPoint(0, anchorY);
        spriteComponent.type = cc.Sprite.Type.SLICED;
        spriteComponent.sizeMode = cc.Sprite.SizeMode.CUSTOM;
        this.node.addChild(spriteNode);
        this._labelSegments.push(spriteNode);
        var spriteRect = spriteFrame.getRect();
        var scaleFactor = 1;
        var spriteWidth = spriteRect.width;
        var spriteHeight = spriteRect.height;
        var expectWidth = richTextElement.style.imageWidth;
        var expectHeight = richTextElement.style.imageHeight;
        if (richTextElement.style.scale) {
          scaleFactor = richTextElement.style.scale;
          spriteWidth *= scaleFactor;
          spriteHeight *= scaleFactor;
        } else if (expectHeight > 0 && expectHeight < this.lineHeight) {
          scaleFactor = expectHeight / spriteHeight;
          spriteWidth *= scaleFactor;
          spriteHeight *= scaleFactor;
        } else {
          scaleFactor = this.lineHeight / spriteHeight;
          spriteWidth *= scaleFactor;
          spriteHeight *= scaleFactor;
        }
        expectWidth > 0 && (spriteWidth = expectWidth);
        if (this.maxWidth > 0) {
          this._lineOffsetX + spriteWidth > this.maxWidth && this._updateLineInfo();
          this._lineOffsetX += spriteWidth;
        } else {
          this._lineOffsetX += spriteWidth;
          this._lineOffsetX > this._labelWidth && (this._labelWidth = this._lineOffsetX);
        }
        spriteComponent.spriteFrame = spriteFrame;
        spriteNode.setContentSize(spriteWidth, spriteHeight);
        spriteNode._lineCount = this._lineCount;
        if (richTextElement.style.event) {
          richTextElement.style.event.click && (spriteNode._clickHandler = richTextElement.style.event.click);
          richTextElement.style.event.param ? spriteNode._clickParam = richTextElement.style.event.param : spriteNode._clickParam = "";
        } else spriteNode._clickHandler = null;
      } else cc.warnID(4400);
    };
    cc.RichText.prototype._updateRichText = function() {
      if (!this.enabled) return;
      var _customHTMLTextParser = new CustomHTMLTextParser();
      var newTextArray = _customHTMLTextParser.parse(this.string);
      if (!this._needsUpdateTextLayout(newTextArray)) {
        this._textArray = newTextArray;
        this._updateLabelSegmentTextAttributes();
        return;
      }
      this._textArray = newTextArray;
      this._resetState();
      var lastEmptyLine = false;
      var label = void 0;
      var labelSize = void 0;
      for (var i = 0; i < this._textArray.length; ++i) {
        var richTextElement = this._textArray[i];
        var text = richTextElement.text;
        if ("" === text) {
          if (richTextElement.style && richTextElement.style.newline) {
            this._updateLineInfo();
            continue;
          }
          if (richTextElement.style && richTextElement.style.isImage && this.imageAtlas) {
            this._addRichTextImageElement(richTextElement);
            continue;
          }
        }
        var multilineTexts = text.split("\n");
        for (var j = 0; j < multilineTexts.length; ++j) {
          var labelString = multilineTexts[j];
          if ("" === labelString) {
            if (this._isLastComponentCR(text) && j === multilineTexts.length - 1) continue;
            this._updateLineInfo();
            lastEmptyLine = true;
            continue;
          }
          lastEmptyLine = false;
          if (this.maxWidth > 0) {
            var labelWidth = this._measureText(i, labelString);
            this._updateRichTextWithMaxWidth(labelString, labelWidth, i);
            multilineTexts.length > 1 && j < multilineTexts.length - 1 && this._updateLineInfo();
          } else {
            label = this._addLabelSegment(labelString, i);
            labelSize = label.getContentSize();
            this._lineOffsetX += labelSize.width;
            this._lineOffsetX > this._labelWidth && (this._labelWidth = this._lineOffsetX);
            multilineTexts.length > 1 && j < multilineTexts.length - 1 && this._updateLineInfo();
          }
        }
      }
      lastEmptyLine || this._linesWidth.push(this._lineOffsetX);
      this.maxWidth > 0 && (this._labelWidth = this.maxWidth);
      this._labelHeight = (this._lineCount + .26) * this.lineHeight;
      this.node.setContentSize(this._labelWidth, this._labelHeight);
      this._updateRichTextPosition();
      this._layoutDirty = false;
    };
    cc._RF.pop();
  }, {
    CustomHTMLTextParser: "CustomHTMLTextParser"
  } ],
  DimFocusControl: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bd00c/cO8RMWpUDBzn1+gCQ", "DimFocusControl");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        overlay: cc.Node,
        overlayOpacity: 150,
        game: cc.Node,
        gameOpacity: 150
      },
      onLoad: function onLoad() {
        this.node.dimControl = this;
        this.overlay.opacity = this.overlayOpacity;
      },
      dim: function dim() {
        this.node.parent.emit("PLT_BLUR");
        this.overlay.active = false;
        this.game.opacity = this.gameOpacity;
        if (this.game.soundPlayer) {
          this.game.soundPlayer.stopAllAudio();
          this.game.soundPlayer.setEffectEnable(false);
        }
      },
      focus: function focus() {
        this.node.parent.emit("PLT_FOCUS");
        this.overlay.active = true;
        this.game.opacity = 255;
        this.game.soundPlayer && this.game.soundPlayer.setEffectEnable(true);
      }
    });
    cc._RF.pop();
  }, {} ],
  DisableMultiTouchButtons: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2e9d1lRS8pHyK4LEAsr6inp", "DisableMultiTouchButtons");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        buttons: [ cc.Button ],
        delayToEnable: .5
      },
      onLoad: function onLoad() {
        for (var i = 0; i < this.buttons.length; i++) {
          var button = this.buttons[i];
          if (button) {
            button.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStarted, this);
            button.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnded, this);
            button.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMoved, this);
            button.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCanceled, this);
          }
        }
      },
      onTouchStarted: function onTouchStarted(event) {
        var target = event.target;
        if (target) {
          var btn = target.getComponent(cc.Button);
          btn && btn.interactable && !this.node.gSlotDataStore.isAutoSpin && false !== this.node.gSlotDataStore.playSession.isFinished && this.disableOtherButtons(target);
        }
      },
      onTouchEnded: function onTouchEnded(event) {
        var target = event.target;
        if (target) {
          var btn = target.getComponent(cc.Button);
          btn && btn.interactable && !this.node.gSlotDataStore.isAutoSpin && false !== this.node.gSlotDataStore.playSession.isFinished && this.enableOtherButtons(target, this.delayToEnable);
        }
      },
      onTouchMoved: function onTouchMoved() {},
      onTouchCanceled: function onTouchCanceled(event) {
        var target = event.target;
        if (target) {
          var btn = target.getComponent(cc.Button);
          btn && btn.interactable && !this.node.gSlotDataStore.isAutoSpin && false !== this.node.gSlotDataStore.playSession.isFinished && this.enableOtherButtons(target);
        }
      },
      disableOtherButtons: function disableOtherButtons(target) {
        for (var i = 0; i < this.buttons.length; i++) {
          var button = this.buttons[i];
          button && button.node !== target && (button.interactable = false);
        }
      },
      enableOtherButtons: function enableOtherButtons(target) {
        var _this = this;
        var delay = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        this.scheduleOnce(function() {
          for (var i = 0; i < _this.buttons.length; i++) {
            var button = _this.buttons[i];
            button && button.node !== target && (button.interactable = true);
          }
        }, delay);
      }
    });
    cc._RF.pop();
  }, {} ],
  DissolveBlurControl: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0a301tm62pPgpk26ITdKxKe", "DissolveBlurControl");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        normalTransitionDuration: 1,
        fastTransitionDuration: .3,
        maxStrength: 1,
        resolutionPropName: "iResolution",
        thresholdPropName: "threshold",
        strengthPropName: "strength",
        fadePropName: "fadeType",
        lerpOnStart: true,
        isLoop: false,
        customMaterial: {
          type: cc.Material,
          default: null
        }
      },
      onLoad: function onLoad() {
        this._sprite = this.node.getComponent(cc.Sprite);
        this._mainMaterial = this._sprite.getMaterial(0);
        this._transitionFactor = 0;
        this._isLerping = false;
      },
      start: function start() {
        if (this._mainMaterial && this._sprite) {
          var iResolution = new cc.Vec3(this._sprite.node.width, this._sprite.node.height, 0);
          this._mainMaterial.setProperty(this.resolutionPropName, iResolution);
        }
        this.lerpOnStart && this.lerpTransition(true, 0);
        this._timer = 0;
        this.transitionDuration = this.normalTransitionDuration;
      },
      onEnable: function onEnable() {
        this._transitionFactor = 0;
        this._blurFactor = 0;
        this.fadeType = 0;
        this._mainMaterial = this._sprite.getMaterial(0);
        this._mainMaterial.setProperty(this.thresholdPropName, this.fadeType > 0 ? this._transitionFactor : 1 - this._transitionFactor);
        this._mainMaterial.setProperty(this.strengthPropName, this._blurFactor);
      },
      startFadeIn: function startFadeIn() {
        var isTurbo = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        this.transitionDuration = isTurbo ? this.fastTransitionDuration : this.normalTransitionDuration;
        this.lerpTransition(true, 1);
      },
      startFadeOut: function startFadeOut() {
        var isTurbo = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        this.transitionDuration = isTurbo ? this.fastTransitionDuration : this.normalTransitionDuration;
        this.lerpTransition(true, 0);
      },
      update: function update(dt) {
        if (this._isLerping) {
          this._timer += dt;
          this._transitionFactor = this.cubicEasingIn(this._timer, 0, 1, this.transitionDuration);
          var blurFactor = this.cubicEasingIn(this._timer, 0, this.maxStrength, this.transitionDuration);
          this.fadeType > 0 ? this._blurFactor = this.maxStrength - blurFactor : this._blurFactor = blurFactor;
          if (this._timer > this.transitionDuration) {
            if (this.isLoop) {
              this._transitionFactor = 0;
              this._blurFactor = 0;
            } else {
              this._isLerping = false;
              this.node.emit("DISSOLVE_BLUR_COMPLETE");
            }
            this._timer = 0;
          }
          this._mainMaterial = this._sprite.getMaterial(0);
          this._mainMaterial.setProperty(this.thresholdPropName, this.fadeType > 0 ? this._transitionFactor : 1 - this._transitionFactor);
          this._mainMaterial.setProperty(this.strengthPropName, this._blurFactor);
        }
      },
      lerpTransition: function lerpTransition(isLerping, fadeType) {
        this.isLerping && this._sprite.setMaterial(0, this.customMaterial);
        this.fadeType = fadeType;
        this._isLerping = isLerping;
        this._transitionFactor = 0;
        this._blurFactor = this.fadeType > 0 ? this.maxStrength : 0;
        this._timer = 0;
        this._mainMaterial = this._sprite.getMaterial(0);
        this._mainMaterial.setProperty(this.thresholdPropName, this.fadeType > 0 ? this._transitionFactor : 1 - this._transitionFactor);
        this._mainMaterial.setProperty(this.strengthPropName, this._blurFactor);
        this._mainMaterial.setProperty(this.fadePropName, fadeType);
      },
      cubicEasingIn: function cubicEasingIn(time, beginVal, changeVal, duration) {
        time /= duration;
        return changeVal * time * time * time + beginVal;
      }
    });
    cc._RF.pop();
  }, {} ],
  DissolveControl: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ff485wp2/1AlJ0MrrOomzob", "DissolveControl");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        normalTransitionDuration: 1,
        fastTransitionDuration: .3,
        lerpOnStart: true,
        isLoop: false,
        propName: "threshold",
        useLinear: false,
        useCubicEaseIn: false,
        useCubicEaseOut: false,
        customMaterial: {
          type: cc.Material,
          default: null
        }
      },
      onLoad: function onLoad() {
        this._sprite = this.node.getComponent(cc.Sprite);
        this._mainMaterial = this._sprite.getMaterial(0);
        this._transitionFactor = 0;
        this._isLerping = false;
      },
      start: function start() {
        this.lerpOnStart && this.lerpTransition(true);
        this._timer = 0;
        this.transitionDuration = this.normalTransitionDuration;
      },
      onEnable: function onEnable() {
        this._transitionFactor = 0;
        this._mainMaterial = this._sprite.getMaterial(0);
        this._mainMaterial.setProperty(this.propName, 1 - this._transitionFactor);
      },
      update: function update(dt) {
        if (this._isLerping) {
          if (this.useLinear) this._transitionFactor += dt * (1 / this.transitionDuration); else if (this.useCubicEaseIn) {
            this._timer += dt;
            this._transitionFactor = this.cubicEasingIn(this._timer, 0, 1, this.transitionDuration);
          } else {
            if (!this.useCubicEaseOut) {
              this._isLerping = false;
              return;
            }
            this._timer += dt;
            this._transitionFactor = this.cubicEasingOut(this._timer, 0, 1, this.transitionDuration);
          }
          if (this._transitionFactor > 1) {
            if (this.isLoop) this._transitionFactor = 0; else {
              this._isLerping = false;
              this.node.emit("TRANSITION_COMPLETE");
            }
            this._timer = 0;
          }
          this._mainMaterial = this._sprite.getMaterial(0);
          this._mainMaterial.setProperty(this.propName, 1 - this._transitionFactor);
        }
      },
      startFadeIn: function startFadeIn() {
        var isTurbo = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        this.transitionDuration = isTurbo ? this.fastTransitionDuration : this.normalTransitionDuration;
        this.lerpTransition(true);
      },
      startFadeOut: function startFadeOut() {
        var isTurbo = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        this.transitionDuration = isTurbo ? this.fastTransitionDuration : this.normalTransitionDuration;
        this.lerpTransition(false);
      },
      lerpTransition: function lerpTransition(isLerping) {
        isLerping && this._sprite.setMaterial(0, this.customMaterial);
        this._isLerping = isLerping;
        this._transitionFactor = 0;
        this._timer = 0;
        this._mainMaterial = this._sprite.getMaterial(0);
        this._mainMaterial.setProperty(this.propName, 1 - this._transitionFactor);
      },
      cubicEasingIn: function cubicEasingIn(time, beginVal, changeVal, duration) {
        time /= duration;
        return changeVal * time * time * time + beginVal;
      },
      cubicEasingOut: function cubicEasingOut(time, beginVal, changeVal, duration) {
        time /= duration;
        time--;
        return changeVal * (time * time * time + 1) + beginVal;
      }
    });
    cc._RF.pop();
  }, {} ],
  EventListenerManager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "61bf0JpkhBPlqNF5Dfsi4Dv", "EventListenerManager");
    "use strict";
    var EventListenerManager = function() {
      var instanceObject = {};
      function createInstance(serviceId) {
        var _serviceId = serviceId;
        var _listeners = new cc.EventTarget();
        return {
          on: function on(type, callback, target) {
            _listeners || (_listeners = new cc.EventTarget());
            return _listeners.on(type, callback, target);
          },
          once: function once(type, callback, target) {
            _listeners && _listeners.once(type, callback, target);
          },
          off: function off(type, callback, target) {
            _listeners && _listeners.off(type, callback, target);
          },
          emit: function emit(type, arg1, arg2, arg3, arg4, arg5) {
            _listeners && _listeners.emit(type, arg1, arg2, arg3, arg4, arg5);
          },
          dispatchEvent: function dispatchEvent(event) {
            _listeners && _listeners.dispatchEvent(event);
          },
          targetOff: function targetOff(target) {
            _listeners && _listeners.targetOff(target);
          },
          getServiceId: function getServiceId() {
            return _serviceId;
          }
        };
      }
      function hasInstance(serviceId) {
        return instanceObject[serviceId];
      }
      return {
        getInstance: function getInstance(serviceId) {
          var _instance = hasInstance(serviceId);
          if (!_instance) {
            _instance = new createInstance(serviceId);
            delete _instance.constructor;
            instanceObject[serviceId] = _instance;
          }
          return _instance;
        }
      };
    }();
    module.exports = EventListenerManager;
    cc._RF.pop();
  }, {} ],
  FluxaySuper: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "aeb7413HydH26gWvypLn0mV", "FluxaySuper");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var FluxaySuper = function(_super) {
      __extends(FluxaySuper, _super);
      function FluxaySuper() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.sprite = null;
        return _this;
      }
      FluxaySuper.prototype.start = function() {
        this.material = this.sprite.getMaterial(0);
        this._start = Date.now();
      };
      FluxaySuper.prototype.update = function(dt) {
        var now = Date.now();
        var time = (now - this._start) / 1e3;
        this.material.setProperty("time", time);
      };
      __decorate([ property(cc.Sprite) ], FluxaySuper.prototype, "sprite", void 0);
      FluxaySuper = __decorate([ ccclass ], FluxaySuper);
      return FluxaySuper;
    }(cc.Component);
    exports.default = FluxaySuper;
    cc._RF.pop();
  }, {} ],
  Gradient: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "882dcfHHgFE/o/tFokI6snn", "Gradient");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var Gradient = function(_super) {
      __extends(Gradient, _super);
      function Gradient() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.label = null;
        _this.time = 0;
        return _this;
      }
      Gradient.prototype.start = function() {
        this.material = this.label.getMaterial(0);
        this.schedule(this.upd, 0, cc.macro.REPEAT_FOREVER, 1);
      };
      Gradient.prototype.upd = function() {
        this.time += .005;
        this.material.effect.setProperty("time", this.time);
        this.time > 1.2 && this.unschedule(this.upd);
      };
      __decorate([ property(cc.Sprite) ], Gradient.prototype, "label", void 0);
      Gradient = __decorate([ ccclass ], Gradient);
      return Gradient;
    }(cc.Component);
    exports.default = Gradient;
    cc._RF.pop();
  }, {} ],
  InfoText: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fff20hXRshGEI8fST8pKZwE", "InfoText");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        textData: {
          type: cc.String,
          default: []
        }
      }
    });
    cc._RF.pop();
  }, {} ],
  InitSocketComponent: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d1542xp7zJKzpIWZ6u6AP/w", "InitSocketComponent");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        token: {
          default: "",
          visible: false
        }
      },
      init: function init(token) {
        var globalNetwork = require("globalNetwork");
        globalNetwork.init(token);
      }
    });
    cc._RF.pop();
  }, {
    globalNetwork: "globalNetwork"
  } ],
  JackpotCellHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9a895NS7GFEs40AQMK2na45", "JackpotCellHistory");
    "use strict";
    var _require = require("CustomDataType"), jackpotStatic = _require.jackpotStatic;
    cc.Class({
      extends: require("BaseCellHistory"),
      properties: {
        jackpotType: cc.Node,
        jackpotList: {
          default: [],
          type: [ jackpotStatic ]
        },
        height: 50
      },
      onLoad: function onLoad() {
        this._super();
        this.node.height = this.height;
      },
      updateData: function updateData(data) {
        this._super(data);
        if (this.jackpotType) {
          var imageJP = this.findJackpotStaticData(data.jpType);
          imageJP && (this.jackpotType.getComponent(cc.Sprite).spriteFrame = imageJP.static);
        }
      },
      findJackpotStaticData: function findJackpotStaticData(jackpotType) {
        for (var i = 0; i < this.jackpotList.length; i++) if (this.jackpotList[i].name == jackpotType) return this.jackpotList[i];
        return null;
      }
    });
    cc._RF.pop();
  }, {
    BaseCellHistory: "BaseCellHistory",
    CustomDataType: "CustomDataType"
  } ],
  JackpotHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a0a8dgrEbFI5pG+aixG8SAj", "JackpotHistory");
    "use strict";
    cc.Class({
      extends: require("BaseHistory"),
      properties: {
        noJackpotText: cc.Node,
        isMiniGame: false,
        initialized: false,
        jpList: "GRAND-MAJOR",
        pageIndex: cc.Node
      },
      onLoad: function onLoad() {
        this.initBase();
      },
      start: function start() {
        this.localizeText();
      },
      localizeText: function localizeText() {
        if (this.node.config.MESSAGE_DIALOG) {
          this.node.config.MESSAGE_DIALOG.NO_JACKPOT_HISTORY && (this.noJackpotText.getComponentInChildren(cc.Label).string = this.node.config.MESSAGE_DIALOG.NO_JACKPOT_HISTORY);
          if (this.node.config.MESSAGE_DIALOG.ERROR_CONNECTION_HISTORY && this.errorMessage) {
            var label = this.errorMessage.getComponentInChildren(cc.Label) || this.errorMessage.getComponent(cc.Label);
            label && (label.string = this.node.config.MESSAGE_DIALOG.ERROR_CONNECTION_HISTORY);
          }
          this.pageIndex && this.node.config.MESSAGE_DIALOG.HISTORY_PAGE && (this.pageIndex.getComponentInChildren(cc.Label).string = this.node.config.MESSAGE_DIALOG.HISTORY_PAGE);
        }
      },
      openPanel: function openPanel() {
        this.table.emit("CLEAR_DATA");
        this.serverMessage && (this.serverMessage.active = false);
        this._super();
        this.pageIndex && (this.pageIndex.active = false);
      },
      initBase: function initBase() {
        if (this.initialized) return;
        this._super();
        this.url = "jackpothistory/slot";
        this.noJackpotText.active = false;
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC = loadConfigAsync.getConfig(), LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;
        if (this.node.config) {
          var betIds = this.node.config.BET_IDS;
          LOGIN_IFRAME && (betIds = this.node.config.BET_IDS_IFRAME);
          this.node.config.JP_LIST_HISTORY && (this.jpList = this.node.config.JP_LIST_HISTORY);
          this.init(this.node.config.GAME_ID, null, betIds, this.jpList);
        }
        this.initialized = true;
      },
      init: function init(gameId, soundPlayer, betIds) {
        var jpList = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "GRAND-MAJOR";
        var jpPrefix = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "kts_";
        var url = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "jackpothistory/slot";
        this.gameId = gameId;
        this.jpList = jpList;
        this.betIds = betIds;
        this.jpPrefix = jpPrefix;
        this.isMiniGame && (this.jpPrefix = "ktmn_");
        this.url = url;
        this.node.soundPlayer || null == soundPlayer || (this.node.soundPlayer = soundPlayer);
        soundPlayer && (this.playSoundClick = soundPlayer.playClickButton.bind(soundPlayer));
      },
      initObj: function initObj() {
        this.openPanel();
      },
      clickFromMain: function clickFromMain() {
        if (cc.sys.os != cc.sys.OS_IOS || !cc.sys.isBrowser) {
          this.node.emit("SHOW_PANEL");
          this.openPanel();
        }
      },
      playLoading: function playLoading() {
        this._super();
        this.serverMessage.active = false;
        this.noJackpotText.active = false;
      },
      onRequestResponse: function onRequestResponse(res) {
        this._super(res);
        if (res.error && res.error.msg) {
          this.table.emit("CLEAR_DATA");
          this.serverMessage.active = true;
          this.serverMessage.getComponentInChildren(cc.Label).string = res.error.msg;
          this.pageIndex && (this.pageIndex.active = false);
        } else if (res.error || Object.keys(res).length <= 0 || !res.data || res.data.length <= 0) {
          this.noJackpotText.active = true;
          this.pageIndex && (this.pageIndex.active = false);
        } else {
          this.noJackpotText.active = false;
          this.pageIndex && (this.pageIndex.active = true);
        }
      }
    });
    cc._RF.pop();
  }, {
    BaseHistory: "BaseHistory",
    loadConfigAsync: "loadConfigAsync"
  } ],
  JackpotTableHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "044d8uUBGBPgISbHcpxn+qE", "JackpotTableHistory");
    "use strict";
    cc.Class({
      extends: require("BaseTableHistory")
    });
    cc._RF.pop();
  }, {
    BaseTableHistory: "BaseTableHistory"
  } ],
  JoinGame: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "397d9XD1IdDxpkN7GewJmNU", "JoinGame");
    "use strict";
    cc.Class({
      extends: cc.Component
    });
    cc._RF.pop();
  }, {} ],
  MakePersistent: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "826fdH5qMJAv5mlM0oCW7VW", "MakePersistent");
    "use strict";
    cc.Class({
      extends: cc.Component,
      onLoad: function onLoad() {
        cc.game.addPersistRootNode(this.node);
      }
    });
    cc._RF.pop();
  }, {} ],
  MobileDetectLoad: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2a8davipBxHUaBCZweZyXd4", "MobileDetectLoad");
    "use strict";
    var MobileDetect = require("mobile-detect");
    cc.Class({
      extends: cc.Component,
      properties: {
        sceneName: "",
        sceneNamePortrait: ""
      },
      onLoad: function onLoad() {
        if ("" === this.sceneName) return;
        var isPhone = false;
        if ((cc.sys.platform == cc.sys.DESKTOP_BROWSER || cc.sys.platform == cc.sys.MOBILE_BROWSER) && window) {
          var md = new MobileDetect(window.navigator.userAgent);
          isPhone = md.phone();
          cc.log(md);
        }
        var sceneGame = this.sceneName;
        cc.log(cc.sys.isMobile, isPhone);
        cc.sys.isMobile && isPhone && "" != this.sceneNamePortrait && (sceneGame = this.sceneNamePortrait);
        cc.director.loadScene(sceneGame);
      }
    });
    cc._RF.pop();
  }, {
    "mobile-detect": 158
  } ],
  MoneyDataStore: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bc533ZVkZRHaZlRI7Jc+nqs", "MoneyDataStore");
    "use strict";
    var _require = require("utils"), convertObjectToArray = _require.convertObjectToArray, formatMoney = _require.formatMoney, subtractDecimals = _require.subtractDecimals, getUtilConfig = _require.getUtilConfig, floatUtils = _require.floatUtils;
    cc.Class({
      createDefaultBet: function createDefaultBet(slotConfig, dynamicBet) {
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC = loadConfigAsync.getConfig(), LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;
        var STEPS = slotConfig.STEPS, DEFAULT_BET = slotConfig.DEFAULT_BET, EXTRA_BET_STEPS = slotConfig.EXTRA_BET_STEPS, DEFAULT_EXTRA_BET = slotConfig.DEFAULT_EXTRA_BET, DEFAULT_BET_IFRAME = slotConfig.DEFAULT_BET_IFRAME, STEPS_IFRAME = slotConfig.STEPS_IFRAME;
        var dataDefault = {};
        dataDefault = dynamicBet ? {
          currentBetData: convertObjectToArray(dynamicBet)[0],
          steps: dynamicBet,
          currentExtraBetData: DEFAULT_EXTRA_BET || 0,
          extraSteps: EXTRA_BET_STEPS
        } : LOGIN_IFRAME && DEFAULT_BET_IFRAME && STEPS_IFRAME ? {
          currentBetData: DEFAULT_BET_IFRAME,
          steps: STEPS_IFRAME,
          currentExtraBetData: DEFAULT_EXTRA_BET || 0,
          extraSteps: EXTRA_BET_STEPS
        } : {
          currentBetData: DEFAULT_BET,
          steps: STEPS,
          currentExtraBetData: DEFAULT_EXTRA_BET || 0,
          extraSteps: EXTRA_BET_STEPS
        };
        this.data = Object.assign({}, dataDefault);
        return this.data;
      },
      updateCurrentBet: function updateCurrentBet(value) {
        this.data.currentBetData = value;
      },
      updateCurrentExtraBet: function updateCurrentExtraBet(value) {
        this.data.currentExtraBetData = value;
      },
      updateWallet: function updateWallet(value) {
        if (!floatUtils.isEqual(value, this.data.wallet)) {
          var diff = floatUtils.minus(value, this.data.wallet);
          var sign = diff > 0 ? "+" : "";
          cc.log("%cWallet change: ", "color:red;", this.data.wallet, sign, diff, "=", value);
        }
        this.data.wallet = value;
      },
      calculateWalletAfterClickSpin: function calculateWalletAfterClickSpin(totalBetData) {
        var _data = this.data, wallet = _data.wallet, currentBetData = _data.currentBetData;
        return floatUtils.minus(wallet, totalBetData || currentBetData);
      },
      updateWalletAfterClickSpin: function updateWalletAfterClickSpin(totalBetData) {
        var _data2 = this.data, wallet = _data2.wallet, currentBetData = _data2.currentBetData;
        if (wallet >= currentBetData) {
          this.data.wallet = floatUtils.minus(wallet, totalBetData || currentBetData);
          cc.log("%cWallet change on Spin:", "color:red;", wallet, " - " + currentBetData + " =", this.data.wallet);
          return this.data.wallet;
        }
        return wallet;
      }
    });
    cc._RF.pop();
  }, {
    loadConfigAsync: "loadConfigAsync",
    utils: "utils"
  } ],
  MonoUpdate: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c32e7uZEQhGAZOLhOgKWISA", "MonoUpdate");
    "use strict";
    var MD5 = require("jsb_runtime_md5");
    var HOTUPDATE_STATUS = {
      GET_CONFIG: "GET_CONFIG",
      CHECK_UPDATE: "CHECK_UPDATE",
      READY_TO_UPDATE: "READY_TO_UPDATE",
      UPDATING: "UPDATING",
      UPDATE_FAILED: "UPDATE_FAILED",
      ALREADY_UP_TO_DATE: "ALREADY_UP_TO_DATE",
      UPDATE_SUCCESS: "UPDATE_SUCCESS"
    };
    var NETWORK_STATUS = {
      CONNECTED: "CONNECTED",
      DISCONNECTED: "DISCONNECTED"
    };
    var LOCAL_KEY = "HOT_UPDATE_URL";
    cc.Class({
      extends: cc.Component,
      properties: {
        manifestUrl: {
          type: cc.Asset,
          default: null
        },
        panel: cc.Node,
        info: cc.Label,
        detail: cc.Label,
        network: cc.Label,
        byteProgress: cc.ProgressBar,
        byteLabel: cc.Label,
        btnRetry: cc.Node,
        btnQuit: cc.Node,
        loadSceneName: "",
        gameId: {
          default: "",
          serializable: true
        },
        _am: null,
        _storagePath: "",
        _oldV: "",
        _newV: "",
        _remoteURL: "",
        _localManifestPath: "",
        _localKey: ""
      },
      onLoad: function onLoad() {
        if (!cc.sys.isNative) return;
        this._retryInfo = {
          reConnectInterval: null,
          reconnectCount: 0,
          downloadFailedAssetsInterval: null,
          downloadFailedAssetsCount: 0,
          reconnectionDelay: 3e3,
          downloadFailedAssetsDelay: 3e3,
          maxOfCount: 3
        };
        this._localKey = LOCAL_KEY + this.gameId;
        this._storagePath = (jsb.fileUtils ? jsb.fileUtils.getWritablePath() : "/") + this.gameId;
        this.log("Storage path for remote asset : " + this._storagePath);
        this._localManifestPath = this.manifestUrl.nativeUrl;
        cc.loader.md5Pipe && (this._localManifestPath = cc.loader.md5Pipe.transformURL());
        this._am = new jsb.AssetsManager("", this._storagePath, this.versionCompareHandle.bind(this));
        this._am.setVerifyCallback(this._verifyFileHandle.bind(this));
        cc.sys.os === cc.sys.OS_ANDROID ? this._am.setMaxConcurrentTask(2) : this._am.setMaxConcurrentTask(6);
        this.reset();
        this.getConfig();
      },
      getConfig: function getConfig() {
        var _this = this;
        this.panel.active = false;
        this.updateState(HOTUPDATE_STATUS.GET_CONFIG);
        if (this.isConnected()) {
          this.updateNetworkState(NETWORK_STATUS.CONNECTED);
          if (cc.sys.getNetworkType() === cc.sys.NetworkType.WWAN) {
            this.network.string = "B\u1ea1n \u0111ang k\u1ebft n\u1ed1i d\u1eef li\xeau di \u0111\u1ed9ng";
            this.network.node.color = cc.Color.YELLOW;
            this.network.node.active = true;
          }
          var loadConfigAsync = require("loadConfigAsync");
          var CONFIG = loadConfigAsync.getConfig();
          var USER_TOKEN = CONFIG.USER_TOKEN, IS_FINISHED_REMOTE = CONFIG.IS_FINISHED_REMOTE, HOT_UPDATE_URL = CONFIG.HOT_UPDATE_URL;
          if (!IS_FINISHED_REMOTE) {
            setTimeout(function() {
              _this.getConfig();
            }, 100);
            return;
          }
          var gameToken = void 0;
          gameToken = this.getParamFlutter("getGameToken");
          cc.sys.localStorage.setItem(USER_TOKEN, gameToken);
          this._remoteURL = HOT_UPDATE_URL;
          this.checkModifyManifest();
        } else {
          this.updateNetworkState(NETWORK_STATUS.DISCONNECTED);
          this.reconnectNetwork(function() {
            _this.updateNetworkState(NETWORK_STATUS.CONNECTED);
            _this.getConfig();
          });
        }
      },
      checkModifyManifest: function checkModifyManifest() {
        var tempUpdateUrl = cc.sys.localStorage.getItem(this._localKey);
        if (!tempUpdateUrl) {
          var localManifest = jsb.fileUtils.getStringFromFile(this._localManifestPath);
          var manifestObject = JSON.parse(localManifest);
          cc.sys.localStorage.setItem(this._localKey, manifestObject.packageUrl);
        }
        tempUpdateUrl = cc.sys.localStorage.getItem(this._localKey);
        this._remoteURL && tempUpdateUrl !== this._remoteURL ? this.modifyAppLoadUrlForManifestFile() : this.checkUpdate();
      },
      modifyAppLoadUrlForManifestFile: function modifyAppLoadUrlForManifestFile() {
        try {
          var afterString = void 0, manifestObject = void 0;
          if (jsb.fileUtils.isFileExist(this._storagePath + "/project.manifest")) {
            var loadManifest = jsb.fileUtils.getStringFromFile(this._storagePath + "/project.manifest");
            manifestObject = JSON.parse(loadManifest);
          } else {
            jsb.fileUtils.isDirectoryExist(this._storagePath) || jsb.fileUtils.createDirectory(this._storagePath);
            var originManifest = jsb.fileUtils.getStringFromFile(this._localManifestPath);
            manifestObject = JSON.parse(originManifest);
          }
          manifestObject.packageUrl = this._remoteURL;
          manifestObject.remoteManifestUrl = manifestObject.packageUrl + this.gameId + "/project.manifest";
          manifestObject.remoteVersionUrl = manifestObject.packageUrl + this.gameId + "/version.manifest";
          afterString = JSON.stringify(manifestObject);
          var isWritten = jsb.fileUtils.writeStringToFile(afterString, this._storagePath + "/project.manifest");
          isWritten && cc.sys.localStorage.setItem(this._localKey, this._remoteURL);
          if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
            var manifest = new jsb.Manifest(afterString, this._storagePath);
            this._am.loadLocalManifest(manifest, this._storagePath);
            this.log("Successfully load remote manifest");
          }
          this.checkUpdate();
        } catch (error) {
          this.log("Error modify manifest!! See Error -> " + error);
        }
      },
      getParamFlutter: function getParamFlutter(param) {
        var value = "";
        cc.sys.os == cc.sys.OS_ANDROID ? value = jsb.reflection.callStaticMethod("com/base/getx/base_architecture/game/PlayGameActivity", param, "()Ljava/lang/String;") : cc.sys.os == cc.sys.OS_IOS && (value = jsb.reflection.callStaticMethod("AppController", param));
        return value;
      },
      formatBytes: function formatBytes(bytes) {
        return (bytes / 1048576).toFixed(2) + "MB";
      },
      checkUpdate: function checkUpdate() {
        this.log("checkUpdate");
        this._am || this.log("Asset manager not found!");
        if (this._am.getState() === jsb.AssetsManager.State.UNINITED) {
          this.log("Load local manifest");
          this._am.loadLocalManifest(this._localManifestPath);
        }
        if (!this._am.getLocalManifest() || !this._am.getLocalManifest().isLoaded()) {
          this.log("unable to get manifest");
          this.initLocalManifestFailed();
          return;
        }
        this._am.setEventCallback(this.checkCb.bind(this));
        this._am.checkUpdate();
        this.updateState(HOTUPDATE_STATUS.CHECK_UPDATE);
      },
      checkCb: function checkCb(event) {
        switch (event.getEventCode()) {
         case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
          this.getLocalManifestFailed();
          break;

         case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
         case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
          this.downloadManifestFailed();
          break;

         case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
          this.updateState(HOTUPDATE_STATUS.ALREADY_UP_TO_DATE);
          break;

         case jsb.EventAssetsManager.NEW_VERSION_FOUND:
          this.updateState(HOTUPDATE_STATUS.READY_TO_UPDATE);
          break;

         default:
          return;
        }
        this._am.setEventCallback(null);
      },
      hotUpdate: function hotUpdate() {
        if (this._am) {
          this._am.setEventCallback(this.updateCb.bind(this));
          this._am.update();
          this.updateState(HOTUPDATE_STATUS.UPDATING);
          this.network.string = "";
          this.network.node.active = false;
        }
      },
      updateState: function updateState(stateName) {
        var _this2 = this;
        this.log("Current state: " + stateName);
        this._state = stateName;
        this.btnRetry.active = false;
        this.btnQuit.active = false;
        switch (this._state) {
         case HOTUPDATE_STATUS.GET_CONFIG:
         case HOTUPDATE_STATUS.CHECK_UPDATE:
          this.info.string = "Ki\u1ec3m tra phi\xean b\u1ea3n";
          this.detail.string = "\n\u0110ang ki\u1ec3m tra phi\xean b\u1ea3n.";
          this.detail.node.active = true;
          break;

         case HOTUPDATE_STATUS.READY_TO_UPDATE:
          this.panel.active = true;
          var totalSize = this.calculateTotalSize();
          this.info.string = "C\xf3 phi\xean b\u1ea3n c\u1eadp nh\u1eadt m\u1edbi";
          this.byteProgress.progress = 0;
          var detailStr = "Phi\xean b\u1ea3n c\u0169: " + this._oldV + " | Phi\xean b\u1ea3n m\u1edbi: " + this._newV + "\nDung l\u01b0\u1ee3ng t\u1ea3i: " + totalSize;
          this.detail.string = detailStr;
          this.detail.node.active = true;
          this.scheduleOnce(this.hotUpdate, .5);
          break;

         case HOTUPDATE_STATUS.UPDATING:
          this.info.string = "\u0110ang c\u1eadp nh\u1eadt";
          this.detail.string = "\u0110ang t\u1ea3i b\u1ea3n c\u1eadp nh\u1eadt\nXin ch\u1edd trong gi\xe2y l\xe1t";
          this.detail.node.active = false;
          break;

         case HOTUPDATE_STATUS.UPDATE_FAILED:
          if (this.isConnected()) if (0 === this._retryInfo.downloadFailedAssetsCount) this.downloadFailedAssetsInterval(); else {
            this._retryInfo.downloadFailedAssetsCount++;
            if (this._retryInfo.downloadFailedAssetsCount > this._retryInfo.maxOfCount) {
              this.btnRetry.active = true;
              this.btnQuit.active = true;
            }
          } else {
            this.updateNetworkState(NETWORK_STATUS.DISCONNECTED);
            this.reconnectNetwork(function() {
              _this2.updateNetworkState(NETWORK_STATUS.CONNECTED);
              _this2.updateState(HOTUPDATE_STATUS.UPDATING);
              _this2._am.downloadFailedAssets();
              _this2.btnQuit.active = false;
            });
          }
          break;

         case HOTUPDATE_STATUS.ALREADY_UP_TO_DATE:
          this.onUpdateComplete();
          break;

         case HOTUPDATE_STATUS.UPDATE_SUCCESS:
          this._am.setEventCallback(null);
          this._updateListener = null;
          var searchPaths = jsb.fileUtils.getSearchPaths();
          var newPaths = this._am.getLocalManifest().getSearchPaths();
          Array.prototype.unshift.apply(searchPaths, newPaths);
          cc.sys.localStorage.setItem("HotUpdateSearchPaths", JSON.stringify(searchPaths));
          jsb.fileUtils.setSearchPaths(searchPaths);
          cc.audioEngine.stopAll();
          cc.game.restart();
        }
      },
      updateNetworkState: function updateNetworkState(stateName) {
        this._netWorkState = stateName;
        switch (this._netWorkState) {
         case NETWORK_STATUS.CONNECTED:
          this.network.string = "";
          this.network.node.active = false;
          break;

         case NETWORK_STATUS.DISCONNECTED:
          this.network.string = "Kh\xf4ng c\xf3 k\u1ebft n\u1ed1i...";
          this.network.node.active = true;
          this.network.node.color = new cc.Color(219, 53, 53, 255);
        }
      },
      initLocalManifestFailed: function initLocalManifestFailed() {
        var _this3 = this;
        this.log("initLocalManifestFailed " + this._state);
        this.btnRetry.active = false;
        this.btnQuit.active = false;
        this.info.string = "Ki\u1ec3m tra phi\xean b\u1ea3n";
        this.detail.string = "Kh\xf4ng c\xf3 b\u1ea3n c\u1eadp nh\u1eadt m\u1edbi.";
        this.detail.node.active = true;
        setTimeout(function() {
          _this3.onUpdateComplete();
        }, 100);
      },
      downloadManifestFailed: function downloadManifestFailed() {
        this.btnRetry.active = true;
        this.btnQuit.active = true;
        this.detail.string = "C\xf3 l\u1ed7i x\u1ea3y ra, vui l\xf2ng th\u1eed l\u1ea1i.";
        this.detail.node.active = true;
      },
      reconnectNetwork: function reconnectNetwork(callback) {
        var _this4 = this;
        clearInterval(this._retryInfo.reConnectInterval);
        this._retryInfo.reconnectCount = 0;
        this._retryInfo.reConnectInterval = setInterval(function() {
          _this4._retryInfo.reconnectCount++;
          if (_this4.isConnected()) {
            clearInterval(_this4._retryInfo.reConnectInterval);
            _this4._retryInfo.reconnectCount = 0;
            _this4.btnQuit.active = false;
            callback();
          } else if (_this4._retryInfo.reconnectCount > _this4._retryInfo.maxOfCount) {
            _this4.btnRetry.active = false;
            _this4.btnQuit.active = true;
          }
        }, this._retryInfo.reconnectionDelay);
      },
      downloadFailedAssetsInterval: function downloadFailedAssetsInterval() {
        var _this5 = this;
        clearInterval(this._retryInfo.downloadFailedAssetsInterval);
        this._retryInfo.downloadFailedAssetsCount++;
        this._am.downloadFailedAssets();
        this._retryInfo.downloadFailedAssetsInterval = setInterval(function() {
          if (_this5._retryInfo.downloadFailedAssetsCount > _this5._retryInfo.maxOfCount) {
            clearInterval(_this5._retryInfo.downloadFailedAssetsInterval);
            _this5.btnRetry.active = true;
            _this5.btnQuit.active = true;
          } else _this5._am.downloadFailedAssets();
        }, this._retryInfo.downloadFailedAssetsDelay);
      },
      calculateTotalSize: function calculateTotalSize() {
        if (jsb.fileUtils.isFileExist(this._storagePath + "_temp/project.manifest.temp")) {
          var loadManifest = jsb.fileUtils.getStringFromFile(this._storagePath + "_temp/project.manifest.temp");
          var manifestObject = JSON.parse(loadManifest);
          var totalSize = 0;
          for (var key in manifestObject.assets) {
            var obj = manifestObject.assets[key];
            totalSize += obj.size;
          }
          totalSize = this.formatBytes(totalSize);
          this.log("Total size calculated:" + totalSize);
          return totalSize;
        }
        this.log("no temp manifest found");
        return null;
      },
      updateCb: function updateCb(event) {
        var failed = false;
        this._failedCount = this._failedCount ? this._failedCount : 0;
        switch (event.getEventCode()) {
         case jsb.EventAssetsManager.ERROR_NO_LOCAL_MANIFEST:
          this.updateState(HOTUPDATE_STATUS.GET_LOCAL_MANIFEST_FAILED);
          failed = true;
          break;

         case jsb.EventAssetsManager.UPDATE_PROGRESSION:
          if (this._retryInfo.downloadFailedAssetsInterval) {
            clearInterval(this._retryInfo.downloadFailedAssetsInterval);
            this._retryInfo.downloadFailedAssetsInterval = null;
            this._retryInfo.downloadFailedAssetsCount = 0;
            this.updateState(HOTUPDATE_STATUS.UPDATING);
          }
          this.detail.string = "";
          this.detail.node.active = false;
          this.byteProgress.node.active = true;
          var downloaded = event.getDownloadedBytes();
          var total = event.getTotalBytes();
          total > 0 && (this.byteProgress.progress = downloaded / total);
          var percent = Math.floor(downloaded / total * 100);
          this.byteLabel.string = percent ? percent + "%" : "0%";
          break;

         case jsb.EventAssetsManager.ASSET_UPDATED:
          this._failedCount = 0;
          this.detail.string = "";
          this.detail.node.active = false;
          this.btnQuit.active = false;
          this.updateNetworkState(NETWORK_STATUS.CONNECTED);
          break;

         case jsb.EventAssetsManager.ERROR_DOWNLOAD_MANIFEST:
         case jsb.EventAssetsManager.ERROR_PARSE_MANIFEST:
          this.downloadManifestFailed();
          failed = true;
          break;

         case jsb.EventAssetsManager.ALREADY_UP_TO_DATE:
          this.updateState(HOTUPDATE_STATUS.ALREADY_UP_TO_DATE);
          break;

         case jsb.EventAssetsManager.UPDATE_FINISHED:
          this.updateState(HOTUPDATE_STATUS.UPDATE_SUCCESS);
          break;

         case jsb.EventAssetsManager.UPDATE_FAILED:
          this.updateState(HOTUPDATE_STATUS.UPDATE_FAILED);
          break;

         case jsb.EventAssetsManager.ERROR_UPDATING:
          this._failedCount++;
          this.log("Asset update error: " + event.getAssetId() + ", " + event.getMessage());
          this.isConnected() || this.updateNetworkState(NETWORK_STATUS.DISCONNECTED);
          if (this._failedCount > 3) {
            this.detail.node.active = true;
            this.detail.string = "C\xf3 l\u1ed7i x\u1ea3y ra!";
            this.btnQuit.active = true;
          }
          break;

         case jsb.EventAssetsManager.ERROR_DECOMPRESS:
          this.log("Asset decompress failed: " + event.getAssetId() + ", " + event.getMessage());
        }
        if (failed) {
          this._am.setEventCallback(null);
          this._updateListener = null;
        }
      },
      isConnected: function isConnected() {
        return cc.sys.getNetworkType() !== cc.sys.NetworkType.NONE;
      },
      onClickRetry: function onClickRetry() {
        this.btnRetry.active = false;
        this.btnQuit.active = false;
        switch (this._state) {
         case HOTUPDATE_STATUS.CHECK_UPDATE:
         case HOTUPDATE_STATUS.UPDATING:
          this.checkUpdate();
          this.info.string = "Ki\u1ec3m tra phi\xean b\u1ea3n";
          this.detail.string = "\n\u0110ang ki\u1ec3m tra phi\xean b\u1ea3n.";
          this.detail.node.active = true;
          break;

         case HOTUPDATE_STATUS.UPDATE_FAILED:
          this.info.string = "\u0110ang th\u1eed t\u1ea3i l\u1ea1i";
          this.detail.string = "";
          this.detail.node.active = false;
          this._am.downloadFailedAssets();
        }
      },
      onClickQuit: function onClickQuit() {
        this.reset();
        var _require = require("gameCommonUtils"), handleCloseGameIframe = _require.handleCloseGameIframe;
        handleCloseGameIframe();
      },
      log: function log(msg) {
        console.log("::HOT UPDATE:: " + this.gameId + " - " + msg);
      },
      _verifyFileHandle: function _verifyFileHandle(path, asset) {
        if (asset.compressed) return true;
        var resMD5 = MD5(jsb.fileUtils.getDataFromFile(path));
        return asset.md5 == resMD5;
      },
      versionCompareHandle: function versionCompareHandle(versionA, versionB) {
        this._oldV = versionA;
        this._newV = versionB;
        this.log("Version Compare: version A is " + versionA + ", version B is " + versionB);
        var vA = versionA.split(".");
        var vB = versionB.split(".");
        for (var i = 0; i < vA.length; ++i) {
          var a = parseInt(vA[i]);
          var b = parseInt(vB[i] || 0);
          if (a === b) continue;
          return a - b;
        }
        return vB.length > vA.length ? -1 : 0;
      },
      onUpdateComplete: function onUpdateComplete() {
        this.log("onUpdateComplete - " + this.loadSceneName);
        cc.director.loadScene(this.loadSceneName);
      },
      reset: function reset() {
        clearInterval(this._retryInfo.downloadFailedAssetsInterval);
        clearInterval(this._retryInfo.reConnectInterval);
        this.byteProgress.progress = 0;
        this.byteProgress.node.active = false;
        this.byteLabel.string = "";
        this.detail.string = "";
        this.detail.node.active = false;
        this.btnRetry.active = false;
        this.btnQuit.active = false;
      },
      onDestroy: function onDestroy() {
        if (this._updateListener) {
          this._am.setEventCallback(null);
          this._updateListener = null;
        }
      }
    });
    cc._RF.pop();
  }, {
    gameCommonUtils: "gameCommonUtils",
    jsb_runtime_md5: "jsb_runtime_md5",
    loadConfigAsync: "loadConfigAsync"
  } ],
  PatchIOS14: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "07487ZCu5xFD5ZeoE2y/F2v", "PatchIOS14");
    "use strict";
    cc.Class({
      extends: cc.Component,
      onLoad: function onLoad() {
        this._customEngineIOS();
      },
      _customEngineIOS: function _customEngineIOS() {
        var isIOS14Device = (cc.sys.os === cc.sys.OS_IOS || cc.sys.os === cc.sys.OS_OSX) && cc.sys.isBrowser && /(OS 1[4-9])|(Version\/1[4-9])/.test(window.navigator.userAgent);
        if (isIOS14Device) {
          var isOverride = false;
          var flush = function flush() {
            var material = this.material, buffer = this._buffer, indiceStart = buffer.indiceStart, indiceOffset = buffer.indiceOffset, indiceCount = indiceOffset - indiceStart;
            if (!this.walking || !material || indiceCount <= 0) return;
            var effect = material.effect;
            if (!effect) return;
            var ia = this._iaPool.add();
            ia._vertexBuffer = buffer._vb;
            ia._indexBuffer = buffer._ib;
            ia._start = indiceStart;
            ia._count = indiceCount;
            var model = this._modelPool.add();
            this._batchedModels.push(model);
            model.sortKey = this._sortKey++;
            model._cullingMask = this.cullingMask;
            model.setNode(this.node);
            model.setEffect(effect, this.customProperties);
            model.setInputAssembler(ia);
            this._renderScene.addModel(model);
            if (isIOS14Device) {
              buffer.uploadData();
              buffer.switchBuffer();
            } else {
              buffer.byteStart = buffer.byteOffset;
              buffer.indiceStart = buffer.indiceOffset;
              buffer.vertexStart = buffer.vertexOffset;
            }
          };
          cc.MeshBuffer.prototype.checkAndSwitchBuffer = function(vertexCount) {
            if (!isOverride) {
              this._batcher.__proto__._flush = flush;
              isOverride = true;
            }
            if (this.vertexOffset + vertexCount > 65535) {
              this.uploadData();
              this._batcher._flush();
            }
          };
        }
      }
    });
    cc._RF.pop();
  }, {} ],
  PlayTrialButtonControl: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "15c39HxubZMvqYfNyfnMEyY", "PlayTrialButtonControl");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        playTrialButton: cc.Node,
        playRealButton: cc.Node,
        buttonRoot: cc.Node,
        displayRootNode: cc.Node,
        buttonIsHideIfDisable: true
      },
      onLoad: function onLoad() {
        this.playTrialButton && (this.playTrialButton.active = true);
        this.playRealButton && (this.playRealButton.active = false);
        this.displayRootNode && (this.displayRootNode.active = false);
        this.node.on("ENABLE_BUTTONS", this.onEnableButtons, this);
      },
      triggerTrialMode: function triggerTrialMode() {
        this.node.emit("TRIAL_TRIGGER");
      },
      onPlayTrialButtonClicked: function onPlayTrialButtonClicked() {
        this.playRealButton && (this.playRealButton.active = true);
        this.playTrialButton && (this.playTrialButton.active = false);
        this.displayRootNode && (this.displayRootNode.active = true);
        this.triggerTrialMode();
      },
      onPlayRealButtonClicked: function onPlayRealButtonClicked() {
        this.playTrialButton && (this.playTrialButton.active = true);
        this.playRealButton && (this.playRealButton.active = false);
        this.displayRootNode && (this.displayRootNode.active = false);
        this.triggerTrialMode();
      },
      onEnableButtons: function onEnableButtons(isOn) {
        if (true == this.buttonIsHideIfDisable) this.buttonRoot && (this.buttonRoot.active = isOn); else {
          this.playTrialButton && (this.playTrialButton.getComponent(cc.Button).interactable = isOn);
          this.playRealButton && (this.playRealButton.getComponent(cc.Button).interactable = isOn);
        }
      }
    });
    cc._RF.pop();
  }, {} ],
  RadientBlurControl: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f675ezazO1MMoNnUmD6w9xG", "RadientBlurControl");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        normalTransitionDuration: 1,
        fastTransitionDuration: .3,
        maxStrength: .125,
        resolutionPropName: "iResolution",
        thresholdPropName: "threshold",
        strengthPropName: "strength",
        lerpOnStart: true,
        isLoop: false,
        customMaterial: {
          type: cc.Material,
          default: null
        }
      },
      onLoad: function onLoad() {
        this._sprite = this.node.getComponent(cc.Sprite);
        this._mainMaterial = this._sprite.getMaterial(0);
        this._transitionFactor = 0;
        this._isLerping = false;
        this._blurAtStart = true;
      },
      start: function start() {
        if (this._mainMaterial && this._sprite) {
          var iResolution = new cc.Vec3(this._sprite.node.width, this._sprite.node.height, 0);
          this._mainMaterial.setProperty(this.resolutionPropName, iResolution);
        }
        this.lerpOnStart && this.lerpTransition(true);
        this._timer = 0;
        this.transitionDuration = this.normalTransitionDuration;
      },
      onEnable: function onEnable() {
        this._transitionFactor = 0;
        this._blurFactor = this._blurAtStart ? this.maxStrength : 0;
        this._mainMaterial = this._sprite.getMaterial(0);
        this._mainMaterial.setProperty(this.thresholdPropName, this._transitionFactor);
        this._mainMaterial.setProperty(this.strengthPropName, this._blurFactor);
      },
      update: function update(dt) {
        if (this._isLerping) {
          this._timer += dt;
          this._transitionFactor = this.cubicEasingIn(this._timer, 0, 1, this.transitionDuration);
          var blurFactor = this.cubicEasingIn(this._timer, 0, this.maxStrength, this.transitionDuration);
          this._blurFactor = this._blurAtStart ? this.maxStrength - blurFactor : blurFactor;
          if (this._transitionFactor > 1) {
            if (this.isLoop) this._transitionFactor = 0; else {
              this._isLerping = false;
              this.node.emit("RADIENT_BLUR_COMPLETE");
            }
            this._timer = 0;
          }
          this._mainMaterial = this._sprite.getMaterial(0);
          this._mainMaterial.setProperty(this.thresholdPropName, this._transitionFactor);
          this._mainMaterial.setProperty(this.strengthPropName, this._blurFactor);
        }
      },
      lerpTransition: function lerpTransition(isLerping, blurAtStart) {
        var isTurbo = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        this.transitionDuration = isTurbo ? this.fastTransitionDuration : this.normalTransitionDuration;
        this.isLerping && this._sprite.setMaterial(0, this.customMaterial);
        this._isLerping = isLerping;
        this._transitionFactor = 0;
        this._timer = 0;
        this._blurAtStart = blurAtStart;
        this._blurFactor = this._blurAtStart ? this.maxStrength : 0;
        this._mainMaterial = this._sprite.getMaterial(0);
        this._mainMaterial.setProperty(this.thresholdPropName, this._transitionFactor);
        this._mainMaterial.setProperty(this.strengthPropName, this._blurFactor);
      },
      cubicEasingIn: function cubicEasingIn(time, beginVal, changeVal, duration) {
        time /= duration;
        return changeVal * time * time * time + beginVal;
      }
    });
    cc._RF.pop();
  }, {} ],
  Saoguang: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "39df5fDMqVDIoVTKi+tvY0Y", "Saoguang");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var Saoguang = function(_super) {
      __extends(Saoguang, _super);
      function Saoguang() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.sprite = null;
        _this.time = 0;
        _this._time = 0;
        _this._sin = 0;
        return _this;
      }
      Saoguang.prototype.onLoad = function() {
        this._time = 0;
        this._sin = 0;
      };
      Saoguang.prototype.start = function() {
        this.material = this.sprite.getMaterial(0);
      };
      Saoguang.prototype.update = function(dt) {
        if (null != this.material) {
          this._time += .5 * dt;
          this._sin = Math.sin(this._time);
          if (this._sin > .99) {
            this._sin = 0;
            this._time = 0;
          }
          this.material.effect.setProperty("sys_time", this._sin);
        }
      };
      __decorate([ property(cc.Sprite) ], Saoguang.prototype, "sprite", void 0);
      Saoguang = __decorate([ ccclass ], Saoguang);
      return Saoguang;
    }(cc.Component);
    exports.default = Saoguang;
    cc._RF.pop();
  }, {} ],
  ScaleAlignViewport: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ca9915koZlGYp+o/tke9DV+", "ScaleAlignViewport");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {},
      onLoad: function onLoad() {
        var viewSize = cc.view.getVisibleSize();
        var ratioX = viewSize.height / this.node.height;
        var ratioY = viewSize.width / this.node.width;
        this.node.scale = ratioX > ratioY ? ratioX : ratioY;
      }
    });
    cc._RF.pop();
  }, {} ],
  ScrollViewOptimize: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8d2bbLurztAeKS27i8o63wP", "ScrollViewOptimize");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        view: cc.Node,
        content: cc.Node
      },
      update: function update() {
        var viewRect = cc.rect(-this.content.x - this.view.width * this.view.anchorX, -this.content.y - this.view.height * this.view.anchorY, this.view.width, this.view.height);
        for (var i = 0; i < this.content.children.length; i++) {
          var node = this.content.children[i];
          viewRect.intersects(node.getBoundingBox()) ? node.opacity = 255 : node.opacity = 0;
        }
      }
    });
    cc._RF.pop();
  }, {} ],
  SoundPlayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0d808xIdR1Gs5cj8pTKFNBs", "SoundPlayer");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        sfxClick: {
          default: null,
          type: cc.AudioClip
        },
        bgmMain: {
          default: null,
          type: cc.AudioClip
        },
        storageKeyBGM: "enableBackgroundMusic",
        storageKeySFX: "enableSound"
      },
      onLoad: function onLoad() {
        this.setDefaultVolume();
        this.isEnableBGM = false;
        this.isEnableSFX = false;
        this.node.on("PLAY_SOUND", this.playSound, this);
        this.node.on("STOP_SOUND", this.stopSound, this);
        this.node.on("PLAY_CLICK", this.playSFXClick, this);
        this.node.on("PLAY_SFX", this.playSFX, this);
        this.emit = this.node.emit;
        this.node.soundPlayer = this;
        this.isWebSoundClient2 = cc.sys.isNative && "function" === typeof closeCreatorGame;
        this.storageKeyBGM = this.isWebSoundClient2 ? "user_bg_music" : this.storageKeyBGM;
        this.storageKeySFX = this.isWebSoundClient2 ? "user_fx_sound" : this.storageKeySFX;
        this.isEnableBGM = this.readBGMKey();
        this.isEnableSFX = this.readSFXKey();
        this.onExtendedLoad();
      },
      readBGMKey: function readBGMKey() {
        var isEnableBGM = cc.sys.localStorage.getItem(this.storageKeyBGM);
        var result = null == isEnableBGM || JSON.parse(isEnableBGM);
        return result;
      },
      readSFXKey: function readSFXKey() {
        var isEnableSFX = cc.sys.localStorage.getItem(this.storageKeySFX);
        var result = null == isEnableSFX || JSON.parse(isEnableSFX);
        return result;
      },
      setDefaultVolume: function setDefaultVolume() {
        var _ref = this.node.config || {}, MUSIC_VOLUME = _ref.MUSIC_VOLUME, SOUND_EFFECT_VOLUME = _ref.SOUND_EFFECT_VOLUME;
        this.MUSIC_VOLUME = MUSIC_VOLUME || .5;
        this.SOUND_EFFECT_VOLUME = SOUND_EFFECT_VOLUME || 1;
        cc.audioEngine.setEffectsVolume(this.SOUND_EFFECT_VOLUME);
        cc.audioEngine.setMusicVolume(this.MUSIC_VOLUME);
      },
      onExtendedLoad: function onExtendedLoad() {},
      start: function start() {},
      sfxToggle: function sfxToggle() {
        this.isEnableSFX = !this.isEnableSFX;
        this.node.gSlotDataStore && (this.node.gSlotDataStore.isEnableSFX = this.isEnableSFX);
        this.isWebSoundClient2 ? cc.sys.localStorage.setItem(this.storageKeySFX, this.isEnableSFX ? "1" : "0") : cc.sys.localStorage.setItem(this.storageKeySFX, this.isEnableSFX);
        this.isEnableSFX || cc.audioEngine.stopAllEffects();
      },
      bgmToggle: function bgmToggle() {
        this.isEnableBGM = !this.isEnableBGM;
        this.node.gSlotDataStore && (this.node.gSlotDataStore.isEnableBGM = this.isEnableBGM);
        this.isWebSoundClient2 ? cc.sys.localStorage.setItem(this.storageKeyBGM, this.isEnableBGM ? "1" : "0") : cc.sys.localStorage.setItem(this.storageKeyBGM, this.isEnableBGM);
        this.isEnableBGM ? this.playMainBGM() : cc.audioEngine.pauseMusic();
      },
      playMusic: function playMusic(audio) {
        var loop = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
        var volume = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.MUSIC_VOLUME;
        if (!this.isEnableBGM) return;
        if (cc.audioEngine.isMusicPlaying() && this.currentBGM === audio) return;
        cc.audioEngine.playMusic(audio, loop);
        cc.audioEngine.setMusicVolume(volume);
        this.currentBGM = audio;
      },
      playSFXClick: function playSFXClick() {
        if (!this.isEnableSFX) return;
        cc.audioEngine.playEffect(this.sfxClick);
      },
      playSFX: function playSFX(sfx) {
        if (!this.isEnableSFX) return;
        return cc.audioEngine.playEffect(sfx);
      },
      playMainBGM: function playMainBGM() {
        if (!this.isEnableBGM) return;
        this.playMusic(this.bgmMain, true);
      },
      playSound: function playSound(sound) {
        var loop = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        var volume = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.SOUND_EFFECT_VOLUME;
        if (!this.isEnableSFX) return;
        return cc.audioEngine.play(sound, loop, volume);
      },
      stopSound: function stopSound(soundkey) {
        cc.audioEngine.stop(soundkey);
      },
      stopAllAudio: function stopAllAudio() {
        cc.audioEngine.stopAll();
      }
    });
    cc._RF.pop();
  }, {} ],
  SymbolFXController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7b04b07SClFK44K0UO6g9Qw", "SymbolFXController");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        particleBotLeft: cc.Node,
        particleTopRight: cc.Node,
        effectDuration: 1,
        topLeft: cc.Vec2,
        topRight: cc.Vec2,
        botLeft: cc.Vec2,
        botRight: cc.Vec2
      },
      onLoad: function onLoad() {
        var botLeftSeq = cc.sequence(cc.moveTo(this.effectDuration / 2, this.botRight).easing(cc.easeSineOut()), cc.moveTo(this.effectDuration / 2, this.topRight).easing(cc.easeSineOut()), cc.moveTo(this.effectDuration / 2, this.topLeft).easing(cc.easeSineOut()), cc.moveTo(this.effectDuration / 2, this.botLeft).easing(cc.easeSineOut()));
        var topRightSeq = cc.sequence(cc.moveTo(this.effectDuration / 2, this.topLeft).easing(cc.easeSineOut()), cc.moveTo(this.effectDuration / 2, this.botLeft).easing(cc.easeSineOut()), cc.moveTo(this.effectDuration / 2, this.botRight).easing(cc.easeSineOut()), cc.moveTo(this.effectDuration / 2, this.topRight).easing(cc.easeSineOut()));
        this._botleftAction = cc.repeatForever(botLeftSeq);
        this._topRightAction = cc.repeatForever(topRightSeq);
        this._isPlaying = false;
      },
      playEffect: function playEffect() {
        if (this._isPlaying) return;
        this.particleBotLeft.postion = this.botLeft;
        this.particleTopRight.postion = this.topRight;
        this.particleBotLeft.active = true;
        this.particleTopRight.active = true;
        this.particleBotLeft.runAction(this._botleftAction);
        this.particleTopRight.runAction(this._topRightAction);
        this._isPlaying = true;
      },
      stopEffect: function stopEffect() {
        if (this._isPlaying) {
          this.particleBotLeft.stopAction(this._botleftAction);
          this.particleTopRight.stopAction(this._topRightAction);
          this.particleBotLeft.active = false;
          this.particleTopRight.active = false;
          this._isPlaying = false;
        }
      }
    });
    cc._RF.pop();
  }, {} ],
  ToastInfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "93868qtTIJOTZCbM+XXUTS3", "ToastInfo");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        lblNotify: cc.Label,
        delayTime: 1.5
      },
      onLoad: function onLoad() {
        this.node.on("SHOW_TOAST_MESSAGE", this.showMessage.bind(this));
        this.node.active = false;
      },
      showMessage: function showMessage(val, anchor) {
        var _this = this;
        this.lblNotify.string = val;
        this.node.opacity = 255;
        this.node.active = true;
        this.node.stopAllActions();
        this.node.scale = .5;
        this.node.runAction(cc.sequence(cc.scaleTo(.2, 1), cc.delayTime(this.delayTime), cc.callFunc(function() {
          _this.node.active = !!anchor;
        })));
      },
      onDestroy: function onDestroy() {
        this.node.off("SHOW_TOAST_MESSAGE", this.showMessage.bind(this));
      },
      stopShowMessage: function stopShowMessage() {
        this.node.active = false;
      }
    });
    cc._RF.pop();
  }, {} ],
  WalletTrial: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "594e7Qu+qNOubAcDh5fwdEi", "WalletTrial");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        display: cc.Label,
        animateNumber: require("animateNumberLabel")
      },
      initValue: function initValue(value) {
        this.currentValue = value;
        this.animateNumber.onUpdateWallet(this.currentValue, 0);
      },
      addValue: function addValue(value) {
        if (value) {
          this.currentValue += value;
          this.animateNumber.onUpdateWallet(this.currentValue, 100);
        }
      }
    });
    cc._RF.pop();
  }, {
    animateNumberLabel: "animateNumberLabel"
  } ],
  WebSoundPlayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e9019zQzPdBbZNIfB0+FocA", "WebSoundPlayer");
    "use strict";
    var SoundStateEnum = {
      NONE: 0,
      PLAYING: 1
    };
    var SoundStorageKeys = {
      ENABLE_BGM: "enableBackgroundMusic",
      ENABLE_SFX: "enableSound"
    };
    var WebSoundPlayer = cc.Class({
      extends: require("SoundPlayer"),
      properties: {
        gameNode: {
          type: cc.Node,
          default: null
        },
        keepAudioSession: true,
        isUseNativeSound: false
      },
      ctor: function ctor() {
        this.webSound = false;
        this.musicInstance = null;
        this.isWebSoundEnable = cc.sys.isBrowser && "undefined" !== typeof Howl;
        this.soundLoadCount = 0;
        this.totalSound = 0;
        this.isAllWebSoundLoaded = false;
        this.loadSoundCompleteHdl = this.onWebSoundLoadComplete.bind(this);
        this.ccMusic = -1;
        this.musicOffset = 0;
        this.musicVolume = 1;
        this.effectVolume = 1;
        this.isGameActive = true;
        this.howlMap = {};
        this.bgMusicId = -1;
        this.playingSounds = [];
        this.bgMusicUUID = 0;
        this.releaseCocosSound = true;
        this._timer = 0;
        this._sfxCacheGesture = [];
        this._resumeWithGesture = this.resumeWithGesture.bind(this);
      },
      onLoad: function onLoad() {
        this.isUseNativeSound && (this.isWebSoundEnable = false);
        if (this.isWebSoundEnable) {
          var session = window["_v_audio_backgroud_session"];
          if (session) {
            this.bgMusicUUID = session.uuid;
            this.bgMusicId = session.bgMusicId;
            this.musicInstance = session.instance;
            this.howlMap[session.uuid] = session.instance;
          }
        }
        this.currentBGM = null;
        this._super();
        this.musicVolume = this.MUSIC_VOLUME;
        this.effectVolume = this.SOUND_EFFECT_VOLUME;
        if (this.isWebSoundEnable) {
          this.webSound = true;
          this.loadWebSounds(this.gameNode || this.node, null);
          var Howler = window.Howler;
          this._hasAudioContext = !!(Howler && Howler.ctx && "running" == Howler.ctx.state);
          if (!this._hasAudioContext) {
            this.node.width = 2024;
            this.node.height = 2e3;
            this.node.on(cc.Node.EventType.TOUCH_END, this._resumeWithGesture, this, true);
            var handImage = document.getElementById("mask");
            handImage && handImage.addEventListener("touchstart", this._resumeWithGesture);
          }
        }
        cc.game.on(cc.game.EVENT_SHOW, this.onGameShow, this);
        cc.game.on(cc.game.EVENT_HIDE, this.onGameHide, this);
      },
      update: function update(dt) {
        if (this._hasAudioContext || !this.isGameActive || !this.webSound) return;
        this._timer += dt;
        this._waitingGestureSound();
      },
      _waitingGestureSound: function _waitingGestureSound() {
        for (var index = this._sfxCacheGesture.length - 1; index >= 0; index--) {
          var _sfxCacheGesture$inde = this._sfxCacheGesture[index], startTime = _sfxCacheGesture$inde.startTime, duration = _sfxCacheGesture$inde.duration, loop = _sfxCacheGesture$inde.loop;
          var endTime = startTime + duration;
          !loop && this._timer > endTime && this._sfxCacheGesture.splice(index, 1);
        }
      },
      _onOrientationChange: function _onOrientationChange() {
        if (this._hasAudioContext) return;
        var handImage = document.getElementById("mask");
        var divGestureSound = document.getElementById("div_gesture_sound");
        if (!divGestureSound) return;
        handImage && "none" != handImage.style.display ? divGestureSound.style.display = "none" : divGestureSound.style.display = "block";
      },
      resumeWithGesture: function resumeWithGesture() {
        var _this = this;
        if (this._hasAudioContext) return;
        this._hasAudioContext = true;
        this._sfxCacheGesture.forEach(function(soundObject) {
          var startTime = soundObject.startTime, duration = soundObject.duration, loop = soundObject.loop, sound = soundObject.sound, volume = soundObject.volume;
          var offset = (_this._timer - startTime) % duration;
          var endTime = startTime + duration;
          if (!loop && _this._timer > endTime) return;
          sound.loop(loop);
          sound.volume(volume);
          sound.play();
          sound.seek(offset);
        });
        this._sfxCacheGesture = [];
        var divGestureSound = document.getElementById("div_gesture_sound");
        divGestureSound && (divGestureSound.style.display = "none");
        var handImage = document.getElementById("mask");
        handImage && handImage.removeEventListener("touchstart", this._resumeWithGesture);
        window.removeEventListener("orientationchange", this._onOrientationChange);
        this.node.off(cc.Node.EventType.TOUCH_END, this._resumeWithGesture, this, true);
      },
      loadWebSounds: function loadWebSounds(gameNode) {
        this.soundLoadCount = 0;
        this.gameNode = gameNode;
        var sounds = [];
        var soundMap = {};
        var soundUuids = [];
        this.loadedSoundMap = {};
        for (var _i in cc.loader._cache) {
          var clip = cc.loader._cache[_i]._owner;
          if (clip instanceof cc.AudioClip) {
            if (clip._nativeAsset instanceof window.Howl) {
              this.howlMap[clip._uuid] = clip._nativeAsset;
              this.loadedSoundMap[clip.name] = true;
              continue;
            }
            if (this.bgMusicUUID && clip._uuid == this.bgMusicUUID) continue;
            if (!soundMap[clip.url]) {
              sounds.push({
                uuid: clip._uuid,
                name: clip.name,
                src: clip.url
              });
              soundMap[clip.url] = true;
              soundUuids.push(clip._uuid);
              this.loadedSoundMap[clip.name] = false;
            }
          }
        }
        this.releaseCocosSound && cc.loader.release(soundUuids);
        this.totalSound = sounds.length;
        0 == this.totalSound && (this.isAllWebSoundLoaded = true);
        cc.log("this.totalSound === " + this.totalSound);
        for (var i = 0; i < sounds.length; i++) {
          var sound = sounds[i];
          var howl = new Howl({
            src: [ sound.src ],
            preload: true
          });
          howl.once("load", this.onWebSoundLoadComplete.bind(this, sound.name));
          this.howlMap[sound.uuid] = howl;
        }
        this.waitForGesture(gameNode);
      },
      waitForGesture: function waitForGesture(gameNode) {
        window["_v_audio_backgroud_session"] || gameNode.on(cc.Node.EventType.TOUCH_END, this.startPlayWithUserGesture, this, true);
      },
      onWebSoundLoadComplete: function onWebSoundLoadComplete(e) {
        this.soundLoadCount++;
        if (!this.gameNode) return;
        this.loadedSoundMap[e] = true;
        var fail = "";
        for (var k in this.loadedSoundMap) if (!this.loadedSoundMap[k]) {
          fail = k;
          break;
        }
        window && window["vtrace"] && window["vtrace"]("fail: " + fail);
        if (this.soundLoadCount == this.totalSound) {
          this.isAllWebSoundLoaded = true;
          cc.audioEngine.stopAllEffects();
          cc.audioEngine.stopMusic();
          this.isEnableBGM && (this.currentBGM ? this.playMusic(this.currentBGM, true, -1, this.musicOffset) : this.playMusic(this.bgmMain, true, -1, this.musicOffset));
        }
      },
      playHowl: function playHowl(howl, options) {
        var id = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -1;
        options.loop && howl.loop(options.loop);
        options.volume && howl.volume(options.volume);
        options.offset && howl.seek(options.offset);
        return id >= 0 ? howl.play(id) : howl.play();
      },
      onGameShow: function onGameShow() {
        var _this2 = this;
        cc.log("WebSound: onGameShow");
        this.isGameActive = true;
        this.webSound ? this.resumeContext().then(function() {
          if (_this2.isEnableBGM && _this2.musicInstance.pausedOnHide) {
            _this2.musicInstance.pausedOnHide = false;
            _this2.resumeMusic();
          }
          for (var i in _this2.howlMap) {
            var instance = _this2.howlMap[i];
            if (instance == _this2.musicInstance) continue;
            if (instance["_vorgVolume"]) {
              instance.volume(instance["_vorgVolume"]);
              delete instance["_vorgVolume"];
              if (instance.pausedOnHide) {
                instance.play();
                instance.pausedOnHide = false;
              }
            }
          }
        }) : this.isEnableBGM || this.stopMusic();
      },
      resumeContext: function resumeContext() {
        var Howler = window.Howler;
        if (Howler && Howler.ctx && "running" != Howler.ctx.state) return Howler.ctx.resume();
        return Promise.resolve();
      },
      onGameHide: function onGameHide() {
        cc.log("WebSound: onGameHide");
        this.isGameActive = false;
        if (this.webSound) {
          if (this.musicInstance) {
            this.musicInstance.playing() && (this.musicInstance.pausedOnHide = true);
            this.pauseMusic();
          }
          for (var i in this.howlMap) {
            var instance = this.howlMap[i];
            if (instance != this.musicInstance) {
              instance["_vorgVolume"] = instance.volume();
              instance.volume(0);
              if (instance.playing()) {
                instance.pause();
                instance.pausedOnHide = true;
              }
            }
          }
        }
      },
      startPlayWithUserGesture: function startPlayWithUserGesture() {
        var _this3 = this;
        if (!this.isAllWebSoundLoaded) return;
        this.currentBGM || (this.currentBGM = this.bgmMain);
        if (!this.currentBGM) {
          cc.log("WebSoundPlayer::startPlayWithUserGesture this.bgmMain is not initialized.");
          return;
        }
        this.musicInstance && this.musicInstance.stop();
        this.gameNode.runAction(cc.sequence(cc.delayTime(.1), cc.callFunc(function() {
          _this3.playMusic(_this3.currentBGM, true, -1, _this3.musicOffset);
          _this3.musicInstance && _this3.musicInstance.playing() && _this3.gameNode.off(cc.Node.EventType.TOUCH_END, _this3.startPlayWithUserGesture, _this3, true);
          !_this3.isEnableBGM && _this3.musicInstance && _this3.musicInstance.pause();
        })));
        cc.isLoadAllSoundWeb = true;
      },
      setMusicVolume: function setMusicVolume(volume) {
        this.musicVolume = volume;
        if (!this.isEnableBGM) return;
        this.webSound ? this.musicInstance && this.musicInstance.volume(volume) : cc.audioEngine.setMusicVolume(volume);
      },
      setEffectsVolume: function setEffectsVolume(volume) {
        this.effectVolume = volume;
        if (this.webSound) for (var i in this.howlMap) {
          var instance = this.howlMap[i];
          instance != this.musicInstance && instance.volume(volume);
        } else cc.audioEngine.setEffectsVolume(volume);
      },
      playMusic: function playMusic(audio) {
        var loop = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
        var volume = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.musicVolume;
        var offset = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
        volume < 0 && (volume = this.musicVolume);
        try {
          this._playMusic(audio, loop, volume, offset);
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _playMusic: function _playMusic(audio) {
        var loop = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
        var volume = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.musicVolume;
        var offset = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
        if (!audio || !audio.name && !this.howlMap[audio._uuid]) {
          cc.log("WebSoundPlayer::playMusic invalid audio", audio);
          return;
        }
        cc.log("playMusic ==== " + audio._uuid + " volume " + volume);
        this.currentBGM = audio;
        this.musicVolume = volume;
        this.musicOffset = offset;
        if (this.webSound) {
          if (this.isAllWebSoundLoaded) {
            this.musicInstance && this.musicInstance.stop();
            this.musicInstance = this.howlMap[audio._uuid];
            this.bgMusicUUID = audio._uuid;
            this.musicInstance.loop(loop);
            this.musicInstance.volume(volume);
            this.bgMusicId = this.musicInstance.play();
            this.isEnableBGM && this.isGameActive || this.pauseMusic();
            offset > 0 && this.musicInstance.seek(offset);
          }
        } else {
          this.ccMusic = cc.audioEngine.playMusic(audio, loop);
          if (cc.sys.isBrowser) {
            cc.audioEngine.setMusicVolume(volume);
            this.isEnableBGM || cc.audioEngine.pauseMusic();
          } else this.isEnableBGM ? cc.audioEngine.setMusicVolume(volume) : cc.audioEngine.setMusicVolume(.001);
          offset > 0 && cc.audioEngine.setCurrentTime(this.ccMusic, offset);
        }
      },
      stopMusic: function stopMusic() {
        try {
          this._stopMusic();
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _stopMusic: function _stopMusic() {
        this.currentBGM = null;
        this.ccMusic = -1;
        if (!this.webSound) {
          cc.audioEngine.stopMusic();
          return;
        }
        if (this.musicInstance) {
          this.musicInstance.stop();
          this.bgMusicId = -1;
        }
      },
      pauseMusic: function pauseMusic() {
        try {
          this._pauseMusic();
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _pauseMusic: function _pauseMusic() {
        if (!this.webSound) {
          cc.audioEngine.pauseMusic();
          return;
        }
        this.musicInstance && (cc.sys.os == cc.sys.OS_IOS ? this.musicInstance.volume(.001) : this.musicInstance.pause());
      },
      resumeMusic: function resumeMusic() {
        try {
          this._resumeMusic();
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _resumeMusic: function _resumeMusic() {
        if (!this.isEnableBGM) return;
        if (this.webSound) {
          if (!this.musicInstance || !this.currentBGM) return;
          var offset = 0;
          offset = this.musicInstance.seek();
          this.musicInstance.stop(this.bgMusicId);
          this.musicInstance = this.howlMap[this.currentBGM._uuid];
          this.bgMusicId = this.playHowl(this.musicInstance, {
            loop: true,
            volume: this.MUSIC_VOLUME,
            offset: offset
          });
        } else {
          cc.audioEngine.resumeMusic();
          cc.audioEngine.setMusicVolume(this.musicVolume);
        }
      },
      fadeMusicTo: function fadeMusicTo(time, endVolume) {
        var _this4 = this;
        if (!this.currentBGM) return;
        var volume = {
          value: this.musicVolume
        };
        var tweenFade = cc.tween(volume).to(time, {
          value: endVolume
        }, {
          progress: function progress(start, end, current, ratio) {
            var currentVolume = Math.round(100 * current) / 100;
            _this4.setMusicVolume(currentVolume);
            return start + (end - start) * ratio;
          }
        }).start();
        return tweenFade;
      },
      fadeEffectTo: function fadeEffectTo(soundId, time, endVolume) {
        var _this5 = this;
        if (null === soundId || void 0 === soundId) return null;
        var volume = {
          value: this.getVolume(soundId)
        };
        var tweenFade = cc.tween(volume).to(time, {
          value: endVolume
        }, {
          progress: function progress(start, end, current, ratio) {
            var currentVolume = Math.round(100 * current) / 100;
            _this5.setVolume(soundId, currentVolume);
            return start + (end - start) * ratio;
          }
        }).start();
        return tweenFade;
      },
      stopEffect: function stopEffect(id) {
        try {
          this._stopEffect(id);
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _stopEffect: function _stopEffect(id) {
        var _this6 = this;
        this.webSound ? this._hasAudioContext ? "number" != typeof id && id && id.stop() : this._sfxCacheGesture.forEach(function(soundObject, index) {
          soundObject.sound == id && _this6._sfxCacheGesture.splice(index, 1);
        }) : void 0 !== id && null !== id && cc.audioEngine.stopEffect(id);
      },
      stopAllEffects: function stopAllEffects() {
        try {
          this._stopAllEffects();
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _stopAllEffects: function _stopAllEffects() {
        if (this.webSound) {
          for (var i in this.howlMap) {
            var howl = this.howlMap[i];
            howl != this.musicInstance && howl.stop();
          }
          this._sfxCacheGesture = [];
        } else {
          for (var _i2 = 0; _i2 < this.playingSounds.length; _i2++) {
            var soundId = this.playingSounds[_i2];
            if (soundId) {
              var state = cc.audioEngine.getState(soundId);
              state == cc.audioEngine.AudioState.PLAYING && this._stopEffect(soundId);
            }
          }
          this.playingSounds = [];
        }
      },
      pauseEffect: function pauseEffect(soundId) {
        try {
          this._pauseEffect(soundId);
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _pauseEffect: function _pauseEffect(soundId) {
        if (!this.webSound) {
          cc.audioEngine.pauseEffect(soundId);
          return;
        }
        soundId && soundId.pause();
      },
      resumeEffect: function resumeEffect(soundId) {
        try {
          this._resumeEffect(soundId);
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _resumeEffect: function _resumeEffect(soundId) {
        if (!this.webSound) {
          cc.audioEngine.resumeEffect(soundId);
          return;
        }
        soundId && soundId.play();
      },
      playSFXClick: function playSFXClick() {
        if (!this.sfxClick || !this.sfxClick.name && !this.howlMap[this.sfxClick._uuid]) {
          cc.log("WebSoundPlayer::playSFXClick invalid sfxClick");
          return;
        }
        if (!this.isEnableSFX || !this.sfxClick) return;
        var id = void 0;
        if (this.webSound) {
          id = this.howlMap[this.sfxClick._uuid];
          id.play();
        } else {
          id = cc.audioEngine.playEffect(this.sfxClick);
          this.playingSounds.push(id);
          this._filterPlayingSounds();
        }
        return id;
      },
      playEffect: function playEffect(sfx) {
        var loop = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        var volume = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.effectVolume;
        var id = null;
        try {
          id = this._playEffect(sfx, loop, volume);
        } catch (e) {
          cc.log(e.toString());
        }
        return id;
      },
      _playEffect: function _playEffect(sfx) {
        var loop = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        var volume = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.effectVolume;
        if (!this.isGameActive) return;
        if (!sfx || !sfx.name && !this.howlMap[sfx._uuid]) {
          cc.log("WebSoundPlayer::playEffect invalid sfx");
          return;
        }
        if (!this.isEnableSFX) return;
        var id = null;
        if (this.webSound) {
          if (this.isAllWebSoundLoaded) {
            id = this.howlMap[sfx._uuid];
            if (this._hasAudioContext) {
              id.loop(loop);
              id.volume(volume);
              id.play();
            } else this._sfxCacheGesture.push({
              sound: id,
              startTime: this._timer,
              duration: id._duration,
              loop: loop,
              volume: volume
            });
          }
        } else {
          id = cc.audioEngine.playEffect(sfx, loop);
          this.playingSounds.push(id);
          this._filterPlayingSounds();
        }
        return id;
      },
      _filterPlayingSounds: function _filterPlayingSounds() {
        if (this.playingSounds.length <= 12) return;
        this.playingSounds = this.playingSounds.filter(function(id) {
          var state = cc.audioEngine.getState(id);
          return state === cc.audioEngine.AudioState.PLAYING || state === cc.audioEngine.AudioState.PAUSED;
        });
      },
      playSFX: function playSFX(sfx) {
        return this.playEffect(sfx);
      },
      playSound: function playSound(audio) {
        var loop = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        var volume = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.SOUND_EFFECT_VOLUME;
        var id = null;
        try {
          id = this._playSound(audio, loop, volume);
        } catch (e) {
          cc.log(e.toString());
        }
        return id;
      },
      _playSound: function _playSound(audio) {
        var loop = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        var volume = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.SOUND_EFFECT_VOLUME;
        if (!this.isGameActive) return;
        if (!audio || !audio.name && !this.howlMap[audio._uuid]) {
          cc.log("WebSoundPlayer::playSound invalid audio");
          return;
        }
        if (!this.isEnableSFX) return null;
        var id = null;
        if (this.webSound) {
          if (this.isAllWebSoundLoaded) {
            id = this.howlMap[audio._uuid];
            if (this._hasAudioContext) {
              id.loop(loop);
              id.volume(volume);
              id.play();
            } else this._sfxCacheGesture.push({
              sound: id,
              startTime: this._timer,
              duration: id._duration,
              loop: loop,
              volume: volume
            });
          }
        } else {
          id = cc.audioEngine.play(audio, loop, volume);
          this.playingSounds.push(id);
          this._filterPlayingSounds();
        }
        return id;
      },
      stopSound: function stopSound(id) {
        try {
          this._stopSound(id);
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _stopSound: function _stopSound(id) {
        this.stopEffect(id);
      },
      stopAllAudio: function stopAllAudio() {
        try {
          this._stopAllAudio();
        } catch (e) {
          cc.log(e.toString());
        }
      },
      _stopAllAudio: function _stopAllAudio() {
        this.currentBGM = null;
        this.ccMusic = -1;
        if (this.webSound) {
          this.stopAllEffects();
          this.musicInstance && this.musicInstance.pause();
        } else cc.audioEngine.stopAll();
      },
      sfxToggle: function sfxToggle() {
        this.setEffectEnable(!this.isEnableSFX);
      },
      setEffectEnable: function setEffectEnable(enable) {
        this.isEnableSFX = enable;
        this.node.gSlotDataStore && (this.node.gSlotDataStore.isEnableSFX = this.isEnableSFX);
        this.isWebSoundClient2 ? cc.sys.localStorage.setItem(this.storageKeySFX, this.isEnableSFX ? "1" : "0") : cc.sys.localStorage.setItem(this.storageKeySFX, this.isEnableSFX);
        this.isEnableSFX || this.stopAllEffects();
      },
      bgmToggle: function bgmToggle() {
        this.setBgmEnable(!this.isEnableBGM);
      },
      setBgmEnable: function setBgmEnable(enable) {
        var _this7 = this;
        this.isEnableBGM = enable;
        this.node.gSlotDataStore && (this.node.gSlotDataStore.isEnableBGM = this.isEnableBGM);
        this.isWebSoundClient2 ? cc.sys.localStorage.setItem(this.storageKeyBGM, this.isEnableBGM ? "1" : "0") : cc.sys.localStorage.setItem(this.storageKeyBGM, this.isEnableBGM);
        this.enableMusicFunc && clearTimeout(this.enableMusicFunc);
        this.enableMusicFunc = setTimeout(function() {
          _this7.isEnableBGM ? _this7.currentBGM ? _this7.resumeMusic() : _this7.playMainBGM() : _this7.pauseMusic();
          _this7.enableMusicFunc = null;
        }, 100);
      },
      setVolume: function setVolume(id) {
        var volume = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
        if (0 !== id && !id) return false;
        this.webSound ? "number" != typeof id && id.volume(volume) : cc.audioEngine.setVolume(id, volume);
        return true;
      },
      getVolume: function getVolume(id) {
        if (0 !== id && !id) return 0;
        if (!this.webSound) return cc.audioEngine.getVolume(id);
        if ("number" != typeof id) return id.volume();
      },
      getPlayState: function getPlayState(id) {
        if (0 !== id && !id) return SoundStateEnum.NONE;
        var state = SoundStateEnum.NONE;
        if (this.webSound) "number" != typeof id && id.playing() && (state = SoundStateEnum.PLAYING); else switch (cc.audioEngine.getState(id)) {
         case cc.audioEngine.AudioState.PLAYING:
          state = SoundStateEnum.PLAYING;
        }
        return state;
      },
      getMusicState: function getMusicState() {
        var id = this.webSound ? this.musicInstance : this.ccMusic;
        return this.getPlayState(id);
      },
      getDuration: function getDuration(id) {
        if (null === id || void 0 === id) return 0;
        if (!this.webSound) return cc.audioEngine.getDuration(id);
        if ("number" != typeof id) return id.duration();
      },
      onDestroy: function onDestroy() {
        this.gameNode && this.gameNode.off(cc.Node.EventType.TOUCH_END, this.startPlayWithUserGesture, this, true);
        cc.game.off(cc.game.EVENT_SHOW, this.onGameShow, this);
        cc.game.off(cc.game.EVENT_HIDE, this.onGameHide, this);
        if (this.webSound) {
          for (var i in this.howlMap) this.howlMap[i] == this.musicInstance && this.keepAudioSession || this.howlMap[i].unload();
          if (this.keepAudioSession) {
            if (this.musicInstance) {
              this.musicInstance.volume(.001);
              window["_v_audio_backgroud_session"] = {
                uuid: this.bgMusicUUID,
                bgMusicId: this.bgMusicId,
                instance: this.musicInstance
              };
            }
          } else window["_v_audio_backgroud_session"] = null;
        }
        this.playingSounds = [];
        clearTimeout(this.enableMusicFunc);
      }
    });
    module.exports = {
      SoundStateEnum: SoundStateEnum,
      SoundStorageKeys: SoundStorageKeys,
      WebSoundPlayer: WebSoundPlayer
    };
    cc._RF.pop();
  }, {
    SoundPlayer: "SoundPlayer"
  } ],
  XOCypher: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b4635rv19pGzYjq5AbHvM8P", "XOCypher");
    "use strict";
    var XORCipher = {
      encode: function encode(key, data) {
        data = xor_encrypt(key, data);
        return b64_encode(data);
      },
      decode: function decode(key, data) {
        data = b64_decode(data);
        return xor_decrypt(key, data);
      },
      encode_new: function encode_new(key, data) {
        data = xor_encrypt_new(key, data);
        return b64_encode(data);
      },
      decode_new: function decode_new(key, data) {
        data = b64_decode(data);
        return xor_decrypt_new(key, data);
      },
      encode_tutorial: function encode_tutorial(data) {
        var key = randomString(10);
        data = xor_encrypt_new(key, data);
        return b64_encode(data) + key;
      },
      decode_tutorial: function decode_tutorial(data) {
        var key = data.slice(-10);
        data = b64_decode(data.slice(0, -10));
        return xor_decrypt_new(key, data);
      }
    };
    function stringToUtf8ByteArray(str) {
      var out = [], p = 0;
      for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) out[p++] = c; else if (c < 2048) {
          out[p++] = c >> 6 | 192;
          out[p++] = 63 & c | 128;
        } else if (55296 == (64512 & c) && i + 1 < str.length && 56320 == (64512 & str.charCodeAt(i + 1))) {
          c = 65536 + ((1023 & c) << 10) + (1023 & str.charCodeAt(++i));
          out[p++] = c >> 18 | 240;
          out[p++] = c >> 12 & 63 | 128;
          out[p++] = c >> 6 & 63 | 128;
          out[p++] = 63 & c | 128;
        } else {
          out[p++] = c >> 12 | 224;
          out[p++] = c >> 6 & 63 | 128;
          out[p++] = 63 & c | 128;
        }
      }
      return out;
    }
    function utf8ByteArrayToString(bytes) {
      var out = [], pos = 0, c = 0;
      while (pos < bytes.length) {
        var c1 = bytes[pos++];
        if (c1 < 128) out[c++] = String.fromCharCode(c1); else if (c1 > 191 && c1 < 224) {
          var c2 = bytes[pos++];
          out[c++] = String.fromCharCode((31 & c1) << 6 | 63 & c2);
        } else if (c1 > 239 && c1 < 365) {
          var c2 = bytes[pos++];
          var c3 = bytes[pos++];
          var c4 = bytes[pos++];
          var u = ((7 & c1) << 18 | (63 & c2) << 12 | (63 & c3) << 6 | 63 & c4) - 65536;
          out[c++] = String.fromCharCode(55296 + (u >> 10));
          out[c++] = String.fromCharCode(56320 + (1023 & u));
        } else {
          var c2 = bytes[pos++];
          var c3 = bytes[pos++];
          out[c++] = String.fromCharCode((15 & c1) << 12 | (63 & c2) << 6 | 63 & c3);
        }
      }
      return out.join("");
    }
    var b64_table = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    function b64_encode(data) {
      var o1, o2, o3, h1, h2, h3, h4, bits, r, i = 0, enc = "";
      if (!data) return data;
      do {
        o1 = data[i++];
        o2 = data[i++];
        o3 = data[i++];
        bits = o1 << 16 | o2 << 8 | o3;
        h1 = bits >> 18 & 63;
        h2 = bits >> 12 & 63;
        h3 = bits >> 6 & 63;
        h4 = 63 & bits;
        enc += b64_table.charAt(h1) + b64_table.charAt(h2) + b64_table.charAt(h3) + b64_table.charAt(h4);
      } while (i < data.length);
      r = data.length % 3;
      return (r ? enc.slice(0, r - 3) : enc) + "===".slice(r || 3);
    }
    function b64_decode(data) {
      var o1, o2, o3, h1, h2, h3, h4, bits, i = 0, result = [];
      if (!data) return data;
      data += "";
      do {
        h1 = b64_table.indexOf(data.charAt(i++));
        h2 = b64_table.indexOf(data.charAt(i++));
        h3 = b64_table.indexOf(data.charAt(i++));
        h4 = b64_table.indexOf(data.charAt(i++));
        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;
        o1 = bits >> 16 & 255;
        o2 = bits >> 8 & 255;
        o3 = 255 & bits;
        result.push(o1);
        if (64 !== h3) {
          result.push(o2);
          64 !== h4 && result.push(o3);
        }
      } while (i < data.length);
      return result;
    }
    function xor_encrypt(key, data) {
      key = stringToUtf8ByteArray(key);
      return stringToUtf8ByteArray(data).map(function(c, i) {
        return c ^ Math.floor(i % key.length);
      });
    }
    function xor_decrypt(key, data) {
      key = stringToUtf8ByteArray(key);
      return utf8ByteArrayToString(data.map(function(c, i) {
        return c ^ Math.floor(i % key.length);
      }));
    }
    function xor_encrypt_new(key, data) {
      key = stringToUtf8ByteArray(key);
      return stringToUtf8ByteArray(data).map(function(c, i) {
        return c ^ key[Math.floor(i % key.length)];
      });
    }
    function xor_decrypt_new(key, data) {
      key = stringToUtf8ByteArray(key);
      return utf8ByteArrayToString(data.map(function(c, i) {
        return c ^ key[Math.floor(i % key.length)];
      }));
    }
    function randomString() {
      var length = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10;
      var letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
      var result = "";
      var lettersLength = letters.length;
      for (var i = 0; i < length; i++) {
        var randomIndex = Math.floor(Math.random() * lettersLength);
        result += letters.charAt(randomIndex);
      }
      return result;
    }
    module.exports = XORCipher;
    cc._RF.pop();
  }, {} ],
  _FirstScene: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d60e9TxeFZJwLxBLfuGUtOb", "_FirstScene");
    "use strict";
    cc.Class({
      extends: cc.Component,
      update: function update() {
        var globalState = require("globalState");
        var firstSceneLoad = globalState.getStatusFirstSceneLoad();
        if (firstSceneLoad && "function" === typeof onFirstSceneLaunched) {
          this.node.runAction(cc.sequence(cc.delayTime(1), cc.callFunc(function() {
            onFirstSceneLaunched();
          })));
          globalState.setStatusFirstSceneLoad(false);
        }
      }
    });
    cc._RF.pop();
  }, {
    globalState: "globalState"
  } ],
  animateNumberLabel: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "07e37rdsyVB8bTMlwDmJZ+V", "animateNumberLabel");
    "use strict";
    var _require = require("utils"), formatMoney = _require.formatMoney, formatWalletMoney = _require.formatWalletMoney, getUtilConfig = _require.getUtilConfig, formatCoin = _require.formatCoin;
    cc.Class({
      extends: cc.Component,
      onLoad: function onLoad() {
        this.node.onUpdateValue = this.onUpdateValue.bind(this);
        this.node.onUpdateWallet = this.onUpdateWallet.bind(this);
        this.node.onUpdateWinValue = this.onUpdateWinValue.bind(this);
        this.node.onUpdateCredit = this.onUpdateCredit.bind(this);
        this.node.setDecimalCount = this.setDecimalCount.bind(this);
        this.node.resetValue = this.resetValue.bind(this);
        this.currentValue = 0;
        this.decimalCount = null;
      },
      setDecimalCount: function setDecimalCount() {
        var decimalCount = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        this.decimalCount = decimalCount;
      },
      resetValue: function resetValue() {
        if (!this.node) return;
        clearInterval(this.timer);
        var label = this.node.getComponent(cc.Label);
        label.string = "";
        this.currentValue = 0;
        var utilConfig = getUtilConfig && getUtilConfig();
        utilConfig && utilConfig.CURRENCY_CONFIG && label["_tweenMoney"] && label["_tweenMoney"].stop();
      },
      tweenMoneyByCurrency: function tweenMoneyByCurrency(label, duration, endValue) {
        var _this = this;
        label["_tweenMoney"] && label["_tweenMoney"].stop();
        var currentVal = this.currentValue || 0;
        this.currentValue = currentVal;
        var _target = {
          value: currentVal
        };
        var tweenMoney = cc.tween(_target).to(duration, {
          value: endValue
        }, {
          progress: function progress(start, end, current, ratio) {
            _this.currentValue = current;
            label.string = formatMoney(Number(current), _this.decimalCount);
            return start + (end - start) * ratio;
          }
        }).call(function() {
          _this.currentValue = endValue;
          label.string = formatMoney(endValue, _this.decimalCount);
          label["_tweenMoney"] = null;
        }).start();
        label["_tweenMoney"] = tweenMoney;
        return tweenMoney;
      },
      onUpdateValue: function onUpdateValue() {
        var end = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        var animationDuration = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e3;
        var acceptRunDown = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
        var _this2 = this;
        var prefix = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "";
        var suffixes = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "";
        clearInterval(this.timer);
        if (!this.node) return;
        var utilConfig = getUtilConfig && getUtilConfig();
        if (utilConfig && utilConfig.CURRENCY_CONFIG && end >= 0) {
          var _label = this.node.getComponent(cc.Label);
          var _start = this.currentValue ? this.currentValue : 0;
          if (!acceptRunDown && end < _start) {
            this.currentValue = end;
            _label.string = formatMoney(this.currentValue, this.decimalCount);
            return;
          }
          this._tweenMoney = this.tweenMoneyByCurrency(_label, animationDuration / 1e3, end);
          return;
        }
        end = parseInt(end);
        var label = this.node.getComponent(cc.Label);
        var start = this.currentValue ? this.currentValue : 0;
        if (!acceptRunDown && end < start) {
          this.currentValue = end;
          label.string = prefix + formatMoney(this.currentValue) + suffixes;
          return;
        }
        var range = end - start;
        var minTimer = 50;
        var stepTime = Math.abs(Math.floor(animationDuration / range));
        stepTime = Math.max(stepTime, minTimer);
        var startTime = new Date().getTime();
        var endTime = startTime + animationDuration;
        this.timer;
        var run = function run() {
          var now = new Date().getTime();
          var remaining = Math.max((endTime - now) / animationDuration, 0);
          var value = Math.round(end - remaining * range);
          _this2.currentValue = value;
          label.string = prefix + formatMoney(value) + suffixes;
          value == end && clearInterval(_this2.timer);
        };
        this.timer = setInterval(run, stepTime);
        run();
      },
      onUpdateWinValue: function onUpdateWinValue() {
        var end = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        var animationDuration = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e3;
        var callbackWin = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        var isSkip = arguments[3];
        var millisecond = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1e3;
        var timeUpdate = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 50;
        var _this3 = this;
        var superWinRate = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 50;
        var megaWinRate = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : 30;
        clearInterval(this.timer);
        if (!this.node) return;
        var label = this.node.getComponent(cc.Label);
        var timeRate = millisecond / timeUpdate;
        this.currentValue = this.currentValue || 0;
        var valuePerTimes = Math.round(end / (animationDuration / millisecond * timeRate));
        var valueAccelerator = 2 * (end - valuePerTimes * timeUpdate) / Math.pow(timeUpdate, 2);
        var run = function run() {
          _this3.currentValue = Math.round(_this3.currentValue <= end / 2 ? _this3.currentValue + valuePerTimes + valueAccelerator : _this3.currentValue + valuePerTimes - valueAccelerator);
          var value = _this3.currentValue;
          label.string = formatMoney(value >= end ? end : value);
          var isSuper = end >= callbackWin.currentBetData * superWinRate;
          var isMega = end >= callbackWin.currentBetData * megaWinRate;
          var finalWin = isSuper ? "super" : isMega ? "mega" : "big";
          var per = value / end;
          per = per > 1 ? 1 : per;
          callbackWin.enterFrame(per, finalWin);
          value >= callbackWin.currentBetData * superWinRate && !isSkip ? callbackWin.runSuperWin() : value >= callbackWin.currentBetData * megaWinRate && !isSkip ? callbackWin.runMegaWin() : value + 2 * callbackWin.currentBetData != end || isSkip || callbackWin.runFinishBigWin();
          if (value >= end) {
            callbackWin.runFinishWin();
            clearInterval(_this3.timer);
          }
        };
        this.timer = setInterval(run, timeUpdate);
        run();
      },
      onUpdateWallet: function onUpdateWallet(end) {
        var _this4 = this;
        var animationDuration = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e3;
        clearInterval(this.timer);
        if (!this.node) return;
        var utilConfig = getUtilConfig && getUtilConfig();
        if (utilConfig && utilConfig.CURRENCY_CONFIG) {
          var _label2 = this.node.getComponent(cc.Label);
          this._tweenWallet = this.tweenWalletByCurrency(_label2, animationDuration / 1e3, end);
          return;
        }
        end = parseInt(end);
        var label = this.node.getComponent(cc.Label);
        var start = this.currentValue ? this.currentValue : 0;
        var range = end - start;
        var minTimer = 50;
        var stepTime = Math.abs(Math.floor(animationDuration / range));
        stepTime = Math.max(stepTime, minTimer);
        var startTime = new Date().getTime();
        var endTime = startTime + animationDuration;
        this.timer;
        var run = function run() {
          var now = new Date().getTime();
          var remaining = Math.max((endTime - now) / animationDuration, 0);
          var value = Math.round(end - remaining * range);
          _this4.currentValue = value;
          label.string = formatWalletMoney(value);
          value == end && clearInterval(_this4.timer);
        };
        this.timer = setInterval(run, stepTime);
        run();
      },
      tweenWalletByCurrency: function tweenWalletByCurrency(label, duration, endValue) {
        var _this5 = this;
        label["_tweenMoney"] && label["_tweenMoney"].stop();
        var currentVal = this.currentValue || 0;
        this.currentValue = currentVal;
        var _target = {
          value: currentVal
        };
        var tweenMoney = cc.tween(_target).to(duration, {
          value: endValue
        }, {
          progress: function progress(start, end, current, ratio) {
            _this5.currentValue = Number(current);
            label.string = formatWalletMoney(Number(_this5.currentValue));
            return start + (end - start) * ratio;
          }
        }).call(function() {
          _this5.currentValue = endValue;
          label.string = formatWalletMoney(endValue, _this5.decimalCount);
          label["_tweenMoney"] = null;
        }).start();
        label["_tweenMoney"] = tweenMoney;
        return tweenMoney;
      },
      onDestroy: function onDestroy() {
        this._tweenMoney && this._tweenMoney.stop();
        this._tweenWallet && this._tweenWallet.stop();
        this._tweenCredit && this._tweenCredit.stop();
        clearInterval(this.timer);
      },
      onUpdateCredit: function onUpdateCredit() {
        var end = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
        var animationDuration = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e3;
        var acceptRunDown = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
        var prefix = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "";
        var suffixes = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "";
        if (!this.node) return;
        var utilConfig = getUtilConfig && getUtilConfig();
        if (utilConfig && utilConfig.CURRENCY_CONFIG && end >= 0) {
          var label = this.node.getComponent(cc.Label);
          var start = this.currentValue ? this.currentValue : 0;
          if (!acceptRunDown && end < start) {
            this.currentValue = end;
            label.string = formatCoin(this.currentValue);
            return;
          }
          this._tweenCredit = this.tweenCredit(label, animationDuration / 1e3, end);
          return;
        }
        this.onUpdateValue(end, animationDuration, acceptRunDown, prefix, suffixes);
      },
      tweenCredit: function tweenCredit(label, duration, endValue) {
        var _this6 = this;
        label["_tweenMoney"] && label["_tweenMoney"].stop();
        var currentVal = this.currentValue || 0;
        this.currentValue = currentVal;
        var _target = {
          value: currentVal
        };
        var tweenMoney = cc.tween(_target).to(duration, {
          value: endValue
        }, {
          progress: function progress(start, end, current, ratio) {
            label.string = formatCoin(Number(current));
            return start + (end - start) * ratio;
          }
        }).call(function() {
          _this6.currentValue = endValue;
          label.string = formatCoin(endValue);
          label["_tweenMoney"] = null;
        }).start();
        label["_tweenMoney"] = tweenMoney;
        return tweenMoney;
      }
    });
    cc._RF.pop();
  }, {
    utils: "utils"
  } ],
  animateNumberZoom: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e1b572d6R5MCqsZXKClMhJB", "animateNumberZoom");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        startSize: 0,
        maxSize: 1.2,
        minSize: .8,
        target: cc.Node
      },
      spawn: function spawn(text) {
        var _this = this;
        this.node.active = true;
        this.target.getComponent(cc.Label).string = "x" + text;
        this.target.scaleX = this.startSize;
        this.target.scaleY = this.startSize;
        this.target.runAction(cc.sequence(cc.scaleTo(.5, this.maxSize, this.maxSize), cc.callFunc(function() {
          _this.target.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.4, _this.minSize, _this.minSize), cc.scaleTo(.4, _this.maxSize, _this.maxSize))));
        })));
      }
    });
    cc._RF.pop();
  }, {} ],
  animatePopup: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9d54bmfjEtIraWMXwPUHngl", "animatePopup");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        minSize: {
          default: 0
        },
        normalSize: {
          default: 0
        },
        maxSize: {
          default: 0
        },
        scaleUpTime: {
          default: .25
        },
        scaleDownTime: {
          default: .25
        },
        scaleNormalTime: {
          default: .25
        },
        isRunOnEnable: {
          default: false
        }
      },
      start: function start() {
        if (this.isRunOnEnable) return;
        this.runAnimation();
      },
      onEnable: function onEnable() {
        this.isRunOnEnable && this.runAnimation();
      },
      runAnimation: function runAnimation() {
        var actionScaleUp = cc.scaleTo(this.scaleUpTime, this.maxSize);
        var actionScaleDown = cc.scaleTo(this.scaleDownTime, this.minSize);
        var actionScaleToNormalSize = cc.scaleTo(this.scaleNormalTime, this.normalSize);
        var sequenceAction = cc.sequence(actionScaleUp, actionScaleDown, actionScaleToNormalSize);
        this.node.runAction(sequenceAction);
      }
    });
    cc._RF.pop();
  }, {} ],
  appConfig: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "111b5v6xIJDSrZu0Z5OcZR7", "appConfig");
    "use strict";
    var urlConstant = {
      API_URL: "https://api.staging.enostd.gay/",
      SOCKET_URL: "wss://sock.staging.enostd.gay",
      TOKEN: "kycao",
      USER_TOKEN: "user_token",
      LOGIN_IFRAME: true,
      URL_TOKEN: "token",
      URL_CODE: "code",
      LOBBY_SCENE_NAME: "lobby-staging-test",
      LOGIN_SCENE_NAME: "login-staging-test",
      IPMasterBase: "wss://dev.fish.enostd.gay/lobby-1900/",
      IPMaster1: "wss://dev.fish.enostd.gay/lobby-1999/"
    };
    module.exports = urlConstant;
    cc._RF.pop();
  }, {} ],
  app: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1b4a1bzNh1NBYbk+KnJBGh8", "app");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {},
      onLoad: function onLoad() {
        cc.game.on(cc.game.EVENT_HIDE, this.onHideApp, this);
        cc.game.on(cc.game.EVENT_SHOW, this.onShowApp, this);
      },
      start: function start() {},
      onDestroy: function onDestroy() {
        cc.game.off(cc.game.EVENT_HIDE, this.onHideApp, this);
        cc.game.off(cc.game.EVENT_SHOW, this.onShowApp, this);
      },
      onHideApp: function onHideApp() {
        cc.log("app.js game hide APP::PAUSE ");
      },
      onShowApp: function onShowApp() {
        cc.log("app.js game show APP:RESUME ");
      }
    });
    cc._RF.pop();
  }, {} ],
  authenPusher: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3aba4KDU2dLSLL0zKhv+Jh7", "authenPusher");
    "use strict";
    function connectingPusher() {
      var globalNetwork = require("globalNetwork");
      var settingPusher = function settingPusher(_ref) {
        var token = _ref.token;
        var loginSuccess = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function() {};
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC = loadConfigAsync.getConfig(), USER_TOKEN = _loadConfigAsync$getC.USER_TOKEN;
        cc.sys.localStorage.setItem(USER_TOKEN, token);
        loginSuccess();
      };
      var leavePusher = function leavePusher() {
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC2 = loadConfigAsync.getConfig(), USER_TOKEN = _loadConfigAsync$getC2.USER_TOKEN;
        cc.sys.localStorage.setItem(USER_TOKEN, "");
        globalNetwork.triggerUserLogout();
      };
      return {
        settingPusher: settingPusher,
        leavePusher: leavePusher
      };
    }
    module.exports = new connectingPusher();
    cc._RF.pop();
  }, {
    globalNetwork: "globalNetwork",
    loadConfigAsync: "loadConfigAsync"
  } ],
  baseActor: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "34e5eZvKdZITbWe5K996I+x", "baseActor");
    "use strict";
    cc.Class({
      beforeEnter: function beforeEnter() {},
      enter: function enter() {},
      afterEnter: function afterEnter() {},
      beforeExit: function beforeExit() {},
      exit: function exit() {},
      afterExit: function afterExit() {},
      enable: function enable() {},
      disable: function disable() {},
      destroy: function destroy() {}
    });
    cc._RF.pop();
  }, {} ],
  baseAssetsManager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "dea1ag90KVP+aJg5tng2yY2", "baseAssetsManager");
    "use strict";
    cc.Class({
      properties: {},
      onCheckAllResource: function onCheckAllResource(resourcePrefix, callbackProgress, callbackLoaded) {
        var _this = this;
        this.loaded = false;
        this.loadSpine = 0;
        this.loadSound = 0;
        this.loadPrefab = 0;
        this.loadSharePrefab = 0;
        this.loadSprite = 0;
        this.loadParticle = 0;
        this.prefabData = {};
        this.spriteData = {};
        this.spineData = {};
        this.particleData = {};
        this.soundData = {};
        this.total = 6;
        cc.loader.loadResDir(resourcePrefix + "/Sprite", cc.SpriteFrame, function(loaded, total) {
          _this.loadSprite = total ? loaded / total : 1;
          _this.checkResourceProgress(callbackProgress);
        }, function(err, assets) {
          for (var i = 0; i < assets.length; i++) _this.spriteData[assets[i]._name] = assets[i];
          _this.loadSprite = 1;
          _this.checkResourceFinish(callbackLoaded);
        });
        cc.loader.loadResDir(resourcePrefix + "/Particle", cc.Particle, function(loaded, total) {
          _this.loadParticle = total ? loaded / total : 1;
          _this.checkResourceProgress(callbackProgress);
        }, function(err, assets, urls) {
          for (var i = 0; i < assets.length; i++) {
            var symbolText = urls[i].replace(resourcePrefix + "/Particle/", "").split("/");
            _this.particleData[symbolText[0]] || (_this.particleData[symbolText[0]] = {});
            _this.particleData[symbolText[0]][symbolText[1]] = assets[i];
          }
          _this.loadParticle = 1;
          _this.checkResourceFinish(callbackLoaded);
        });
        cc.loader.loadResDir(resourcePrefix + "/SFX", cc.AudioClip, function(loaded, total) {
          _this.loadSound = total ? loaded / total : 1;
          _this.checkResourceProgress(callbackProgress);
        }, function(err, assets) {
          for (var i = 0; i < assets.length; i++) _this.soundData[assets[i]._name] = assets[i];
          _this.loadSound = 1;
          _this.checkResourceFinish(callbackLoaded);
        });
        cc.loader.loadResDir(resourcePrefix + "/Prefab", cc.Prefab, function(loaded, total) {
          _this.loadPrefab = total ? loaded / total : 1;
          _this.checkResourceProgress(callbackProgress);
        }, function(err, assets) {
          for (var i = 0; i < assets.length; i++) _this.prefabData[assets[i]._name] = assets[i];
          _this.loadPrefab = 1;
          _this.checkResourceFinish(callbackLoaded);
        });
        cc.loader.loadResDir("share/Prefab", cc.Prefab, function(loaded, total) {
          _this.loadSharePrefab = total ? loaded / total : 1;
          _this.checkResourceProgress(callbackProgress);
        }, function(err, assets) {
          for (var i = 0; i < assets.length; i++) _this.prefabData[assets[i]._name] = assets[i];
          _this.loadSharePrefab = 1;
          _this.checkResourceFinish(callbackLoaded);
        });
        cc.loader.loadResDir(resourcePrefix + "/Spine", sp.SkeletonData, function(loaded, total) {
          _this.loadSpine = total ? loaded / total : 1;
          _this.checkResourceProgress(callbackProgress);
        }, function(err, assets, urls) {
          for (var i = 0; i < assets.length; i++) {
            var symbolText = urls[i].replace(resourcePrefix + "/Spine/", "").replace("/skeleton", "");
            _this.spineData[symbolText] = assets[i];
          }
          _this.loadSpine = 1;
          _this.checkResourceFinish(callbackLoaded);
        });
      },
      checkResourceProgress: function checkResourceProgress(callbackProgress) {
        var percent = (this.loadSprite + this.loadSpine + this.loadSound + this.loadPrefab + this.loadSharePrefab + this.loadParticle) / this.total * 100;
        callbackProgress(Math.floor(percent));
      },
      checkResourceFinish: function checkResourceFinish(callbackLoaded) {
        if (this.loaded) return;
        if (this.loadSprite + this.loadSpine + this.loadSound + this.loadPrefab + this.loadSharePrefab + this.loadParticle == this.total) {
          this.loaded = true;
          callbackLoaded();
        }
      }
    });
    cc._RF.pop();
  }, {} ],
  baseDirector: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fe7a41PYoZMjKUx2DO8UsLd", "baseDirector");
    "use strict";
    cc.Class({
      switchMode: function switchMode() {
        if (!this.gameTrialSupport) return;
        if (this.trialMode) {
          cc.log("Switch Back To Real");
          this.trialMode = false;
          this.gameStateManager.switchToReal();
        } else {
          cc.log("Switch To Trial");
          this.trialMode = true;
          this.gameStateManager.switchToTrial();
        }
      },
      runAction: function runAction(actionName, data) {
        if (!this.writer || "function" !== typeof this.writer["makeScript" + actionName]) return;
        var script = this.writer["makeScript" + actionName](data);
        this.script = script;
        this.executeNextScript(script);
      },
      executeNextScript: function executeNextScript(script) {
        if (!script || 0 == script.length) return;
        var _script$shift = script.shift(), command = _script$shift.command, data = _script$shift.data;
        this[command] && "function" === typeof this[command] && this[command](script, data);
      },
      destroyData: function destroyData() {
        this.runAction = function() {};
        this.executeNextScript = function() {};
        this.script = [];
      }
    });
    cc._RF.pop();
  }, {} ],
  betCard: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "51011OjsmlLrp4fU2Zm9qpX", "betCard");
    "use strict";
    var Points = [ "AC", "2C", "3C", "4C", "5C", "6C", "7C", "8C", "9C", "MC", "JC", "QC", "KC", "AR", "2R", "3R", "4R", "5R", "6R", "7R", "8R", "9R", "MR", "JR", "QR", "KR", "AH", "2H", "3H", "4H", "5H", "6H", "7H", "8H", "9H", "MH", "JH", "QH", "KH", "AB", "2B", "3B", "4B", "5B", "6B", "7B", "8B", "9B", "MB", "JB", "QB", "KB" ];
    cc.Class({
      extends: cc.Component,
      properties: {
        cardBG: cc.Sprite,
        mainPic: cc.Sprite,
        cards: {
          default: [],
          type: cc.SpriteFrame
        },
        backBG: {
          default: [],
          type: cc.SpriteFrame
        },
        point: "",
        overlay: cc.Node
      },
      init: function init(card) {
        var point = card.point, _card$isFaceUp = card.isFaceUp, isFaceUp = void 0 !== _card$isFaceUp && _card$isFaceUp, _card$backStyle = card.backStyle, backStyle = void 0 === _card$backStyle ? 0 : _card$backStyle;
        point && (this.mainPic.spriteFrame = this.cards[Points.indexOf(point)]);
        this.point = point;
        this.isFaceUp = isFaceUp;
        this.cardBG.spriteFrame = this.backBG[backStyle];
        this.handleFaceUp();
      },
      updateCard: function updateCard(card, noAnim) {
        var point = card.point, _card$isFaceUp2 = card.isFaceUp, isFaceUp = void 0 !== _card$isFaceUp2 && _card$isFaceUp2;
        this.point = point;
        if (point) {
          this.mainPic.spriteFrame = this.cards[Points.indexOf(point)];
          isFaceUp && this.revealUp(noAnim);
        } else this.mainPic.spriteFrame = this.backBG[0];
      },
      scaleTo: function scaleTo(num) {
        this.node.scaleX = num;
        this.node.scaleY = num;
      },
      updatePoint: function updatePoint(point) {
        this.point = point;
        this.mainPic.spriteFrame = this.cards[Points.indexOf(point)];
      },
      handleFaceUp: function handleFaceUp() {
        this.mainPic.node.active = this.isFaceUp;
      },
      reveal: function reveal(noAnim) {
        var _this = this;
        this.isFaceUp = !this.isFaceUp;
        this.mainPic.node.active = true;
        if (noAnim) {
          this.handleFaceUp();
          return;
        }
        var _node$getContentSize = this.node.getContentSize(), height = _node$getContentSize.height;
        var actionBy = cc.scaleTo(.2, 0, 1);
        var skewBy = cc.skewTo(.2, height / 10, height / 10);
        var actionTo = cc.scaleTo(.2, 1, 1);
        var skewTo = cc.skewTo(.2, 0, 0);
        this.node.runAction(cc.sequence(cc.callFunc(function() {
          _this.node.runAction(actionBy);
          _this.node.runAction(skewBy);
        }), cc.delayTime(.2), cc.callFunc(function() {
          _this.handleFaceUp();
        }), cc.callFunc(function() {
          _this.node.runAction(actionTo);
          _this.node.runAction(skewTo);
        })));
      },
      revealUp: function revealUp(noAnim) {
        !this.isFaceUp && this.point && this.reveal(noAnim);
      },
      showOverlay: function showOverlay(isActive) {
        this.overlay.active = isActive;
      }
    });
    cc._RF.pop();
  }, {} ],
  betItemController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4c530RrDKJNmoJrm/bYD6rG", "betItemController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var data_1 = require("./data");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var betItemController = function(_super) {
      __extends(betItemController, _super);
      function betItemController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.betValue = 0;
        _this.numBuffalos = "";
        _this.oddValue = "";
        _this.betLabel = null;
        _this.betButtonBackground = null;
        return _this;
      }
      betItemController.prototype.bet = function() {
        var chipValueBet = data_1.Data.instance.chipCurrentValues;
        this.betValue += Number(chipValueBet);
        this.setValueLabel(this.numBuffalos, this.oddValue, this.betValue);
        this.setColorButtonBackground(data_1.ccData.instance.yellow);
      };
      betItemController.prototype.getBet = function() {
        if (this.betValue <= 0) return;
        return this.node.name + ":" + this.betValue;
      };
      betItemController.prototype.setValueLabel = function(numBuffalos, oddValue, moneyBet) {
        this.numBuffalos = numBuffalos;
        this.oddValue = oddValue;
        var moneyBetString = moneyBet > 0 ? moneyBet + "K" : "";
        this.betLabel.string = "C\u1eb7p B\xf2: " + numBuffalos + " x" + oddValue + "\n" + moneyBetString;
      };
      betItemController.prototype.setBetButtonBackground = function(node) {
        this.betButtonBackground = node;
      };
      betItemController.prototype.setColorButtonBackground = function(color) {
        this.betButtonBackground.color = color;
      };
      betItemController.prototype.resetBetValue = function() {
        this.betValue = 0;
        this.setValueLabel(this.numBuffalos, this.oddValue, 0);
        this.setColorButtonBackground(data_1.ccData.instance.white);
      };
      __decorate([ property(cc.Label) ], betItemController.prototype, "betLabel", void 0);
      __decorate([ property(cc.Node) ], betItemController.prototype, "betButtonBackground", void 0);
      betItemController = __decorate([ ccclass ], betItemController);
      return betItemController;
    }(cc.Component);
    exports.default = betItemController;
    cc._RF.pop();
  }, {
    "./data": "data"
  } ],
  betStateManager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3154fhJ2etJ8KiHYbmMPDSK", "betStateManager");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaCommandID_1 = require("./cc-arcade-base/Scripts/Network/gaCommandID");
    var data_1 = require("./data");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var BetStateManager = function(_super) {
      __extends(BetStateManager, _super);
      function BetStateManager() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.bettingCurrent = [];
        _this.betButtonItems = [];
        return _this;
      }
      BetStateManager.prototype.getODDs = function(response) {
        var oddsTemp = response.data.exD.ed.split("#");
        return oddsTemp[3].split(",");
      };
      BetStateManager.prototype.instantiateBet = function(oddsData, oddsItemPrefab, betPools, betBackground) {
        var _this = this;
        oddsData.sort(function() {
          return -1;
        });
        oddsData.forEach(function(element) {
          var buffalosNumber = element.split(";")[0];
          var indexBetRow = Number(buffalosNumber.charAt(0)) - 1;
          var oddsValue = element.split(";")[1];
          var betButtonItem = cc.instantiate(oddsItemPrefab);
          betButtonItem.name = buffalosNumber;
          betButtonItem.parent = betPools[indexBetRow];
          _this.betButtonItems.push(betButtonItem);
          var betItemController = betButtonItem.getComponent("betItemController");
          betItemController.setValueLabel(buffalosNumber, oddsValue, 0);
          var betButtonBackground = betBackground[indexBetRow].getChildByName(betButtonItem.name);
          betItemController.setBetButtonBackground(betButtonBackground);
        });
      };
      BetStateManager.prototype.bet = function() {
        var _this = this;
        var bLns = [];
        var gn = data_1.Data.instance.gameNumber;
        var bId = "10";
        this.betButtonItems.forEach(function(element) {
          var betData = element.getComponent("betItemController").getBet();
          if (betData) {
            bLns.push(betData);
            _this.bettingCurrent.push(element);
          }
        });
        var payload = {
          event: gaCommandID_1.gaGameCMD.R_PLAY_GAME,
          data: {
            bId: bId,
            bLns: bLns,
            gn: gn
          }
        };
        return payload;
      };
      BetStateManager.prototype.showResult = function() {
        var buffalosWin = data_1.Data.instance.getBuffalosWin();
        var resultString = "Oder Finish: " + data_1.Data.instance.getOderFinish() + "\nBuffalo Win: " + buffalosWin + "\nBet Money Win: " + data_1.Data.instance.getMoneyWin() + "K";
        return resultString;
      };
      BetStateManager = __decorate([ ccclass ], BetStateManager);
      return BetStateManager;
    }(cc.Component);
    exports.default = BetStateManager;
    cc._RF.pop();
  }, {
    "./cc-arcade-base/Scripts/Network/gaCommandID": "gaCommandID",
    "./data": "data"
  } ],
  big: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1caf3K4bAxI9rCwRqkWQSLA", "big");
    "use strict";
    (function(GLOBAL) {
      var Big, DP = 20, RM = 1, MAX_DP = 1e6, MAX_POWER = 1e6, NE = -7, PE = 21, STRICT = false, NAME = "[big.js] ", INVALID = NAME + "Invalid ", INVALID_DP = INVALID + "decimal places", INVALID_RM = INVALID + "rounding mode", DIV_BY_ZERO = NAME + "Division by zero", P = {}, UNDEFINED = void 0, NUMERIC = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
      function _Big_() {
        function Big(n) {
          var x = this;
          if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);
          if (n instanceof Big) {
            x.s = n.s;
            x.e = n.e;
            x.c = n.c.slice();
          } else {
            if ("string" !== typeof n) {
              if (true === Big.strict && "bigint" !== typeof n) throw TypeError(INVALID + "value");
              n = 0 === n && 1 / n < 0 ? "-0" : String(n);
            }
            parse(x, n);
          }
          x.constructor = Big;
        }
        Big.prototype = P;
        Big.DP = DP;
        Big.RM = RM;
        Big.NE = NE;
        Big.PE = PE;
        Big.strict = STRICT;
        Big.roundDown = 0;
        Big.roundHalfUp = 1;
        Big.roundHalfEven = 2;
        Big.roundUp = 3;
        return Big;
      }
      function parse(x, n) {
        var e, i, nl;
        if (!NUMERIC.test(n)) throw Error(INVALID + "number");
        x.s = "-" == n.charAt(0) ? (n = n.slice(1), -1) : 1;
        (e = n.indexOf(".")) > -1 && (n = n.replace(".", ""));
        if ((i = n.search(/e/i)) > 0) {
          e < 0 && (e = i);
          e += +n.slice(i + 1);
          n = n.substring(0, i);
        } else e < 0 && (e = n.length);
        nl = n.length;
        for (i = 0; i < nl && "0" == n.charAt(i); ) ++i;
        if (i == nl) x.c = [ x.e = 0 ]; else {
          for (;nl > 0 && "0" == n.charAt(--nl); ) ;
          x.e = e - i - 1;
          x.c = [];
          for (e = 0; i <= nl; ) x.c[e++] = +n.charAt(i++);
        }
        return x;
      }
      function round(x, sd, rm, more) {
        var xc = x.c;
        rm === UNDEFINED && (rm = x.constructor.RM);
        if (0 !== rm && 1 !== rm && 2 !== rm && 3 !== rm) throw Error(INVALID_RM);
        if (sd < 1) {
          more = 3 === rm && (more || !!xc[0]) || 0 === sd && (1 === rm && xc[0] >= 5 || 2 === rm && (xc[0] > 5 || 5 === xc[0] && (more || xc[1] !== UNDEFINED)));
          xc.length = 1;
          if (more) {
            x.e = x.e - sd + 1;
            xc[0] = 1;
          } else xc[0] = x.e = 0;
        } else if (sd < xc.length) {
          more = 1 === rm && xc[sd] >= 5 || 2 === rm && (xc[sd] > 5 || 5 === xc[sd] && (more || xc[sd + 1] !== UNDEFINED || 1 & xc[sd - 1])) || 3 === rm && (more || !!xc[0]);
          xc.length = sd;
          if (more) for (;++xc[--sd] > 9; ) {
            xc[sd] = 0;
            if (0 === sd) {
              ++x.e;
              xc.unshift(1);
              break;
            }
          }
          for (sd = xc.length; !xc[--sd]; ) xc.pop();
        }
        return x;
      }
      function stringify(x, doExponential, isNonzero) {
        var e = x.e, s = x.c.join(""), n = s.length;
        if (doExponential) s = s.charAt(0) + (n > 1 ? "." + s.slice(1) : "") + (e < 0 ? "e" : "e+") + e; else if (e < 0) {
          for (;++e; ) s = "0" + s;
          s = "0." + s;
        } else if (e > 0) if (++e > n) for (e -= n; e--; ) s += "0"; else e < n && (s = s.slice(0, e) + "." + s.slice(e)); else n > 1 && (s = s.charAt(0) + "." + s.slice(1));
        return x.s < 0 && isNonzero ? "-" + s : s;
      }
      P.abs = function() {
        var x = new this.constructor(this);
        x.s = 1;
        return x;
      };
      P.cmp = function(y) {
        var isneg, x = this, xc = x.c, yc = (y = new x.constructor(y)).c, i = x.s, j = y.s, k = x.e, l = y.e;
        if (!xc[0] || !yc[0]) return xc[0] ? i : yc[0] ? -j : 0;
        if (i != j) return i;
        isneg = i < 0;
        if (k != l) return k > l ^ isneg ? 1 : -1;
        j = (k = xc.length) < (l = yc.length) ? k : l;
        for (i = -1; ++i < j; ) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;
        return k == l ? 0 : k > l ^ isneg ? 1 : -1;
      };
      P.div = function(y) {
        var x = this, Big = x.constructor, a = x.c, b = (y = new Big(y)).c, k = x.s == y.s ? 1 : -1, dp = Big.DP;
        if (dp !== ~~dp || dp < 0 || dp > MAX_DP) throw Error(INVALID_DP);
        if (!b[0]) throw Error(DIV_BY_ZERO);
        if (!a[0]) {
          y.s = k;
          y.c = [ y.e = 0 ];
          return y;
        }
        var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), rl = r.length, q = y, qc = q.c = [], qi = 0, p = dp + (q.e = x.e - y.e) + 1;
        q.s = k;
        k = p < 0 ? 0 : p;
        bz.unshift(0);
        for (;rl++ < bl; ) r.push(0);
        do {
          for (n = 0; n < 10; n++) {
            if (bl != (rl = r.length)) cmp = bl > rl ? 1 : -1; else for (ri = -1, cmp = 0; ++ri < bl; ) if (b[ri] != r[ri]) {
              cmp = b[ri] > r[ri] ? 1 : -1;
              break;
            }
            if (!(cmp < 0)) break;
            for (bt = rl == bl ? b : bz; rl; ) {
              if (r[--rl] < bt[rl]) {
                ri = rl;
                for (;ri && !r[--ri]; ) r[ri] = 9;
                --r[ri];
                r[rl] += 10;
              }
              r[rl] -= bt[rl];
            }
            for (;!r[0]; ) r.shift();
          }
          qc[qi++] = cmp ? n : ++n;
          r[0] && cmp ? r[rl] = a[ai] || 0 : r = [ a[ai] ];
        } while ((ai++ < al || r[0] !== UNDEFINED) && k--);
        if (!qc[0] && 1 != qi) {
          qc.shift();
          q.e--;
          p--;
        }
        qi > p && round(q, p, Big.RM, r[0] !== UNDEFINED);
        return q;
      };
      P.eq = function(y) {
        return 0 === this.cmp(y);
      };
      P.gt = function(y) {
        return this.cmp(y) > 0;
      };
      P.gte = function(y) {
        return this.cmp(y) > -1;
      };
      P.lt = function(y) {
        return this.cmp(y) < 0;
      };
      P.lte = function(y) {
        return this.cmp(y) < 1;
      };
      P.minus = P.sub = function(y) {
        var i, j, t, xlty, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;
        if (a != b) {
          y.s = -b;
          return x.plus(y);
        }
        var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;
        if (!xc[0] || !yc[0]) {
          yc[0] ? y.s = -b : xc[0] ? y = new Big(x) : y.s = 1;
          return y;
        }
        if (a = xe - ye) {
          if (xlty = a < 0) {
            a = -a;
            t = xc;
          } else {
            ye = xe;
            t = yc;
          }
          t.reverse();
          for (b = a; b--; ) t.push(0);
          t.reverse();
        } else {
          j = ((xlty = xc.length < yc.length) ? xc : yc).length;
          for (a = b = 0; b < j; b++) if (xc[b] != yc[b]) {
            xlty = xc[b] < yc[b];
            break;
          }
        }
        if (xlty) {
          t = xc;
          xc = yc;
          yc = t;
          y.s = -y.s;
        }
        if ((b = (j = yc.length) - (i = xc.length)) > 0) for (;b--; ) xc[i++] = 0;
        for (b = i; j > a; ) {
          if (xc[--j] < yc[j]) {
            for (i = j; i && !xc[--i]; ) xc[i] = 9;
            --xc[i];
            xc[j] += 10;
          }
          xc[j] -= yc[j];
        }
        for (;0 === xc[--b]; ) xc.pop();
        for (;0 === xc[0]; ) {
          xc.shift();
          --ye;
        }
        if (!xc[0]) {
          y.s = 1;
          xc = [ ye = 0 ];
        }
        y.c = xc;
        y.e = ye;
        return y;
      };
      P.mod = function(y) {
        var ygtx, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;
        if (!y.c[0]) throw Error(DIV_BY_ZERO);
        x.s = y.s = 1;
        ygtx = 1 == y.cmp(x);
        x.s = a;
        y.s = b;
        if (ygtx) return new Big(x);
        a = Big.DP;
        b = Big.RM;
        Big.DP = Big.RM = 0;
        x = x.div(y);
        Big.DP = a;
        Big.RM = b;
        return this.minus(x.times(y));
      };
      P.neg = function() {
        var x = new this.constructor(this);
        x.s = -x.s;
        return x;
      };
      P.plus = P.add = function(y) {
        var e, k, t, x = this, Big = x.constructor;
        y = new Big(y);
        if (x.s != y.s) {
          y.s = -y.s;
          return x.minus(y);
        }
        var xe = x.e, xc = x.c, ye = y.e, yc = y.c;
        if (!xc[0] || !yc[0]) {
          yc[0] || (xc[0] ? y = new Big(x) : y.s = x.s);
          return y;
        }
        xc = xc.slice();
        if (e = xe - ye) {
          if (e > 0) {
            ye = xe;
            t = yc;
          } else {
            e = -e;
            t = xc;
          }
          t.reverse();
          for (;e--; ) t.push(0);
          t.reverse();
        }
        if (xc.length - yc.length < 0) {
          t = yc;
          yc = xc;
          xc = t;
        }
        e = yc.length;
        for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;
        if (k) {
          xc.unshift(k);
          ++ye;
        }
        for (e = xc.length; 0 === xc[--e]; ) xc.pop();
        y.c = xc;
        y.e = ye;
        return y;
      };
      P.pow = function(n) {
        var x = this, one = new x.constructor("1"), y = one, isneg = n < 0;
        if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) throw Error(INVALID + "exponent");
        isneg && (n = -n);
        for (;;) {
          1 & n && (y = y.times(x));
          n >>= 1;
          if (!n) break;
          x = x.times(x);
        }
        return isneg ? one.div(y) : y;
      };
      P.prec = function(sd, rm) {
        if (sd !== ~~sd || sd < 1 || sd > MAX_DP) throw Error(INVALID + "precision");
        return round(new this.constructor(this), sd, rm);
      };
      P.round = function(dp, rm) {
        if (dp === UNDEFINED) dp = 0; else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) throw Error(INVALID_DP);
        return round(new this.constructor(this), dp + this.e + 1, rm);
      };
      P.sqrt = function() {
        var r, c, t, x = this, Big = x.constructor, s = x.s, e = x.e, half = new Big("0.5");
        if (!x.c[0]) return new Big(x);
        if (s < 0) throw Error(NAME + "No square root");
        s = Math.sqrt(x + "");
        if (0 === s || s === 1 / 0) {
          c = x.c.join("");
          c.length + e & 1 || (c += "0");
          s = Math.sqrt(c);
          e = ((e + 1) / 2 | 0) - (e < 0 || 1 & e);
          r = new Big((s == 1 / 0 ? "5e" : (s = s.toExponential()).slice(0, s.indexOf("e") + 1)) + e);
        } else r = new Big(s + "");
        e = r.e + (Big.DP += 4);
        do {
          t = r;
          r = half.times(t.plus(x.div(t)));
        } while (t.c.slice(0, e).join("") !== r.c.slice(0, e).join(""));
        return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);
      };
      P.times = P.mul = function(y) {
        var c, x = this, Big = x.constructor, xc = x.c, yc = (y = new Big(y)).c, a = xc.length, b = yc.length, i = x.e, j = y.e;
        y.s = x.s == y.s ? 1 : -1;
        if (!xc[0] || !yc[0]) {
          y.c = [ y.e = 0 ];
          return y;
        }
        y.e = i + j;
        if (a < b) {
          c = xc;
          xc = yc;
          yc = c;
          j = a;
          a = b;
          b = j;
        }
        for (c = new Array(j = a + b); j--; ) c[j] = 0;
        for (i = b; i--; ) {
          b = 0;
          for (j = a + i; j > i; ) {
            b = c[j] + yc[i] * xc[j - i - 1] + b;
            c[j--] = b % 10;
            b = b / 10 | 0;
          }
          c[j] = b;
        }
        b ? ++y.e : c.shift();
        for (i = c.length; !c[--i]; ) c.pop();
        y.c = c;
        return y;
      };
      P.toExponential = function(dp, rm) {
        var x = this, n = x.c[0];
        if (dp !== UNDEFINED) {
          if (dp !== ~~dp || dp < 0 || dp > MAX_DP) throw Error(INVALID_DP);
          x = round(new x.constructor(x), ++dp, rm);
          for (;x.c.length < dp; ) x.c.push(0);
        }
        return stringify(x, true, !!n);
      };
      P.toFixed = function(dp, rm) {
        var x = this, n = x.c[0];
        if (dp !== UNDEFINED) {
          if (dp !== ~~dp || dp < 0 || dp > MAX_DP) throw Error(INVALID_DP);
          x = round(new x.constructor(x), dp + x.e + 1, rm);
          for (dp = dp + x.e + 1; x.c.length < dp; ) x.c.push(0);
        }
        return stringify(x, false, !!n);
      };
      P.toJSON = P.toString = function() {
        var x = this, Big = x.constructor;
        return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);
      };
      P.toNumber = function() {
        var n = Number(stringify(this, true, true));
        if (true === this.constructor.strict && !this.eq(n.toString())) throw Error(NAME + "Imprecise conversion");
        return n;
      };
      P.toPrecision = function(sd, rm) {
        var x = this, Big = x.constructor, n = x.c[0];
        if (sd !== UNDEFINED) {
          if (sd !== ~~sd || sd < 1 || sd > MAX_DP) throw Error(INVALID + "precision");
          x = round(new Big(x), sd, rm);
          for (;x.c.length < sd; ) x.c.push(0);
        }
        return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);
      };
      P.valueOf = function() {
        var x = this, Big = x.constructor;
        if (true === Big.strict) throw Error(NAME + "valueOf disallowed");
        return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);
      };
      Big = _Big_();
      Big["default"] = Big.Big = Big;
      "function" === typeof define && define.amd ? define(function() {
        return Big;
      }) : "undefined" !== typeof module && module.exports ? module.exports = Big : GLOBAL.Big = Big;
    })(void 0);
    cc._RF.pop();
  }, {} ],
  buffaloController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d44dfJz6KVF86rtijU9sTQ6", "buffaloController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var data_1 = require("./data");
    var gaEventEmitter_1 = require("./cc-arcade-base/Scripts/Common/gaEventEmitter");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var BuffaloController = function(_super) {
      __extends(BuffaloController, _super);
      function BuffaloController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.skeletonAnim = null;
        _this.speed = 0;
        _this.speedCurrent = [];
        _this.durationFinish = 0;
        _this.isIdle = true;
        _this.timeChangeSpeed = 0;
        _this._timeChangeSpeed = 0;
        _this.numChangeSpeed = 0;
        _this.distance = 0;
        _this.speedBase = [ .8, .9, 1, 1.1, 1.2 ];
        _this.isTrans = false;
        return _this;
      }
      BuffaloController.prototype.onLoad = function() {
        gaEventEmitter_1.default.instance.registerEvent("racing", this.run.bind(this));
        gaEventEmitter_1.default.instance.registerEvent("prepareNextRound", this.prepareNextRound.bind(this));
      };
      BuffaloController.prototype.start = function() {
        this.skeletonAnim = this.node.getComponent(sp.Skeleton);
        this.xFinish = data_1.Data.instance.xFinish;
        this.buffaloNumber = this.node.name;
        this.idle();
        this.skeletonAnim.findSlot("giftbox").setAttachment("", "");
        this.schedule(this.checkAnimationStatus, .05);
        this.timeTrans = this.skeletonAnim.findAnimation("run_trans_idle").duration;
      };
      BuffaloController.prototype.update = function(dt) {
        if (this.isIdle) return;
        this.node.x += this.speed * dt;
        this.changeSpeed(dt);
        this.isTrans && (this.isIdle = true);
      };
      BuffaloController.prototype.run = function(data) {
        this.oderFinish = data_1.Data.instance.getOderBuffalo(this.buffaloNumber);
        this.distance = data_1.Data.instance.racingDistance;
        this.durationFinish = data_1.Data.instance.minDuration + .2 * this.oderFinish;
        this.speedCurrent = this.randomSpeed();
        this.numChangeSpeed = 0;
        this.speed = this.distance / this.durationFinish * this.speedCurrent[this.numChangeSpeed];
        this.timeChangeSpeed = this.durationFinish / 5;
        this._timeChangeSpeed = this.timeChangeSpeed;
        this.skeletonAnim.setAnimation(0, "idle_trans_run", false);
        this.skeletonAnim.addAnimation(0, "run", true);
        this.isIdle = false;
        this.isTrans = false;
      };
      BuffaloController.prototype.changeSpeed = function(dt) {
        this._timeChangeSpeed -= dt;
        if (this._timeChangeSpeed > 0 || this.numChangeSpeed > 4) return;
        this.numChangeSpeed++;
        this.speed = this.distance / this.durationFinish * this.speedCurrent[this.numChangeSpeed];
        this.skeletonAnim.timeScale = this.speedCurrent[this.numChangeSpeed];
        this._timeChangeSpeed = this.timeChangeSpeed;
      };
      BuffaloController.prototype.randomMinMax = function(min, max) {
        return Math.random() * (max - min) + min;
      };
      BuffaloController.prototype.prepareNextRound = function() {
        var _this = this;
        this.skeletonAnim.setAnimation(0, "walk_trans_idle", false);
        cc.tween(this.node).to(data_1.Data.instance.timePrepare, {
          x: 4900
        }).call(function() {
          _this.idle();
          _this.node.x = data_1.Data.instance.xStart;
        }).start();
      };
      BuffaloController.prototype.idle = function() {
        var idleName = "idle" + Math.floor(this.randomMinMax(1, 4));
        this.skeletonAnim.addAnimation(0, idleName, true);
      };
      BuffaloController.prototype.randomSpeed = function() {
        var speeds = this.speedBase;
        return speeds.sort(function() {
          return Math.random() - .5;
        });
      };
      BuffaloController.prototype.transToStop = function() {
        var _this = this;
        this.skeletonAnim.addAnimation(0, "run_trans_idle", false);
        cc.tween(this.node).to(this.timeTrans + .05, {
          x: this.xFinish
        }).call(function() {
          _this.idle();
          5 == _this.oderFinish && gaEventEmitter_1.default.instance.emit("racingDone");
        }).start();
      };
      BuffaloController.prototype.checkAnimationStatus = function() {
        if (this.isIdle) return;
        var trackEntry = this.skeletonAnim.getCurrent(0);
        if (trackEntry.isComplete && "run" == trackEntry.animation.name && this.node.x >= this.xFinish - this.speed * this.timeTrans && !this.isTrans) {
          this.isTrans = true;
          this.transToStop();
        }
      };
      __decorate([ property(sp.Skeleton) ], BuffaloController.prototype, "skeletonAnim", void 0);
      BuffaloController = __decorate([ ccclass ], BuffaloController);
      return BuffaloController;
    }(cc.Component);
    exports.default = BuffaloController;
    cc._RF.pop();
  }, {
    "./cc-arcade-base/Scripts/Common/gaEventEmitter": "gaEventEmitter",
    "./data": "data"
  } ],
  configParticle: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a79e7uCV/5JdbSL45uuNTRe", "configParticle");
    "use strict";
    cc.Class({
      name: "configParticle",
      properties: {
        start: 0,
        end: 0
      }
    });
    cc._RF.pop();
  }, {} ],
  connectNetworkV3: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "78a76bBbNBHWpmp8qvy+oN+", "connectNetworkV3");
    "use strict";
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          "value" in descriptor && (descriptor.writable = true);
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        protoProps && defineProperties(Constructor.prototype, protoProps);
        staticProps && defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _class, _temp;
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
    }
    var globalNetwork = require("globalNetwork");
    var _require = require("mock"), userText = _require.userText, pwText = _require.pwText;
    var serviceRest = require("serviceRest");
    var gameNetwork = window.GameNetwork || require("game-network");
    var uuid = gameNetwork.lib.uuid;
    var vjsb = window["vjsb"];
    var tokenClient = "";
    var CC_CMD = (_temp = _class = function() {
      function CC_CMD() {
        _classCallCheck(this, CC_CMD);
      }
      _createClass(CC_CMD, [ {
        key: "onSend",
        value: function onSend() {
          vjsb && vjsb.js2cMessage(JSON.stringify({
            cmd: CC_CMD.CMD_TEST,
            msg: this.msgTf.string
          }));
        }
      }, {
        key: "sendGetToken",
        value: function sendGetToken() {
          vjsb && vjsb.js2cMessage(JSON.stringify({
            cmd: CC_CMD.CMD_AUTH
          }));
        }
      }, {
        key: "sendGetSoundEnable",
        value: function sendGetSoundEnable() {
          vjsb && vjsb.js2cMessage(JSON.stringify({
            cmd: CC_CMD.CMD_GET_SOUND_ENABLE
          }));
        }
      }, {
        key: "sendSetSoundEnable",
        value: function sendSetSoundEnable() {
          vjsb && vjsb.js2cMessage(JSON.stringify({
            cmd: CC_CMD.CMD_SET_SOUND_ENABLE,
            enable: true
          }));
        }
      } ]);
      return CC_CMD;
    }(), _class.CMD_HOME = 1, _class.CMD_TEST = 2, _class.CMD_AUTH = 3, _class.CMD_GET_SOUND_ENABLE = 4, 
    _class.CMD_SET_SOUND_ENABLE = 5, _class.CMD_GET_MUSIC_ENABLE = 6, _class.CMD_SET_MUSIC_ENABLE = 7, 
    _temp);
    vjsb && (vjsb.c2jsMessage = function(msg) {
      cc.log("c2jsMessage: " + msg);
      var jso = JSON.parse(msg);
      switch (jso.cmd) {
       case CC_CMD.CMD_AUTH:
        cc.log("token: " + jso.token);
        tokenClient = jso.token;
        cc.sys.localStorage.setItem("user_token", tokenClient);
        break;

       case CC_CMD.CMD_GET_SOUND_ENABLE:
       case CC_CMD.CMD_GET_MUSIC_ENABLE:
        cc.log("enable: " + jso.enable);
      }
    });
    var bridgeAppClient = new CC_CMD();
    bridgeAppClient.sendGetToken();
    cc.Class({
      getToken: function getToken() {
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC = loadConfigAsync.getConfig(), LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME, URL_TOKEN = _loadConfigAsync$getC.URL_TOKEN, USER_TOKEN = _loadConfigAsync$getC.USER_TOKEN, TOKEN = _loadConfigAsync$getC.TOKEN;
        var token = "";
        if (TOKEN) token = TOKEN; else if (LOGIN_IFRAME) {
          var _require2 = require("gameCommonUtils"), getUrlParam = _require2.getUrlParam, addUrlParam = _require2.addUrlParam;
          var TRIAL_PARAM = "trialMode";
          var trialMode = false;
          token = getUrlParam(URL_TOKEN);
          trialMode = "true" === getUrlParam(TRIAL_PARAM);
          if (!token && trialMode) {
            token = "tr-" + uuid();
            addUrlParam("token", token);
          }
          cc.sys.localStorage.setItem(USER_TOKEN, token);
        } else token = "undefined" !== typeof window && "undefined" !== typeof window["__Game_Bridge"] && "function" === typeof window["__Game_Bridge"].getUSS ? window["__Game_Bridge"].getUSS() : cc.sys.localStorage.getItem(USER_TOKEN);
        return token;
      },
      getRefreshToken: function getRefreshToken() {
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC2 = loadConfigAsync.getConfig(), LOGIN_IFRAME = _loadConfigAsync$getC2.LOGIN_IFRAME, _loadConfigAsync$getC3 = _loadConfigAsync$getC2.URL_REFRESH_TOKEN, URL_REFRESH_TOKEN = void 0 === _loadConfigAsync$getC3 ? "refresh-token" : _loadConfigAsync$getC3, _loadConfigAsync$getC4 = _loadConfigAsync$getC2.USER_REFRESH_TOKEN, USER_REFRESH_TOKEN = void 0 === _loadConfigAsync$getC4 ? "user-refresh-token" : _loadConfigAsync$getC4;
        var refreshToken = "";
        if (LOGIN_IFRAME) {
          var _require3 = require("gameCommonUtils"), getUrlParam = _require3.getUrlParam;
          refreshToken = getUrlParam(URL_REFRESH_TOKEN);
          cc.sys.localStorage.setItem(USER_REFRESH_TOKEN, refreshToken);
        } else refreshToken = cc.sys.localStorage.getItem(USER_REFRESH_TOKEN);
        return refreshToken;
      },
      loginScene: function loginScene(_ref) {
        var _this = this;
        var _callback = _ref.callback, gameId = _ref.gameId, userIndex = _ref.userIndex, callbackAuthFailed = _ref.callbackAuthFailed;
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC5 = loadConfigAsync.getConfig(), IS_FINISHED_REMOTE = _loadConfigAsync$getC5.IS_FINISHED_REMOTE, DEV_ENV = _loadConfigAsync$getC5.DEV_ENV, USER_TOKEN = _loadConfigAsync$getC5.USER_TOKEN;
        cc.log("Login using V3", cc.sys.localStorage.getItem(USER_TOKEN));
        cc.log("Login using V3", vjsb);
        cc.log("Login using V3", tokenClient);
        if (!IS_FINISHED_REMOTE) {
          setTimeout(function() {
            _this.loginScene({
              callback: _callback,
              gameId: gameId,
              userIndex: userIndex,
              callbackAuthFailed: callbackAuthFailed
            });
          }, 100);
          return;
        }
        this.gameId = gameId;
        var token = this.getToken();
        var _loadConfigAsync$getC6 = loadConfigAsync.getConfig(), LOGIN_IFRAME = _loadConfigAsync$getC6.LOGIN_IFRAME;
        var envId = LOGIN_IFRAME ? "iframe" : "portal";
        var gameIdSocket = LOGIN_IFRAME ? gameId : "all";
        if (token || !DEV_ENV) if (token) {
          globalNetwork.init(token, envId, gameIdSocket);
          _callback();
        } else callbackAuthFailed(); else {
          var dataPost = {
            userName: userText,
            password: pwText,
            fingerPrint: "test"
          };
          cc.USER_INDEX && (dataPost = {
            userName: "user" + cc.USER_INDEX,
            password: "pwduser" + cc.USER_INDEX,
            fingerPrint: "test"
          });
          serviceRest.post({
            url: "auth/login",
            data: dataPost,
            callback: function callback(_ref2) {
              var data = _ref2.data;
              cc.sys.localStorage.setItem(USER_TOKEN, data.data.token);
              globalNetwork.init(data.data.token, "", envId, gameIdSocket);
              _callback();
            },
            callbackErr: function callbackErr() {
              callbackAuthFailed && callbackAuthFailed();
            }
          });
        }
      }
    });
    cc._RF.pop();
  }, {
    "game-network": "game-network",
    gameCommonUtils: "gameCommonUtils",
    globalNetwork: "globalNetwork",
    loadConfigAsync: "loadConfigAsync",
    mock: "mock",
    serviceRest: "serviceRest"
  } ],
  connectNetwork: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1f530QIXsdBUKGRqYu2zpdh", "connectNetwork");
    "use strict";
    var connectNetwork = require("connectNetworkV3");
    module.exports = connectNetwork;
    cc._RF.pop();
  }, {
    connectNetworkV3: "connectNetworkV3"
  } ],
  "crypto-core": [ function(require, module, exports) {
    (function(global) {
      "use strict";
      cc._RF.push(module, "afbd62EaxlNbaqvhbVXKa09", "crypto-core");
      "use strict";
      var CryptoJS = function(Math, undefined) {
        var crypto;
        "undefined" !== typeof window && window.crypto && (crypto = window.crypto);
        "undefined" !== typeof self && self.crypto && (crypto = self.crypto);
        "undefined" !== typeof globalThis && globalThis.crypto && (crypto = globalThis.crypto);
        !crypto && "undefined" !== typeof window && window.msCrypto && (crypto = window.msCrypto);
        !crypto && "undefined" !== typeof global && global.crypto && (crypto = global.crypto);
        if (!crypto && "function" === typeof require) try {
          crypto = require("crypto");
        } catch (err) {}
        var cryptoSecureRandomInt = function cryptoSecureRandomInt() {
          if (crypto) {
            if ("function" === typeof crypto.getRandomValues) try {
              return crypto.getRandomValues(new Uint32Array(1))[0];
            } catch (err) {}
            if ("function" === typeof crypto.randomBytes) try {
              return crypto.randomBytes(4).readInt32LE();
            } catch (err) {}
          }
          throw new Error("Native crypto module could not be used to get secure random number.");
        };
        var create = Object.create || function() {
          function F() {}
          return function(obj) {
            var subtype;
            F.prototype = obj;
            subtype = new F();
            F.prototype = null;
            return subtype;
          };
        }();
        var C = {};
        var C_lib = C.lib = {};
        var Base = C_lib.Base = function() {
          return {
            extend: function extend(overrides) {
              var subtype = create(this);
              overrides && subtype.mixIn(overrides);
              subtype.hasOwnProperty("init") && this.init !== subtype.init || (subtype.init = function() {
                subtype.$super.init.apply(this, arguments);
              });
              subtype.init.prototype = subtype;
              subtype.$super = this;
              return subtype;
            },
            create: function create() {
              var instance = this.extend();
              instance.init.apply(instance, arguments);
              return instance;
            },
            init: function init() {},
            mixIn: function mixIn(properties) {
              for (var propertyName in properties) properties.hasOwnProperty(propertyName) && (this[propertyName] = properties[propertyName]);
              properties.hasOwnProperty("toString") && (this.toString = properties.toString);
            },
            clone: function clone() {
              return this.init.prototype.extend(this);
            }
          };
        }();
        var WordArray = C_lib.WordArray = Base.extend({
          init: function init(words, sigBytes) {
            words = this.words = words || [];
            this.sigBytes = sigBytes != undefined ? sigBytes : 4 * words.length;
          },
          toString: function toString(encoder) {
            return (encoder || Hex).stringify(this);
          },
          concat: function concat(wordArray) {
            var thisWords = this.words;
            var thatWords = wordArray.words;
            var thisSigBytes = this.sigBytes;
            var thatSigBytes = wordArray.sigBytes;
            this.clamp();
            if (thisSigBytes % 4) for (var i = 0; i < thatSigBytes; i++) {
              var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 255;
              thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
            } else for (var j = 0; j < thatSigBytes; j += 4) thisWords[thisSigBytes + j >>> 2] = thatWords[j >>> 2];
            this.sigBytes += thatSigBytes;
            return this;
          },
          clamp: function clamp() {
            var words = this.words;
            var sigBytes = this.sigBytes;
            words[sigBytes >>> 2] &= 4294967295 << 32 - sigBytes % 4 * 8;
            words.length = Math.ceil(sigBytes / 4);
          },
          clone: function clone() {
            var clone = Base.clone.call(this);
            clone.words = this.words.slice(0);
            return clone;
          },
          random: function random(nBytes) {
            var words = [];
            for (var i = 0; i < nBytes; i += 4) words.push(cryptoSecureRandomInt());
            return new WordArray.init(words, nBytes);
          }
        });
        var C_enc = C.enc = {};
        var Hex = C_enc.Hex = {
          stringify: function stringify(wordArray) {
            var words = wordArray.words;
            var sigBytes = wordArray.sigBytes;
            var hexChars = [];
            for (var i = 0; i < sigBytes; i++) {
              var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 255;
              hexChars.push((bite >>> 4).toString(16));
              hexChars.push((15 & bite).toString(16));
            }
            return hexChars.join("");
          },
          parse: function parse(hexStr) {
            var hexStrLength = hexStr.length;
            var words = [];
            for (var i = 0; i < hexStrLength; i += 2) words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
            return new WordArray.init(words, hexStrLength / 2);
          }
        };
        var Latin1 = C_enc.Latin1 = {
          stringify: function stringify(wordArray) {
            var words = wordArray.words;
            var sigBytes = wordArray.sigBytes;
            var latin1Chars = [];
            for (var i = 0; i < sigBytes; i++) {
              var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 255;
              latin1Chars.push(String.fromCharCode(bite));
            }
            return latin1Chars.join("");
          },
          parse: function parse(latin1Str) {
            var latin1StrLength = latin1Str.length;
            var words = [];
            for (var i = 0; i < latin1StrLength; i++) words[i >>> 2] |= (255 & latin1Str.charCodeAt(i)) << 24 - i % 4 * 8;
            return new WordArray.init(words, latin1StrLength);
          }
        };
        var Utf8 = C_enc.Utf8 = {
          stringify: function stringify(wordArray) {
            try {
              return decodeURIComponent(escape(Latin1.stringify(wordArray)));
            } catch (e) {
              throw new Error("Malformed UTF-8 data");
            }
          },
          parse: function parse(utf8Str) {
            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
          }
        };
        var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({
          reset: function reset() {
            this._data = new WordArray.init();
            this._nDataBytes = 0;
          },
          _append: function _append(data) {
            "string" == typeof data && (data = Utf8.parse(data));
            this._data.concat(data);
            this._nDataBytes += data.sigBytes;
          },
          _process: function _process(doFlush) {
            var processedWords;
            var data = this._data;
            var dataWords = data.words;
            var dataSigBytes = data.sigBytes;
            var blockSize = this.blockSize;
            var blockSizeBytes = 4 * blockSize;
            var nBlocksReady = dataSigBytes / blockSizeBytes;
            nBlocksReady = doFlush ? Math.ceil(nBlocksReady) : Math.max((0 | nBlocksReady) - this._minBufferSize, 0);
            var nWordsReady = nBlocksReady * blockSize;
            var nBytesReady = Math.min(4 * nWordsReady, dataSigBytes);
            if (nWordsReady) {
              for (var offset = 0; offset < nWordsReady; offset += blockSize) this._doProcessBlock(dataWords, offset);
              processedWords = dataWords.splice(0, nWordsReady);
              data.sigBytes -= nBytesReady;
            }
            return new WordArray.init(processedWords, nBytesReady);
          },
          clone: function clone() {
            var clone = Base.clone.call(this);
            clone._data = this._data.clone();
            return clone;
          },
          _minBufferSize: 0
        });
        var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({
          cfg: Base.extend(),
          init: function init(cfg) {
            this.cfg = this.cfg.extend(cfg);
            this.reset();
          },
          reset: function reset() {
            BufferedBlockAlgorithm.reset.call(this);
            this._doReset();
          },
          update: function update(messageUpdate) {
            this._append(messageUpdate);
            this._process();
            return this;
          },
          finalize: function finalize(messageUpdate) {
            messageUpdate && this._append(messageUpdate);
            var hash = this._doFinalize();
            return hash;
          },
          blockSize: 16,
          _createHelper: function _createHelper(hasher) {
            return function(message, cfg) {
              return new hasher.init(cfg).finalize(message);
            };
          },
          _createHmacHelper: function _createHmacHelper(hasher) {
            return function(message, key) {
              return new C_algo.HMAC.init(hasher, key).finalize(message);
            };
          }
        });
        var C_algo = C.algo = {};
        return C;
      }(Math);
      CryptoJS.lib.Cipher || function() {
        var C = CryptoJS;
        var C_lib = C.lib;
        var Base = C_lib.Base;
        var WordArray = C_lib.WordArray;
        var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;
        var C_enc = C.enc;
        var Utf8 = C_enc.Utf8;
        var Base64 = C_enc.Base64;
        var C_algo = C.algo;
        var EvpKDF = C_algo.EvpKDF;
        var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({
          cfg: Base.extend(),
          createEncryptor: function createEncryptor(key, cfg) {
            return this.create(this._ENC_XFORM_MODE, key, cfg);
          },
          createDecryptor: function createDecryptor(key, cfg) {
            return this.create(this._DEC_XFORM_MODE, key, cfg);
          },
          init: function init(xformMode, key, cfg) {
            this.cfg = this.cfg.extend(cfg);
            this._xformMode = xformMode;
            this._key = key;
            this.reset();
          },
          reset: function reset() {
            BufferedBlockAlgorithm.reset.call(this);
            this._doReset();
          },
          process: function process(dataUpdate) {
            this._append(dataUpdate);
            return this._process();
          },
          finalize: function finalize(dataUpdate) {
            dataUpdate && this._append(dataUpdate);
            var finalProcessedData = this._doFinalize();
            return finalProcessedData;
          },
          keySize: 4,
          ivSize: 4,
          _ENC_XFORM_MODE: 1,
          _DEC_XFORM_MODE: 2,
          _createHelper: function() {
            function selectCipherStrategy(key) {
              return "string" == typeof key ? PasswordBasedCipher : SerializableCipher;
            }
            return function(cipher) {
              return {
                encrypt: function encrypt(message, key, cfg) {
                  return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);
                },
                decrypt: function decrypt(ciphertext, key, cfg) {
                  return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);
                }
              };
            };
          }()
        });
        var StreamCipher = C_lib.StreamCipher = Cipher.extend({
          _doFinalize: function _doFinalize() {
            var finalProcessedBlocks = this._process(true);
            return finalProcessedBlocks;
          },
          blockSize: 1
        });
        var C_mode = C.mode = {};
        var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({
          createEncryptor: function createEncryptor(cipher, iv) {
            return this.Encryptor.create(cipher, iv);
          },
          createDecryptor: function createDecryptor(cipher, iv) {
            return this.Decryptor.create(cipher, iv);
          },
          init: function init(cipher, iv) {
            this._cipher = cipher;
            this._iv = iv;
          }
        });
        var CBC = C_mode.CBC = function() {
          var CBC = BlockCipherMode.extend();
          CBC.Encryptor = CBC.extend({
            processBlock: function processBlock(words, offset) {
              var cipher = this._cipher;
              var blockSize = cipher.blockSize;
              xorBlock.call(this, words, offset, blockSize);
              cipher.encryptBlock(words, offset);
              this._prevBlock = words.slice(offset, offset + blockSize);
            }
          });
          CBC.Decryptor = CBC.extend({
            processBlock: function processBlock(words, offset) {
              var cipher = this._cipher;
              var blockSize = cipher.blockSize;
              var thisBlock = words.slice(offset, offset + blockSize);
              cipher.decryptBlock(words, offset);
              xorBlock.call(this, words, offset, blockSize);
              this._prevBlock = thisBlock;
            }
          });
          function xorBlock(words, offset, blockSize) {
            var block;
            var iv = this._iv;
            if (iv) {
              block = iv;
              this._iv = void 0;
            } else block = this._prevBlock;
            for (var i = 0; i < blockSize; i++) words[offset + i] ^= block[i];
          }
          return CBC;
        }();
        var C_pad = C.pad = {};
        var Pkcs7 = C_pad.Pkcs7 = {
          pad: function pad(data, blockSize) {
            var blockSizeBytes = 4 * blockSize;
            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;
            var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;
            var paddingWords = [];
            for (var i = 0; i < nPaddingBytes; i += 4) paddingWords.push(paddingWord);
            var padding = WordArray.create(paddingWords, nPaddingBytes);
            data.concat(padding);
          },
          unpad: function unpad(data) {
            var nPaddingBytes = 255 & data.words[data.sigBytes - 1 >>> 2];
            data.sigBytes -= nPaddingBytes;
          }
        };
        var BlockCipher = C_lib.BlockCipher = Cipher.extend({
          cfg: Cipher.cfg.extend({
            mode: CBC,
            padding: Pkcs7
          }),
          reset: function reset() {
            var modeCreator;
            Cipher.reset.call(this);
            var cfg = this.cfg;
            var iv = cfg.iv;
            var mode = cfg.mode;
            if (this._xformMode == this._ENC_XFORM_MODE) modeCreator = mode.createEncryptor; else {
              modeCreator = mode.createDecryptor;
              this._minBufferSize = 1;
            }
            if (this._mode && this._mode.__creator == modeCreator) this._mode.init(this, iv && iv.words); else {
              this._mode = modeCreator.call(mode, this, iv && iv.words);
              this._mode.__creator = modeCreator;
            }
          },
          _doProcessBlock: function _doProcessBlock(words, offset) {
            this._mode.processBlock(words, offset);
          },
          _doFinalize: function _doFinalize() {
            var finalProcessedBlocks;
            var padding = this.cfg.padding;
            if (this._xformMode == this._ENC_XFORM_MODE) {
              padding.pad(this._data, this.blockSize);
              finalProcessedBlocks = this._process(true);
            } else {
              finalProcessedBlocks = this._process(true);
              padding.unpad(finalProcessedBlocks);
            }
            return finalProcessedBlocks;
          },
          blockSize: 4
        });
        var CipherParams = C_lib.CipherParams = Base.extend({
          init: function init(cipherParams) {
            this.mixIn(cipherParams);
          },
          toString: function toString(formatter) {
            return (formatter || this.formatter).stringify(this);
          }
        });
        var C_format = C.format = {};
        var OpenSSLFormatter = C_format.OpenSSL = {
          stringify: function stringify(cipherParams) {
            var wordArray;
            var ciphertext = cipherParams.ciphertext;
            var salt = cipherParams.salt;
            wordArray = salt ? WordArray.create([ 1398893684, 1701076831 ]).concat(salt).concat(ciphertext) : ciphertext;
            return wordArray.toString(Base64);
          },
          parse: function parse(openSSLStr) {
            var salt;
            var ciphertext = Base64.parse(openSSLStr);
            var ciphertextWords = ciphertext.words;
            if (1398893684 == ciphertextWords[0] && 1701076831 == ciphertextWords[1]) {
              salt = WordArray.create(ciphertextWords.slice(2, 4));
              ciphertextWords.splice(0, 4);
              ciphertext.sigBytes -= 16;
            }
            return CipherParams.create({
              ciphertext: ciphertext,
              salt: salt
            });
          }
        };
        var SerializableCipher = C_lib.SerializableCipher = Base.extend({
          cfg: Base.extend({
            format: OpenSSLFormatter
          }),
          encrypt: function encrypt(cipher, message, key, cfg) {
            cfg = this.cfg.extend(cfg);
            var encryptor = cipher.createEncryptor(key, cfg);
            var ciphertext = encryptor.finalize(message);
            var cipherCfg = encryptor.cfg;
            return CipherParams.create({
              ciphertext: ciphertext,
              key: key,
              iv: cipherCfg.iv,
              algorithm: cipher,
              mode: cipherCfg.mode,
              padding: cipherCfg.padding,
              blockSize: cipher.blockSize,
              formatter: cfg.format
            });
          },
          decrypt: function decrypt(cipher, ciphertext, key, cfg) {
            cfg = this.cfg.extend(cfg);
            ciphertext = this._parse(ciphertext, cfg.format);
            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);
            return plaintext;
          },
          _parse: function _parse(ciphertext, format) {
            return "string" == typeof ciphertext ? format.parse(ciphertext, this) : ciphertext;
          }
        });
        var C_kdf = C.kdf = {};
        var OpenSSLKdf = C_kdf.OpenSSL = {
          execute: function execute(password, keySize, ivSize, salt) {
            salt || (salt = WordArray.random(8));
            var key = EvpKDF.create({
              keySize: keySize + ivSize
            }).compute(password, salt);
            var iv = WordArray.create(key.words.slice(keySize), 4 * ivSize);
            key.sigBytes = 4 * keySize;
            return CipherParams.create({
              key: key,
              iv: iv,
              salt: salt
            });
          }
        };
        var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({
          cfg: SerializableCipher.cfg.extend({
            kdf: OpenSSLKdf
          }),
          encrypt: function encrypt(cipher, message, password, cfg) {
            cfg = this.cfg.extend(cfg);
            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);
            cfg.iv = derivedParams.iv;
            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);
            ciphertext.mixIn(derivedParams);
            return ciphertext;
          },
          decrypt: function decrypt(cipher, ciphertext, password, cfg) {
            cfg = this.cfg.extend(cfg);
            ciphertext = this._parse(ciphertext, cfg.format);
            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);
            cfg.iv = derivedParams.iv;
            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);
            return plaintext;
          }
        });
      }();
      module.exports = CryptoJS;
      cc._RF.pop();
    }).call(this, "undefined" !== typeof global ? global : "undefined" !== typeof self ? self : "undefined" !== typeof window ? window : {});
  }, {
    crypto: 56
  } ],
  data: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1cc218JFZVPJLjbFVXQjTPW", "data");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var ccData = function(_super) {
      __extends(ccData, _super);
      function ccData() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.red = new cc.Color(255, 0, 0);
        _this.green = new cc.Color(0, 255, 0);
        _this.yellow = new cc.Color(255, 255, 0);
        _this.white = new cc.Color(255, 255, 255);
        return _this;
      }
      ccData.instance = null;
      ccData = __decorate([ ccclass ], ccData);
      return ccData;
    }(cc.Component);
    exports.ccData = ccData;
    var Data = function() {
      function Data() {
        this.gameNumber = "";
        this.dataRoundCurrent = [];
        this.chipCurrentValues = null;
        this.xStart = -400;
        this.xFinish = 4660;
        this.racingDistance = 5060;
        this.minDuration = 10;
        this.layerDistance = [ 0, 0, 0, 0 ];
        this.timePrepare = .8;
        this.orh = [];
      }
      Data.prototype.setGameNumber = function(gameNumber) {
        this.gameNumber = gameNumber;
      };
      Data.prototype.getBuffalosWin = function() {
        return this.orh[0] + this.orh[1];
      };
      Data.prototype.getOderFinish = function() {
        return this.orh;
      };
      Data.prototype.getMoneyWin = function() {
        return 0;
      };
      Data.prototype.getOderBuffalo = function(buffaloNumber) {
        var orderFinish = this.orh;
        return Number(orderFinish.indexOf(buffaloNumber));
      };
      Data.prototype.randomOrh = function() {
        this.orh = [];
        var orhBase = [ "1", "2", "3", "4", "5", "6" ];
        for (var i = 0; i < 6; i++) {
          var randomIndex = Number([ Math.floor(Math.random() * orhBase.length) ]);
          this.orh.push(orhBase[randomIndex]);
          orhBase.splice(randomIndex, 1);
        }
      };
      Data.instance = null;
      return Data;
    }();
    exports.Data = Data;
    cc._RF.pop();
  }, {} ],
  dizzyness: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "43899L+WR9Gb7wh0ViezMTF", "dizzyness");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        speed: 1
      },
      start: function start() {
        var sprite = this.node.getComponent(cc.Sprite);
        sprite && (this.material = sprite.getMaterial(0));
        this.iTime = 0;
      },
      update: function update(dt) {
        if (!this.material) return;
        this.material.setProperty("iTime", this.iTime);
        this.iTime += this.speed * dt;
      }
    });
    cc._RF.pop();
  }, {} ],
  dragAndDrop: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4c4c0nCHXtGDJU951k9FmYS", "dragAndDrop");
    "use strict";
    var TouchDragger = cc.Class({
      extends: cc.Component,
      setEventClick: function setEventClick(callback) {
        this.callback = callback;
      },
      setEventMoveOpen: function setEventMoveOpen(callbackMoveOpen) {
        this.callbackMoveOpen = callbackMoveOpen;
      },
      setEventMoveClose: function setEventMoveClose(callbackMoveClose) {
        this.callbackMoveClose = callbackMoveClose;
      },
      noDraggableToNode: function noDraggableToNode(_noDraggableToNode) {
        this.noDraggableToNode = _noDraggableToNode;
      },
      onLoad: function onLoad() {
        this.initDNR();
      },
      initDNR: function initDNR() {
        var _this = this;
        var node = this.node;
        node.beforMove = {
          x: node.x,
          y: node.y
        };
        node.on(cc.Node.EventType.TOUCH_START, function() {
          node.beforMove = {
            x: node.x,
            y: node.y
          };
        });
        node.on(cc.Node.EventType.TOUCH_MOVE, function(event) {
          var delta = event.touch.getDelta();
          node.x += delta.x;
          node.y += delta.y;
          node.getComponent(TouchDragger).propagate && event.stopPropagation();
          node.propagate = true;
          _this.callbackMoveOpen && _this.callbackMoveOpen();
          _this.callbackMoveClose && _this.callbackMoveClose();
        });
        node.on(cc.Node.EventType.TOUCH_END, function() {
          Math.sqrt(Math.pow(node.x - node.beforMove.x, 2) + Math.pow(node.y - node.beforMove.y, 2)) < 3 && (node.propagate = false);
          if (node.propagate) {
            if (_this.noDraggableToNode && checkTwoRectanglesOverlap(_this.noDraggableToNode, node)) {
              var moveTo = cc.moveTo(.3, cc.v2(node.beforMove.x, node.beforMove.y));
              node.runAction(moveTo);
            }
            node.propagate = !node.propagate;
          } else _this.callback && _this.callback();
        });
        function checkTwoRectanglesOverlap(rectangle1, rectangle2) {
          var inside = false;
          var top_left = {
            x: rectangle2.x,
            y: rectangle2.y + rectangle2.height
          };
          var bottom_left = {
            x: rectangle2.x,
            y: rectangle2.y
          };
          var top_right = {
            x: rectangle2.x + rectangle2.width,
            y: rectangle2.y + rectangle2.height
          };
          var bottom_right = {
            x: rectangle2.x + rectangle2.width,
            y: rectangle2.y
          };
          (checkPointInsideRectangle(top_left, rectangle1) || checkPointInsideRectangle(bottom_left, rectangle1) || checkPointInsideRectangle(top_right, rectangle1) || checkPointInsideRectangle(bottom_right, rectangle1)) && (inside = true);
          return inside;
        }
        function checkPointInsideRectangle(point, rectangle) {
          var inside = false;
          point.x - rectangle.x >= 0 && point.y - rectangle.y >= 0 && point.x <= rectangle.x + rectangle.width && point.y <= rectangle.y + rectangle.height && (inside = true);
          return inside;
        }
      }
    });
    cc._RF.pop();
  }, {} ],
  floatUtils: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bbc34bI4NlLYZDlgy0UBOTI", "floatUtils");
    "use strict";
    var _typeof = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && "function" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    var Big = require("big");
    function _verifyNumbers() {
      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
      args.forEach(function(num, index) {
        ("object" === ("undefined" === typeof num ? "undefined" : _typeof(num)) || void 0 === num || isNaN(+num)) && cc.warn("invalid number: " + index, num);
      });
    }
    function plus(a, b) {
      _verifyNumbers(a, b);
      return Big(a || 0).plus(b || 0).toNumber();
    }
    function minus(a, b) {
      _verifyNumbers(a, b);
      return Big(a || 0).minus(b || 0).toNumber();
    }
    function mul(a, b) {
      _verifyNumbers(a, b);
      return Big(a || 0).times(b || 0).toNumber();
    }
    function div(a, b) {
      _verifyNumbers(a, b);
      return Big(a || 0).div(b || 1).toNumber();
    }
    function sum() {
      for (var _len2 = arguments.length, numbers = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) numbers[_key2] = arguments[_key2];
      _verifyNumbers.apply(void 0, numbers);
      var result = Big(0);
      numbers.forEach(function(num) {
        result = result.plus(num);
      });
      return result.toNumber();
    }
    function product() {
      for (var _len3 = arguments.length, numbers = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) numbers[_key3] = arguments[_key3];
      _verifyNumbers.apply(void 0, numbers);
      var result = Big(1);
      numbers.forEach(function(num) {
        result = result.times(num);
      });
      return result.toNumber();
    }
    function isEqual(a, b) {
      _verifyNumbers(a, b);
      return Math.abs(a - b) < 1e-12;
    }
    module.exports = {
      plus: plus,
      minus: minus,
      mul: mul,
      div: div,
      sum: sum,
      product: product,
      isEqual: isEqual
    };
    cc._RF.pop();
  }, {
    big: "big"
  } ],
  gaArcadeBaseTableHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e1231t9KaBHBbsj4RbCEhN3", "gaArcadeBaseTableHistory");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaUtils_1 = require("../../Utilities/gaUtils");
    var gaHistoryItem_1 = require("../Popup/PopupItems/gaHistoryItem");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaArcadeBaseTableHistory = function(_super) {
      __extends(gaArcadeBaseTableHistory, _super);
      function gaArcadeBaseTableHistory() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.cell = null;
        _this.scrollContent = null;
        _this.optimizeLabel = true;
        _this.labelContainer = null;
        return _this;
      }
      gaArcadeBaseTableHistory.prototype.initCells = function(itemPerPage) {
        this.cleanTable();
        for (var i = 0; i < itemPerPage; ++i) {
          var cell = cc.instantiate(this.cell);
          cell.parent = this.node;
          cell.active = true;
        }
        var layout = this.node.getComponent(cc.Layout);
        layout.updateLayout();
        this.scrollContent && this.scrollContent.setContentSize(this.node.getContentSize());
        if (!this.labelContainer) {
          this.labelContainer = new cc.Node();
          this.labelContainer.name = "LabelContainer";
          this.labelContainer.parent = this.node.parent;
          this.labelContainer.setSiblingIndex(this.node.getSiblingIndex() + 1);
        }
        this.labelContainer.setContentSize(this.node.getContentSize());
        this.labelContainer.setPosition(this.node.getPosition());
        for (var i = 0; i < this.node.children.length; ++i) {
          var cell = this.node.children[i];
          cell["__childrenLabel"] = cell.getComponentsInChildren(cc.Label).map(function(l) {
            return l.node;
          });
        }
      };
      gaArcadeBaseTableHistory.prototype.updateData = function(data) {
        var _this = this;
        this.node.children.forEach(function(child, index) {
          if (index < data.length) {
            child.getComponent(gaHistoryItem_1.default).onSpawn(data[index], index);
            _this.setActiveChild(child, true);
          } else _this.setActiveChild(child, false);
        });
      };
      gaArcadeBaseTableHistory.prototype.clearData = function() {
        var _this = this;
        this.node.children.forEach(function(child) {
          return _this.setActiveChild(child, false);
        });
      };
      gaArcadeBaseTableHistory.prototype.cleanTable = function() {
        gaUtils_1.default.destroyAllChildren(this.node);
        gaUtils_1.default.destroyAllChildren(this.labelContainer);
      };
      gaArcadeBaseTableHistory.prototype.setActiveChild = function(child, active) {
        var _this = this;
        child.active = active;
        var childrenLabel = child["__childrenLabel"];
        childrenLabel && this.labelContainer && childrenLabel.forEach(function(labelNode) {
          labelNode.active = active;
          active && labelNode.parent != _this.labelContainer && gaUtils_1.default.changeParent(labelNode, _this.labelContainer);
        });
      };
      __decorate([ property(cc.Prefab) ], gaArcadeBaseTableHistory.prototype, "cell", void 0);
      __decorate([ property(cc.Node) ], gaArcadeBaseTableHistory.prototype, "scrollContent", void 0);
      __decorate([ property(cc.Boolean) ], gaArcadeBaseTableHistory.prototype, "optimizeLabel", void 0);
      __decorate([ property({
        type: cc.Node,
        visible: function() {
          return this.optimizeLabel;
        }
      }) ], gaArcadeBaseTableHistory.prototype, "labelContainer", void 0);
      gaArcadeBaseTableHistory = __decorate([ ccclass ], gaArcadeBaseTableHistory);
      return gaArcadeBaseTableHistory;
    }(cc.Component);
    exports.default = gaArcadeBaseTableHistory;
    cc._RF.pop();
  }, {
    "../../Utilities/gaUtils": "gaUtils",
    "../Popup/PopupItems/gaHistoryItem": "gaHistoryItem"
  } ],
  gaAvatarProvider: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "21935jmv79N/4eLJfnA1hgR", "gaAvatarProvider");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var loadAvatarFacebook = require("utils").loadAvatarFacebook;
    var gaAvatarProvider = function(_super) {
      __extends(gaAvatarProvider, _super);
      function gaAvatarProvider() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.avatarAtlas = null;
        return _this;
      }
      gaAvatarProvider_1 = gaAvatarProvider;
      Object.defineProperty(gaAvatarProvider, "instance", {
        get: function() {
          return gaAvatarProvider_1._instance;
        },
        enumerable: true,
        configurable: true
      });
      gaAvatarProvider.prototype.loadAvatarFrame = function(sprite, av) {
        if (this.avatarAtlas && loadAvatarFacebook) {
          av && 0 === av.indexOf("Avatar") && (av = av.replace("Avatar", ""));
          loadAvatarFacebook(sprite, av, this.avatarAtlas, "avatar_", 2);
        }
      };
      gaAvatarProvider.prototype.onLoad = function() {
        gaAvatarProvider_1._instance = this;
      };
      gaAvatarProvider.prototype.onDestroy = function() {
        gaAvatarProvider_1._instance = null;
      };
      var gaAvatarProvider_1;
      gaAvatarProvider._instance = null;
      __decorate([ property(cc.SpriteAtlas) ], gaAvatarProvider.prototype, "avatarAtlas", void 0);
      gaAvatarProvider = gaAvatarProvider_1 = __decorate([ ccclass ], gaAvatarProvider);
      return gaAvatarProvider;
    }(cc.Component);
    exports.default = gaAvatarProvider;
    cc._RF.pop();
  }, {
    utils: "utils"
  } ],
  gaBaseConfig: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "744b1e7+0pENpcl9OzOF9Nb", "gaBaseConfig");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaBaseConfig = function() {
      function gaBaseConfig() {
        var _a;
        this.BETTING = {
          AutoRebet: false,
          AutoStartTime: 3
        };
        this.POPUP_PROMPT = {
          JUST_CONFIRM_BUTTON: "JUST_CONFIRM_BUTTON",
          CONFIRM_AND_CLOSE_BUTTON: "CONFIRM_AND_CLOSE_BUTTON",
          CONFIRM_AND_REJECT_BUTTON: "CONFIRM_AND_REJECT_BUTTON",
          NONE_BUTTON: "NONE_BUTTON",
          ERROR_NETWORK: "ERROR_NETWORK",
          SOCKET_DISCONNECT: "SOCKET_DISCONNECT"
        };
        this.DIALOG_MSG_POS = {
          WITH_BTN: cc.v2(0, 36),
          NONE_BTN: cc.v2(0, 0)
        };
        this.NOTIFY_TYPE = {
          SYSTEM: "",
          BIGWIN: "wat",
          JACKPOT: "jpAmt"
        };
        this.NOTIFY_JACKPOT = {
          array_type_notify_jackpot: [ this.NOTIFY_TYPE.JACKPOT, this.NOTIFY_TYPE.BIGWIN ],
          limited_stack_size: 10
        };
        this.NOTIFY_CONFIG = (_a = {}, _a[this.NOTIFY_TYPE.JACKPOT] = {
          userName: 0,
          goldReward: 1
        }, _a[this.NOTIFY_TYPE.BIGWIN] = {
          userName: 0,
          goldReward: 1
        }, _a);
        this.TouchDirectionAutoBot = cc.Enum({
          LEFT: 0,
          RIGHT: 1
        });
        this.ScrollDirectionAutoBot = cc.Enum({
          LEFT: 0,
          RIGHT: 1
        });
        this.TIMER_SCROLLER = {
          DATA_TIMER: [ "0'", "30'", "60'", "90'", "120'", "\u221e" ],
          MAX_TIME: 150,
          SPECIAL_ITEM: "i"
        };
        this.CURRENCY_CONFIG = {
          VND: {
            ACRONYM: "VND",
            DECIMAL_COUNT: 0,
            CURRENCY_PREFIX: ""
          },
          USD: {
            ACRONYM: "USD",
            DECIMAL_COUNT: 2,
            CURRENCY_PREFIX: "$"
          },
          CENT: {
            ACRONYM: "CENT",
            DECIMAL_COUNT: 0,
            CURRENCY_PREFIX: "\xa2"
          }
        };
      }
      gaBaseConfig_1 = gaBaseConfig;
      gaBaseConfig.prototype.destroy = function() {
        gaBaseConfig_1.instance = null;
      };
      var gaBaseConfig_1;
      gaBaseConfig.instance = null;
      gaBaseConfig.gameId = "";
      gaBaseConfig.mainScene = "gaTemplateMain";
      gaBaseConfig.isIFrame = false;
      gaBaseConfig.isLoginOnOtherDevice = false;
      gaBaseConfig.NOTIFY_CHANNEL = "";
      gaBaseConfig.gameVersion = "";
      gaBaseConfig.designSize = {
        width: 1280,
        height: 720,
        maxWidth: 1280
      };
      gaBaseConfig.visibleSize = {
        width: 1280,
        height: 720
      };
      gaBaseConfig.POPUP_TYPE = {
        HISTORY_BET: "history_bet",
        HISTORY_JP: "history_jp",
        HELP: "help",
        SETTING: "setting",
        DIALOG: "dialog",
        TOAST: "toast"
      };
      gaBaseConfig = gaBaseConfig_1 = __decorate([ ccclass ], gaBaseConfig);
      return gaBaseConfig;
    }();
    exports.default = gaBaseConfig;
    cc._RF.pop();
  }, {} ],
  gaBasePopup: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "72e9bNJ+5RFkJwQR/5SFkrT", "gaBasePopup");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaEventsCode_1 = require("../../Definitions/gaEventsCode");
    var gaCustomDataType_1 = require("../../NodePool/gaCustomDataType");
    var gaComponent_1 = require("../gaComponent");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaBasePopup = function(_super) {
      __extends(gaBasePopup, _super);
      function gaBasePopup() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.popupTitle = null;
        _this.contents = null;
        _this.popupBackground = null;
        _this.btnClose = null;
        _this.zIndex = 0;
        _this.animStyle = new gaCustomDataType_1.gaStylePopupAnimation();
        _this._showPosition = null;
        _this.fullScale = 1;
        _this._isShowing = false;
        return _this;
      }
      Object.defineProperty(gaBasePopup.prototype, "isShowing", {
        get: function() {
          return this._isShowing;
        },
        set: function(state) {
          this._isShowing = state;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(gaBasePopup.prototype, "setAnimStyle", {
        set: function(style) {
          this.animStyle = style;
        },
        enumerable: true,
        configurable: true
      });
      gaBasePopup.prototype.onLoad = function() {
        _super.prototype.onLoad.call(this);
        this.initObj();
        this.onResetState();
      };
      gaBasePopup.prototype.initObj = function() {
        var _this = this;
        null == this.contents && (this.contents = this.node);
        if (this.btnClose) {
          this.btnClose.node.off("click");
          this.btnClose.node.on("click", function() {
            _this.soundPlayer.playSFXClick();
            _this.btnClose.interactable = false;
            _this.onClose();
          }, this);
        }
        this._showPosition = cc.v2(this.contents.x, this.contents.y);
        this.fullScale = 1;
      };
      gaBasePopup.prototype.show = function(data) {
        void 0 === data && (data = null);
        this._isShowing = true;
        this.node.stopAllActions();
        this.contents.stopAllActions();
        this.btnClose && (this.btnClose.interactable = true);
        this.transitionShow();
      };
      gaBasePopup.prototype.transitionShow = function() {
        this.node.active = true;
        this.contents.opacity = 0;
        var animation = [];
        switch (this.animStyle.show) {
         case gaCustomDataType_1.POPUP_ANIMATION.FADE:
          this.showFade(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.PULSE:
          this.showPulse(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.TOP_DOWN:
          this.showTopDown(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.BOTTOM_UP:
          this.showBottomUp(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.FROM_LEFT:
          this.showFromLeft(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.FROM_RIGHT:
          this.showFromRight(animation);
          break;

         default:
          this.showDefault();
        }
        animation && animation.length > 0 && (animation.length > 1 ? this.contents.runAction(cc.sequence(animation)) : this.contents.runAction(animation[0]));
      };
      gaBasePopup.prototype.showPulse = function(animation) {
        this.node.scale = 1;
        this.contents.opacity = 0;
        this.contents.scale = this.fullScale - .4;
        this.contents.position = this._showPosition;
        animation.push(cc.spawn(cc.fadeIn(.45).easing(cc.easeSineOut()), cc.scaleTo(.45, this.fullScale).easing(cc.easeBackOut())));
      };
      gaBasePopup.prototype.showFade = function(animation) {
        this.node.scale = 1;
        this.contents.position = this._showPosition;
        animation.push(cc.fadeIn(.3));
      };
      gaBasePopup.prototype.onBeforeMove = function(startPos) {
        this.node.scale = 1;
        this.contents.opacity = 255;
        this.contents.position = startPos;
      };
      gaBasePopup.prototype.showTopDown = function(animation) {
        var startPos = cc.v2(this._showPosition.x, gaBaseConfig_1.default.visibleSize.height / 2 + this.contents.height / 2 + 50);
        this.onBeforeMove(startPos);
        animation.push(cc.moveTo(.65, this._showPosition).easing(cc.easeBackOut()));
      };
      gaBasePopup.prototype.showBottomUp = function(animation) {
        var startPos = cc.v2(this._showPosition.x, -gaBaseConfig_1.default.visibleSize.height / 2 - this.contents.height / 2 - 50);
        this.onBeforeMove(startPos);
        animation.push(cc.moveTo(.65, this._showPosition).easing(cc.easeBackOut()));
      };
      gaBasePopup.prototype.showFromLeft = function(animation) {
        var startPos = cc.v2(-gaBaseConfig_1.default.visibleSize.width / 2 - this.contents.width / 2 - 50, this._showPosition.y);
        this.onBeforeMove(startPos);
        animation.push(cc.moveTo(.65, this._showPosition).easing(cc.easeBackOut()));
      };
      gaBasePopup.prototype.showFromRight = function(animation) {
        var startPos = cc.v2(gaBaseConfig_1.default.visibleSize.width / 2 + this.contents.width / 2 + 50, this._showPosition.y);
        this.onBeforeMove(startPos);
        animation.push(cc.moveTo(.65, this._showPosition).easing(cc.easeBackOut()));
      };
      gaBasePopup.prototype.showDefault = function() {
        this.node.scale = 1;
        this.contents.opacity = 255;
      };
      gaBasePopup.prototype.hide = function() {
        this._isShowing = false;
        this.transitionHide();
      };
      gaBasePopup.prototype.transitionHide = function() {
        var _this = this;
        var animation = [];
        switch (this.animStyle.hide) {
         case gaCustomDataType_1.POPUP_ANIMATION.FADE:
          this.hideFade(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.PULSE:
          this.hidePulse(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.TOP_DOWN:
          this.hideTopDown(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.BOTTOM_UP:
          this.hideBottomUp(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.FROM_LEFT:
          this.hideFromLeft(animation);
          break;

         case gaCustomDataType_1.POPUP_ANIMATION.FROM_RIGHT:
          this.hideFromRight(animation);
          break;

         default:
          this.hideDefault();
        }
        if (animation && animation.length > 0) {
          animation.push(cc.callFunc(function() {
            _this.hideDefault();
          }));
          this.contents.runAction(cc.sequence(animation));
        }
      };
      gaBasePopup.prototype.hideFade = function(animation) {
        animation.push(cc.fadeOut(.1));
      };
      gaBasePopup.prototype.hidePulse = function(animation) {
        animation.push(cc.spawn(cc.fadeOut(.45).easing(cc.easeSineIn()), cc.scaleTo(.45, this.fullScale - .4).easing(cc.easeBackIn())));
      };
      gaBasePopup.prototype.hideTopDown = function(animation) {
        var hidePos = cc.v2(this._showPosition.x, gaBaseConfig_1.default.visibleSize.height / 2 + this.contents.height / 2 + 50);
        animation.push(cc.moveTo(.65, hidePos).easing(cc.easeBackIn()));
      };
      gaBasePopup.prototype.hideBottomUp = function(animation) {
        var hidePos = cc.v2(this._showPosition.x, -gaBaseConfig_1.default.visibleSize.height / 2 - this.contents.height / 2 - 50);
        animation.push(cc.moveTo(.65, hidePos).easing(cc.easeBackIn()));
      };
      gaBasePopup.prototype.hideFromLeft = function(animation) {
        var hidePos = cc.v2(-gaBaseConfig_1.default.visibleSize.width / 2 - this.contents.width / 2 - 50, this._showPosition.y);
        animation.push(cc.moveTo(.65, hidePos).easing(cc.easeBackIn()));
      };
      gaBasePopup.prototype.hideFromRight = function(animation) {
        var hidePos = cc.v2(gaBaseConfig_1.default.visibleSize.width / 2 + this.contents.width / 2 + 50, this._showPosition.y);
        animation.push(cc.moveTo(.65, hidePos).easing(cc.easeBackIn()));
      };
      gaBasePopup.prototype.hideDefault = function() {
        this.node.active = false;
        this.onResetState();
      };
      gaBasePopup.prototype.onResetState = function() {
        if (!cc.isValid(this.node)) return;
        this.contents.opacity = 255;
        this.node.scale = 0;
      };
      gaBasePopup.prototype.onClose = function() {
        this.emit(gaEventsCode_1.default.POPUP.CLOSE_TOP_POPUP);
      };
      __decorate([ property(cc.Node) ], gaBasePopup.prototype, "popupTitle", void 0);
      __decorate([ property(cc.Node) ], gaBasePopup.prototype, "contents", void 0);
      __decorate([ property(cc.Node) ], gaBasePopup.prototype, "popupBackground", void 0);
      __decorate([ property(cc.Button) ], gaBasePopup.prototype, "btnClose", void 0);
      __decorate([ property ], gaBasePopup.prototype, "zIndex", void 0);
      __decorate([ property(gaCustomDataType_1.gaStylePopupAnimation) ], gaBasePopup.prototype, "animStyle", void 0);
      gaBasePopup = __decorate([ ccclass ], gaBasePopup);
      return gaBasePopup;
    }(gaComponent_1.default);
    exports.default = gaBasePopup;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "../../Definitions/gaEventsCode": "gaEventsCode",
    "../../NodePool/gaCustomDataType": "gaCustomDataType",
    "../gaComponent": "gaComponent"
  } ],
  gaBetHistoryItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d5e02BsHiVFc7oEosEMVKUp", "gaBetHistoryItem");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaEventsCode_1 = require("../../../Definitions/gaEventsCode");
    var gaUtils_1 = require("../../../Utilities/gaUtils");
    var gaHistoryItem_1 = require("./gaHistoryItem");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaBetHistoryItem = function(_super) {
      __extends(gaBetHistoryItem, _super);
      function gaBetHistoryItem() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.session = null;
        _this.overlay = null;
        _this.time = null;
        _this.winAmount = null;
        _this.bet = null;
        _this.winColor = null;
        _this.loseColor = null;
        _this.drawColor = null;
        _this.data = null;
        return _this;
      }
      gaBetHistoryItem.prototype.onSpawn = function(data, index) {
        this.data = data;
        this.time && (this.time.string = gaUtils_1.default.getTimeString(data.timeStamp));
        this.session && (this.session.string = data.gameNumber);
        this.bet && (this.bet.string = gaUtils_1.default.formatMoney(data.betAmount));
        if (this.winAmount) {
          this.winAmount.string = (data.winAmount > 0 ? "+" : "") + gaUtils_1.default.formatCurrency(data.winAmount);
          this.winAmount.node.color = data.winAmount > 0 ? this.winColor : data.winAmount < 0 ? this.loseColor : this.drawColor;
        }
        this.overlay && (this.overlay.active = index % 2 == 0);
      };
      gaBetHistoryItem.prototype.onClickDetail = function() {
        this.soundPlayer.playSFXClick();
        this.emit(gaEventsCode_1.default.POPUP.SHOW_HISTORY_DETAIL, this.data);
      };
      __decorate([ property(cc.Label) ], gaBetHistoryItem.prototype, "session", void 0);
      __decorate([ property(cc.Node) ], gaBetHistoryItem.prototype, "overlay", void 0);
      __decorate([ property(cc.Label) ], gaBetHistoryItem.prototype, "time", void 0);
      __decorate([ property(cc.Label) ], gaBetHistoryItem.prototype, "winAmount", void 0);
      __decorate([ property(cc.Label) ], gaBetHistoryItem.prototype, "bet", void 0);
      __decorate([ property(cc.Color) ], gaBetHistoryItem.prototype, "winColor", void 0);
      __decorate([ property(cc.Color) ], gaBetHistoryItem.prototype, "loseColor", void 0);
      __decorate([ property(cc.Color) ], gaBetHistoryItem.prototype, "drawColor", void 0);
      gaBetHistoryItem = __decorate([ ccclass ], gaBetHistoryItem);
      return gaBetHistoryItem;
    }(gaHistoryItem_1.default);
    exports.default = gaBetHistoryItem;
    cc._RF.pop();
  }, {
    "../../../Definitions/gaEventsCode": "gaEventsCode",
    "../../../Utilities/gaUtils": "gaUtils",
    "./gaHistoryItem": "gaHistoryItem"
  } ],
  gaButtonFullScreen: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ad8cc9KpHZNPLn4ccpXrFNd", "gaButtonFullScreen");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaComponent_1 = require("../Components/gaComponent");
    var gaBaseConfig_1 = require("../Config/gaBaseConfig");
    var gaEventsCode_1 = require("../Definitions/gaEventsCode");
    var gaScreenUtils_1 = require("../Utilities/gaScreenUtils");
    var gaUtils_1 = require("../Utilities/gaUtils");
    var gaReferenceManager_1 = require("./gaReferenceManager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaButtonFullScreen = function(_super) {
      __extends(gaButtonFullScreen, _super);
      function gaButtonFullScreen() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.divFS = null;
        _this._canvas = null;
        _this.defaultStyle = {};
        return _this;
      }
      Object.defineProperty(gaButtonFullScreen.prototype, "canvas", {
        get: function() {
          this._canvas || (this._canvas = cc.Canvas.instance);
          return this._canvas;
        },
        enumerable: true,
        configurable: true
      });
      gaButtonFullScreen.prototype.onLoad = function() {
        gaReferenceManager_1.default.instance.btnFullScreen = this.node;
        this.node.removeComponent(cc.Sprite);
        this.divFS = window["divFullscreen"] || document.getElementById("div_full_screen");
        if (!cc.sys.isMobile || !cc.sys.isBrowser || !this.divFS) {
          this.destroy();
          return;
        }
        var element = this.divFS.children[0];
        element && (this.defaultStyle = {
          width: element.style.width,
          height: element.style.height,
          top: element.style.top,
          right: element.style.right,
          left: element.style.left,
          bottom: element.style.bottom
        });
        _super.prototype.onLoad.call(this);
        this.onScreenResize();
      };
      gaButtonFullScreen.prototype.initEvents = function() {
        this.register(gaEventsCode_1.default.COMMON.ON_SCREEN_RESIZE, this.onScreenResize);
        this.node.on(cc.Node.EventType.POSITION_CHANGED, this.onScreenResize, this);
        this.node.on(cc.Node.EventType.SIZE_CHANGED, this.onScreenResize, this);
      };
      gaButtonFullScreen.prototype.onDestroy = function() {
        if (this.defaultStyle) {
          this.setStyle("width", this.defaultStyle.width);
          this.setStyle("height", this.defaultStyle.height);
          this.setStyle("top", this.defaultStyle.top);
          this.setStyle("right", this.defaultStyle.right);
          this.setStyle("left", this.defaultStyle.left);
          this.setStyle("bottom", this.defaultStyle.bottom);
        }
        this.setVisible(true);
        _super.prototype.onDestroy.call(this);
      };
      gaButtonFullScreen.prototype.onDisable = function() {
        this.setVisible(false);
      };
      gaButtonFullScreen.prototype.onEnable = function() {
        this.setVisible(true);
      };
      gaButtonFullScreen.prototype.onScreenResize = function() {
        this.unschedule(this.updateStyle);
        this.scheduleOnce(this.updateStyle);
      };
      gaButtonFullScreen.prototype.updateStyle = function() {
        var scale = this.getScale();
        this.setStyle("width", this.node.width * scale + "px");
        this.setStyle("height", this.node.height * scale + "px");
        if (gaScreenUtils_1.default.getOrientation()) {
          this.setStyle("top", this.getY(scale) + "px");
          this.setStyle("right", this.getX(scale) + "px");
          this.setStyle("left", "unset");
          this.setStyle("bottom", "unset");
        } else {
          this.setStyle("bottom", this.getX(scale) + "px");
          this.setStyle("right", this.getY(scale) + "px");
          this.setStyle("left", "unset");
          this.setStyle("top", "unset");
        }
      };
      gaButtonFullScreen.prototype.setStyle = function(key, value) {
        if (!this.divFS || !this.divFS.children) return;
        for (var index = 0; index < this.divFS.children.length; index++) {
          var element = this.divFS.children[index];
          element.style[key] = value;
        }
      };
      gaButtonFullScreen.prototype.setVisible = function(visible) {
        var disableFullscreen = gaUtils_1.default.getParam(window.location.href, "disableFullscreen");
        this.divFS && (this.divFS.style.display = !disableFullscreen && visible ? "block" : "none");
      };
      gaButtonFullScreen.prototype.getScale = function() {
        var frameSize = cc.view.getFrameSize();
        if (this.canvas.fitWidth) return frameSize.width / gaBaseConfig_1.default.designSize.width;
        return frameSize.height / gaBaseConfig_1.default.designSize.height;
      };
      gaButtonFullScreen.prototype.getY = function(scale) {
        var visibleSize = gaBaseConfig_1.default.visibleSize;
        var visibleRect = cc.view.getVisibleSize();
        var spriteTopAlign = visibleSize.height / 2 - this.node.y - this.node.height / 2;
        var unvisbleSize = visibleRect.height - visibleSize.height;
        return (unvisbleSize / 2 + spriteTopAlign) * scale;
      };
      gaButtonFullScreen.prototype.getX = function(scale) {
        var visibleSize = gaBaseConfig_1.default.visibleSize;
        var visibleRect = cc.view.getVisibleSize();
        var spriteRightAlign = visibleSize.width / 2 - this.node.x - this.node.width / 2;
        var unvisbleSize = visibleRect.width - visibleSize.width;
        return (unvisbleSize / 2 + spriteRightAlign) * scale;
      };
      gaButtonFullScreen = __decorate([ ccclass ], gaButtonFullScreen);
      return gaButtonFullScreen;
    }(gaComponent_1.default);
    exports.default = gaButtonFullScreen;
    cc._RF.pop();
  }, {
    "../Components/gaComponent": "gaComponent",
    "../Config/gaBaseConfig": "gaBaseConfig",
    "../Definitions/gaEventsCode": "gaEventsCode",
    "../Utilities/gaScreenUtils": "gaScreenUtils",
    "../Utilities/gaUtils": "gaUtils",
    "./gaReferenceManager": "gaReferenceManager"
  } ],
  gaCommandID: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "75c25DhF9dOyovYyACbGWHh", "gaCommandID");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaGameCMD = function() {
      function gaGameCMD() {}
      gaGameCMD.responseOf = function(request) {
        if (!this.mapResponse) {
          gaGameCMD.mapResponse = {};
          gaGameCMD.mapResponse[gaGameCMD.R_JOIN_GAME] = gaGameCMD.ON_JOIN_GAME_SUCCESS;
          gaGameCMD.mapResponse[gaGameCMD.R_CLIENT_STATE] = gaGameCMD.ON_STATE_PUSH;
          gaGameCMD.mapResponse[gaGameCMD.R_NEW_ODDS] = gaGameCMD.ON_ODDS_UPDATE;
          gaGameCMD.mapResponse[gaGameCMD.R_PLAY_GAME] = gaGameCMD.ON_PLAY_GAME;
        }
        return this.mapResponse[request];
      };
      gaGameCMD.R_KEEP_ACTIVE = "player-active";
      gaGameCMD.R_JOIN_GAME = "jg";
      gaGameCMD.R_NEW_ODDS = "vspg";
      gaGameCMD.R_PLAY_GAME = "vsng";
      gaGameCMD.R_CLIENT_STATE = "glt";
      gaGameCMD.ON_JOIN_GAME_SUCCESS = "client-join-game-result";
      gaGameCMD.ON_STATE_UPDATE = "state-updated";
      gaGameCMD.ON_ODDS_UPDATE = "u";
      gaGameCMD.ON_PLAY_GAME = "n";
      gaGameCMD.ON_STATE_PUSH = "state-pushed";
      gaGameCMD.ON_WALLET_UPDATE = "wallet-updated";
      gaGameCMD.ERROR_PUSH = "error-pushed";
      gaGameCMD.JACKPOT_UPDATE = "jackpot-updated";
      gaGameCMD.JACKPOT_ANNOUNCEMENT = "JPA";
      gaGameCMD.JACKPOT_WIN = "jackpot-win";
      gaGameCMD.ON_NOTIFY = "bGw";
      gaGameCMD.mapResponse = null;
      return gaGameCMD;
    }();
    exports.gaGameCMD = gaGameCMD;
    cc._RF.pop();
  }, {} ],
  gaCommon: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c4da05uGW5F8Y8bMtAVi3V8", "gaCommon");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var ConnectNetwork = require("connectNetwork");
    var connectNetwork = new ConnectNetwork();
    exports.connectNetwork = connectNetwork;
    var globalNetwork = require("globalNetwork");
    exports.globalNetwork = globalNetwork;
    var gameCommonUtils = require("gameCommonUtils");
    exports.gameCommonUtils = gameCommonUtils;
    var loadConfigAsync = require("loadConfigAsync");
    exports.loadConfigAsync = loadConfigAsync;
    var serviceRest = require("serviceRest");
    exports.serviceRest = serviceRest;
    var WebSoundPlayer = require("WebSoundPlayer");
    var network = window["GameNetwork"] || require("game-network");
    exports.network = network;
    var SoundPlayerImpl = WebSoundPlayer.WebSoundPlayer;
    exports.SoundPlayerImpl = SoundPlayerImpl;
    cc._RF.pop();
  }, {
    WebSoundPlayer: "WebSoundPlayer",
    connectNetwork: "connectNetwork",
    "game-network": "game-network",
    gameCommonUtils: "gameCommonUtils",
    globalNetwork: "globalNetwork",
    loadConfigAsync: "loadConfigAsync",
    serviceRest: "serviceRest"
  } ],
  gaComponent: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "638857m4xFOYbOidSp/hlcV", "gaComponent");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaUtils_1 = require("../Utilities/gaUtils");
    var gaEventEmitter_1 = require("../Common/gaEventEmitter");
    var gaReferenceManager_1 = require("../Common/gaReferenceManager");
    var ccclass = cc._decorator.ccclass;
    var gaComponent = function(_super) {
      __extends(gaComponent, _super);
      function gaComponent() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._soundPlayer = null;
        return _this;
      }
      Object.defineProperty(gaComponent.prototype, "emitter", {
        get: function() {
          return gaEventEmitter_1.default.instance;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(gaComponent.prototype, "soundPlayer", {
        get: function() {
          null == this._soundPlayer && (this._soundPlayer = gaReferenceManager_1.default.instance.soundPlayer.getComponent("gaSoundPlayer"));
          return this._soundPlayer;
        },
        enumerable: true,
        configurable: true
      });
      gaComponent.prototype.register = function(eventCode, listener) {
        this.emitter && this.emitter.registerEvent(eventCode, listener, this);
      };
      gaComponent.prototype.registerOnce = function(eventCode, listener) {
        this.emitter && this.emitter.registerOnce(eventCode, listener, this);
      };
      gaComponent.prototype.emit = function(eventCode) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
        var _a;
        this.emitter && (_a = this.emitter).emit.apply(_a, [ eventCode ].concat(args));
      };
      gaComponent.prototype.removeEvent = function(eventCode) {
        this.emitter && this.emitter.removeEvent(eventCode);
      };
      gaComponent.prototype.removeEvents = function() {
        this.emitter && this.emitter.removeEvents(this);
      };
      gaComponent.prototype.onLoad = function() {
        this.initEvents();
      };
      gaComponent.prototype.initEvents = function() {};
      gaComponent.prototype.onDestroy = function() {
        gaUtils_1.default.stopAllByTarget(this);
        this.removeEvents();
      };
      gaComponent = __decorate([ ccclass ], gaComponent);
      return gaComponent;
    }(cc.Component);
    exports.default = gaComponent;
    cc._RF.pop();
  }, {
    "../Common/gaEventEmitter": "gaEventEmitter",
    "../Common/gaReferenceManager": "gaReferenceManager",
    "../Utilities/gaUtils": "gaUtils"
  } ],
  gaCountPoint: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "10ce7ENNQVLC52TKN7UzXba", "gaCountPoint");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaPromise_1 = require("../../Utilities/gaPromise");
    var gaUtils_1 = require("../../Utilities/gaUtils");
    var gaCountPoint = function() {
      function gaCountPoint(label) {
        this._lbl = null;
        this._desValue = 0;
        this._duration = 0;
        this._tween = null;
        this._savedHdl = null;
        this._lastValue = -1;
        this._id = "";
        this._currentValue = 0;
        this._lbl = label;
        this._id = "gaCountPoint." + label.node.name + "." + label.uuid;
      }
      gaCountPoint.prototype.count = function(desValue, duration) {
        var _this = this;
        if (!this._lbl || !this._lbl.isValid) return null;
        this._desValue = desValue;
        this._duration = duration;
        return new gaPromise_1.default(function(resolve) {
          _this._savedHdl = function() {
            return _this._countCompleted(resolve);
          };
          _this._tweenValue();
        });
      };
      gaCountPoint.prototype.setValue = function(value) {
        this._currentValue = value;
        this._setString(value);
      };
      gaCountPoint.prototype.fastToResult = function() {
        this._duration = .8;
        this._tweenValue();
      };
      gaCountPoint.prototype.pause = function() {
        gaUtils_1.default.stopTween(this._tween);
      };
      gaCountPoint.prototype.resume = function() {
        this._tweenValue();
      };
      gaCountPoint.prototype.reset = function() {
        gaUtils_1.default.stopTween(this._tween);
        this._tween = null;
        this._desValue = 0;
        this._duration = 0;
        this._lastValue = -1;
        this._currentValue = 0;
      };
      gaCountPoint.prototype._tweenValue = function() {
        var _this = this;
        gaUtils_1.default.stopTween(this._tween);
        this._currentValue = parseInt(this._lbl.string.replace(/[,.]/g, "")) || 0;
        var start = Number(this._currentValue);
        var end = Number(this._desValue);
        var diff = end - start;
        var duration = this._duration;
        if (duration > 0) {
          var tweenOpts = {
            progress: function(_start, _end, current, ratio) {
              var value = start + diff * ratio;
              _this._duration = duration * (1 - ratio);
              _this._countUpdate(value);
              return current;
            }
          };
          this._tween = cc.tween(this).to(duration, {
            _currentValue: end
          }, tweenOpts).call(this._savedHdl).start();
        } else this._savedHdl && this._savedHdl();
      };
      gaCountPoint.prototype._countUpdate = function(value) {
        var v = Math.floor(value);
        if (this._lastValue != v) {
          this._lastValue = v;
          this.setValue(v);
        }
      };
      gaCountPoint.prototype._countCompleted = function(resolve) {
        this.setValue(this._desValue);
        this._duration = 0;
        this._savedHdl = null;
        resolve(this._desValue);
      };
      gaCountPoint.prototype._setString = function(value) {
        this._lbl && this._lbl.isValid ? this._lbl.string = gaUtils_1.default.formatMoney(value) : gaUtils_1.default.stopTween(this._tween);
      };
      return gaCountPoint;
    }();
    exports.default = gaCountPoint;
    cc._RF.pop();
  }, {
    "../../Utilities/gaPromise": "gaPromise",
    "../../Utilities/gaUtils": "gaUtils"
  } ],
  gaCurrencyCalculator: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6bb4eEvL3JOvY3fwoutkc0I", "gaCurrencyCalculator");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../Config/gaBaseConfig");
    var gaDataStore_1 = require("./gaDataStore");
    var _a = require("utils"), formatMoney = _a.formatMoney, formatCoin = _a.formatCoin, updateUtilConfig = _a.updateUtilConfig;
    var Big = require("big");
    var gaCurrencyCalculator = function() {
      function gaCurrencyCalculator() {
        this._listMoneyKey = [ "Wallet", "GoldReward", "WinAmount", "TotalReward" ];
      }
      gaCurrencyCalculator.prototype.updateKeyMoneyInCurrencyData = function(content, convertToDefault) {
        var _this = this;
        void 0 === convertToDefault && (convertToDefault = true);
        if (void 0 === content || null === content) return content;
        Array.isArray(content) ? content.forEach(function(elm) {
          return _this.updateKeyMoneyInCurrencyData(elm, convertToDefault);
        }) : "object" === typeof content && Object.keys(content).forEach(function(key) {
          var val = content[key];
          _this.isInListMoneyKey(key) ? content[key] = convertToDefault ? _this.convertToDefaultCurrency(val) : _this.convertToUserCurrency(val) : Array.isArray(val) ? content[key].forEach(function(elm) {
            return _this.updateKeyMoneyInCurrencyData(elm, convertToDefault);
          }) : "object" === typeof val && (content[key] = _this.updateKeyMoneyInCurrencyData(val, convertToDefault));
        });
        return content;
      };
      gaCurrencyCalculator.prototype.isInListMoneyKey = function(key) {
        return this._listMoneyKey.includes(key);
      };
      gaCurrencyCalculator.prototype.isDefaultCurrency = function() {
        return 1 === gaDataStore_1.default.instance.getCurrencyRatio();
      };
      gaCurrencyCalculator.prototype.formatCurrency = function(value) {
        value = +value;
        var stringResult = value.toString();
        var targetTypeCurrency = gaDataStore_1.default.instance.getUserTypeOfCurrency();
        var CURRENCY_CONFIG = gaBaseConfig_1.default.instance.CURRENCY_CONFIG[targetTypeCurrency];
        if (!CURRENCY_CONFIG) {
          cc.error("No Currency Config");
          return;
        }
        updateUtilConfig("CURRENCY_CONFIG", CURRENCY_CONFIG);
        switch (targetTypeCurrency) {
         case gaBaseConfig_1.default.instance.CURRENCY_CONFIG.USD.ACRONYM:
          if (value < .5 && value > 0) {
            targetTypeCurrency = gaBaseConfig_1.default.instance.CURRENCY_CONFIG.CENT.ACRONYM;
            CURRENCY_CONFIG = gaBaseConfig_1.default.instance.CURRENCY_CONFIG[targetTypeCurrency];
            updateUtilConfig("CURRENCY_CONFIG", CURRENCY_CONFIG);
            value = this.multiplyTwoNumber(value, 100);
          }
          stringResult = formatMoney(value, 2);
          break;

         case gaBaseConfig_1.default.instance.CURRENCY_CONFIG.VND.ACRONYM:
         default:
          stringResult = formatCoin(value);
        }
        return stringResult;
      };
      gaCurrencyCalculator.prototype.convertToUserCurrency = function(val) {
        var ratio = gaDataStore_1.default.instance.getCurrencyRatio();
        var result = this.divideTwoNumber(val, ratio);
        return result;
      };
      gaCurrencyCalculator.prototype.convertToDefaultCurrency = function(val) {
        var ratio = gaDataStore_1.default.instance.getCurrencyRatio();
        var result = this.multiplyTwoNumber(val, ratio);
        return result;
      };
      gaCurrencyCalculator.prototype.plusTwoNumber = function(firstNum, secondNum) {
        var _firstNum = new Big(firstNum);
        var _secondNum = new Big(secondNum);
        return +_firstNum.plus(_secondNum);
      };
      gaCurrencyCalculator.prototype.minusTwoNumber = function(firstNum, secondNum) {
        var _firstNum = new Big(firstNum);
        var _secondNum = new Big(secondNum);
        return +_firstNum.minus(_secondNum);
      };
      gaCurrencyCalculator.prototype.divideTwoNumber = function(firstNum, secondNum) {
        var _firstNum = new Big(firstNum);
        var _secondNum = new Big(secondNum);
        return +_firstNum.div(_secondNum);
      };
      gaCurrencyCalculator.prototype.multiplyTwoNumber = function(firstNum, secondNum) {
        var _firstNum = new Big(firstNum);
        var _secondNum = new Big(secondNum);
        return +_firstNum.times(_secondNum);
      };
      gaCurrencyCalculator.prototype.destroy = function() {
        gaCurrencyCalculator.instance = null;
      };
      gaCurrencyCalculator.instance = null;
      return gaCurrencyCalculator;
    }();
    exports.default = gaCurrencyCalculator;
    cc._RF.pop();
  }, {
    "../Config/gaBaseConfig": "gaBaseConfig",
    "./gaDataStore": "gaDataStore",
    big: "big",
    utils: "utils"
  } ],
  gaCustomDataType: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ed497LgZuBHWaDSQB4cGtPO", "gaCustomDataType");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaUtils_1 = require("../Utilities/gaUtils");
    var gaMapKeyConfig_1 = require("../Config/gaMapKeyConfig");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var POPUP_ANIMATION;
    (function(POPUP_ANIMATION) {
      POPUP_ANIMATION[POPUP_ANIMATION["DEFAULT"] = 0] = "DEFAULT";
      POPUP_ANIMATION[POPUP_ANIMATION["FADE"] = 1] = "FADE";
      POPUP_ANIMATION[POPUP_ANIMATION["PULSE"] = 2] = "PULSE";
      POPUP_ANIMATION[POPUP_ANIMATION["TOP_DOWN"] = 3] = "TOP_DOWN";
      POPUP_ANIMATION[POPUP_ANIMATION["BOTTOM_UP"] = 4] = "BOTTOM_UP";
      POPUP_ANIMATION[POPUP_ANIMATION["FROM_LEFT"] = 5] = "FROM_LEFT";
      POPUP_ANIMATION[POPUP_ANIMATION["FROM_RIGHT"] = 6] = "FROM_RIGHT";
    })(POPUP_ANIMATION = exports.POPUP_ANIMATION || (exports.POPUP_ANIMATION = {}));
    var gaNotifyConfig = function() {
      function gaNotifyConfig() {
        this.animAppear = "";
        this.animIdle = "";
        this.animDisappear = "";
        this.languageKey = "txtJPNotify";
        this.spineData = null;
        this.type = "";
      }
      __decorate([ property({
        serializable: true
      }) ], gaNotifyConfig.prototype, "animAppear", void 0);
      __decorate([ property({
        serializable: true
      }) ], gaNotifyConfig.prototype, "animIdle", void 0);
      __decorate([ property({
        serializable: true
      }) ], gaNotifyConfig.prototype, "animDisappear", void 0);
      __decorate([ property({
        visible: true
      }) ], gaNotifyConfig.prototype, "languageKey", void 0);
      __decorate([ property(sp.SkeletonData) ], gaNotifyConfig.prototype, "spineData", void 0);
      __decorate([ property({
        visible: true
      }) ], gaNotifyConfig.prototype, "type", void 0);
      gaNotifyConfig = __decorate([ ccclass ], gaNotifyConfig);
      return gaNotifyConfig;
    }();
    exports.gaNotifyConfig = gaNotifyConfig;
    var gaStylePopupAnimation = function() {
      function gaStylePopupAnimation() {
        this.show = POPUP_ANIMATION.DEFAULT;
        this.hide = POPUP_ANIMATION.DEFAULT;
      }
      __decorate([ property({
        type: cc.Enum(POPUP_ANIMATION)
      }) ], gaStylePopupAnimation.prototype, "show", void 0);
      __decorate([ property({
        type: cc.Enum(POPUP_ANIMATION)
      }) ], gaStylePopupAnimation.prototype, "hide", void 0);
      gaStylePopupAnimation = __decorate([ ccclass("gaStylePopupAnimation") ], gaStylePopupAnimation);
      return gaStylePopupAnimation;
    }();
    exports.gaStylePopupAnimation = gaStylePopupAnimation;
    var gaBaseHistoryInfo = function() {
      function gaBaseHistoryInfo() {}
      gaBaseHistoryInfo.prototype.merge = function(data) {
        data && gaUtils_1.default.mergeTwoObject(this, gaUtils_1.default.replaceObjectKeys(data, gaMapKeyConfig_1.default), this);
      };
      return gaBaseHistoryInfo;
    }();
    exports.gaBaseHistoryInfo = gaBaseHistoryInfo;
    var gaBetInfo = function(_super) {
      __extends(gaBetInfo, _super);
      function gaBetInfo(data) {
        var _this = _super.call(this) || this;
        _this.betAmount = 0;
        _this.rate = 0;
        _this.type = 0;
        _this.winAmount = 0;
        _this.merge(data);
        return _this;
      }
      gaBetInfo.prototype.merge = function(data) {
        if (data) {
          _super.prototype.merge.call(this, data);
          if (!this.winAmount) {
            data.winAmt > 0 ? this.winAmount = data.winAmt : this.winAmount = data.win;
            delete this["win"];
            delete this["winAmt"];
          }
        }
      };
      return gaBetInfo;
    }(gaBaseHistoryInfo);
    exports.gaBetInfo = gaBetInfo;
    var gaHistoryData = function(_super) {
      __extends(gaHistoryData, _super);
      function gaHistoryData(data) {
        var _this = _super.call(this) || this;
        _this.from = 0;
        _this.total = 0;
        _this.resultList = [];
        if (data) {
          _this.from = data.from;
          _this.total = data.total;
        }
        return _this;
      }
      return gaHistoryData;
    }(gaBaseHistoryInfo);
    exports.gaHistoryData = gaHistoryData;
    var gaBetHistoryDataItem = function(_super) {
      __extends(gaBetHistoryDataItem, _super);
      function gaBetHistoryDataItem(data) {
        var _this = _super.call(this) || this;
        _this.gameNumber = "";
        _this.winAmount = 0;
        _this.betAmount = 0;
        _this.items = [];
        _this.timeStamp = 0;
        _this.merge(data);
        return _this;
      }
      gaBetHistoryDataItem.prototype.merge = function(data) {
        _super.prototype.merge.call(this, data);
        data && data.items && (this.items = data.items.map(function(element) {
          return new gaBetInfo(element);
        }));
      };
      return gaBetHistoryDataItem;
    }(gaBaseHistoryInfo);
    exports.gaBetHistoryDataItem = gaBetHistoryDataItem;
    var gaJPHistoryDataItem = function(_super) {
      __extends(gaJPHistoryDataItem, _super);
      function gaJPHistoryDataItem(data) {
        var _this = _super.call(this) || this;
        _this.jackpotAmount = 0;
        _this.displayName = "";
        _this.timeStamp = 0;
        _this.merge(data);
        return _this;
      }
      return gaJPHistoryDataItem;
    }(gaBaseHistoryInfo);
    exports.gaJPHistoryDataItem = gaJPHistoryDataItem;
    var gaNotifyData = function() {
      function gaNotifyData(data) {
        this.commandId = data.cmdId;
        this.username = data.usr;
      }
      return gaNotifyData;
    }();
    exports.gaNotifyData = gaNotifyData;
    cc._RF.pop();
  }, {
    "../Config/gaMapKeyConfig": "gaMapKeyConfig",
    "../Utilities/gaUtils": "gaUtils"
  } ],
  gaDataFactory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5ab2e3C2OhOWbiRnfIiTOSy", "gaDataFactory");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaResultData_1 = require("../Network/Data/gaResultData");
    var gaRoundData_1 = require("../Network/Data/gaRoundData");
    var gaLogger_1 = require("../Utilities/gaLogger");
    var gaDataFactory = function() {
      function gaDataFactory() {}
      gaDataFactory.prototype.create = function(type, data) {
        switch (type) {
         case gaResultData_1.default:
          return new gaResultData_1.default(data);

         case gaRoundData_1.default:
          return new gaRoundData_1.default(data);
        }
        gaLogger_1.default.error("Not implemented type of data factory for ", type);
      };
      gaDataFactory.prototype.destroy = function() {
        gaDataFactory.instance = null;
      };
      gaDataFactory.instance = null;
      return gaDataFactory;
    }();
    exports.default = gaDataFactory;
    cc._RF.pop();
  }, {
    "../Network/Data/gaResultData": "gaResultData",
    "../Network/Data/gaRoundData": "gaRoundData",
    "../Utilities/gaLogger": "gaLogger"
  } ],
  gaDataStore: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b382bSb7LdACrgw22YOyhnW", "gaDataStore");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaDemoPlayer_1 = require("../Definitions/gaDemoPlayer");
    var gaEventsCode_1 = require("../Definitions/gaEventsCode");
    var gaUserInfo_1 = require("../Definitions/gaUserInfo");
    var gaEventEmitter_1 = require("./gaEventEmitter");
    var gaDataStore = function() {
      function gaDataStore() {
        this.canUpdateWalletRealtime = true;
        this.isTutorial = false;
        this.betValue = 0;
        this.isUserPlaceAnyBet = false;
        this.oddsConfigs = {};
        this.maxBetConfigs = {};
        this.betting = {};
        this.denoms = {};
        this.currDenomId = "10";
        this.gameNumber = "";
        this.userActive = 0;
        this.sessionId = "";
        this.result = null;
        this.typeOfCurrency = "VND";
        this.currencyRatio = 1;
        this.jackpotInfo = [];
      }
      Object.defineProperty(gaDataStore.prototype, "totalBet", {
        get: function() {
          var total = 0;
          for (var key in this.betting) total += this.betting[key];
          return total;
        },
        enumerable: true,
        configurable: true
      });
      gaDataStore.prototype.initialize = function() {
        this.isTutorial = false;
        this.userInfo = new gaUserInfo_1.default();
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.USER.UPDATE_DATA);
      };
      gaDataStore.prototype.demo = function() {
        this.isTutorial = true;
        this.userInfo = new gaDemoPlayer_1.gaDemoPlayer();
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.USER.UPDATE_DATA);
      };
      gaDataStore.prototype.destroy = function() {
        gaDataStore.instance = null;
      };
      gaDataStore.prototype.getUserTypeOfCurrency = function() {
        return this.typeOfCurrency;
      };
      gaDataStore.prototype.getCurrencyRatio = function() {
        return this.currencyRatio;
      };
      gaDataStore.prototype.getMaxBet = function(betId) {
        return this.maxBetConfigs[betId];
      };
      gaDataStore.prototype.getOdds = function(betId) {
        return this.oddsConfigs[betId];
      };
      gaDataStore.prototype.setCurrencyConfig = function(data) {
        data.TypeOfCurrency && (this.typeOfCurrency = data.TypeOfCurrency);
        data.CurrencyRatio && (this.currencyRatio = data.CurrencyRatio);
        data.JackpotInfo && data.JackpotInfo.length > 0 && (this.jackpotInfo = data.JackpotInfo);
      };
      gaDataStore.prototype.setDataStore = function(data) {
        for (var key in data) Object.prototype.hasOwnProperty.call(data, key) && Object.prototype.hasOwnProperty.call(this, key) && (this[key] = data[key]);
      };
      gaDataStore.prototype.cleanUp = function() {
        this.isUserPlaceAnyBet = false;
        this.betting = {};
      };
      gaDataStore.instance = null;
      return gaDataStore;
    }();
    exports.default = gaDataStore;
    cc._RF.pop();
  }, {
    "../Definitions/gaDemoPlayer": "gaDemoPlayer",
    "../Definitions/gaEventsCode": "gaEventsCode",
    "../Definitions/gaUserInfo": "gaUserInfo",
    "./gaEventEmitter": "gaEventEmitter"
  } ],
  gaDemoPlayer: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8d0e1yhZLBONblqF3n1seD4", "gaDemoPlayer");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaUserInfo_1 = require("./gaUserInfo");
    var gaDemoPlayer = function(_super) {
      __extends(gaDemoPlayer, _super);
      function gaDemoPlayer() {
        var _this = _super.call(this) || this;
        _this._currentAmt = 1e4;
        _this._currentAmt = 1e4;
        return _this;
      }
      Object.defineProperty(gaDemoPlayer.prototype, "totalAmount", {
        get: function() {
          return this._currentAmt;
        },
        enumerable: true,
        configurable: true
      });
      gaDemoPlayer.prototype.bet = function(amount) {
        this._currentAmt -= amount;
      };
      return gaDemoPlayer;
    }(gaUserInfo_1.default);
    exports.gaDemoPlayer = gaDemoPlayer;
    cc._RF.pop();
  }, {
    "./gaUserInfo": "gaUserInfo"
  } ],
  gaDialog: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5ffbeG1IuREFp215fOvhCrz", "gaDialog");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaCommon_1 = require("../../Definitions/gaCommon");
    var gaBasePopup_1 = require("./gaBasePopup");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaDialog = function(_super) {
      __extends(gaDialog, _super);
      function gaDialog() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.txtMessage = null;
        _this.btnConfirm = null;
        _this.btnReject = null;
        _this.confirmHdl = null;
        _this.typeShowing = "";
        return _this;
      }
      Object.defineProperty(gaDialog.prototype, "popupType", {
        get: function() {
          return gaBaseConfig_1.default.POPUP_TYPE.DIALOG;
        },
        enumerable: true,
        configurable: true
      });
      gaDialog.prototype.show = function(data) {
        var _this = this;
        var POPUP_PROMPT = gaBaseConfig_1.default.instance.POPUP_PROMPT;
        if (!data || !this.txtMessage || this.typeShowing == POPUP_PROMPT.ERROR_NETWORK || this.typeShowing == POPUP_PROMPT.SOCKET_DISCONNECT) return;
        this.resetDialog();
        this.onResetState();
        var type = data.type, message = data.message, onConfirm = data.onConfirm, onReject = data.onReject;
        this.txtMessage.string = message;
        this.typeShowing = type;
        switch (type) {
         case POPUP_PROMPT.ERROR_NETWORK:
          this.btnClose && (this.btnClose.node.active = false);
          this.btnReject && (this.btnReject.active = false);
          this.btnConfirm.active = gaCommon_1.gameCommonUtils.checkConditionCloseGameIframe();
          if (this.btnConfirm.active) {
            this.btnConfirm.off("click");
            this.btnConfirm.on("click", function() {
              _this.btnConfirm.off("click");
              _this.soundPlayer && _this.soundPlayer.playSFXClick();
              onConfirm && (_this.confirmHdl = onConfirm);
              _this.onClose();
            }, this);
          }
          break;

         case POPUP_PROMPT.JUST_CONFIRM_BUTTON:
          this.btnClose && (this.btnClose.node.active = false);
          this.btnReject && (this.btnReject.active = false);
          this.btnConfirm.active = true;
          this.btnConfirm.off("click");
          this.btnConfirm.on("click", function() {
            _this.btnConfirm.off("click");
            _this.soundPlayer && _this.soundPlayer.playSFXClick();
            onConfirm && (_this.confirmHdl = onConfirm);
            _this.onClose();
          }, this);
          break;

         case POPUP_PROMPT.CONFIRM_AND_CLOSE_BUTTON:
          this.btnClose && (this.btnClose.node.active = true);
          this.btnReject && (this.btnReject.active = false);
          this.btnConfirm.active = true;
          this.btnConfirm.off("click");
          this.btnConfirm.on("click", function() {
            _this.btnConfirm.off("click");
            _this.soundPlayer && _this.soundPlayer.playSFXClick();
            onConfirm && (_this.confirmHdl = onConfirm);
            _this.onClose();
          }, this);
          break;

         case POPUP_PROMPT.CONFIRM_AND_REJECT_BUTTON:
          this.btnClose && (this.btnClose.node.active = false);
          this.btnConfirm.active = true;
          this.btnConfirm.off("click");
          this.btnConfirm.on("click", function() {
            _this.btnConfirm.off("click");
            _this.soundPlayer && _this.soundPlayer.playSFXClick();
            onConfirm && (_this.confirmHdl = onConfirm);
            _this.onClose();
          }, this);
          if (this.btnReject) {
            this.btnReject.active = true;
            this.btnReject.off("click");
            this.btnReject.on("click", function() {
              _this.btnReject.off("click");
              _this.soundPlayer && _this.soundPlayer.playSFXClick();
              onReject && (_this.confirmHdl = onReject);
              _this.onClose();
            }, this);
          }
          break;

         default:
          this.btnClose && (this.btnClose.node.active = false);
          this.btnConfirm.active = false;
          this.btnReject && (this.btnReject.active = false);
        }
        _super.prototype.show.call(this);
      };
      gaDialog.prototype.hide = function() {
        var _this = this;
        this.typeShowing = "";
        var actions = [];
        actions.push(cc.callFunc(function() {
          _super.prototype.hide.call(_this);
        }));
        this.confirmHdl && actions.push(cc.callFunc(this.confirmHdl.bind(this)));
        actions.length > 1 ? this.contents.runAction(cc.sequence(actions)) : this.contents.runAction(actions[0]);
      };
      gaDialog.prototype.resetDialog = function() {
        this.typeShowing = "";
        this.btnConfirm.active = false;
        this.btnReject && (this.btnReject.active = false);
        this.btnClose && (this.btnClose.node.active = false);
        this.confirmHdl = null;
        this.unscheduleAllCallbacks();
      };
      __decorate([ property(cc.Label) ], gaDialog.prototype, "txtMessage", void 0);
      __decorate([ property(cc.Node) ], gaDialog.prototype, "btnConfirm", void 0);
      __decorate([ property(cc.Node) ], gaDialog.prototype, "btnReject", void 0);
      gaDialog = __decorate([ ccclass ], gaDialog);
      return gaDialog;
    }(gaBasePopup_1.default);
    exports.default = gaDialog;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "../../Definitions/gaCommon": "gaCommon",
    "./gaBasePopup": "gaBasePopup"
  } ],
  gaEventEmitter: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "07f0aOTNmpDYYOTAjUXaalQ", "gaEventEmitter");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaLogger_1 = require("../Utilities/gaLogger");
    var gaEventEmitter = function() {
      function gaEventEmitter() {
        this._createNode();
      }
      gaEventEmitter.prototype._createNode = function() {
        cc.isValid(this._node) && this._node.destroy();
        this._node = new cc.Node("gaEventEmitter");
        this._node.setParent(cc.director.getScene());
        cc.game.addPersistRootNode(this._node);
      };
      gaEventEmitter.prototype.emit = function(event) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
        if (!cc.isValid(this._node)) return;
        args && args.length > 0 ? gaLogger_1.default.debug("[gaEventEmitter] emit " + event + ", data =", args) : gaLogger_1.default.debug("[gaEventEmitter] emit " + event);
        this._node.emit.apply(this._node, arguments);
      };
      gaEventEmitter.prototype.registerEvent = function(_eventCode, _listener, _target) {
        cc.isValid(this._node) && this._node.on.apply(this._node, arguments);
      };
      gaEventEmitter.prototype.registerOnce = function(_eventCode, _listener, _target) {
        cc.isValid(this._node) && this._node.once.apply(this._node, arguments);
      };
      gaEventEmitter.prototype.removeEvent = function(_eventCode, _listener, _target) {
        cc.isValid(this._node) && this._node.off.apply(this._node, arguments);
      };
      gaEventEmitter.prototype.removeEvents = function(_target) {
        cc.isValid(this._node) && this._node.targetOff.apply(this._node, arguments);
      };
      gaEventEmitter.prototype.removeOnce = function(_eventCode, _listener, _target) {
        cc.isValid(this._node) && this._node.off.apply(this._node, arguments);
      };
      gaEventEmitter.prototype.destroy = function() {
        cc.isValid(this._node) && this._node.destroy();
        this._node = null;
        gaEventEmitter.instance = null;
      };
      gaEventEmitter.instance = null;
      return gaEventEmitter;
    }();
    exports.default = gaEventEmitter;
    cc._RF.pop();
  }, {
    "../Utilities/gaLogger": "gaLogger"
  } ],
  gaEventsCode: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "24bfblIbf1ALpSZJBZz8SGD", "gaEventsCode");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaEventsCode = {
      COMMON: {
        INITIALIZE_GAME: "ARCADE_EVENT.COMMON.INITIALIZE_GAME",
        REFRESH_PAGE: "ARCADE_EVENT.COMMON.REFRESH_PAGE",
        EXIT_GAME: "ARCADE_EVENT.COMMON.EXIT_GAME",
        GAME_SHOW: "ARCADE_EVENT.COMMON.GAME_SHOW",
        GAME_HIDE: "ARCADE_EVENT.COMMON.GAME_HIDE",
        ON_SCREEN_RESIZE: "ARCADE_EVENT.COMMON.ON_SCREEN_RESIZE"
      },
      ACTION: {
        BET: "ARCADE_EVENT.ACTION.BET",
        REFRESH_PAYOUT: "ARCADE_EVENT.ACTION.REFRESH_PAYOUT",
        GET_USER_ACTIVE: "ARCADE_EVENT.ACTION.GET_USER_ACTIVE",
        LEAVE_GAME: "ARCADE_EVENT.ACTION.LEAVE_GAME",
        CLEAR_USER_BETTING: "ARCADE_EVENT.CLEAR_USER_BETTING"
      },
      BET: {
        NOT_ENOUGH_MONEY: "ARCADE_EVENT.BET.NOT_ENOUGH_MONEY",
        REACH_MAX_BET: "ARCADE_EVENT.BET.REACH_MAX_BET",
        CHANGE_BET_VALUE: "ARCADE_EVENT.BET.CHANGE_BET_VALUE",
        PLACE_BET: "ARCADE_EVENT.BET.PLACE_BET",
        CLEAR_BET: "ARCADE_EVENT.BET.CLEAR_BET"
      },
      VIEW: {
        INGAME: "ARCADE_EVENT.VIEW.INGAME",
        BETTING: "ARCADE_EVENT.VIEW.BETTING",
        UNLOCK_BETTING_VIEW: "ARCADE_EVENT.VIEW.BETTING.UNLOCK",
        LOCK_BETTING_VIEW: "ARCADE_EVENT.VIEW.BETTING.LOCK",
        SHOW_RESULT: "ARCADE_EVENT.VIEW.SHOW_RESULT",
        SET_GAME_NUMBER: "ARCADE_EVENT.VIEW.SET_GAME_NUMBER",
        SET_USER_ONLINE: "ARCADE_EVENT.VIEW.SET_USER_ONLINE"
      },
      STATE: {
        NEW_ROUND: "ARCADE_EVENT.STATE.NEW_ROUND",
        START_BETTING: "ARCADE_EVENT.STATE.START_BETTING",
        END_BETTING: "ARCADE_EVENT.STATE.END_BETTING",
        FINISHED: "ARCADE_EVENT.STATE.FINISHED"
      },
      NOTIFY: {
        SHOW_NOTIFY: "ARCADE_EVENT.NOTIFY.SHOW_NOTIFY",
        IN_RACING: "ARCADE_EVENT.NOTIFY.IN_RACING",
        AFTER_FINISHED_RACING: "ARCADE_EVENT.NOTIFY.AFTER_FINISHED_RACING"
      },
      DEMO: {
        START: "ARCADE_EVENT.DEMO.START",
        END: "ARCADE_EVENT.DEMO.END",
        FAST_TO_RESULT: "ARCADE_EVENT.DEMO.FAST_TO_RESULT",
        SHOW_SKIP_RESULT: "ARCADE_EVENT.DEMO.SHOW_SKIP_RESULT",
        RESET_USER_BET: "ARCADE_EVENT.DEMO.RESET_USER_BET",
        SKIP_IN_GAME: "ARCADE_EVENT.DEMO.SKIP_IN_GAME",
        SET_JACKPOT: "ARCADE_EVENT.DEMO.SET_JACKPOT"
      },
      LOCK_BUTTON: "ARCADE_EVENT.LOCK_BUTTON",
      UNLOCK_BUTTON: "ARCADE_EVENT.UNLOCK_BUTTON",
      CLOSE_ALL_POPUP: "ARCADE_EVENT.CLOSE_ALL_POPUP",
      USER: {
        UPDATE_DATA: "ARCADE_EVENT.USER.UPDATE_DATA",
        UPDATE_BALANCE: "ARCADE_EVENT.USER.UPDATE_BALANCE"
      },
      DATA: {
        PAYOUT_RECEIVED: "ARCADE_EVENT.DATA.PAYOUT_RECEIVED",
        RESULT_RECEIVED: "ARCADE_EVENT.DATA.RESULT_RECEIVED",
        UPDATE_USER_ACTIVE: "ARCADE_EVENT.DATA.UPDATE_USER_ACTIVE",
        EMPTY: "ARCADE_EVENT.DATA.EMPTY"
      },
      JACKPOT: {
        INIT_JACKPOT: "ARCADE_EVENT.JACKPOT.INIT_JACKPOT",
        UPDATE_JACKPOT: "ARCADE_EVENT.JACKPOT.UPDATE_JACKPOT",
        PAUSE_JACKPOT: "ARCADE_EVENT.JACKPOT.PAUSE_JACKPOT",
        RESET_JACKPOT: "ARCADE_EVENT.JACKPOT.RESET_JACKPOT",
        RESUME_JACKPOT: "ARCADE_EVENT.JACKPOT.RESUME_JACKPOT",
        CHANGE_JACKPOT: "ARCADE_EVENT.JACKPOT.CHANGE_JACKPOT",
        UPDATE_VALUE_JACKPOT: "ARCADE_EVENT.JACKPOT.UPDATE_VALUE_JACKPOT",
        OTHER_USER_WIN: "ARCADE_EVENT.JACKPOT.OTHER_USER_WIN"
      },
      NETWORK: {
        REQUEST_BET_ERROR: "ARCADE_EVENT.NETWORK.REQUEST_BET_ERROR",
        BACKEND_ERROR: "ARCADE_EVENT.NETWORK.BACKEND_ERROR",
        WALLET_ERROR: "ARCADE_EVENT.NETWORK.WALLET_ERROR",
        PROMOTION_ERROR: "ARCADE_EVENT.NETWORK.PROMOTION_ERROR",
        NORMAL: "ARCADE_EVENT.NETWORK.NORMAL",
        CANNOT_AUTHEN: "ARCADE_EVENT.NETWORK.CANNOT_AUTHEN",
        WEB_SOCKET_OPEN: "ARCADE_EVENT.NETWORK.WEB_SOCKET_OPEN",
        WEB_SOCKET_RECONNECT: "ARCADE_EVENT.NETWORK.WEB_SOCKET_RECONNECT",
        WEB_SOCKET_MESSAGE: "ARCADE_EVENT.NETWORK.WEB_SOCKET_MESSAGE",
        WEB_SOCKET_FORCE_DISCONNECT: "ARCADE_EVENT.NETWORK.WEB_SOCKET_FORCE_DISCONNECT",
        WEB_SOCKET_CHAT_MESSAGE: "ARCADE_EVENT.NETWORK.WEB_SOCKET_CHAT_MESSAGE",
        WEB_SOCKET_CLOSE: "ARCADE_EVENT.NETWORK.WEB_SOCKET_CLOSE",
        WEB_SOCKET_DISCONNECT: "ARCADE_EVENT.NETWORK.WEB_SOCKET_DISCONNECT",
        WEB_SOCKET_BAD_CONDITION: "ARCADE_EVENT.NETWORK.WEB_SOCKET_BAD_CONDITION",
        WEB_SOCKET_TEMP_DISCONNECT: "ARCADE_EVENT.NETWORK.WEB_SOCKET_TEMP_DISCONNECT"
      },
      POPUP: {
        SHOW_POPUP_HISTORY_BET: "ARCADE_EVENT.POPUP.SHOW_POPUP_HISTORY_BET",
        SHOW_POPUP_HISTORY_JP: "ARCADE_EVENT.POPUP.SHOW_POPUP_HISTORY_JP",
        SHOW_POPUP_INFO: "ARCADE_EVENT.POPUP.SHOW_POPUP_INFO",
        SHOW_POPUP_SETTING: "ARCADE_EVENT.POPUP.SHOW_POPUP_SETTING",
        SHOW_HISTORY_DETAIL: "ARCADE_EVENT.POPUP.SHOW_HISTORY_DETAIL",
        HIDE_HISTORY_DETAIL: "ARCADE_EVENT.POPUP.HIDE_HISTORY_DETAIL",
        CLOSE_TOP_POPUP: "ARCADE_EVENT.POPUP.CLOSE_TOP_POPUP",
        SHOW_DIALOG: "ARCADE_EVENT.POPUP.SHOW_DIALOG",
        SHOW_TOAST: "ARCADE_EVENT.POPUP.SHOW_TOAST",
        CLOSE_POPUP: "ARCADE_EVENT.POPUP.CLOSE_POPUP"
      },
      SOUND: {
        UPDATE_MUSIC_VOL: "ARCADE_EVENT.SOUND.UPDATE_MUSIC_VOL",
        UPDATE_EFFECT_VOL: "ARCADE_EVENT.SOUND.UPDATE_EFFECT_VOL"
      }
    };
    exports.default = gaEventsCode;
    cc._RF.pop();
  }, {} ],
  gaFBFParticle: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "20965tgauRL8IWMkpNYWOdp", "gaFBFParticle");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, requireComponent = _a.requireComponent, executeInEditMode = _a.executeInEditMode;
    var ParticleSpriteAnimator = function(_super) {
      __extends(ParticleSpriteAnimator, _super);
      function ParticleSpriteAnimator() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.particleSystem = null;
        _this.duration = -1;
        _this.spriteFrames = [];
        _this.durationPerFrame = 0;
        return _this;
      }
      ParticleSpriteAnimator.prototype.onLoad = function() {
        this.particleSystem = this.node.getComponent(cc.ParticleSystem);
        this.particleSystem._simulator.updateUVs = function() {};
        this.particleSystem._simulator.stop = this._stop.bind(this);
        if (this.spriteFrames.length > 0) {
          this.particleSystem.spriteFrame = this.spriteFrames[0];
          this.durationPerFrame = this._getDuration() / this.spriteFrames.length;
        }
      };
      ParticleSpriteAnimator.prototype.update = function() {
        var simulator = this.particleSystem._simulator;
        if (simulator.sys._buffer && simulator.sys._renderSpriteFrame) {
          var particleCount = simulator.particles.length;
          var FLOAT_PER_PARTICLE = 4 * simulator.sys._vertexFormat._bytes / 4;
          var vbuf = simulator.sys._buffer._vData;
          for (var index = 0; index < particleCount; index++) {
            var spriteFrame = this._getSpriteFrame(this.particleSystem.life - simulator.particles[index].timeToLive);
            var uv = spriteFrame.uv;
            var offset = index * FLOAT_PER_PARTICLE;
            vbuf[offset + 2] = uv[0];
            vbuf[offset + 3] = uv[1];
            vbuf[offset + 7] = uv[2];
            vbuf[offset + 8] = uv[3];
            vbuf[offset + 12] = uv[4];
            vbuf[offset + 13] = uv[5];
            vbuf[offset + 17] = uv[6];
            vbuf[offset + 18] = uv[7];
          }
          simulator._uvFilled = particleCount;
        }
      };
      ParticleSpriteAnimator.prototype._stop = function() {
        var simulator = this.particleSystem._simulator;
        simulator.reset();
        simulator.active = false;
        simulator.elapsed = simulator.sys.duration;
        simulator.emitCounter = 0;
      };
      ParticleSpriteAnimator.prototype._getDuration = function() {
        if (this.duration <= 0) return this.particleSystem.life;
        return this.duration;
      };
      ParticleSpriteAnimator.prototype._getSpriteFrame = function(time) {
        time <= 0 && (time = 0);
        return this.spriteFrames[Math.floor(time / this.durationPerFrame) % this.spriteFrames.length] || this.particleSystem.spriteFrame;
      };
      __decorate([ property(cc.ParticleSystem) ], ParticleSpriteAnimator.prototype, "particleSystem", void 0);
      __decorate([ property(cc.Float) ], ParticleSpriteAnimator.prototype, "duration", void 0);
      __decorate([ property(cc.SpriteFrame) ], ParticleSpriteAnimator.prototype, "spriteFrames", void 0);
      ParticleSpriteAnimator = __decorate([ ccclass, executeInEditMode, requireComponent(cc.ParticleSystem) ], ParticleSpriteAnimator);
      return ParticleSpriteAnimator;
    }(cc.Component);
    exports.default = ParticleSpriteAnimator;
    cc._RF.pop();
  }, {} ],
  gaGameNetwork: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fc7b7ko2vhB6oQaetZfp6OT", "gaGameNetwork");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaCommon_1 = require("../Definitions/gaCommon");
    var gaDataFactory_1 = require("../Common/gaDataFactory");
    var gaDataStore_1 = require("../Common/gaDataStore");
    var gaEventEmitter_1 = require("../Common/gaEventEmitter");
    var gaBaseConfig_1 = require("../Config/gaBaseConfig");
    var gaLogger_1 = require("../Utilities/gaLogger");
    var gaPromise_1 = require("../Utilities/gaPromise");
    var gaResultData_1 = require("./Data/gaResultData");
    var gaRoundData_1 = require("./Data/gaRoundData");
    var gaCommandID_1 = require("./gaCommandID");
    var gaGameService_1 = require("./gaGameService");
    var gaSocketManager_1 = require("./gaSocketManager");
    var gaEventsCode_1 = require("../Definitions/gaEventsCode");
    var gaGameNetwork = function() {
      function gaGameNetwork(gameId, version) {
        this.gameId = gameId;
        this.version = version;
        this.gameChannel = "";
        this._outGame = false;
        this._isWaitingBetData = false;
        var LOGIN_IFRAME = gaCommon_1.loadConfigAsync.getConfig().LOGIN_IFRAME;
        gaBaseConfig_1.default.isIFrame = LOGIN_IFRAME;
      }
      gaGameNetwork.prototype.authenticate = function() {
        var _this = this;
        if (this._state == gaGameNetwork.STATE_DIE) return gaPromise_1.default.reject("STATE DIE");
        return gaGameService_1.default.authenticate(this.gameId, this.version).then(function() {
          return _this._createSocket();
        }).catch(function(err) {
          _this._gotoDieMode();
          return gaPromise_1.default.reject(err);
        });
      };
      gaGameNetwork.prototype.joinGame = function() {
        var _this = this;
        if (this._state == gaGameNetwork.STATE_DIE) return gaPromise_1.default.reject("STATE DIE");
        gaLogger_1.default.debug("sendJoinGame --- ");
        this._reset();
        var URL_CODE = gaCommon_1.loadConfigAsync.getConfig().URL_CODE;
        var code = "";
        var env = 3;
        if (gaBaseConfig_1.default.isIFrame) {
          code = gaCommon_1.gameCommonUtils.getUrlParam(URL_CODE);
          env = parseInt(gaCommon_1.gameCommonUtils.getUrlParam("env")) || 2;
        } else env = cc.sys.isBrowser ? 1 : 3;
        var payload = {
          event: gaCommandID_1.gaGameCMD.R_JOIN_GAME,
          data: {
            code: code,
            env: env
          }
        };
        return this._sendMessage(payload).then(function(response) {
          return _this.updateJoinGameData(response);
        });
      };
      gaGameNetwork.prototype.refreshWallet = function() {
        this.onWalletUpdate();
      };
      gaGameNetwork.prototype.refresh = function() {
        if (this._state == gaGameNetwork.STATE_DIE) return;
        this.socketManager.isReady() && this._gotoNormalMode();
      };
      gaGameNetwork.prototype.refreshPayout = function(payload) {
        var _this = this;
        if (this._state == gaGameNetwork.STATE_DIE) return gaPromise_1.default.reject("STATE DIE");
        return this._sendMessage(payload).then(function(resp) {
          return _this.onResponsePayout(resp);
        });
      };
      gaGameNetwork.prototype.bet = function(payload) {
        var _this = this;
        if (this._state == gaGameNetwork.STATE_DIE) return gaPromise_1.default.reject("STATE DIE");
        this._isWaitingBetData = true;
        return this._sendMessage(payload).then(function(resp) {
          return _this.onResponseBet(resp);
        }).finally(function() {
          return _this._isWaitingBetData = false;
        });
      };
      gaGameNetwork.prototype.onResponsePayout = function(resp) {
        var roundData = gaDataFactory_1.default.instance.create(gaRoundData_1.default, resp);
        gaDataStore_1.default.instance.setDataStore(roundData);
        return roundData;
      };
      gaGameNetwork.prototype.onResponseBet = function(resp) {
        if (resp.jpup) {
          var arr = resp.jpup.split(",");
          arr.forEach(function(jpup) {
            var jp = jpup.split(";");
            gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.JACKPOT.UPDATE_VALUE_JACKPOT, jp[0], parseFloat(jp[1]));
          });
        }
        var result = gaDataFactory_1.default.instance.create(gaResultData_1.default, resp);
        gaDataStore_1.default.instance.result = result;
        return result;
      };
      gaGameNetwork.prototype.closeAndCleanUp = function() {
        this._reset();
        this.socketManager && this.socketManager.closeAndCleanUp();
      };
      gaGameNetwork.prototype.backToLogin = function() {
        this._outGame = true;
        this.closeAndCleanUp();
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.COMMON.REFRESH_PAGE);
        gaBaseConfig_1.default.isIFrame ? gaCommon_1.gameCommonUtils.handleCloseGameIframe() : gaCommon_1.gameCommonUtils.handleBackLogin();
      };
      gaGameNetwork.prototype.leaveGame = function() {
        this._outGame = true;
        this.closeAndCleanUp();
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.COMMON.REFRESH_PAGE);
        gaBaseConfig_1.default.isIFrame ? gaCommon_1.gameCommonUtils.handleCloseGameIframe() : gaCommon_1.gameCommonUtils.handleFlowOutGame();
      };
      gaGameNetwork.prototype._createSocket = function() {
        if (!this.socketManager) {
          this.socketManager = new gaSocketManager_1.gaSocketManager(this.gameId, this.onErrorPushed.bind(this), this.onWalletUpdate.bind(this));
          this.socketManager.checkReady();
        }
      };
      gaGameNetwork.prototype._sendMessage = function(payload) {
        var _this = this;
        return this.socketManager.sendMessage(payload).catch(function(err) {
          err.isResponseError || payload.event == gaCommandID_1.gaGameCMD.R_JOIN_GAME || _this.refresh();
          return gaPromise_1.default.reject(err);
        });
      };
      gaGameNetwork.prototype._reset = function() {
        this.isJoinedGame = false;
        this.lastGameState = null;
        this.socketManager && this.socketManager.clearPendingCommands();
        this.socketManager && this.socketManager.unSubscribe(this.gameChannel);
        this.socketManager && this.socketManager.unSubscribe(gaBaseConfig_1.default.NOTIFY_CHANNEL);
      };
      gaGameNetwork.prototype.updateJoinGameData = function(resp) {
        var _a;
        var gCN = resp.gCN, exD = resp.exD;
        this.gameChannel = gCN;
        exD.user && (gaDataStore_1.default.instance.userInfo.avatar = exD.user.av);
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.POPUP.CLOSE_POPUP, {
          type: gaBaseConfig_1.default.POPUP_TYPE.DIALOG
        });
        var roundData = gaDataFactory_1.default.instance.create(gaRoundData_1.default, resp);
        gaDataStore_1.default.instance.setDataStore(roundData);
        this._state !== gaGameNetwork.STATE_DIE && this._gotoNormalMode();
        this.socketManager.subscribe(gCN);
        this.socketManager.subscribe(gaBaseConfig_1.default.NOTIFY_CHANNEL);
        var jp = resp.jp;
        jp && (_a = gaEventEmitter_1.default.instance).emit.apply(_a, [ gaEventsCode_1.default.JACKPOT.INIT_JACKPOT ].concat(jp));
        return roundData;
      };
      gaGameNetwork.prototype.onWalletUpdate = function() {
        !this._isWaitingBetData && gaDataStore_1.default.instance.canUpdateWalletRealtime && gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.USER.UPDATE_DATA);
      };
      gaGameNetwork.prototype.onErrorPushed = function(errorData) {
        var data = errorData.data;
        if (Array.isArray(data) && data[0]) {
          var code = data[0].cd;
          var forceDie = false;
          if ("W" == code[0] || "0001" == code || "0006" == code) gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WALLET_ERROR, {
            forceDie: forceDie,
            code: code,
            data: data
          }); else if ("0030" == code && this._state !== gaGameNetwork.STATE_DIE) ; else if ("0031" == code) ; else if (-1 !== [ "0016", "0017" ].indexOf(code)) gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.PROMOTION_ERROR, {
            forceDie: forceDie,
            code: code,
            data: data
          }); else if ("0049" == code) gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.REQUEST_BET_ERROR, {
            forceDie: forceDie,
            code: code,
            data: data
          }); else {
            var forceDie_1 = true;
            gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.BACKEND_ERROR, {
              forceDie: forceDie_1,
              code: code,
              data: data
            });
            this._gotoDieMode();
          }
        }
      };
      gaGameNetwork.prototype._gotoNormalMode = function() {
        if (this._outGame || this._state == gaGameNetwork.STATE_DIE) return;
        gaLogger_1.default.debug("NORMAL MODE");
        this.refreshWallet();
        this._state = gaGameNetwork.STATE_NORMAL;
        this.socketManager.clearPendingCommands();
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.NORMAL);
      };
      gaGameNetwork.prototype._gotoDieMode = function() {
        if (this._outGame || this._state == gaGameNetwork.STATE_DIE) return;
        gaLogger_1.default.error("DIE MODE");
        this._state = gaGameNetwork.STATE_DIE;
        this.closeAndCleanUp();
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WEB_SOCKET_FORCE_DISCONNECT);
      };
      gaGameNetwork.STATE_NORMAL = "NORMAL";
      gaGameNetwork.STATE_DIE = "DIE";
      return gaGameNetwork;
    }();
    exports.default = gaGameNetwork;
    cc._RF.pop();
  }, {
    "../Common/gaDataFactory": "gaDataFactory",
    "../Common/gaDataStore": "gaDataStore",
    "../Common/gaEventEmitter": "gaEventEmitter",
    "../Config/gaBaseConfig": "gaBaseConfig",
    "../Definitions/gaCommon": "gaCommon",
    "../Definitions/gaEventsCode": "gaEventsCode",
    "../Utilities/gaLogger": "gaLogger",
    "../Utilities/gaPromise": "gaPromise",
    "./Data/gaResultData": "gaResultData",
    "./Data/gaRoundData": "gaRoundData",
    "./gaCommandID": "gaCommandID",
    "./gaGameService": "gaGameService",
    "./gaSocketManager": "gaSocketManager"
  } ],
  gaGameService: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "a8690ovu2ZHK60vxctKXIPc", "gaGameService");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaCommon_1 = require("../../Scripts/Definitions/gaCommon");
    var gaLogger_1 = require("../Utilities/gaLogger");
    var gaPromise_1 = require("../Utilities/gaPromise");
    var Sentry = window.Sentry;
    var gaGameService = function() {
      function gaGameService() {
        this._gameId = "";
      }
      gaGameService.prototype.authenticate = function(gameId, version) {
        var _this = this;
        gaLogger_1.default.debug("authenticate", gameId, version);
        this._gameId = gameId;
        return this._login(gameId).then(function() {
          return _this._register(gameId, version);
        });
      };
      gaGameService.prototype._login = function(gameId) {
        return new gaPromise_1.default(function(resolve, reject) {
          gaCommon_1.connectNetwork.loginScene({
            gameId: gameId,
            callback: resolve,
            callbackAuthFailed: function() {
              gaLogger_1.default.error("Login failed");
              reject();
            }
          });
        });
      };
      gaGameService.prototype._register = function(gameId, version) {
        return new gaPromise_1.default(function(resolve) {
          "undefined" !== typeof Sentry && Sentry.configureScope(function(scope) {
            scope.setExtra("gameId", gameId);
            scope.setExtra("version", version);
          });
          resolve();
        });
      };
      gaGameService.prototype.getHistory = function(uPath, requestParams) {
        var _this = this;
        var headers = {
          Authorization: gaCommon_1.globalNetwork.getToken()
        };
        var apiUrl = gaCommon_1.loadConfigAsync.getConfig().API_URL;
        return new Promise(function(resolve, reject) {
          gaCommon_1.serviceRest.getWithHeader({
            url: uPath,
            apiUrl: apiUrl,
            params: requestParams,
            headers: headers,
            callback: function(res) {
              if (_this._checkInvalidResponse(res)) {
                reject();
                return;
              }
              resolve(res);
            },
            callbackErr: reject
          });
        });
      };
      gaGameService.prototype._checkInvalidResponse = function(res) {
        return !res || "FAIL" == res.status || null == res.data;
      };
      return gaGameService;
    }();
    var gameService = new gaGameService();
    exports.default = gameService;
    cc._RF.pop();
  }, {
    "../../Scripts/Definitions/gaCommon": "gaCommon",
    "../Utilities/gaLogger": "gaLogger",
    "../Utilities/gaPromise": "gaPromise"
  } ],
  gaGameText: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4adfb/vqfpKVIchl9k+Xsbb", "gaGameText");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaLocalize_1 = require("../Common/gaLocalize");
    var gaGameText = function() {
      function gaGameText() {}
      gaGameText.getErrorMessage = function(errorCode) {
        var messages = gaLocalize_1.default.instance;
        var msg;
        switch (errorCode) {
         case "0000":
          msg = messages.SYSTEM_ERROR;
          break;

         case "0001":
          msg = messages.NO_MONEY;
          break;

         case "0004":
          msg = messages.JOIN_GAME_FAILED;
          break;

         case "0007":
          msg = messages.NO_PLAYSESSION;
          break;

         case "0011":
          msg = messages.BET_FAILED;
          break;

         case "0027":
          msg = messages.KICK_INACTIVE_USER;
          break;

         case "0029":
          msg = messages.GROUP_MAINTAIN;
          break;

         case "0401":
          msg = messages.AUTHEN_FAILED;
          break;

         case "0500":
          msg = messages.SYSTEM_ERROR;
          break;

         case "0501":
          msg = messages.MISMATCH_DATA;
          break;

         case "0006":
         case "W2001":
         case "W2004":
         case "W2006":
         case "W2007":
         case "W2008":
         case "W2500":
         case "W29999":
          msg = messages.WALLET_ERROR;
          break;

         default:
          msg = errorCode;
        }
        return msg;
      };
      return gaGameText;
    }();
    exports.gaGameText = gaGameText;
    cc._RF.pop();
  }, {
    "../Common/gaLocalize": "gaLocalize"
  } ],
  gaGameView: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "4c4e7A+5slDb6LB4RarENS5", "gaGameView");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaStateView_1 = require("../StateMachine/gaStateView");
    var gaComponent_1 = require("../Components/gaComponent");
    var gaEventsCode_1 = require("../Definitions/gaEventsCode");
    var gaReferenceManager_1 = require("./gaReferenceManager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaGameView = function(_super) {
      __extends(gaGameView, _super);
      function gaGameView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.stateViews = [];
        _this._stateMachine = null;
        _this._initialized = false;
        return _this;
      }
      gaGameView.prototype.onLoad = function() {
        gaReferenceManager_1.default.instance.setReference("gameView", this.node);
        for (var index = 0; index < this.stateViews.length; index++) {
          var element = this.stateViews[index];
          element.node.active = true;
          element.node.removeComponent(cc.Widget);
          element.onScreenSizeChanged();
        }
        _super.prototype.onLoad.call(this);
      };
      gaGameView.prototype.onDestroy = function() {
        _super.prototype.onDestroy.call(this);
        this._stateMachine && this._stateMachine.cleanUp();
      };
      gaGameView.prototype.getCurrentView = function() {
        var state = this.getState();
        for (var index = 0; index < this.stateViews.length; index++) {
          var element = this.stateViews[index];
          if (state == element.stateName) return element;
        }
        return null;
      };
      gaGameView.prototype.getState = function() {
        return this._stateMachine && this._stateMachine.getState();
      };
      gaGameView.prototype.initEvents = function() {
        this.register(gaEventsCode_1.default.COMMON.INITIALIZE_GAME, this.initialize);
        this.register(gaEventsCode_1.default.COMMON.ON_SCREEN_RESIZE, this.onScreenResize);
      };
      gaGameView.prototype.initialize = function() {
        if (!this._initialized) {
          this._initialized = true;
          var stateViews = new Map();
          for (var index = 0; index < this.stateViews.length; index++) {
            var element = this.stateViews[index];
            stateViews.set(element.stateName, element);
          }
          this._stateMachine = this.initStateViews(stateViews);
          stateViews.forEach(function(state) {
            return state.initialize();
          });
          this._stateMachine.startLifeCycle();
        }
        this.onScreenResize();
      };
      gaGameView.prototype.onScreenResize = function() {
        for (var index = 0; index < this.stateViews.length; index++) {
          var element = this.stateViews[index];
          element.onScreenSizeChanged();
        }
      };
      __decorate([ property([ gaStateView_1.default ]) ], gaGameView.prototype, "stateViews", void 0);
      gaGameView = __decorate([ ccclass ], gaGameView);
      return gaGameView;
    }(gaComponent_1.default);
    exports.default = gaGameView;
    cc._RF.pop();
  }, {
    "../Components/gaComponent": "gaComponent",
    "../Definitions/gaEventsCode": "gaEventsCode",
    "../StateMachine/gaStateView": "gaStateView",
    "./gaReferenceManager": "gaReferenceManager"
  } ],
  gaGeneralInitialization: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b7793O0S0VPX7iwwE3Uvjp1", "gaGeneralInitialization");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../Config/gaBaseConfig");
    var gaEventsCode_1 = require("../Definitions/gaEventsCode");
    var gaCurrencyCalculator_1 = require("./gaCurrencyCalculator");
    var gaDataFactory_1 = require("./gaDataFactory");
    var gaDataStore_1 = require("./gaDataStore");
    var gaEventEmitter_1 = require("./gaEventEmitter");
    var gaLocalStorage_1 = require("./gaLocalStorage");
    var gaLocalize_1 = require("./gaLocalize");
    var gaReferenceManager_1 = require("./gaReferenceManager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaGeneralInitialization = function(_super) {
      __extends(gaGeneralInitialization, _super);
      function gaGeneralInitialization() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.jsonLocalize = null;
        return _this;
      }
      gaGeneralInitialization.prototype.onLoad = function() {
        cc.game.addPersistRootNode(this.node);
        this.initInstances();
        this.baseInitInstances();
        gaEventEmitter_1.default.instance.registerEvent(gaEventsCode_1.default.COMMON.REFRESH_PAGE, this.refreshPage, this);
      };
      gaGeneralInitialization.prototype.refreshPage = function() {
        cc.game.removePersistRootNode(this.node);
        this.node.destroy();
      };
      gaGeneralInitialization.prototype.onDestroy = function() {
        this.destroyInstances();
      };
      gaGeneralInitialization.prototype.initInstances = function() {};
      gaGeneralInitialization.prototype.baseInitInstances = function() {
        null == gaEventEmitter_1.default.instance && (gaEventEmitter_1.default.instance = new gaEventEmitter_1.default());
        null == gaReferenceManager_1.default.instance && (gaReferenceManager_1.default.instance = new gaReferenceManager_1.default());
        null == gaDataFactory_1.default.instance && (gaDataFactory_1.default.instance = new gaDataFactory_1.default());
        if (null == gaLocalize_1.default.instance) {
          gaLocalize_1.default.instance = new gaLocalize_1.default();
          gaLocalize_1.default.instance.initLocalizeConfig(this.jsonLocalize.json);
        }
        null == gaBaseConfig_1.default.instance && (gaBaseConfig_1.default.instance = new gaBaseConfig_1.default());
        null == gaDataStore_1.default.instance && (gaDataStore_1.default.instance = new gaDataStore_1.default());
        null == gaCurrencyCalculator_1.default.instance && (gaCurrencyCalculator_1.default.instance = new gaCurrencyCalculator_1.default());
        null == gaLocalStorage_1.default.instance && (gaLocalStorage_1.default.instance = new gaLocalStorage_1.default());
      };
      gaGeneralInitialization.prototype.destroyInstances = function() {
        gaEventEmitter_1.default.instance && gaEventEmitter_1.default.instance.destroy();
        gaLocalize_1.default.instance && gaLocalize_1.default.instance.destroy();
        gaBaseConfig_1.default.instance && gaBaseConfig_1.default.instance.destroy();
        gaDataStore_1.default.instance && gaDataStore_1.default.instance.destroy();
        gaCurrencyCalculator_1.default.instance && gaCurrencyCalculator_1.default.instance.destroy();
        gaLocalStorage_1.default.instance && gaLocalStorage_1.default.instance.destroy();
      };
      __decorate([ property(cc.JsonAsset) ], gaGeneralInitialization.prototype, "jsonLocalize", void 0);
      gaGeneralInitialization = __decorate([ ccclass ], gaGeneralInitialization);
      return gaGeneralInitialization;
    }(cc.Component);
    exports.default = gaGeneralInitialization;
    cc._RF.pop();
  }, {
    "../Config/gaBaseConfig": "gaBaseConfig",
    "../Definitions/gaEventsCode": "gaEventsCode",
    "./gaCurrencyCalculator": "gaCurrencyCalculator",
    "./gaDataFactory": "gaDataFactory",
    "./gaDataStore": "gaDataStore",
    "./gaEventEmitter": "gaEventEmitter",
    "./gaLocalStorage": "gaLocalStorage",
    "./gaLocalize": "gaLocalize",
    "./gaReferenceManager": "gaReferenceManager"
  } ],
  gaHistoryItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8098dPiy+FP06rUa5Z4UJZF", "gaHistoryItem");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaComponent_1 = require("../../gaComponent");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaHistoryItem = function(_super) {
      __extends(gaHistoryItem, _super);
      function gaHistoryItem() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      gaHistoryItem = __decorate([ ccclass ], gaHistoryItem);
      return gaHistoryItem;
    }(gaComponent_1.default);
    exports.default = gaHistoryItem;
    cc._RF.pop();
  }, {
    "../../gaComponent": "gaComponent"
  } ],
  gaISocketManager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "be6012SnqBEGLRXywHl5V0T", "gaISocketManager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    cc._RF.pop();
  }, {} ],
  gaIStateMachine: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8825fq0BZpPurlApn9n4Cle", "gaIStateMachine");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    cc._RF.pop();
  }, {} ],
  gaItemsScroller: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "379b8PwTGZGh5/4ZfImrnlS", "gaItemsScroller");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaComponent_1 = require("../gaComponent");
    var gaScrollItem_1 = require("./gaScrollItem");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaItemsScroller = function(_super) {
      __extends(gaItemsScroller, _super);
      function gaItemsScroller() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.btnMinus = null;
        _this.btnPlus = null;
        _this.prefabItem = null;
        _this.touchMoveDirection = null;
        _this.touchPos = cc.v2(0, 0);
        _this.items = [];
        _this.scaleMin = .8;
        _this.currItemIdx = 0;
        _this.itemLeftBoundary = null;
        _this.itemRightBoundary = null;
        _this.center = cc.v2(0, 0);
        _this.autoScrollDistance = 0;
        _this.autoScrollSpeed = 0;
        _this.isAutoScrolling = false;
        _this.scrollDirection = null;
        _this.arrValue = [];
        _this.totalItem = 0;
        _this.itemPadding = 50;
        _this.scaleMax = 1;
        _this.scaleViewDistance = 100;
        return _this;
      }
      gaItemsScroller.prototype.onLoad = function() {
        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this, true);
        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMoved, this, true);
        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnded, this, true);
        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this, true);
      };
      gaItemsScroller.prototype.onTouchBegan = function(touch) {
        this.touchPos = touch.getLocation();
      };
      gaItemsScroller.prototype.onTouchMoved = function(touch) {
        this.handleMoveLogic(touch);
      };
      gaItemsScroller.prototype.handleMoveLogic = function(touch) {
        var touchPoint = touch.getLocation();
        var offset = touchPoint.x - touch.getPreviousLocation().x;
        var TouchDirectionAutoBot = gaBaseConfig_1.default.instance.TouchDirectionAutoBot;
        offset < 0 ? this.touchMoveDirection = TouchDirectionAutoBot.LEFT : offset > 0 && (this.touchMoveDirection = TouchDirectionAutoBot.RIGHT);
        this.moveItem(offset);
      };
      gaItemsScroller.prototype.onTouchEnded = function(touch) {
        var _isAutoScroll = false;
        this.touchPos.x - touch.getPreviousLocation().x != 0 && (_isAutoScroll = true);
        _isAutoScroll && this.handleReleaseLogic();
      };
      gaItemsScroller.prototype.onTouchCancel = function() {
        this.handleReleaseLogic();
      };
      gaItemsScroller.prototype.handleReleaseLogic = function() {
        var _this = this;
        var isScrollOverScreen = true;
        var scaleMaxRatio = this.scaleMin;
        this.items.forEach(function(item) {
          if (item && item.scale > scaleMaxRatio) {
            scaleMaxRatio = item.scale;
            _this.currItemIdx = item.value;
            isScrollOverScreen = false;
          }
        });
        isScrollOverScreen && (this.itemLeftBoundary && this.itemLeftBoundary.x > this.center.x ? this.currItemIdx = 0 : this.itemRightBoundary && this.itemRightBoundary.x < this.center.x && (this.currItemIdx = this.items.length - 1));
        this.scrollToItem(this.currItemIdx);
      };
      gaItemsScroller.prototype.initItemList = function(arrValue) {
        var _this = this;
        if (!arrValue) return;
        this.arrValue = arrValue;
        this.totalItem = this.arrValue.length;
        var posX = 0;
        var paddingItem = this.itemPadding;
        this.prefabItem.parent = null;
        var _loop_1 = function(index) {
          var item = cc.instantiate(this_1.prefabItem);
          var itemComponent = item.getComponent(gaScrollItem_1.default);
          itemComponent.value = index;
          item.scale = this_1.scaleMin;
          this_1.node.addChild(item);
          item.x = posX;
          item.on(cc.Node.EventType.TOUCH_END, function() {
            _this.scrollToItem(itemComponent.value);
          });
          posX += item.getBoundingBox().width + paddingItem;
          itemComponent.setLabelStr(index === this_1.arrValue.length - 1 ? gaBaseConfig_1.default.instance.TIMER_SCROLLER.MAX_TIME : this_1.arrValue[index]);
          this_1.items.push(item);
        };
        var this_1 = this;
        for (var index = 0; index < this.arrValue.length; index++) _loop_1(index);
        this.prefabItem.destroy();
      };
      gaItemsScroller.prototype.updateLeftRightBoundary = function() {
        if (Array.isArray(this.items) && this.items.length > 0) {
          var _a = this.items, firstItem = _a[0], _b = this.items.length - 1, lastItem = _a[_b];
          this.itemLeftBoundary = firstItem;
          this.itemRightBoundary = lastItem;
        }
      };
      gaItemsScroller.prototype.reset = function() {
        this.currItemIdx = Math.floor(.5 * this.totalItem);
        var curItem = this.getCurrentItem();
        var moveDistance = -curItem.x;
        this.moveItem(moveDistance);
      };
      gaItemsScroller.prototype.getCurrentItem = function() {
        if (this.currItemIdx >= 0) return this.items[this.currItemIdx];
      };
      gaItemsScroller.prototype.update = function(dt) {
        var _this = this;
        this.items.forEach(function(item) {
          _this.updateItemStatus(item);
        });
        this.isAutoScrolling && this._autoScroll(dt);
      };
      gaItemsScroller.prototype.updateItemStatus = function(item) {
        var distance = Math.abs(item.x - this.center.x);
        var scaleRatio = Math.max(this.scaleMin, this.scaleMax - distance * (this.scaleMax - this.scaleMin) / this.scaleViewDistance);
        item.scale = scaleRatio;
        item.opacity = distance > (this.node.width + item.width) / 2 ? 0 : 255;
      };
      gaItemsScroller.prototype._autoScroll = function(dt) {
        if (this.scrollDirection == gaBaseConfig_1.default.instance.ScrollDirectionAutoBot.RIGHT) {
          var step = this.autoScrollSpeed * dt;
          if (this.autoScrollDistance + step >= 0) {
            step = -this.autoScrollDistance;
            this.autoScrollDistance = 0;
            this.isAutoScrolling = false;
          } else this.autoScrollDistance += step;
          this.moveItem(step);
        } else {
          var step = this.autoScrollSpeed * dt;
          if (this.autoScrollDistance - step <= 0) {
            step = this.autoScrollDistance;
            this.autoScrollDistance = 0;
            this.isAutoScrolling = false;
          } else this.autoScrollDistance -= step;
          this.moveItem(-step);
        }
      };
      gaItemsScroller.prototype.moveItem = function(offset) {
        this.items.forEach(function(item) {
          item && (item.x += offset);
        });
      };
      gaItemsScroller.prototype.moveToPreviousItem = function() {
        this.currItemIdx > 1 && this.scrollToItem(this.currItemIdx - 1);
      };
      gaItemsScroller.prototype.moveToNextItem = function() {
        this.currItemIdx < this.items.length - 1 && this.scrollToItem(this.currItemIdx + 1);
      };
      gaItemsScroller.prototype.scrollToItem = function(idx) {
        idx = parseInt(idx);
        idx < 1 && (idx = 1);
        idx >= this.items.length && (idx = this.items.length - 1);
        this.currItemIdx = idx;
        var curItem = this.items[idx];
        this.autoScrollDistance = curItem.x - this.center.x;
        this.autoScrollSpeed = Math.abs(this.autoScrollDistance) / .2;
        var ScrollDirectionAutoBot = gaBaseConfig_1.default.instance.ScrollDirectionAutoBot;
        this.scrollDirection = this.autoScrollDistance > 0 ? ScrollDirectionAutoBot.LEFT : ScrollDirectionAutoBot.RIGHT;
        this.isAutoScrolling = true;
        this.btnMinus.interactable = !(1 === this.currItemIdx);
        this.btnPlus.interactable = !(this.currItemIdx === this.items.length - 1);
      };
      __decorate([ property(cc.Button) ], gaItemsScroller.prototype, "btnMinus", void 0);
      __decorate([ property(cc.Button) ], gaItemsScroller.prototype, "btnPlus", void 0);
      __decorate([ property(cc.Node) ], gaItemsScroller.prototype, "prefabItem", void 0);
      gaItemsScroller = __decorate([ ccclass ], gaItemsScroller);
      return gaItemsScroller;
    }(gaComponent_1.default);
    exports.default = gaItemsScroller;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "../gaComponent": "gaComponent",
    "./gaScrollItem": "gaScrollItem"
  } ],
  gaJackpotFrame: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "76744k0QQtCQb8HzShPQA67", "gaJackpotFrame");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaCountPoint_1 = require("../Commons/gaCountPoint");
    var gaComponent_1 = require("../gaComponent");
    var gaEventsCode_1 = require("../../Definitions/gaEventsCode");
    var gaLogger_1 = require("../../Utilities/gaLogger");
    var gaReferenceManager_1 = require("../../Common/gaReferenceManager");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaJackpotFrame = function(_super) {
      __extends(gaJackpotFrame, _super);
      function gaJackpotFrame() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.lblValue = null;
        _this.jackpotKey = "";
        _this.isInitialized = false;
        _this.jpBetValue = 0;
        _this.counter = null;
        _this.isPausedJP = false;
        _this.jpMultiplier = 1;
        _this.jackpotData = 0;
        return _this;
      }
      gaJackpotFrame.prototype.onLoad = function() {
        gaReferenceManager_1.default.instance.setReference("jackpotPanel", this.node);
        this.lblValue || (this.lblValue = this.node.getComponentInChildren(cc.Label));
        if (!this.lblValue) {
          gaLogger_1.default.warn("Jackpot label is empty");
          return;
        }
        this.counter = new gaCountPoint_1.default(this.lblValue);
        this.counter.setValue(0);
        _super.prototype.onLoad.call(this);
      };
      gaJackpotFrame.prototype.initEvents = function() {
        this.register(gaEventsCode_1.default.JACKPOT.INIT_JACKPOT, this.initJackpot);
        this.register(gaEventsCode_1.default.JACKPOT.UPDATE_JACKPOT, this.jackpotUpdate);
        this.register(gaEventsCode_1.default.JACKPOT.PAUSE_JACKPOT, this.pauseRenderJP);
        this.register(gaEventsCode_1.default.JACKPOT.RESUME_JACKPOT, this.resumeRenderJP);
        this.register(gaEventsCode_1.default.JACKPOT.RESET_JACKPOT, this.resetCurrentJP);
      };
      gaJackpotFrame.prototype.initJackpot = function(data) {
        if ("" == this.jackpotKey) {
          gaLogger_1.default.warn("Jackpot key is empty");
          return;
        }
        if (this.isInitialized) this.renderJackpot(.1); else {
          this.isInitialized = true;
          null != data[this.jackpotKey] && (this.jackpotData = data[this.jackpotKey]);
          this.renderJackpot(3);
        }
      };
      gaJackpotFrame.prototype.jackpotUpdate = function(data) {
        null != data[this.jackpotKey] && (this.jackpotData = data[this.jackpotKey]);
        this.renderJackpot(3);
      };
      gaJackpotFrame.prototype.parseJackpotValue = function(data) {
        return 0;
      };
      gaJackpotFrame.prototype.pauseRenderJP = function() {
        if (this.isPausedJP) return;
        this.isPausedJP = true;
        this.counter.pause();
      };
      gaJackpotFrame.prototype.resumeRenderJP = function() {
        if (!this.isPausedJP) return;
        this.isPausedJP = false;
        this.counter.resume();
        this.renderJackpot(1);
      };
      gaJackpotFrame.prototype.renderJackpot = function(time) {
        void 0 === time && (time = 3);
        if (this.isPausedJP || !this.isInitialized) return;
        this.counter.count(this.jackpotData, time);
      };
      gaJackpotFrame.prototype.getJackpotValue = function(jpType) {
        if (this.jackpotData[jpType]) return this.jackpotData[jpType];
        gaLogger_1.default.warn("invalid Jackpot Id", jpType, this.jackpotData);
        return null;
      };
      gaJackpotFrame.prototype.resetCurrentJP = function() {
        var defaultValue = this.jpBetValue * this.jpMultiplier;
        this.counter.count(defaultValue, 0);
      };
      gaJackpotFrame.prototype.onClickJP = function() {
        this.soundPlayer.playSFXClick();
        this.emit(gaEventsCode_1.default.POPUP.SHOW_POPUP_HISTORY_JP);
      };
      __decorate([ property(cc.Label) ], gaJackpotFrame.prototype, "lblValue", void 0);
      __decorate([ property ], gaJackpotFrame.prototype, "jackpotKey", void 0);
      gaJackpotFrame = __decorate([ ccclass ], gaJackpotFrame);
      return gaJackpotFrame;
    }(gaComponent_1.default);
    exports.default = gaJackpotFrame;
    cc._RF.pop();
  }, {
    "../../Common/gaReferenceManager": "gaReferenceManager",
    "../../Definitions/gaEventsCode": "gaEventsCode",
    "../../Utilities/gaLogger": "gaLogger",
    "../Commons/gaCountPoint": "gaCountPoint",
    "../gaComponent": "gaComponent"
  } ],
  gaJackpotHistoryItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f71bbFkEWlIQqoOJRCsc4t7", "gaJackpotHistoryItem");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaUtils_1 = require("../../../Utilities/gaUtils");
    var gaHistoryItem_1 = require("./gaHistoryItem");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaJackpotHistoryItem = function(_super) {
      __extends(gaJackpotHistoryItem, _super);
      function gaJackpotHistoryItem() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.account = null;
        _this.overlay = null;
        _this.time = null;
        _this.winAmount = null;
        return _this;
      }
      gaJackpotHistoryItem.prototype.onSpawn = function(data, index) {
        this.time.string = gaUtils_1.default.getTimeString(data.timeStamp.toString());
        this.account.string = gaUtils_1.default.formatUserName(data.displayName, 14);
        this.winAmount.string = gaUtils_1.default.formatMoney(data.jackpotAmount);
        this.overlay && (this.overlay.active = index % 2 == 0);
      };
      __decorate([ property(cc.Label) ], gaJackpotHistoryItem.prototype, "account", void 0);
      __decorate([ property(cc.Node) ], gaJackpotHistoryItem.prototype, "overlay", void 0);
      __decorate([ property(cc.Label) ], gaJackpotHistoryItem.prototype, "time", void 0);
      __decorate([ property(cc.Label) ], gaJackpotHistoryItem.prototype, "winAmount", void 0);
      gaJackpotHistoryItem = __decorate([ ccclass ], gaJackpotHistoryItem);
      return gaJackpotHistoryItem;
    }(gaHistoryItem_1.default);
    exports.gaJackpotHistoryItem = gaJackpotHistoryItem;
    cc._RF.pop();
  }, {
    "../../../Utilities/gaUtils": "gaUtils",
    "./gaHistoryItem": "gaHistoryItem"
  } ],
  gaLoadingScene: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9784f3FeyBERKX4oP8qRLoT", "gaLoadingScene");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../Config/gaBaseConfig");
    var gaLogger_1 = require("../Utilities/gaLogger");
    var gaTweenUtils_1 = require("../Utilities/gaTweenUtils");
    var gaUtils_1 = require("../Utilities/gaUtils");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaLoadingScene = function(_super) {
      __extends(gaLoadingScene, _super);
      function gaLoadingScene() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.progressBar = null;
        _this.iconProgressBar = null;
        _this.rootMainScene = null;
        _this.rootLoading = null;
        _this._progress = 0;
        _this._loadedPercentage = 0;
        _this._loadedMainScene = false;
        return _this;
      }
      gaLoadingScene_1 = gaLoadingScene;
      gaLoadingScene.prototype.onLoad = function() {
        var _this = this;
        gaLoadingScene_1.instance = this;
        this.progressBar.progress = 0;
        if (cc.sys.isNative) {
          this.rootLoading.active = false;
          this.enabled = false;
          this.scheduleOnce(function() {
            _this.rootLoading.active = true;
            _this.enabled = true;
          }, .25);
        }
        true;
        cc.debug.setDisplayStats(false);
      };
      gaLoadingScene.prototype.start = function() {
        var _this = this;
        cc.director.preloadScene(gaBaseConfig_1.default.mainScene, function(completedCount, totalCount) {
          _this._loadedPercentage = completedCount / totalCount;
        }, function() {
          _this._loadedPercentage = 1;
        });
      };
      gaLoadingScene.prototype.lateUpdate = function() {
        if (this._loadedMainScene) return;
        var delta = this._loadedPercentage - this.progressBar.progress;
        delta = gaUtils_1.default.clamp(delta, .001, .01);
        if (delta > 0) {
          this._progress += delta;
          this.progressBar.progress = gaUtils_1.default.clamp(this._progress, this.progressBar.progress, 1);
          this.iconProgressBar && (this.iconProgressBar.x = this.progressBar.progress * this.progressBar.node.width);
        }
        this.progressBar.progress >= .98 && this._loadMainScene();
      };
      gaLoadingScene.prototype.onDestroy = function() {
        gaLoadingScene_1.instance = null;
      };
      gaLoadingScene.prototype.hide = function() {
        var _this = this;
        gaLogger_1.default.debug("Hide Loading Scene");
        gaTweenUtils_1.default.fadeOut(this.rootLoading, .5, function() {
          _this.rootLoading.destroy();
          _this.destroy();
        });
      };
      gaLoadingScene.prototype._loadMainScene = function() {
        var _this = this;
        if (this._loadedMainScene) return;
        this._loadedMainScene = true;
        cc.game.addPersistRootNode(this.node);
        cc.director.loadScene(gaBaseConfig_1.default.mainScene, function(err, scene) {
          cc.game.removePersistRootNode(_this.node);
          if (err) return;
          var canvas = scene.getChildByName("Canvas");
          var mainRoot = canvas.getChildByName("root");
          mainRoot.setParent(_this.rootMainScene);
          canvas.destroy();
        });
      };
      var gaLoadingScene_1;
      gaLoadingScene.instance = null;
      __decorate([ property(cc.ProgressBar) ], gaLoadingScene.prototype, "progressBar", void 0);
      __decorate([ property(cc.Node) ], gaLoadingScene.prototype, "iconProgressBar", void 0);
      __decorate([ property(cc.Node) ], gaLoadingScene.prototype, "rootMainScene", void 0);
      __decorate([ property(cc.Node) ], gaLoadingScene.prototype, "rootLoading", void 0);
      gaLoadingScene = gaLoadingScene_1 = __decorate([ ccclass ], gaLoadingScene);
      return gaLoadingScene;
    }(cc.Component);
    exports.default = gaLoadingScene;
    cc._RF.pop();
  }, {
    "../Config/gaBaseConfig": "gaBaseConfig",
    "../Utilities/gaLogger": "gaLogger",
    "../Utilities/gaTweenUtils": "gaTweenUtils",
    "../Utilities/gaUtils": "gaUtils"
  } ],
  gaLocalStorage: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "742caCPjaxJKq9j10N/QU6l", "gaLocalStorage");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaLocalStorage = function() {
      function gaLocalStorage() {}
      gaLocalStorage.prototype.getLastResults = function() {
        return this._get(gaLocalStorage.KEY_LAST_ROUND) || [];
      };
      gaLocalStorage.prototype.saveLastResult = function(result) {
        var results = this.getLastResults() || [];
        results.push(result);
        results.length > 5 && results.shift();
        this._save(gaLocalStorage.KEY_LAST_ROUND, results);
      };
      gaLocalStorage.prototype.saveModeTurbo = function(isOn) {
        this._save(gaLocalStorage.KEY_MODE_TURBO, isOn);
      };
      gaLocalStorage.prototype.getModeTurbo = function() {
        return this._get(gaLocalStorage.KEY_MODE_TURBO);
      };
      gaLocalStorage.prototype.saveResults = function(results) {
        this._save(gaLocalStorage.KEY_LAST_ROUND, results);
      };
      gaLocalStorage.prototype.getBetDenom = function() {
        return this._get(gaLocalStorage.KEY_BET_DENOM);
      };
      gaLocalStorage.prototype.saveBetDenom = function(denom) {
        this._save(gaLocalStorage.KEY_BET_DENOM, denom);
      };
      gaLocalStorage.prototype.getTutorialEnable = function() {
        var data = this._get(gaLocalStorage.KEY_TUTORIAL);
        if (data && data.isPlayed) return false;
        return true;
      };
      gaLocalStorage.prototype.playedTutorial = function() {
        this._save(gaLocalStorage.KEY_TUTORIAL, {
          isPlayed: true
        });
      };
      gaLocalStorage.prototype.getLastChip = function() {
        return this._get(gaLocalStorage.KEY_LAST_CHIP);
      };
      gaLocalStorage.prototype.saveLastChip = function(chip) {
        this._save(gaLocalStorage.KEY_LAST_CHIP, chip);
      };
      gaLocalStorage.prototype.destroy = function() {
        gaLocalStorage.instance = null;
      };
      gaLocalStorage.prototype._get = function(key) {
        var localString = cc.sys.localStorage.getItem(key);
        if (localString) try {
          return JSON.parse(localString);
        } catch (error) {
          return localString;
        }
        return null;
      };
      gaLocalStorage.prototype._save = function(key, data) {
        cc.sys.localStorage.setItem(key, JSON.stringify(data));
      };
      gaLocalStorage.instance = null;
      gaLocalStorage.KEY_LAST_ROUND = "ARCADE_LAST_ROUND";
      gaLocalStorage.KEY_BET_DENOM = "ARCADE_BET_DENOM";
      gaLocalStorage.KEY_TUTORIAL = "ARCADE_TUTORIAL";
      gaLocalStorage.KEY_MODE_TURBO = "ARCADE_KEY_MODE_TURBO";
      gaLocalStorage.KEY_LAST_CHIP = "KEY_LAST_CHIP";
      return gaLocalStorage;
    }();
    exports.default = gaLocalStorage;
    cc._RF.pop();
  }, {} ],
  gaLocalize: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f585dcu4ONGSY1+S0q/2KR6", "gaLocalize");
    "use strict";
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaLocalize = function() {
      function gaLocalize() {}
      gaLocalize_1 = gaLocalize;
      gaLocalize.prototype.initLocalizeConfig = function(jsonLocalize) {
        var localize = jsonLocalize;
        if (!localize) return;
        for (var key in localize) gaLocalize_1.instance[key] = localize[key];
      };
      gaLocalize.prototype.destroy = function() {
        gaLocalize_1.instance = null;
      };
      var gaLocalize_1;
      gaLocalize.instance = null;
      gaLocalize = gaLocalize_1 = __decorate([ ccclass ], gaLocalize);
      return gaLocalize;
    }();
    exports.default = gaLocalize;
    cc._RF.pop();
  }, {} ],
  gaLogger: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8dd064vMvpLoIKcxarA7O//", "gaLogger");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaLogger = function() {
      function gaLogger() {
        this._enable = true;
        this._currentLogger = null;
        this.debug = null;
        this.warn = null;
        this.error = null;
      }
      Object.defineProperty(gaLogger.prototype, "enable", {
        get: function() {
          return this._enable;
        },
        set: function(v) {
          this._enable = v;
          this._enable ? this.setLoggers(this._currentLogger) : this.setLoggers(null);
        },
        enumerable: true,
        configurable: true
      });
      gaLogger.prototype.setLoggers = function(loggers) {
        if (loggers) {
          this._currentLogger = loggers;
          this.debug = loggers.log || loggers.debug;
          this.warn = loggers.warn;
          this.error = loggers.error;
        } else {
          this.debug = function() {};
          this.warn = function() {};
          this.error = function() {};
        }
      };
      return gaLogger;
    }();
    var logger = new gaLogger();
    logger.setLoggers(cc);
    exports.default = logger;
    cc._RF.pop();
  }, {} ],
  gaMainController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8faf8L4cXZPjJ7wJBksbVSd", "gaMainController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaEventsCode_1 = require("../Definitions/gaEventsCode");
    var gaGameText_1 = require("../Definitions/gaGameText");
    var gaLogger_1 = require("../Utilities/gaLogger");
    var gaComponent_1 = require("../Components/gaComponent");
    var gaBaseConfig_1 = require("../Config/gaBaseConfig");
    var gaDataStore_1 = require("./gaDataStore");
    var gaLocalize_1 = require("./gaLocalize");
    var gaLoadingScene_1 = require("../LoadingScene/gaLoadingScene");
    var gaLogger_2 = require("../Utilities/gaLogger");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaMainController = function(_super) {
      __extends(gaMainController, _super);
      function gaMainController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.fileVersion = null;
        _this._gameNetwork = null;
        _this._promiseBetting = null;
        _this._isForceOut = false;
        _this._isCleanned = false;
        return _this;
      }
      gaMainController.prototype.onLoad = function() {
        _super.prototype.onLoad.call(this);
        var version = this.fileVersion.json["version"];
        gaBaseConfig_1.default.gameVersion = version;
        gaDataStore_1.default.instance.initialize();
      };
      gaMainController.prototype.start = function() {
        this._gameNetwork = this.createGameNetwork();
        this._gameNetwork.authenticate().then(this.onAuthenSuccess.bind(this)).catch(this.onAuthenFail.bind(this));
      };
      gaMainController.prototype.onDestroy = function() {
        _super.prototype.onDestroy.call(this);
        this._cleanUp();
      };
      gaMainController.prototype.initEvents = function() {
        this.register(gaEventsCode_1.default.ACTION.BET, this.requestBet);
        this.register(gaEventsCode_1.default.ACTION.REFRESH_PAYOUT, this.requestRefreshPayout);
        this.register(gaEventsCode_1.default.ACTION.LEAVE_GAME, this.leaveGame);
        this.register(gaEventsCode_1.default.ACTION.CLEAR_USER_BETTING, this.clearUserBetting);
        this.register(gaEventsCode_1.default.BET.NOT_ENOUGH_MONEY, this.onNotEnoughMoney);
        this.register(gaEventsCode_1.default.BET.REACH_MAX_BET, this.onReachMaxBet);
        this.register(gaEventsCode_1.default.BET.CHANGE_BET_VALUE, this.onChangeBetValue);
        this.register(gaEventsCode_1.default.NETWORK.WEB_SOCKET_OPEN, this.onWsOpen);
        this.register(gaEventsCode_1.default.NETWORK.WEB_SOCKET_CLOSE, this.onWsClose);
        this.register(gaEventsCode_1.default.NETWORK.CANNOT_AUTHEN, this.onAuthenFail);
        this.register(gaEventsCode_1.default.NETWORK.WEB_SOCKET_RECONNECT, this.onReconnect);
        this.register(gaEventsCode_1.default.NETWORK.WEB_SOCKET_FORCE_DISCONNECT, this.onForceDisconnect);
        this.register(gaEventsCode_1.default.NETWORK.WEB_SOCKET_DISCONNECT, this.onDisconnect);
        this.register(gaEventsCode_1.default.NETWORK.WEB_SOCKET_TEMP_DISCONNECT, this.onDisconnect);
        this.register(gaEventsCode_1.default.NETWORK.BACKEND_ERROR, this.onBackendError);
        this.register(gaEventsCode_1.default.NETWORK.PROMOTION_ERROR, this.onPromotionError);
        this.register(gaEventsCode_1.default.NETWORK.WALLET_ERROR, this.onWalletError);
        this.register(gaEventsCode_1.default.NETWORK.NORMAL, this.onNetworkNormal);
        this.register(gaEventsCode_1.default.DATA.EMPTY, this.onDataEmpty);
        cc.game.on(cc.game.EVENT_SHOW, this.onShowGame, this);
        cc.game.on(cc.game.EVENT_HIDE, this.onHideGame, this);
      };
      gaMainController.prototype.removeEvents = function() {
        _super.prototype.removeEvents.call(this);
        cc.game.off(cc.game.EVENT_SHOW, this.onShowGame);
        cc.game.off(cc.game.EVENT_HIDE, this.onHideGame);
      };
      gaMainController.prototype.onShowGame = function() {
        this.emit(gaEventsCode_1.default.COMMON.GAME_SHOW);
      };
      gaMainController.prototype.onHideGame = function() {
        this.emit(gaEventsCode_1.default.COMMON.GAME_HIDE);
      };
      gaMainController.prototype.leaveGame = function() {
        this._gameNetwork.leaveGame();
      };
      gaMainController.prototype.clearUserBetting = function() {
        if (this._promiseBetting) {
          this._promiseBetting.cancel();
          this._promiseBetting = null;
        }
      };
      gaMainController.prototype.requestBet = function(bets) {
        var _this = this;
        this.clearUserBetting();
        this._promiseBetting = this._gameNetwork.bet(bets);
        this._promiseBetting.then(function(result) {
          gaDataStore_1.default.instance.userInfo.setPending(result.totalWinAmount);
          _this.emit(gaEventsCode_1.default.JACKPOT.PAUSE_JACKPOT);
          _this.emit(gaEventsCode_1.default.DATA.RESULT_RECEIVED, result);
        }).catch(function(err) {
          gaLogger_2.default.error("Request play failed", err);
          _this.emit(gaEventsCode_1.default.DATA.RESULT_RECEIVED, null, err);
        });
      };
      gaMainController.prototype.requestRefreshPayout = function(data) {
        var _this = this;
        this._gameNetwork.refreshPayout(data).then(function(payout) {
          _this.emit(gaEventsCode_1.default.DATA.PAYOUT_RECEIVED, payout);
        }).catch(function(err) {
          gaLogger_2.default.error("Refresh payout failed", err);
          _this.emit(gaEventsCode_1.default.DATA.PAYOUT_RECEIVED, null, err);
        });
      };
      gaMainController.prototype.onInitGame = function() {
        gaLogger_1.default.warn("onInitGame");
        this.emit(gaEventsCode_1.default.COMMON.INITIALIZE_GAME);
      };
      gaMainController.prototype._cleanUp = function() {
        if (this._isCleanned) return;
        this._isCleanned = true;
        this.removeEvents();
        this._gameNetwork && this._gameNetwork.closeAndCleanUp();
        gaDataStore_1.default.instance.cleanUp();
      };
      gaMainController.prototype.onWsOpen = function() {
        var _this = this;
        this._gameNetwork.joinGame().then(function() {
          return _this.onInitGame();
        }).catch(this.onJoinGameFailed.bind(this)).finally(function() {
          return _this.hideLoadingScene();
        });
      };
      gaMainController.prototype.onWsClose = function(data) {
        var _this = this;
        var message = gaLocalize_1.default.instance.DISCONNECT;
        var onConfirm = function() {
          return _this._gameNetwork.leaveGame();
        };
        this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
          message: message,
          onConfirm: onConfirm,
          type: gaBaseConfig_1.default.instance.POPUP_PROMPT.SOCKET_DISCONNECT
        });
      };
      gaMainController.prototype.onJoinGameFailed = function(err) {
        var _this = this;
        gaLogger_1.default.error("Join Game Failed", err);
        var message = gaLocalize_1.default.instance.AUTHEN_FAILED;
        var onConfirm = function() {
          return _this._gameNetwork.leaveGame();
        };
        this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
          message: message,
          onConfirm: onConfirm,
          type: gaBaseConfig_1.default.instance.POPUP_PROMPT.ERROR_NETWORK
        });
        this._gameNetwork.closeAndCleanUp();
        this.hideLoadingScene();
      };
      gaMainController.prototype.onReconnect = function() {
        var _this = this;
        this._isForceOut || this._gameNetwork.joinGame().then(function() {
          _this.hideLoadingScene();
        }).catch(this.onJoinGameFailed.bind(this)).finally(function() {});
      };
      gaMainController.prototype.onDisconnect = function() {
        var _this = this;
        var message = gaLocalize_1.default.instance.DISCONNECT;
        var onConfirm = function() {
          return _this._gameNetwork.leaveGame();
        };
        this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
          message: message,
          onConfirm: onConfirm,
          type: gaBaseConfig_1.default.instance.POPUP_PROMPT.SOCKET_DISCONNECT
        });
      };
      gaMainController.prototype.onForceDisconnect = function(message) {
        var _this = this;
        this._isForceOut = true;
        this._cleanUp();
        if (message) {
          var onConfirm = function() {
            return _this._gameNetwork.backToLogin();
          };
          this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: onConfirm,
            type: gaBaseConfig_1.default.instance.POPUP_PROMPT.ERROR_NETWORK
          });
        }
      };
      gaMainController.prototype.onBackendError = function(data) {
        var _this = this;
        gaLogger_1.default.error("Backend error", data.data);
        var message = gaGameText_1.gaGameText.getErrorMessage(data.code);
        if (data.forceDie) {
          this._isForceOut = true;
          this._cleanUp();
          var onConfirm = function() {
            return _this._gameNetwork.leaveGame();
          };
          this.hideLoadingScene();
          this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
            message: message,
            onConfirm: onConfirm,
            type: gaBaseConfig_1.default.instance.POPUP_PROMPT.ERROR_NETWORK
          });
        }
      };
      gaMainController.prototype.onPromotionError = function(data) {
        var _this = this;
        gaLogger_1.default.error("Promotion error", data.data);
        var message = gaGameText_1.gaGameText.getErrorMessage(data.code);
        var onConfirm = function() {
          return _this._gameNetwork.refresh();
        };
        this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
          message: message,
          onConfirm: onConfirm,
          type: gaBaseConfig_1.default.instance.POPUP_PROMPT.JUST_CONFIRM_BUTTON
        });
      };
      gaMainController.prototype.onWalletError = function(data) {
        var _this = this;
        gaLogger_1.default.error("Wallet error", data.data);
        var message = gaGameText_1.gaGameText.getErrorMessage(data.code);
        var onConfirm = function() {
          return _this._gameNetwork.refresh();
        };
        this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
          message: message,
          onConfirm: onConfirm,
          type: gaBaseConfig_1.default.instance.POPUP_PROMPT.JUST_CONFIRM_BUTTON
        });
      };
      gaMainController.prototype.onNetworkNormal = function() {};
      gaMainController.prototype.onDataEmpty = function() {
        var message = gaLocalize_1.default.instance.EMPTY_LEADER_BOARD;
        this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
          message: message,
          type: gaBaseConfig_1.default.instance.POPUP_PROMPT.JUST_CONFIRM_BUTTON
        });
      };
      gaMainController.prototype.onAuthenSuccess = function() {};
      gaMainController.prototype.onAuthenFail = function(err) {
        var _this = this;
        gaLogger_1.default.error("Authentication failed", err);
        var message = gaLocalize_1.default.instance.AUTHEN_FAILED;
        var onConfirm = function() {
          return _this._gameNetwork.backToLogin();
        };
        this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
          message: message,
          onConfirm: onConfirm,
          type: gaBaseConfig_1.default.instance.POPUP_PROMPT.ERROR_NETWORK
        });
        this.hideLoadingScene();
      };
      gaMainController.prototype.onNotEnoughMoney = function(callback) {
        var message = gaLocalize_1.default.instance.NO_MONEY;
        this.emit(gaEventsCode_1.default.POPUP.SHOW_DIALOG, {
          message: message,
          onConfirm: callback,
          type: gaBaseConfig_1.default.instance.POPUP_PROMPT.JUST_CONFIRM_BUTTON
        });
      };
      gaMainController.prototype.onReachMaxBet = function() {
        var message = gaLocalize_1.default.instance.OVER_MAX_BET;
        this.emit(gaEventsCode_1.default.POPUP.SHOW_TOAST, {
          message: message,
          duration: 1
        });
      };
      gaMainController.prototype.onChangeBetValue = function(betValue) {
        gaDataStore_1.default.instance.betValue = betValue;
      };
      gaMainController.prototype.hideLoadingScene = function() {
        gaLoadingScene_1.default.instance && gaLoadingScene_1.default.instance.hide();
      };
      __decorate([ property(cc.JsonAsset) ], gaMainController.prototype, "fileVersion", void 0);
      gaMainController = __decorate([ ccclass ], gaMainController);
      return gaMainController;
    }(gaComponent_1.default);
    exports.default = gaMainController;
    cc._RF.pop();
  }, {
    "../Components/gaComponent": "gaComponent",
    "../Config/gaBaseConfig": "gaBaseConfig",
    "../Definitions/gaEventsCode": "gaEventsCode",
    "../Definitions/gaGameText": "gaGameText",
    "../LoadingScene/gaLoadingScene": "gaLoadingScene",
    "../Utilities/gaLogger": "gaLogger",
    "./gaDataStore": "gaDataStore",
    "./gaLocalize": "gaLocalize"
  } ],
  gaMapKeyConfig: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e46e5GcMMtI55prbgvxjdFo", "gaMapKeyConfig");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var Mapping = {
      gain: "winAmount",
      bet: "betAmount",
      jpAmt: "jackpotAmount",
      gameNum: "gameNumber",
      gn: "gameNumber",
      timeMilli: "timeStamp",
      dn: "displayName",
      psId: "sessionId"
    };
    exports.default = Mapping;
    cc._RF.pop();
  }, {} ],
  gaMultipagePopup: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ed276DuSQtJybqWA1acWy13", "gaMultipagePopup");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBasePopup_1 = require("./gaBasePopup");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaMultipagePopups = function(_super) {
      __extends(gaMultipagePopups, _super);
      function gaMultipagePopups() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.framePage = null;
        _this.pageNumberLabel = null;
        _this.pageTotalLabel = null;
        _this.totalPage = 0;
        _this.currentPage = 0;
        return _this;
      }
      gaMultipagePopups.prototype.showPage = function(page) {};
      gaMultipagePopups.prototype.nextPage = function() {
        this.soundPlayer.playSFXClick();
      };
      gaMultipagePopups.prototype.prevPage = function() {
        this.soundPlayer.playSFXClick();
      };
      gaMultipagePopups.prototype.updatePageNumber = function(number) {
        this.currentPage = number;
        this.pageNumberLabel && (this.pageNumberLabel.string = number.toString());
      };
      gaMultipagePopups.prototype.updatePageTotal = function(total) {
        this.totalPage = total;
        this.pageTotalLabel && (this.pageTotalLabel.string = total.toString());
      };
      gaMultipagePopups.prototype.setFramePageState = function(state) {
        this.framePage && (this.framePage.active = state);
      };
      __decorate([ property(cc.Node) ], gaMultipagePopups.prototype, "framePage", void 0);
      __decorate([ property(cc.Label) ], gaMultipagePopups.prototype, "pageNumberLabel", void 0);
      __decorate([ property(cc.Label) ], gaMultipagePopups.prototype, "pageTotalLabel", void 0);
      gaMultipagePopups = __decorate([ ccclass ], gaMultipagePopups);
      return gaMultipagePopups;
    }(gaBasePopup_1.default);
    exports.default = gaMultipagePopups;
    cc._RF.pop();
  }, {
    "./gaBasePopup": "gaBasePopup"
  } ],
  gaNetworkError: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e645dvkvI1GQou9oMKuvpJx", "gaNetworkError");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaNetworkError = function(_super) {
      __extends(gaNetworkError, _super);
      function gaNetworkError() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.isDisconnected = false;
        _this.isExecuteCommandFailure = false;
        _this.isTimeout = false;
        _this.isResponseError = false;
        return _this;
      }
      gaNetworkError.timeout = function(message) {
        var error = new gaNetworkError(message);
        error.isTimeout = true;
        return error;
      };
      gaNetworkError.disconnected = function(message) {
        var error = new gaNetworkError(message);
        error.isDisconnected = true;
        return error;
      };
      gaNetworkError.excecuteFail = function(message) {
        var error = new gaNetworkError(message);
        error.isExecuteCommandFailure = true;
        return error;
      };
      gaNetworkError.responseError = function(message) {
        var error = new gaNetworkError(message);
        error.isResponseError = true;
        return error;
      };
      return gaNetworkError;
    }(Error);
    exports.gaNetworkError = gaNetworkError;
    cc._RF.pop();
  }, {} ],
  gaNotifyComponent: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "98c93HymipDJrZAjC+Dtlwv", "gaNotifyComponent");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaNotifyComponent = function(_super) {
      __extends(gaNotifyComponent, _super);
      function gaNotifyComponent() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.contentNode = null;
        _this._isShow = false;
        _this._lstMsgs = [];
        return _this;
      }
      gaNotifyComponent.prototype.onLoad = function() {
        this.contentNode || (this.contentNode = this.node);
        this.node.active = false;
        this.initItems();
      };
      gaNotifyComponent.prototype.onEventHide = function() {
        this.node.stopAllActions();
        this.contentNode && this.contentNode.removeAllChildren(true);
      };
      gaNotifyComponent.prototype.onAfterFinishedRacing = function() {};
      gaNotifyComponent.prototype.onViewInGame = function() {};
      gaNotifyComponent.prototype.onStackMessage = function() {
        if (this._lstMsgs.length > 0) {
          var data = this._lstMsgs.shift();
          this.play(data);
        } else this.hide();
      };
      __decorate([ property(cc.Node) ], gaNotifyComponent.prototype, "contentNode", void 0);
      gaNotifyComponent = __decorate([ ccclass ], gaNotifyComponent);
      return gaNotifyComponent;
    }(cc.Component);
    exports.default = gaNotifyComponent;
    cc._RF.pop();
  }, {} ],
  gaNotifyController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "266eeZJadZCQrQoQwdyO1Xr", "gaNotifyController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaNotifyJackpot_1 = require("./gaNotifyJackpot");
    var gaComponent_1 = require("../gaComponent");
    var gaDataStore_1 = require("../../Common/gaDataStore");
    var gaEventsCode_1 = require("../../Definitions/gaEventsCode");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaNotifyController = function(_super) {
      __extends(gaNotifyController, _super);
      function gaNotifyController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.notifyJackpot = null;
        return _this;
      }
      gaNotifyController.prototype.initEvents = function() {
        this.register(gaEventsCode_1.default.NOTIFY.SHOW_NOTIFY, this.onNotify);
        this.register(gaEventsCode_1.default.NOTIFY.IN_RACING, this.onViewInGame);
        this.register(gaEventsCode_1.default.NOTIFY.AFTER_FINISHED_RACING, this.onAfterFinishedRacing);
        this.register(gaEventsCode_1.default.COMMON.GAME_HIDE, this.onEventHide);
      };
      gaNotifyController.prototype.onViewInGame = function() {
        if (gaDataStore_1.default.instance.isTutorial) return;
        this.notifyJackpot && this.notifyJackpot.onViewInGame();
      };
      gaNotifyController.prototype.onEventHide = function() {
        this.notifyJackpot && this.notifyJackpot.onEventHide();
      };
      gaNotifyController.prototype.onAfterFinishedRacing = function() {
        if (gaDataStore_1.default.instance.isTutorial) return;
        this.notifyJackpot && this.notifyJackpot.onAfterFinishedRacing();
      };
      gaNotifyController.prototype.onNotify = function(data) {
        if (gaDataStore_1.default.instance.isTutorial) return;
        if (gaDataStore_1.default.instance.result && gaDataStore_1.default.instance.result.commandId == data.cmdId) return;
        this.isValidData(data) && this.notifyJackpot && this.notifyJackpot.show(data);
      };
      gaNotifyController.prototype.isValidData = function(data) {
        var notifyType = gaBaseConfig_1.default.instance.NOTIFY_TYPE;
        var isValid = false;
        for (var type in notifyType) Object.prototype.hasOwnProperty.call(notifyType, type) && data[notifyType[type]] && (isValid = true);
        return isValid;
      };
      __decorate([ property(gaNotifyJackpot_1.default) ], gaNotifyController.prototype, "notifyJackpot", void 0);
      gaNotifyController = __decorate([ ccclass ], gaNotifyController);
      return gaNotifyController;
    }(gaComponent_1.default);
    exports.default = gaNotifyController;
    cc._RF.pop();
  }, {
    "../../Common/gaDataStore": "gaDataStore",
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "../../Definitions/gaEventsCode": "gaEventsCode",
    "../gaComponent": "gaComponent",
    "./gaNotifyJackpot": "gaNotifyJackpot"
  } ],
  gaNotifyJackpotItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "60d31DI43tHZI5surZ8oPcW", "gaNotifyJackpotItem");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaUtils_1 = require("../../Utilities/gaUtils");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaNotifyJackpotItem = function(_super) {
      __extends(gaNotifyJackpotItem, _super);
      function gaNotifyJackpotItem() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.userName = null;
        _this.winAmount = null;
        _this.bgJp = null;
        _this.bgBigWin = null;
        return _this;
      }
      gaNotifyJackpotItem.prototype.initObj = function() {
        this.reset();
      };
      gaNotifyJackpotItem.prototype.updateData = function(notifyData) {
        var isJp = notifyData.type == gaBaseConfig_1.default.instance.NOTIFY_TYPE.JACKPOT;
        this.userName.string = gaUtils_1.default.formatUserName(notifyData.username).toUpperCase();
        this.winAmount.string = gaUtils_1.default.formatCurrency(notifyData.winAmount);
        this.winAmount.node.color = isJp ? cc.Color.BLACK.fromHEX("#FFCC00") : cc.Color.WHITE;
        this.bgJp.active = isJp;
        this.bgBigWin.active = !isJp;
      };
      gaNotifyJackpotItem.prototype.showItem = function(data, timeMove, timeIdle, isFirstShow, controller) {
        var _this = this;
        void 0 === isFirstShow && (isFirstShow = false);
        var posStart = cc.v2(-this.node.width - 50, 0);
        var posEnd = cc.v2(10, 0);
        this.node.stopAllActions();
        var checkLastItem = function() {
          controller.isEmpty ? cc.tween(_this.node).to(timeMove, {
            scaleY: 0,
            opacity: 0
          }, {
            easing: "backIn"
          }).start() : cc.tween(_this.node).to(timeMove, {
            position: posStart
          }).start();
        };
        if (isFirstShow) {
          this.node.active = true;
          this.node.position = posEnd;
          this.node.scale = 0;
          this.node.opacity = 1;
          cc.tween(this.node).call(function() {
            _this.updateData(data);
          }).to(timeMove / 2, {
            scale: 1.15,
            opacity: 255
          }, {
            easing: "backOut"
          }).to(timeMove / 2, {
            scale: 1
          }).delay(timeIdle).call(checkLastItem).start();
        } else {
          this.node.active = true;
          this.node.setPosition(posStart);
          this.node.scale = 1;
          this.node.opacity = 255;
          cc.tween(this.node).call(function() {
            _this.updateData(data);
          }).to(timeMove, {
            position: posEnd
          }).delay(timeIdle).call(checkLastItem).start();
        }
      };
      gaNotifyJackpotItem.prototype.reset = function() {
        this.node.stopAllActions();
        this.node.active = false;
      };
      __decorate([ property(cc.Label) ], gaNotifyJackpotItem.prototype, "userName", void 0);
      __decorate([ property(cc.Label) ], gaNotifyJackpotItem.prototype, "winAmount", void 0);
      __decorate([ property(cc.Node) ], gaNotifyJackpotItem.prototype, "bgJp", void 0);
      __decorate([ property(cc.Node) ], gaNotifyJackpotItem.prototype, "bgBigWin", void 0);
      gaNotifyJackpotItem = __decorate([ ccclass ], gaNotifyJackpotItem);
      return gaNotifyJackpotItem;
    }(cc.Component);
    exports.default = gaNotifyJackpotItem;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "../../Utilities/gaUtils": "gaUtils"
  } ],
  gaNotifyJackpot: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8c606Dvt7tEzI7autrZf0mo", "gaNotifyJackpot");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaCustomDataType_1 = require("../../NodePool/gaCustomDataType");
    var gaNotifyComponent_1 = require("./gaNotifyComponent");
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaNotifyJackpotItem_1 = require("./gaNotifyJackpotItem");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaNotifyJackpot = function(_super) {
      __extends(gaNotifyJackpot, _super);
      function gaNotifyJackpot() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.itemPrefab = null;
        _this._notifyItem = null;
        _this._isFirstShow = true;
        _this.allowShowNotify = true;
        _this.NOTIFY_CONFIG = {
          TIME_MOVE: .25,
          TIME_IDLE_JP: 3.5,
          TIME_IDLE_BGW: 2.5
        };
        return _this;
      }
      Object.defineProperty(gaNotifyJackpot.prototype, "isEmpty", {
        get: function() {
          return 0 == this._lstMsgs.length;
        },
        enumerable: true,
        configurable: true
      });
      gaNotifyJackpot.prototype.initItems = function() {
        var item = cc.instantiate(this.itemPrefab);
        item.setParent(this.contentNode);
        this._notifyItem = item.getComponent(gaNotifyJackpotItem_1.default);
        this._notifyItem.initObj();
      };
      gaNotifyJackpot.prototype.onEventHide = function() {
        this._lstMsgs.length = 0;
        this._isFirstShow = true;
        this.reset();
      };
      gaNotifyJackpot.prototype.onViewInGame = function() {
        this.allowShowNotify = false;
        this.reset();
      };
      gaNotifyJackpot.prototype.onAfterFinishedRacing = function() {
        this.allowShowNotify = true;
        if (this._lstMsgs.length > 0) {
          this.node.stopAllActions();
          this._isShow = true;
          this.node.active = true;
          this.onStackMessage();
        } else this.hide();
      };
      gaNotifyJackpot.prototype.reset = function() {
        this.node.stopAllActions();
        this._notifyItem && this._notifyItem.reset();
        this._isShow = false;
      };
      gaNotifyJackpot.prototype.show = function(data) {
        var lstNotify = this.getFormatData(data);
        this._lstMsgs.length >= gaBaseConfig_1.default.instance.NOTIFY_JACKPOT.limited_stack_size - lstNotify.length + 1 && this._lstMsgs.splice(0, lstNotify.length);
        this._lstMsgs = this._lstMsgs.concat(lstNotify);
        this.sortData(this._lstMsgs);
        if (!this.allowShowNotify) return;
        if (!this._isShow) {
          this._isShow = true;
          this.node.active = true;
          this.onStackMessage();
        }
      };
      gaNotifyJackpot.prototype.getFormatData = function(data) {
        var lstNotify = [];
        if (data.jpAmt) {
          var item = new gaCustomDataType_1.gaNotifyData(data);
          item.winAmount = data.jpAmt;
          item.type = gaBaseConfig_1.default.instance.NOTIFY_TYPE.JACKPOT;
          lstNotify.push(item);
        }
        if (data.wat) {
          var item = new gaCustomDataType_1.gaNotifyData(data);
          item.winAmount = data.wat;
          item.type = gaBaseConfig_1.default.instance.NOTIFY_TYPE.BIGWIN;
          lstNotify.push(item);
        }
        return lstNotify;
      };
      gaNotifyJackpot.prototype.hide = function() {
        this._isFirstShow = true;
        this._isShow = false;
        this.node.stopAllActions();
        this.node.active = false;
      };
      gaNotifyJackpot.prototype.play = function(data) {
        var _this = this;
        var _a = this.NOTIFY_CONFIG, TIME_MOVE = _a.TIME_MOVE, TIME_IDLE_JP = _a.TIME_IDLE_JP, TIME_IDLE_BGW = _a.TIME_IDLE_BGW;
        var timeIdle = data.type == gaBaseConfig_1.default.instance.NOTIFY_TYPE.JACKPOT ? TIME_IDLE_JP : TIME_IDLE_BGW;
        if (this._isFirstShow) {
          this._isFirstShow = false;
          this._notifyItem.showItem(data, TIME_MOVE, timeIdle, true, this);
        } else this._notifyItem.showItem(data, TIME_MOVE, timeIdle, false, this);
        this.node.stopAllActions();
        cc.tween(this.node).delay(timeIdle + 2 * TIME_MOVE + .2).call(function() {
          _this.onStackMessage();
        }).start();
      };
      gaNotifyJackpot.prototype.sortData = function(lstMessage) {
        var types = gaBaseConfig_1.default.instance.NOTIFY_TYPE;
        lstMessage.sort(function(a, b) {
          return a.type == types.JACKPOT && b.type != types.JACKPOT ? -1 : a.type != types.JACKPOT && b.type == types.JACKPOT ? 1 : 0;
        });
        lstMessage.sort(function(a, b) {
          return a.type == types.JACKPOT && b.type == types.JACKPOT ? a.winAmount > b.winAmount ? -1 : a.winAmount < b.winAmount ? 1 : 0 : 0;
        });
      };
      __decorate([ property(cc.Prefab) ], gaNotifyJackpot.prototype, "itemPrefab", void 0);
      gaNotifyJackpot = __decorate([ ccclass ], gaNotifyJackpot);
      return gaNotifyJackpot;
    }(gaNotifyComponent_1.default);
    exports.default = gaNotifyJackpot;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "../../NodePool/gaCustomDataType": "gaCustomDataType",
    "./gaNotifyComponent": "gaNotifyComponent",
    "./gaNotifyJackpotItem": "gaNotifyJackpotItem"
  } ],
  gaNotifyMessage: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1f986Yqt0tMEJTZYiYchDt0", "gaNotifyMessage");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaLocalize_1 = require("../../Common/gaLocalize");
    var gaNotifyComponent_1 = require("./gaNotifyComponent");
    var _c = cc._decorator, ccclass = _c.ccclass, property = _c.property;
    var gaNotifyMessage = function(_super) {
      __extends(gaNotifyMessage, _super);
      function gaNotifyMessage() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.speed = 320;
        return _this;
      }
      gaNotifyMessage.prototype.onBeforeSceneChange = function() {
        _super.prototype.onBeforeSceneChange.call(this);
        this.node.scaleY = 0;
      };
      gaNotifyMessage.prototype.show = function(data) {
        if (!this.validateData(data)) return;
        this.sortDataMessage();
        this._isShow || this.runAnimShow();
      };
      gaNotifyMessage.prototype.validateData = function(data) {
        var json = this.getStringDataNotify(data).replace(/'/g, '"');
        try {
          var result = !!JSON.parse(json);
          result && this._lstMsgs.push(data);
          return result;
        } catch (e) {
          return false;
        }
      };
      gaNotifyMessage.prototype.sortDataMessage = function() {
        var _this = this;
        this._lstMsgs.sort(function(a, b) {
          return 0 === a.type && 0 !== b.type ? -1 : 0 !== a.type && 0 === b.type ? 1 : 0;
        });
        this._lstMsgs.sort(function(a, b) {
          var _a = {};
          _a.type = a.type;
          _a.type > 0 && (_a.amount = _this.replaceAmountData(a));
          var _b = {};
          _b.type = b.type;
          _b.type > 0 && (_b.amount = _this.replaceAmountData(b));
          if (0 !== _a.type && 0 !== _b.type) {
            if (_a.amount > _b.amount) return -1;
            if (_a.amount < _b.amount) return 1;
          }
          return 0;
        });
      };
      gaNotifyMessage.prototype.replaceAmountData = function(dataInput) {
        var data = dataInput.data, type = dataInput.type;
        var notifyConfig = gaBaseConfig_1.default.instance.NOTIFY_CONFIG[type];
        var regex = /[^0-9.-]+/g;
        var goldReward = data[notifyConfig.goldReward];
        return Number(goldReward.replace(regex, ""));
      };
      gaNotifyMessage.prototype.runAnimShow = function() {
        var _this = this;
        this._isShow = true;
        this.node.active = true;
        this.node.scaleY = 0;
        this.node.stopAllActions();
        cc.tween(this.node).to(.5, {
          scaleY: 1
        }).call(function() {
          _this.onStackMessage();
        }).start();
      };
      gaNotifyMessage.prototype.hide = function() {
        var _this = this;
        this._isShow = false;
        cc.tween(this.node).to(.5, {
          scaleY: 0
        }).call(function() {
          _this.node.active = false;
        }).start();
      };
      gaNotifyMessage.prototype.play = function(data) {
        var _this = this;
        var json = this.getStringDataNotify(data).replace(/'/g, '"');
        var objMessage = JSON.parse(json);
        this.createNotifyMessage(objMessage);
        this.contentNode.getComponent(cc.Layout).updateLayout();
        var dX = (this.contentNode.width + this.node.width) / 2;
        this.contentNode.x = dX;
        this.contentNode.stopAllActions();
        cc.tween(this.node).delay(0).call(function() {
          var timer = 2 * dX / _this.speed;
          cc.tween(_this.contentNode).to(timer, {
            x: -dX
          }).delay(.5).call(function() {
            _this.onStackMessage();
          }).start();
        }).start();
      };
      gaNotifyMessage.prototype.getStringDataNotify = function(dataInput) {
        var data = dataInput.data, message = dataInput.message, type = dataInput.type;
        if (type < 0) return "";
        var str = "";
        var configTxtNotify = gaLocalize_1.default.instance["txtNotify"];
        type;
        return str;
      };
      gaNotifyMessage = __decorate([ ccclass ], gaNotifyMessage);
      return gaNotifyMessage;
    }(gaNotifyComponent_1.default);
    exports.default = gaNotifyMessage;
    cc._RF.pop();
  }, {
    "../../Common/gaLocalize": "gaLocalize",
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "./gaNotifyComponent": "gaNotifyComponent"
  } ],
  gaPopupBetHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "58a70AR7OtHG5sKjvDfMrQj", "gaPopupBetHistory");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaDataStore_1 = require("../../Common/gaDataStore");
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaPopupHistory_1 = require("./gaPopupHistory");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PopupBetHistory = function(_super) {
      __extends(PopupBetHistory, _super);
      function PopupBetHistory() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(PopupBetHistory.prototype, "popupType", {
        get: function() {
          return gaBaseConfig_1.default.POPUP_TYPE.HISTORY_BET;
        },
        enumerable: true,
        configurable: true
      });
      PopupBetHistory.prototype.requestDataPage = function(callback, callbackErr) {
        var newsize = this.itemPerPage;
        gaDataStore_1.default.instance.result && (newsize += 1);
        var requestParams = {
          gameId: "kts_" + gaBaseConfig_1.default.gameId,
          curPage: this.currentPage,
          size: newsize
        };
        _super.prototype.requestDataPage.call(this, callback, callbackErr, requestParams);
      };
      PopupBetHistory.prototype.onResponseData = function(res) {
        _super.prototype.onResponseData.call(this, res);
        if (res.error) return;
        var data = res.data;
        if (data) {
          var resultList = data.resultList, totalPage = data.totalPage, curPage = data.curPage;
          this.totalPage = totalPage;
          if (resultList && resultList.length > 0) if (gaDataStore_1.default.instance.result) {
            var lsHistory = resultList.filter(function(it) {
              return it.gameNum != gaDataStore_1.default.instance.result.sessionId;
            });
            this.onValidData(lsHistory);
          } else this.onValidData(resultList); else this.onEmptyData([]);
        } else this.onEmptyData([]);
      };
      PopupBetHistory = __decorate([ ccclass ], PopupBetHistory);
      return PopupBetHistory;
    }(gaPopupHistory_1.default);
    exports.default = PopupBetHistory;
    cc._RF.pop();
  }, {
    "../../Common/gaDataStore": "gaDataStore",
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "./gaPopupHistory": "gaPopupHistory"
  } ],
  gaPopupController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "84277T03ERF6IBz8fQ7iATo", "gaPopupController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaEventsCode_1 = require("../../Definitions/gaEventsCode");
    var gaComponent_1 = require("../gaComponent");
    var gaBasePopup_1 = require("./gaBasePopup");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaPopupController = function(_super) {
      __extends(gaPopupController, _super);
      function gaPopupController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.overlay = null;
        _this.prefabPopups = [];
        _this.popups = new Map();
        _this._listPopupIgnoreCloseByOverlay = [];
        _this._popupQueue = [];
        _this.OPACITY_SHOW_OVERLAY = 150;
        return _this;
      }
      gaPopupController.prototype.onLoad = function() {
        _super.prototype.onLoad.call(this);
        for (var i = 0; i < this.prefabPopups.length; i++) {
          var prefab = this.prefabPopups[i];
          var popupNode = cc.instantiate(prefab);
          var popup = popupNode.getComponent(gaBasePopup_1.default);
          this.node.addChild(popupNode);
          this.popups.set(popup.popupType, popup);
          popupNode.active = false;
          popupNode.zIndex = popup.zIndex;
        }
        this.overlay.zIndex = 0;
        this.overlay.active = false;
        this.node.opacity = 255;
        this.setupPopupIgnoreCloseByOverlay();
        this.registerEventOverlay();
      };
      gaPopupController.prototype.setupPopupIgnoreCloseByOverlay = function() {
        this._listPopupIgnoreCloseByOverlay.push(this.popups.get(gaBaseConfig_1.default.POPUP_TYPE.DIALOG));
      };
      gaPopupController.prototype.registerEventOverlay = function() {
        var _this = this;
        this.overlay.on(cc.Node.EventType.TOUCH_END, function() {
          _this.closePopupByOverlay();
        }, this);
      };
      gaPopupController.prototype.initEvents = function() {
        this.register(gaEventsCode_1.default.POPUP.SHOW_POPUP_HISTORY_BET, this.showHistoryBet);
        this.register(gaEventsCode_1.default.POPUP.SHOW_POPUP_HISTORY_JP, this.showHistoryJackpot);
        this.register(gaEventsCode_1.default.POPUP.SHOW_POPUP_INFO, this.showHelpInfo);
        this.register(gaEventsCode_1.default.POPUP.SHOW_POPUP_SETTING, this.showSetting);
        this.register(gaEventsCode_1.default.POPUP.CLOSE_TOP_POPUP, this.closeTopPopup);
        this.register(gaEventsCode_1.default.POPUP.SHOW_DIALOG, this.showDialog);
        this.register(gaEventsCode_1.default.POPUP.SHOW_TOAST, this.showToast);
        this.register(gaEventsCode_1.default.POPUP.CLOSE_POPUP, this.closePopup);
      };
      gaPopupController.prototype.showHistoryBet = function() {
        this.show(gaBaseConfig_1.default.POPUP_TYPE.HISTORY_BET);
      };
      gaPopupController.prototype.showHistoryJackpot = function() {
        this.show(gaBaseConfig_1.default.POPUP_TYPE.HISTORY_JP);
      };
      gaPopupController.prototype.showHelpInfo = function() {
        this.show(gaBaseConfig_1.default.POPUP_TYPE.HELP);
      };
      gaPopupController.prototype.showSetting = function() {
        this.show(gaBaseConfig_1.default.POPUP_TYPE.SETTING);
      };
      gaPopupController.prototype.showDialog = function(data) {
        this.show(gaBaseConfig_1.default.POPUP_TYPE.DIALOG, data);
      };
      gaPopupController.prototype.show = function(pType, data, addQueue) {
        void 0 === data && (data = null);
        void 0 === addQueue && (addQueue = true);
        if ("" === pType) return;
        var currentPopup = this.popups.get(pType);
        if (!currentPopup) return;
        currentPopup.show(data);
        addQueue && this.onPopupQueue(currentPopup);
      };
      gaPopupController.prototype.onPopupQueue = function(popup) {
        var isNew = false;
        if (this._popupQueue && this._popupQueue.length > 0) {
          var currPopup = this._popupQueue[this._popupQueue.length - 1];
          if (currPopup != popup) {
            this._popupQueue[this._popupQueue.length - 1].hide();
            isNew = true;
          }
        } else {
          this.overlay.active = true;
          this.overlay.stopAllActions();
          this.overlay.runAction(cc.fadeTo(.3, this.OPACITY_SHOW_OVERLAY));
          isNew = true;
        }
        isNew && this._popupQueue.push(popup);
      };
      gaPopupController.prototype.closePopupByOverlay = function() {
        if (this._popupQueue && this._popupQueue.length > 0) {
          var currPopup = this._popupQueue[this._popupQueue.length - 1];
          if (this._listPopupIgnoreCloseByOverlay.indexOf(currPopup) > -1) return;
          this.closeTopPopup();
        }
      };
      gaPopupController.prototype.closePopup = function(data) {
        var type = data.type;
        this.isPopupShown(type) && this.closeTopPopup();
      };
      gaPopupController.prototype.closeTopPopup = function() {
        var popup = this._popupQueue.pop();
        if (null == popup) return;
        popup.hide();
        if (this._popupQueue.length < 1) {
          this.playFadeOutOverlay();
          return;
        }
        this._popupQueue[this._popupQueue.length - 1].show();
      };
      gaPopupController.prototype.playFadeOutOverlay = function() {
        var _this = this;
        this.overlay.stopAllActions();
        this.overlay.runAction(cc.sequence(cc.fadeOut(.3), cc.callFunc(function() {
          _this.overlay.active = false;
        })));
      };
      gaPopupController.prototype.hide = function(pType) {
        if ("" === pType) return;
        var currentPopup = this.popups.get(pType);
        if (!currentPopup) return;
        currentPopup.hide();
      };
      gaPopupController.prototype.hideAll = function() {
        if (this._popupQueue.length > 0) {
          this.closeTopPopup();
          this.hideAll();
        }
      };
      gaPopupController.prototype.isAnyPopupShown = function() {
        this.popups.forEach(function(popup, key) {
          if (popup.isShowing) return true;
        });
        return false;
      };
      gaPopupController.prototype.isPopupShown = function(pType) {
        var popup = this.popups.get(pType);
        return popup && popup.isShowing;
      };
      gaPopupController.prototype.showToast = function(data) {
        this.isPopupShown(gaBaseConfig_1.default.POPUP_TYPE.TOAST) || this.show(gaBaseConfig_1.default.POPUP_TYPE.TOAST, data, false);
      };
      __decorate([ property(cc.Node) ], gaPopupController.prototype, "overlay", void 0);
      __decorate([ property(cc.Prefab) ], gaPopupController.prototype, "prefabPopups", void 0);
      gaPopupController = __decorate([ ccclass ], gaPopupController);
      return gaPopupController;
    }(gaComponent_1.default);
    exports.default = gaPopupController;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "../../Definitions/gaEventsCode": "gaEventsCode",
    "../gaComponent": "gaComponent",
    "./gaBasePopup": "gaBasePopup"
  } ],
  gaPopupHelpInfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "ec25czMt0JF7pAPbNUyjJVp", "gaPopupHelpInfo");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaMultipagePopup_1 = require("./gaMultipagePopup");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaPopupHelpInfo = function(_super) {
      __extends(gaPopupHelpInfo, _super);
      function gaPopupHelpInfo() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(gaPopupHelpInfo.prototype, "popupType", {
        get: function() {
          return gaBaseConfig_1.default.POPUP_TYPE.HELP;
        },
        enumerable: true,
        configurable: true
      });
      gaPopupHelpInfo = __decorate([ ccclass ], gaPopupHelpInfo);
      return gaPopupHelpInfo;
    }(gaMultipagePopup_1.default);
    exports.default = gaPopupHelpInfo;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "./gaMultipagePopup": "gaMultipagePopup"
  } ],
  gaPopupHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "2fc061RFItGYahSWSx+6Yt0", "gaPopupHistory");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaGameService_1 = require("../../Network/gaGameService");
    var gaArcadeBaseTableHistory_1 = require("../History/gaArcadeBaseTableHistory");
    var gaMultipagePopup_1 = require("./gaMultipagePopup");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaPopupHistory = function(_super) {
      __extends(gaPopupHistory, _super);
      function gaPopupHistory() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.tableHistory = null;
        _this.loadingAnim = null;
        _this.itemPerPage = 7;
        _this.btnNext = null;
        _this.btnBack = null;
        _this.historyEmpty = null;
        _this.historyUrl = "";
        _this.pageDefault = 1;
        return _this;
      }
      gaPopupHistory.prototype.onLoad = function() {
        _super.prototype.onLoad.call(this);
        this.initMultipage();
      };
      gaPopupHistory.prototype.initMultipage = function() {
        this.updatePageNumber(1);
        this.updatePageTotal(1);
        this.stopLoading();
        this.tableHistory.initCells(this.itemPerPage);
        this.historyEmpty && (this.historyEmpty.active = false);
        this.btnNext.node.on(cc.Node.EventType.TOUCH_END, this.cancelChangePage, this);
        this.btnNext.node.on(cc.Node.EventType.TOUCH_CANCEL, this.cancelChangePage, this);
        this.btnBack.node.on(cc.Node.EventType.TOUCH_END, this.cancelChangePage, this);
        this.btnBack.node.on(cc.Node.EventType.TOUCH_CANCEL, this.cancelChangePage, this);
      };
      gaPopupHistory.prototype.show = function(data) {
        _super.prototype.show.call(this);
        this.tableHistory.clearData();
        this.openPanel();
      };
      gaPopupHistory.prototype.cancelChangePage = function() {
        1 !== this.currentPage && (this.btnBack.interactable = true);
        this.currentPage < this.totalPage && (this.btnNext.interactable = true);
      };
      gaPopupHistory.prototype.openPanel = function() {
        this.node.active = true;
        this.node.opacity = 255;
        this.tableHistory.node.opacity = 0;
        this.currentPage = 1;
        this.btnBack.interactable = false;
        this.btnNext.interactable = false;
        this.updatePageNumber(this.currentPage);
        this.updatePageTotal(this.totalPage);
        this.changePage();
      };
      gaPopupHistory.prototype.playLoading = function() {
        this.loadingAnim && (this.loadingAnim.active = true);
        this.historyEmpty && (this.historyEmpty.active = false);
      };
      gaPopupHistory.prototype.stopLoading = function() {
        this.unschedule(this.playLoading);
        this.loadingAnim && (this.loadingAnim.active = false);
      };
      gaPopupHistory.prototype.nextPage = function() {
        _super.prototype.nextPage.call(this);
        if (this.currentPage == this.totalPage) return;
        this.btnNext.interactable = false;
        this.currentPage += 1;
        this.changePage();
      };
      gaPopupHistory.prototype.prevPage = function() {
        _super.prototype.prevPage.call(this);
        if (1 == this.currentPage) return;
        this.btnBack.interactable = false;
        this.currentPage -= 1;
        this.changePage();
      };
      gaPopupHistory.prototype.changePage = function() {
        this.scheduleOnce(this.playLoading, 1);
        this.requestDataPage(this.onResponseData.bind(this), this.onErrorData.bind(this));
      };
      gaPopupHistory.prototype.requestDataPage = function(callback, callbackErr, requestParams) {
        void 0 === requestParams && (requestParams = {});
        gaGameService_1.default.getHistory(this.historyUrl, requestParams).then(function(resp) {
          callback(resp);
        }).catch(function(error) {
          callbackErr();
        });
      };
      gaPopupHistory.prototype.onResponseData = function(res) {
        this.stopLoading();
      };
      gaPopupHistory.prototype.onValidData = function(data) {
        this.btnNext.interactable = true;
        this.btnBack.interactable = true;
        1 == this.currentPage && (this.btnBack.interactable = false);
        this.currentPage == this.totalPage && (this.btnNext.interactable = false);
        this.historyEmpty && (this.historyEmpty.active = false);
        this.updatePageNumber(this.currentPage);
        this.updatePageTotal(this.totalPage);
        this.setFramePageState(true);
        this.tableHistory.node.opacity = 255;
        this.tableHistory.updateData(data);
      };
      gaPopupHistory.prototype.onEmptyData = function(data) {
        this.historyEmpty && (this.historyEmpty.active = true);
        this.btnNext.interactable = false;
        this.btnBack.interactable = false;
        this.updatePageNumber(1);
        this.updatePageTotal(1);
        this.setFramePageState(false);
        this.tableHistory.updateData(data);
      };
      gaPopupHistory.prototype.onErrorData = function() {
        this.totalPage = 1;
        this.stopLoading();
      };
      __decorate([ property(gaArcadeBaseTableHistory_1.default) ], gaPopupHistory.prototype, "tableHistory", void 0);
      __decorate([ property(cc.Node) ], gaPopupHistory.prototype, "loadingAnim", void 0);
      __decorate([ property(Number) ], gaPopupHistory.prototype, "itemPerPage", void 0);
      __decorate([ property(cc.Button) ], gaPopupHistory.prototype, "btnNext", void 0);
      __decorate([ property(cc.Button) ], gaPopupHistory.prototype, "btnBack", void 0);
      __decorate([ property(cc.Node) ], gaPopupHistory.prototype, "historyEmpty", void 0);
      __decorate([ property({
        serializable: true
      }) ], gaPopupHistory.prototype, "historyUrl", void 0);
      gaPopupHistory = __decorate([ ccclass ], gaPopupHistory);
      return gaPopupHistory;
    }(gaMultipagePopup_1.default);
    exports.default = gaPopupHistory;
    cc._RF.pop();
  }, {
    "../../Network/gaGameService": "gaGameService",
    "../History/gaArcadeBaseTableHistory": "gaArcadeBaseTableHistory",
    "./gaMultipagePopup": "gaMultipagePopup"
  } ],
  gaPopupJackpotHistory: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "d223etk9rJKu6l7RpUYkBea", "gaPopupJackpotHistory");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaPopupHistory_1 = require("./gaPopupHistory");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaPopupJackpotHistory = function(_super) {
      __extends(gaPopupJackpotHistory, _super);
      function gaPopupJackpotHistory() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      Object.defineProperty(gaPopupJackpotHistory.prototype, "popupType", {
        get: function() {
          return gaBaseConfig_1.default.POPUP_TYPE.HISTORY_JP;
        },
        enumerable: true,
        configurable: true
      });
      gaPopupJackpotHistory.prototype.requestDataPage = function(callback, callbackErr) {
        var requestParams = {
          serviceId: gaBaseConfig_1.default.gameId,
          from: (this.currentPage - 1) * this.itemPerPage + 1,
          size: this.itemPerPage,
          type: "GRAND"
        };
        _super.prototype.requestDataPage.call(this, callback, callbackErr, requestParams);
      };
      gaPopupJackpotHistory.prototype.onResponseData = function(res) {
        _super.prototype.onResponseData.call(this, res);
        res.total && (this.totalPage = Math.ceil(res.total / this.itemPerPage));
        if (res.error) return;
        Object.keys(res).length > 0 && res.data && res.data.length > 0 ? this.onValidData(res.data) : this.onEmptyData([]);
      };
      gaPopupJackpotHistory = __decorate([ ccclass ], gaPopupJackpotHistory);
      return gaPopupJackpotHistory;
    }(gaPopupHistory_1.default);
    exports.default = gaPopupJackpotHistory;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "./gaPopupHistory": "gaPopupHistory"
  } ],
  gaPopupSetting: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "04fa6j7wN1De7er8Rk5Zatt", "gaPopupSetting");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaToggleDoubleCheckmark_1 = require("../UserUI/gaToggleDoubleCheckmark");
    var gaBasePopup_1 = require("./gaBasePopup");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var PopupSetting = function(_super) {
      __extends(PopupSetting, _super);
      function PopupSetting() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.BGMCheckBox = null;
        _this.SFXCheckBox = null;
        _this.isInit = false;
        return _this;
      }
      Object.defineProperty(PopupSetting.prototype, "popupType", {
        get: function() {
          return gaBaseConfig_1.default.POPUP_TYPE.SETTING;
        },
        enumerable: true,
        configurable: true
      });
      PopupSetting.prototype.initObj = function() {
        _super.prototype.initObj.call(this);
        this.isInit = true;
        this.SFXCheckBox.isChecked = this.soundPlayer.isEnableSFX;
        this.BGMCheckBox.isChecked = this.soundPlayer.isEnableBGM;
        this.loadDefault();
        this.BGMCheckBox.node.off("toggle");
        this.SFXCheckBox.node.off("toggle");
        this.BGMCheckBox.node.on("toggle", this.onToggleMusic, this);
        this.SFXCheckBox.node.on("toggle", this.onToggleSound, this);
      };
      PopupSetting.prototype.loadDefault = function() {
        var ls = [ this.BGMCheckBox.node, this.SFXCheckBox.node ];
        var states = [ this.soundPlayer.isEnableBGM, this.soundPlayer.isEnableSFX ];
        ls.forEach(function(it, index) {
          var doubleCheckMark = it.getComponent(gaToggleDoubleCheckmark_1.default);
          doubleCheckMark && doubleCheckMark.init(states[index]);
        });
      };
      PopupSetting.prototype.onToggleSound = function() {
        if (!this.isInit) return;
        this.soundPlayer.setEffectEnable(this.SFXCheckBox.isChecked);
        this.soundPlayer.playSFXClick();
      };
      PopupSetting.prototype.onToggleMusic = function() {
        if (!this.isInit) return;
        this.soundPlayer.setBgmEnable(this.BGMCheckBox.isChecked);
        this.soundPlayer.playSFXClick();
      };
      __decorate([ property(cc.Toggle) ], PopupSetting.prototype, "BGMCheckBox", void 0);
      __decorate([ property(cc.Toggle) ], PopupSetting.prototype, "SFXCheckBox", void 0);
      PopupSetting = __decorate([ ccclass ], PopupSetting);
      return PopupSetting;
    }(gaBasePopup_1.default);
    exports.default = PopupSetting;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "../UserUI/gaToggleDoubleCheckmark": "gaToggleDoubleCheckmark",
    "./gaBasePopup": "gaBasePopup"
  } ],
  gaPromise: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "af54bMAZ1JJspPnVyGsB4a3", "gaPromise");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var CancelablePromiseInternal = function() {
      function CancelablePromiseInternal(_a) {
        var _b = _a.executor, executor = void 0 === _b ? function() {} : _b, _c = _a.internals, internals = void 0 === _c ? defaultInternals() : _c, _d = _a.promise, promise = void 0 === _d ? new Promise(function(resolve, reject) {
          return executor(resolve, reject, function(onCancel) {
            internals.onCancelList.push(onCancel);
          });
        }) : _d;
        this.cancel = this.cancel.bind(this);
        this._internals = internals;
        this._promise = promise || new Promise(function(resolve, reject) {
          return executor(resolve, reject, function(onCancel) {
            internals.onCancelList.push(onCancel);
          });
        });
      }
      CancelablePromiseInternal.prototype.delay = function(seconds) {
        var _this = this;
        var waiter = function() {
          return new gaPromise(function(resolve) {
            clearTimeout(_this._internals.timeout);
            _this._internals.timeout = setTimeout(function() {
              resolve();
            }, 1e3 * seconds);
          });
        };
        return makeCancelable(this._promise.then(createCallback(waiter, this._internals)), this._internals);
      };
      CancelablePromiseInternal.prototype.waitUntil = function(conditionFn) {
        var _this = this;
        var waiter = function() {
          return new gaPromise(function(resolve) {
            var waitFn = function() {
              _this._internals.timeout = setTimeout(function() {
                true === conditionFn() ? resolve() : waitFn();
              }, 10);
            };
            clearTimeout(_this._internals.timeout);
            waitFn();
          });
        };
        return makeCancelable(this._promise.then(createCallback(waiter, this._internals)), this._internals);
      };
      CancelablePromiseInternal.prototype.then = function(onfulfilled, onrejected) {
        return makeCancelable(this._promise.then(createCallback(onfulfilled, this._internals), createCallback(onrejected, this._internals)), this._internals);
      };
      CancelablePromiseInternal.prototype.catch = function(onrejected) {
        return makeCancelable(this._promise.catch(createCallback(onrejected, this._internals)), this._internals);
      };
      CancelablePromiseInternal.prototype.finally = function(onfinally, runWhenCanceled) {
        var _this = this;
        runWhenCanceled && this._internals.onCancelList.push(onfinally);
        return makeCancelable(this._promise["finally"](createCallback(function() {
          if (onfinally) {
            runWhenCanceled && (_this._internals.onCancelList = _this._internals.onCancelList.filter(function(callback) {
              return callback !== onfinally;
            }));
            return onfinally();
          }
        }, this._internals)), this._internals);
      };
      CancelablePromiseInternal.prototype.cancel = function() {
        clearTimeout(this._internals.timeout);
        this._internals.timeout = null;
        this._internals.isCanceled = true;
        var callbacks = this._internals.onCancelList;
        this._internals.onCancelList = [];
        for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
          var callback = callbacks_1[_i];
          if ("function" === typeof callback) try {
            callback();
          } catch (err) {
            cc.error(err);
          }
        }
      };
      CancelablePromiseInternal.prototype.isCanceled = function() {
        return true === this._internals.isCanceled;
      };
      return CancelablePromiseInternal;
    }();
    var gaPromise = function(_super) {
      __extends(gaPromise, _super);
      function gaPromise(executor) {
        return _super.call(this, {
          executor: executor
        }) || this;
      }
      gaPromise.all = function all(iterable) {
        return makeAllCancelable(iterable, Promise.all(iterable));
      };
      gaPromise.resolve = function resolve(value) {
        return cancelable(Promise.resolve(value));
      };
      gaPromise.reject = function reject(reason) {
        return cancelable(Promise.reject(reason));
      };
      gaPromise.isCancelable = isCancelablePromise;
      return gaPromise;
    }(CancelablePromiseInternal);
    exports.gaPromise = gaPromise;
    exports.default = gaPromise;
    function cancelable(promise) {
      return makeCancelable(promise, defaultInternals());
    }
    function isCancelablePromise(promise) {
      return promise instanceof gaPromise || promise instanceof CancelablePromiseInternal;
    }
    function createCallback(onResult, internals) {
      if (onResult) return function(arg) {
        if (!internals.isCanceled) {
          var result = onResult(arg);
          isCancelablePromise(result) && internals.onCancelList.push(result.cancel);
          return result;
        }
        return arg;
      };
    }
    function makeCancelable(promise, internals) {
      return new CancelablePromiseInternal({
        internals: internals,
        promise: promise
      });
    }
    function makeAllCancelable(iterable, promise) {
      var internals = defaultInternals();
      internals.onCancelList.push(function() {
        for (var _i = 0, iterable_1 = iterable; _i < iterable_1.length; _i++) {
          var resolvable = iterable_1[_i];
          isCancelablePromise(resolvable) && resolvable.cancel();
        }
      });
      return new CancelablePromiseInternal({
        internals: internals,
        promise: promise
      });
    }
    function defaultInternals() {
      return {
        isCanceled: false,
        onCancelList: [],
        timeout: null
      };
    }
    cc._RF.pop();
  }, {} ],
  gaRandom: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "81341QVAaNGvKkLRQa5pFR0", "gaRandom");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaRandom = function() {
      function gaRandom(seed) {
        void 0 === seed && (seed = Math.floor(1e6 * Math.random()));
        this.initRandomSeed(seed);
      }
      gaRandom.prototype.initRandomSeed = function(seed) {
        var finalSeedArray = [];
        var seedArray = [];
        var revertSeedArray = [];
        var seedLength = 0;
        var swapIndex = [ 10, 6, 32, 33, 5, 23, 3, 13, 1, 25, 28, 39, 16, 26, 15, 20, 27, 2, 30, 34, 17, 42, 11, 7, 0, 40, 22, 37, 12, 18, 14, 47, 38, 19, 36, 8, 31, 46, 4, 43, 9, 24, 29, 45, 41, 21, 44, 35 ];
        this._result = [];
        this._randomSeed = 0;
        this._currentIDValue = 0;
        this._totalIndex = swapIndex.length;
        if (seed == this._randomSeed && 0 != this._result.length) return;
        this._randomSeed = seed;
        seedLength = 1;
        var currentValueMultiply = 1;
        while (2 * currentValueMultiply < this._randomSeed) {
          currentValueMultiply *= 2;
          seedLength++;
        }
        seedArray = [];
        revertSeedArray = [];
        var tmpRandomSeed = this._randomSeed;
        for (var index = 0; index < seedLength; index++) {
          var currentValueChecking = Math.pow(2, seedLength - index - 1);
          if (tmpRandomSeed >= currentValueChecking) {
            seedArray[index] = 1;
            revertSeedArray[index] = 0;
            tmpRandomSeed -= currentValueChecking;
          } else {
            seedArray[index] = 0;
            revertSeedArray[index] = 1;
          }
        }
        finalSeedArray = [];
        this._result = [];
        for (var index = 0; index < this._totalIndex; index++) finalSeedArray[index] = Math.floor(index / seedLength) % 2 == 0 ? seedArray[index % seedLength] : revertSeedArray[index % seedLength];
        for (var index = 0; index < this._totalIndex; index += 2) {
          var tmp = finalSeedArray[index];
          finalSeedArray[index] = finalSeedArray[index + 1];
          finalSeedArray[index + 1] = tmp;
        }
        var endNumber = 0;
        for (var index = this._totalIndex - 1; index >= this._totalIndex / 2; index--) endNumber += 0 != finalSeedArray[index] ? Math.pow(2, this._totalIndex - index - 1) : 0;
        this._result[0] = endNumber;
        for (var index = 1; index < this._totalIndex; index++) {
          var shiftValue = swapIndex[index] % 10 == 0 ? 1 : swapIndex[index] % 10;
          var tmpLeft = this._result[index - 1] >>> shiftValue;
          var tmpRight = Math.abs(~(this._result[index - 1] ^ tmpLeft << shiftValue)) << this._totalIndex / 2 - shiftValue;
          this._result[index] = (tmpLeft ^ tmpRight) % 16777216;
        }
      };
      gaRandom.prototype.random = function() {
        return this.range(0, 1);
      };
      gaRandom.prototype.range = function(min, max) {
        0 === this._result.length && (this._randomSeed = new Date().getTime());
        if (this._currentIDValue >= this._totalIndex - 1) {
          var tmpSeed = this._result[this._currentIDValue] % 16777216;
          this.initRandomSeed(tmpSeed);
        }
        var tmpValue = this._result[this._currentIDValue++];
        return tmpValue / 16777216 * (max - min) + min;
      };
      gaRandom.prototype.rangeInt = function(min, max) {
        return Math.floor(this.range(min, max));
      };
      gaRandom.prototype.boolean = function() {
        return this.rangeInt(0, 100) >= 50;
      };
      gaRandom.prototype.getElement = function(arr) {
        if (!arr || 0 == arr.length) return null;
        var index = this.rangeInt(0, arr.length);
        return arr[index];
      };
      gaRandom.prototype.getElementExcept = function(arr, exceptedElement) {
        if (!arr || 0 == arr.length) return null;
        var eleIndex = arr.indexOf(exceptedElement);
        if (-1 == eleIndex || arr.length < 2) return this.getElement(arr);
        var index = this.rangeInt(eleIndex + 1, eleIndex + arr.length) % arr.length;
        return arr[index];
      };
      return gaRandom;
    }();
    exports.default = gaRandom;
    cc._RF.pop();
  }, {} ],
  gaReferenceManager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "433e4hXBvpHjITWioy+V9RJ", "gaReferenceManager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaReferenceManager = function() {
      function gaReferenceManager() {
        this.btnFullScreen = null;
        this.gameView = null;
        this.soundPlayer = null;
        this.betPanel = null;
        this.jackpotPanel = null;
      }
      gaReferenceManager.prototype.setReference = function(key, node) {
        this[key] = node;
      };
      gaReferenceManager.prototype.getSoundPlayer = function() {
        return this.soundPlayer.getComponent("gaSoundPlayer");
      };
      gaReferenceManager.prototype.destroy = function() {
        gaReferenceManager.instance && (gaReferenceManager.instance = null);
      };
      gaReferenceManager.instance = null;
      return gaReferenceManager;
    }();
    exports.default = gaReferenceManager;
    cc._RF.pop();
  }, {} ],
  gaRefreshWidget: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8b6f4mz0Z5D363bXoHA1qo4", "gaRefreshWidget");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaEventsCode_1 = require("../../Definitions/gaEventsCode");
    var gaUtils_1 = require("../../Utilities/gaUtils");
    var gaComponent_1 = require("../gaComponent");
    var _a = cc._decorator, ccclass = _a.ccclass, requireComponent = _a.requireComponent, property = _a.property;
    var HRRefreshWidget = function(_super) {
      __extends(HRRefreshWidget, _super);
      function HRRefreshWidget() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this._defaultLeftPadding = 0;
        _this._defaultRightPadding = 0;
        _this._tweenDelay = null;
        return _this;
      }
      HRRefreshWidget.prototype.onLoad = function() {
        _super.prototype.onLoad.call(this);
        var widget = this.getComponent(cc.Widget);
        this._defaultLeftPadding = widget.left;
        this._defaultRightPadding = widget.right;
      };
      HRRefreshWidget.prototype.initEvents = function() {
        this.register(gaEventsCode_1.default.COMMON.ON_SCREEN_RESIZE, this.refresh);
        var widget = this.getComponent(cc.Widget);
        var target = widget.target || widget.node.parent;
        target && target.on(cc.Node.EventType.SIZE_CHANGED, this.refresh, this);
      };
      HRRefreshWidget.prototype.onEnable = function() {
        this.refresh();
      };
      HRRefreshWidget.prototype.refresh = function() {
        gaUtils_1.default.stopTween(this._tweenDelay);
        this._tweenDelay = cc.tween(this).delay(.1).call(this.updateWidget.bind(this)).start();
      };
      HRRefreshWidget.prototype.updateWidget = function() {
        var widget = this.getComponent(cc.Widget);
        if (!widget) return;
        widget.left = this._defaultLeftPadding;
        widget.right = this._defaultRightPadding;
        widget.updateAlignment();
        var childrenWidget = this.node.getComponentsInChildren(cc.Widget);
        childrenWidget.forEach(function(i) {
          return i.updateAlignment();
        });
      };
      HRRefreshWidget = __decorate([ ccclass, requireComponent(cc.Widget) ], HRRefreshWidget);
      return HRRefreshWidget;
    }(gaComponent_1.default);
    exports.HRRefreshWidget = HRRefreshWidget;
    cc._RF.pop();
  }, {
    "../../Definitions/gaEventsCode": "gaEventsCode",
    "../../Utilities/gaUtils": "gaUtils",
    "../gaComponent": "gaComponent"
  } ],
  gaResizeWindow: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cdba02NfLlO6LWNNSI3BDHK", "gaResizeWindow");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../Config/gaBaseConfig");
    var gaEventsCode_1 = require("../Definitions/gaEventsCode");
    var gaUtils_1 = require("../Utilities/gaUtils");
    var gaEventEmitter_1 = require("./gaEventEmitter");
    var CanvasScaleByOrientation = require("CanvasScaleByOrientation");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaResizeWindow = function(_super) {
      __extends(gaResizeWindow, _super);
      function gaResizeWindow() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      gaResizeWindow.prototype.update = function(dt) {
        this._visibleSize.equals(cc.view.getVisibleSize()) || this.scaleCanvasByOrientation();
      };
      gaResizeWindow.prototype.onGameShow = function() {
        if (cc.sys.isMobile) {
          var eventResize = new Event("gameShow");
          window.dispatchEvent(eventResize);
        }
      };
      gaResizeWindow.prototype.scaleCanvasByOrientation = function() {
        _super.prototype.scaleCanvasByOrientation.call(this);
        var visibleSize = gaBaseConfig_1.default.visibleSize, designSize = gaBaseConfig_1.default.designSize;
        this._visibleSize = cc.view.getVisibleSize();
        var designRatio = designSize.width / designSize.height;
        var maxRatio = designSize.maxWidth / designSize.height;
        var viewPortRatio = this._visibleSize.width / this._visibleSize.height;
        var scale = gaUtils_1.default.clamp(viewPortRatio, designRatio, maxRatio);
        if (this.canvas.fitWidth) {
          visibleSize.width = designSize.width;
          visibleSize.height = designSize.width / scale;
        } else {
          visibleSize.width = designSize.height * scale;
          visibleSize.height = designSize.height;
        }
        this.node.width = visibleSize.width;
        this.node.height = visibleSize.height;
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.COMMON.ON_SCREEN_RESIZE);
      };
      gaResizeWindow = __decorate([ ccclass ], gaResizeWindow);
      return gaResizeWindow;
    }(CanvasScaleByOrientation);
    exports.default = gaResizeWindow;
    cc._RF.pop();
  }, {
    "../Config/gaBaseConfig": "gaBaseConfig",
    "../Definitions/gaEventsCode": "gaEventsCode",
    "../Utilities/gaUtils": "gaUtils",
    "./gaEventEmitter": "gaEventEmitter",
    CanvasScaleByOrientation: "CanvasScaleByOrientation"
  } ],
  gaResultData: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "967a5GXT1RIhrbZcoM04tGC", "gaResultData");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaResultData = function() {
      function gaResultData(data) {
        var _this = this;
        this._totalWinAmount = 0;
        this._bettingWinAmount = 0;
        this.sessionId = "";
        this.commandId = "";
        var wg = data.wg;
        var wgValues = wg.split(",");
        wgValues.forEach(function(value) {
          return _this._bettingWinAmount += parseFloat(value.split(";")[1]);
        });
        this._totalWinAmount = this.bettingWinAmount;
        this.sessionId = data.id;
        this.commandId = data.cId;
      }
      Object.defineProperty(gaResultData.prototype, "totalWinAmount", {
        get: function() {
          return this._totalWinAmount;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(gaResultData.prototype, "bettingWinAmount", {
        get: function() {
          return this._bettingWinAmount;
        },
        enumerable: true,
        configurable: true
      });
      return gaResultData;
    }();
    exports.default = gaResultData;
    cc._RF.pop();
  }, {} ],
  gaRoundData: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0df51hE+QRGN7CaijYl6Cce", "gaRoundData");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaRoundData = function() {
      function gaRoundData(data) {
        this.userActive = 0;
        this.oddsConfigs = {};
        this.sessionId = "";
        this.commandId = "";
        this.gameNumber = "";
        this.sessionId = data.id;
        this.commandId = data.cId;
      }
      return gaRoundData;
    }();
    exports.default = gaRoundData;
    cc._RF.pop();
  }, {} ],
  gaRoundInfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e2a06DECslLv6QlKudhpnrq", "gaRoundInfo");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaDataStore_1 = require("../../Common/gaDataStore");
    var gaEventsCode_1 = require("../../Definitions/gaEventsCode");
    var gaComponent_1 = require("../gaComponent");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaRoundInfo = function(_super) {
      __extends(gaRoundInfo, _super);
      function gaRoundInfo() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.gameNumber = null;
        _this.userOnline = null;
        return _this;
      }
      gaRoundInfo.prototype.start = function() {
        this.setGameNumber(null);
        this.setUserOnline(1);
      };
      gaRoundInfo.prototype.initEvents = function() {
        this.register(gaEventsCode_1.default.STATE.START_BETTING, this.updateRoundInfo);
        this.register(gaEventsCode_1.default.VIEW.SET_GAME_NUMBER, this.setGameNumber);
        this.register(gaEventsCode_1.default.VIEW.SET_USER_ONLINE, this.setUserOnline);
      };
      gaRoundInfo.prototype.updateRoundInfo = function() {
        this.setGameNumber(gaDataStore_1.default.instance.gameNumber);
        this.setUserOnline(gaDataStore_1.default.instance.userActive);
      };
      gaRoundInfo.prototype.setGameNumber = function(gameNum) {
        this.gameNumber && (this.gameNumber.string = gameNum ? "#" + gameNum : "");
      };
      gaRoundInfo.prototype.setUserOnline = function(userOnline) {
        this.userOnline && (this.userOnline.string = Math.max(1, userOnline) + "");
      };
      __decorate([ property(cc.Label) ], gaRoundInfo.prototype, "gameNumber", void 0);
      __decorate([ property(cc.Label) ], gaRoundInfo.prototype, "userOnline", void 0);
      gaRoundInfo = __decorate([ ccclass ], gaRoundInfo);
      return gaRoundInfo;
    }(gaComponent_1.default);
    exports.default = gaRoundInfo;
    cc._RF.pop();
  }, {
    "../../Common/gaDataStore": "gaDataStore",
    "../../Definitions/gaEventsCode": "gaEventsCode",
    "../gaComponent": "gaComponent"
  } ],
  gaSafeArea: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "678e7sgYBJNx4F95F4cqe3A", "gaSafeArea");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaEventsCode_1 = require("../Definitions/gaEventsCode");
    var gaScreenUtils_1 = require("../Utilities/gaScreenUtils");
    var gaEventEmitter_1 = require("./gaEventEmitter");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaSafeArea = function(_super) {
      __extends(gaSafeArea, _super);
      function gaSafeArea() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.isPortrait = false;
        _this.safeBottom = false;
        _this.safeLeft = true;
        _this.safeRight = true;
        _this.safeLeftCurve = true;
        _this.safeRightCurve = true;
        return _this;
      }
      gaSafeArea.prototype.onLoad = function() {
        gaEventEmitter_1.default.instance.registerEvent(gaEventsCode_1.default.COMMON.ON_SCREEN_RESIZE, this.setSafeArea, this);
      };
      gaSafeArea.prototype.onEnable = function() {
        this.setSafeArea();
      };
      gaSafeArea.prototype.onDestroy = function() {
        gaEventEmitter_1.default.instance && gaEventEmitter_1.default.instance.removeEvents(this);
      };
      gaSafeArea.prototype.setSafeArea = function() {
        var notchSize = gaScreenUtils_1.default.getNotchSize();
        var widget = this._getWidget();
        widget.top = widget.bottom = widget.left = widget.right = 0;
        if (notchSize > 0) if (this.isPortrait && this.safeLeft) widget.top += notchSize; else if (-90 == gaScreenUtils_1.default.getOrientation()) {
          this.safeLeftCurve && (widget.left += gaScreenUtils_1.default.SAFE_CURVE_IPX);
          this.safeRight && (widget.right += notchSize);
        } else if (90 == gaScreenUtils_1.default.getOrientation() && this.safeLeft) {
          this.safeLeft && (widget.left += notchSize);
          this.safeRightCurve && (widget.right += gaScreenUtils_1.default.SAFE_CURVE_IPX);
        }
        this.safeBottom && (widget.bottom += gaScreenUtils_1.default.getSafeY());
        widget.updateAlignment();
        var childrenWidget = this.node.getComponentsInChildren(cc.Widget);
        childrenWidget.forEach(function(i) {
          return i.updateAlignment();
        });
      };
      gaSafeArea.prototype._getWidget = function() {
        var widget = this.getComponent(cc.Widget) || this.addComponent(cc.Widget);
        widget.isAlignTop = true;
        widget.isAlignBottom = true;
        widget.isAlignLeft = true;
        widget.isAlignRight = true;
        return widget;
      };
      __decorate([ property(cc.Boolean) ], gaSafeArea.prototype, "isPortrait", void 0);
      __decorate([ property(cc.Boolean) ], gaSafeArea.prototype, "safeBottom", void 0);
      __decorate([ property(cc.Boolean) ], gaSafeArea.prototype, "safeLeft", void 0);
      __decorate([ property(cc.Boolean) ], gaSafeArea.prototype, "safeRight", void 0);
      __decorate([ property(cc.Boolean) ], gaSafeArea.prototype, "safeLeftCurve", void 0);
      __decorate([ property(cc.Boolean) ], gaSafeArea.prototype, "safeRightCurve", void 0);
      gaSafeArea = __decorate([ ccclass ], gaSafeArea);
      return gaSafeArea;
    }(cc.Component);
    exports.default = gaSafeArea;
    cc._RF.pop();
  }, {
    "../Definitions/gaEventsCode": "gaEventsCode",
    "../Utilities/gaScreenUtils": "gaScreenUtils",
    "./gaEventEmitter": "gaEventEmitter"
  } ],
  gaScreenUtils: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "533a9aT5xJPtbr12aY60Ci+", "gaScreenUtils");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaScreenUtils = function() {
      function gaScreenUtils() {}
      Object.defineProperty(gaScreenUtils, "NotchSize", {
        get: function() {
          return cc.sys.os == cc.sys.OS_IOS ? 67 : 50;
        },
        enumerable: true,
        configurable: true
      });
      gaScreenUtils.isIPhoneX = function() {
        var iPhone = cc.sys.os == cc.sys.OS_IOS;
        var aspect = window.screen.width / window.screen.height;
        if (iPhone && "0.462" === aspect.toFixed(3)) return true;
        return false;
      };
      gaScreenUtils.getSafeY = function() {
        if (cc.sys.isMobile) {
          if (cc.sys.isBrowser && gaScreenUtils.isIPhoneX()) return gaScreenUtils.isLandscapeScreen() ? 40 : 0;
          var safeArea = cc.sys.getSafeAreaRect();
          return safeArea.y;
        }
        return 0;
      };
      gaScreenUtils.getOrientation = function() {
        if (cc.sys.isBrowser) return window.orientation;
        if (jsb && jsb.device && "function" == typeof jsb.device.getDeviceOrientation) return jsb.device.getDeviceOrientation();
        return 0;
      };
      gaScreenUtils.getNotchSize = function(extend) {
        gaScreenUtils.SAFE_CURVE_IPX = gaScreenUtils.NotchSize / 2;
        var extValue = extend ? gaScreenUtils.SAFE_CURVE_IPX : 0;
        if (cc.sys.isMobile && cc.sys.isBrowser) {
          if (!window || !document || !CSS) return 0;
          if (CSS.supports("padding-bottom: env(safe-area-inset-left)")) {
            var div = document.createElement("div");
            div.style.paddingLeft = "env(safe-area-inset-left)";
            div.style.paddingTop = "env(safe-area-inset-top)";
            div.style.paddingRight = "env(safe-area-inset-right)";
            div.style.paddingBottom = "env(safe-area-inset-bottom)";
            document.body.appendChild(div);
            var calculatedPaddingLeft = parseInt(window.getComputedStyle(div).paddingLeft, 10);
            var calculatedPaddingTop = parseInt(window.getComputedStyle(div).paddingTop, 10);
            var calculatedPaddingRight = parseInt(window.getComputedStyle(div).paddingRight, 10);
            document.body.removeChild(div);
            if (gaScreenUtils.isIPhoneX() && calculatedPaddingLeft > 0) return gaScreenUtils.NotchSize + extValue;
            if (gaScreenUtils.isLandscapeScreen()) {
              if (calculatedPaddingLeft > 0 || calculatedPaddingRight > 0) return gaScreenUtils.NotchSize + extValue;
            } else if (calculatedPaddingTop > 0) return gaScreenUtils.NotchSize + extValue;
          }
        }
        var safeArea = cc.sys.getSafeAreaRect();
        if (safeArea.x > 0) return gaScreenUtils.NotchSize + extValue;
        return 0;
      };
      gaScreenUtils.isLandscapeScreen = function() {
        if (cc.sys.isBrowser) {
          if (window.matchMedia("(orientation: landscape)").matches) return true;
          if (window.matchMedia("(orientation: portrait)").matches) return false;
          return false;
        }
        return true;
      };
      gaScreenUtils.SAFE_CURVE_IPX = 20;
      return gaScreenUtils;
    }();
    exports.default = gaScreenUtils;
    cc._RF.pop();
  }, {} ],
  gaScrollItem: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e1d9fjPLYVFQZ2DpUSaMr3/", "gaScrollItem");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaScrollItem = function(_super) {
      __extends(gaScrollItem, _super);
      function gaScrollItem() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.textLabel = null;
        _this.value = 0;
        return _this;
      }
      gaScrollItem.prototype.setLabelStr = function(str) {
        this.textLabel.string = str;
      };
      __decorate([ property(cc.Label) ], gaScrollItem.prototype, "textLabel", void 0);
      gaScrollItem = __decorate([ ccclass ], gaScrollItem);
      return gaScrollItem;
    }(cc.Component);
    exports.default = gaScrollItem;
    cc._RF.pop();
  }, {} ],
  gaSideMenu: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "02846CiCzlI4Jrho+/MO/y0", "gaSideMenu");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaCommon_1 = require("../../Definitions/gaCommon");
    var gaEventsCode_1 = require("../../Definitions/gaEventsCode");
    var gaScreenUtils_1 = require("../../Utilities/gaScreenUtils");
    var gaComponent_1 = require("../gaComponent");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaSideMenu = function(_super) {
      __extends(gaSideMenu, _super);
      function gaSideMenu() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.nodeMove = null;
        _this.btnShow = null;
        _this.btnHide = null;
        _this.overlay = null;
        _this.btnExitGame = null;
        _this.OPACITY_SHOW_OVERLAY = 150;
        _this.isHide = false;
        _this.isActionDone = false;
        _this.frameWidth = 0;
        _this.menuShowPos = null;
        return _this;
      }
      gaSideMenu.prototype.onLoad = function() {
        var _this = this;
        _super.prototype.onLoad.call(this);
        this.frameWidth = this.nodeMove.width;
        this.menuShowPos = cc.v2(this.nodeMove.x, this.nodeMove.y);
        this.btnExitGame && (this.btnExitGame.active = gaCommon_1.gameCommonUtils.checkConditionCloseGameIframe());
        this.overlay && this.overlay.on(cc.Node.EventType.TOUCH_START, function() {
          _this.transitionMenu();
        });
      };
      gaSideMenu.prototype.start = function() {
        this.resetSideMenu();
      };
      gaSideMenu.prototype.initEvents = function() {
        this.register(gaEventsCode_1.default.COMMON.ON_SCREEN_RESIZE, this.onScreenResize);
      };
      gaSideMenu.prototype.onScreenResize = function() {
        this.isHide && this.resetSideMenu();
      };
      gaSideMenu.prototype.getPosShow = function() {
        return cc.v2(this.menuShowPos.x, this.menuShowPos.y);
      };
      gaSideMenu.prototype.getPosHide = function() {
        return cc.v2(this.menuShowPos.x - this.frameWidth - gaScreenUtils_1.default.getNotchSize(), this.menuShowPos.y);
      };
      gaSideMenu.prototype.resetSideMenu = function() {
        this.unschedule(this.transitionMenu);
        this.isHide = true;
        this.overlay && (this.overlay.active = false);
        this.btnShow.active = true;
        this.btnHide.active = false;
        this.nodeMove.active = false;
        this.nodeMove.stopAllActions();
        this.nodeMove.setPosition(this.getPosHide());
        this.isActionDone = true;
      };
      gaSideMenu.prototype.onInfoClick = function() {
        if (!this.isActionDone) return;
        this.soundPlayer.playSFXClick();
        this.emit(gaEventsCode_1.default.POPUP.SHOW_POPUP_INFO);
        this.unscheduleAllCallbacks();
        this.transitionMenu();
      };
      gaSideMenu.prototype.onSettingClick = function() {
        if (!this.isActionDone) return;
        this.soundPlayer.playSFXClick();
        this.emit(gaEventsCode_1.default.POPUP.SHOW_POPUP_SETTING);
        this.unscheduleAllCallbacks();
        this.transitionMenu();
      };
      gaSideMenu.prototype.onHistoryBetClick = function() {
        if (!this.isActionDone) return;
        this.soundPlayer.playSFXClick();
        this.emit(gaEventsCode_1.default.POPUP.SHOW_POPUP_HISTORY_BET);
        this.unscheduleAllCallbacks();
        this.transitionMenu();
      };
      gaSideMenu.prototype.onHistoryJPClick = function() {
        if (!this.isActionDone) return;
        this.soundPlayer.playSFXClick();
        this.emit(gaEventsCode_1.default.POPUP.SHOW_POPUP_HISTORY_JP);
        this.unscheduleAllCallbacks();
        this.transitionMenu();
      };
      gaSideMenu.prototype.onExitGameClick = function() {
        this.soundPlayer.playSFXClick();
        this.emit(gaEventsCode_1.default.ACTION.LEAVE_GAME);
      };
      gaSideMenu.prototype.transitionMenu = function(evt) {
        var _this = this;
        if (!this.isActionDone) return;
        evt && this.soundPlayer.playSFXClick();
        this.unschedule(this.transitionMenu);
        this.isActionDone = false;
        this.isHide = !this.isHide;
        this.btnShow.active = this.isHide;
        this.btnHide.active = !this.isHide;
        var pos;
        var actionDone = null;
        if (this.isHide) {
          pos = this.getPosHide();
          this.playFadeOutOverlay();
          actionDone = function() {
            _this.isActionDone = true;
            _this.resetSideMenu();
          };
        } else {
          pos = this.getPosShow();
          this.scheduleOnce(this.transitionMenu, 3);
          this.playFadeInOverlay();
          this.nodeMove.active = true;
          actionDone = function() {
            _this.isActionDone = true;
          };
        }
        var baseEasing = this.isHide ? cc.easeSineIn() : cc.easeSineOut();
        this.nodeMove.stopAllActions();
        this.nodeMove.runAction(cc.sequence(cc.moveTo(.3, pos).easing(baseEasing), cc.callFunc(actionDone)));
      };
      gaSideMenu.prototype.playFadeInOverlay = function() {
        if (this.overlay) {
          this.overlay.active = true;
          this.overlay.stopAllActions();
          this.overlay.runAction(cc.fadeTo(.3, this.OPACITY_SHOW_OVERLAY));
        }
      };
      gaSideMenu.prototype.playFadeOutOverlay = function() {
        var _this = this;
        if (this.overlay) {
          this.overlay.stopAllActions();
          this.overlay.runAction(cc.sequence(cc.fadeOut(.3), cc.callFunc(function() {
            _this.overlay.active = false;
          })));
        }
      };
      __decorate([ property(cc.Node) ], gaSideMenu.prototype, "nodeMove", void 0);
      __decorate([ property(cc.Node) ], gaSideMenu.prototype, "btnShow", void 0);
      __decorate([ property(cc.Node) ], gaSideMenu.prototype, "btnHide", void 0);
      __decorate([ property(cc.Node) ], gaSideMenu.prototype, "overlay", void 0);
      __decorate([ property(cc.Node) ], gaSideMenu.prototype, "btnExitGame", void 0);
      gaSideMenu = __decorate([ ccclass ], gaSideMenu);
      return gaSideMenu;
    }(gaComponent_1.default);
    exports.default = gaSideMenu;
    cc._RF.pop();
  }, {
    "../../Definitions/gaCommon": "gaCommon",
    "../../Definitions/gaEventsCode": "gaEventsCode",
    "../../Utilities/gaScreenUtils": "gaScreenUtils",
    "../gaComponent": "gaComponent"
  } ],
  gaSocketManager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8ba7fyM+X9NYrom8TQ4CIAF", "gaSocketManager");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaPromise_1 = require("../Utilities/gaPromise");
    var gaCommon_1 = require("../Definitions/gaCommon");
    var gaEventsCode_1 = require("../Definitions/gaEventsCode");
    var gaLocalize_1 = require("../Common/gaLocalize");
    var gaCommandID_1 = require("./gaCommandID");
    var gaNetworkError_1 = require("./gaNetworkError");
    var gaEventEmitter_1 = require("../Common/gaEventEmitter");
    var gaBaseConfig_1 = require("../Config/gaBaseConfig");
    var gaLogger_1 = require("../Utilities/gaLogger");
    var MessageManager = gaCommon_1.network.MessageManager, CommandManager = gaCommon_1.network.CommandManager, EventManager = gaCommon_1.network.EventManager, PlayerInfoStateManager = gaCommon_1.network.PlayerInfoStateManager, SocketManager = gaCommon_1.network.SocketManager;
    var messageManager = MessageManager.getInstance();
    var playerInfoStateManager = PlayerInfoStateManager.getInstance();
    var NetworkStatus;
    (function(NetworkStatus) {
      NetworkStatus[NetworkStatus["Initialized"] = 0] = "Initialized";
      NetworkStatus[NetworkStatus["CanNotAuthenticate"] = 1] = "CanNotAuthenticate";
      NetworkStatus[NetworkStatus["Connected"] = 2] = "Connected";
      NetworkStatus[NetworkStatus["Reconnecting"] = 3] = "Reconnecting";
      NetworkStatus[NetworkStatus["Disconnected"] = 4] = "Disconnected";
    })(NetworkStatus || (NetworkStatus = {}));
    var gaSocketManager = function() {
      function gaSocketManager() {
        var _this = this;
        this._messageDisconnected = "";
        this._firstInitSocket = true;
        gaLogger_1.default.warn("gaSocketManager created");
        this._networkStatus = NetworkStatus.Initialized;
        this._handleUserLogout = function() {
          _this._networkStatus = NetworkStatus.Disconnected;
          gaBaseConfig_1.default.isLoginOnOtherDevice = true;
          _this._messageDisconnected = gaLocalize_1.default.instance.ANOTHER_ACCOUNT;
          _this._onForceDisconnect(_this._messageDisconnected);
        };
        this._commandManager = new CommandManager(this._gameId, 1, "cId");
        this._eventManager = new EventManager(false, {
          jgr: "client-join-game-result",
          sud: "state-updated",
          spu: "state-pushed",
          jud: "jackpot-updated",
          erp: "error-pushed",
          mep: "message-pushed"
        });
        messageManager.registerGame(this._gameId, {
          onAck: this._onAck.bind(this),
          onCannotSendMessage: this._onCannotSendMessage.bind(this)
        }, {
          onConnected: this._onConnected.bind(this),
          onCannotConnect: this._onDisconnect.bind(this),
          onCannotAuthen: this._onCannotAuthen.bind(this),
          onNetworkStatus: this._onNetworkStatus.bind(this),
          onNetworkWarning: this._onNetworkWarning.bind(this),
          onShowPopupDisconnected: this._onShowPopupDisconnected.bind(this),
          onEvent: this._onEvent.bind(this)
        });
      }
      gaSocketManager.prototype.isReady = function() {
        return messageManager._socketManager && messageManager._socketManager.isAbleSendingData();
      };
      gaSocketManager.prototype.checkReady = function() {
        this.isReady() && this._networkStatus == NetworkStatus.Initialized && this._onConnected();
      };
      gaSocketManager.prototype.subscribe = function(channel) {
        this._commandManager.subscribe(channel);
      };
      gaSocketManager.prototype.unSubscribe = function(channel) {
        this._commandManager.unSubscribe(channel);
      };
      gaSocketManager.prototype.sendMessage = function(payload) {
        var _this = this;
        var promise = gaPromise_1.default.resolve().waitUntil(function() {
          return null == _this._latestRequest;
        }).then(function() {
          _this._latestRequest = promise;
          return _this._executeCommand(payload);
        }).then(function(response) {
          _this._latestRequest = null;
          return gaPromise_1.default.resolve(response);
        });
        return promise;
      };
      gaSocketManager.prototype.closeAndCleanUp = function() {
        this.clearPendingCommands();
        this._commandManager && this._commandManager.cleanUp();
        this._eventManager && this._eventManager.cleanUp();
        playerInfoStateManager.removeEvent("user-logged-out", this._handleUserLogout);
        playerInfoStateManager.removeEvent("wallet-updated", this._handleUserLogout);
        messageManager && messageManager.unregisterGame(this._gameId);
        gaBaseConfig_1.default.isIFrame && messageManager && messageManager.closeAndCleanUp();
      };
      gaSocketManager.prototype.clearPendingCommands = function() {
        this._eventManager.removeAllEventListeners();
        this._eventManager.removeWaitingQueue();
        this._commandManager.clearRemainingCommand();
        this._latestRequest && this._latestRequest.cancel();
        this._latestRequest = null;
      };
      gaSocketManager.prototype._executeCommand = function(payload) {
        var _this = this;
        return new gaPromise_1.default(function(resolve, reject) {
          switch (_this._networkStatus) {
           case NetworkStatus.CanNotAuthenticate:
           case NetworkStatus.Disconnected:
           case NetworkStatus.Reconnecting:
            return reject(gaNetworkError_1.gaNetworkError.disconnected("Network is unavailable"));
          }
          payload.data = payload.data || {};
          payload.data.tkn = playerInfoStateManager.getToken() || gaCommon_1.connectNetwork.getToken();
          payload.data.sId = payload.data.serviceId || _this._gameId;
          var commandStrategy = _this._buildCommandStrategy(payload.event);
          false === payload.retry && (commandStrategy.resendCount = 0);
          var commandId = _this._commandManager.executeCommand(payload, commandStrategy);
          payload.event == gaCommandID_1.gaGameCMD.R_PLAY_GAME && (_this._betCmdId = commandId);
          if (!_this._isSuccessSendCommandId(commandId)) return reject(gaNetworkError_1.gaNetworkError.excecuteFail("Send command fail: event = " + payload.event + ", commandId = " + commandId));
          var respId = gaCommandID_1.gaGameCMD.responseOf(payload.event);
          if (!respId) return resolve(commandId);
          var eventStrategy = _this._buildEventStrategy(payload.event);
          _this._eventManager.waitForEvent(eventStrategy.timeWaitForEvent, function(eventData) {
            var isCorrect = false;
            if (eventData.event === respId) {
              var data = eventData.data;
              if (data.cId == commandId) {
                resolve(eventData.data);
                isCorrect = true;
              }
            } else if (eventData.event === gaCommandID_1.gaGameCMD.ERROR_PUSH) {
              var data = eventData.data;
              if (Array.isArray(data) && data[0] && data[0].cId == commandId) {
                reject(gaNetworkError_1.gaNetworkError.responseError(eventData));
                isCorrect = true;
              }
            }
            return isCorrect;
          }, function() {
            reject(gaNetworkError_1.gaNetworkError.timeout("Request timeout:\n\t- Wait for event: " + respId + "\n\t- Payload: " + JSON.stringify(payload)));
          });
        });
      };
      gaSocketManager.prototype._isSuccessSendCommandId = function(commandId) {
        var overLimited = commandId === CommandManager.COMMAND_FAILED_CONC_OVER_LIMIT;
        var isDuplicated = commandId === CommandManager.COMMAND_FAILED_DUPLICATE;
        return commandId && !(overLimited && isDuplicated);
      };
      gaSocketManager.prototype._buildEventStrategy = function(commandType) {
        if ("glt" == commandType) return {
          timeWaitForEvent: 5e3
        };
        return {
          timeWaitForEvent: 1e4
        };
      };
      gaSocketManager.prototype._buildCommandStrategy = function(event) {
        var command;
        switch (event) {
         case "player-active":
          command = {
            resendCount: 0,
            shouldWaitForACK: false,
            canBeDuplicated: true
          };
          break;

         case "jg":
          command = {
            resendCount: 100,
            shouldWaitForACK: true,
            canBeDuplicated: false
          };
          break;

         default:
          command = {
            resendCount: 3,
            shouldWaitForACK: true,
            canBeDuplicated: false
          };
        }
        return command;
      };
      gaSocketManager.prototype._onAck = function() {
        this._commandManager.onAck.apply(this._commandManager, arguments);
      };
      gaSocketManager.prototype._onCannotSendMessage = function() {
        gaLogger_1.default.warn("onCannotSendMessage");
        this._commandManager.onCannotSendMessage.apply(this._commandManager, arguments);
      };
      gaSocketManager.prototype._onConnected = function() {
        gaLogger_1.default.warn("onConnected");
        if (this._networkStatus == NetworkStatus.CanNotAuthenticate) return;
        playerInfoStateManager && null != playerInfoStateManager.userId && (this._networkStatus = NetworkStatus.Connected);
        this._eventManager.onConnected();
        if (this._firstInitSocket) {
          this._firstInitSocket = false;
          gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WEB_SOCKET_OPEN);
          return;
        }
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WEB_SOCKET_RECONNECT);
        this._commandManager.clearRemainingCommand();
      };
      gaSocketManager.prototype._onCannotAuthen = function() {
        gaLogger_1.default.error("onCannotAuthen");
        this._networkStatus = NetworkStatus.CanNotAuthenticate;
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.CANNOT_AUTHEN);
        this.closeAndCleanUp();
      };
      gaSocketManager.prototype._onDisconnect = function() {
        gaLogger_1.default.error("onDisconnect");
        if (this._networkStatus == NetworkStatus.Initialized) return;
        var isReconnecting = this._networkStatus == NetworkStatus.Reconnecting;
        this._networkStatus = NetworkStatus.Disconnected;
        this.clearPendingCommands();
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WEB_SOCKET_DISCONNECT);
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WEB_SOCKET_CLOSE, {
          isReconnectFailed: isReconnecting
        });
      };
      gaSocketManager.prototype._onNetworkStatus = function(status) {
        gaLogger_1.default.warn("onNetworkStatus", status);
        switch (status) {
         case SocketManager.POOR_CONNECTION:
          this._networkStatus = NetworkStatus.Reconnecting;
          gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WEB_SOCKET_TEMP_DISCONNECT);
        }
      };
      gaSocketManager.prototype._onNetworkWarning = function(status) {
        gaLogger_1.default.warn("onNetworkWarning", status);
        this._networkStatus = NetworkStatus.Reconnecting;
        this.clearPendingCommands();
        switch (status) {
         case SocketManager.DISCONNECTED_CONNECTION:
          this._networkStatus = NetworkStatus.Reconnecting;
          gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WEB_SOCKET_BAD_CONDITION);
        }
      };
      gaSocketManager.prototype._onForceDisconnect = function(message) {
        gaLogger_1.default.error("onForceDisconnect");
        this._networkStatus = NetworkStatus.Disconnected;
        this.clearPendingCommands();
        this._messageDisconnected = message;
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WEB_SOCKET_FORCE_DISCONNECT, message);
      };
      gaSocketManager.prototype._onShowPopupDisconnected = function() {
        gaLogger_1.default.error("onShowPopupDisconnected");
        this._networkStatus = NetworkStatus.Disconnected;
        this.clearPendingCommands();
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NETWORK.WEB_SOCKET_DISCONNECT);
      };
      gaSocketManager.prototype._onEvent = function(eventData) {
        this._eventManager.onEvent.apply(this._eventManager, arguments);
        var event = eventData.event, data = eventData.data;
        gaLogger_1.default.debug("onEvent", eventData);
        switch (event) {
         case gaCommandID_1.gaGameCMD.ERROR_PUSH:
          this._handleErrorPushed(eventData);
          break;

         case gaCommandID_1.gaGameCMD.JACKPOT_UPDATE:
          gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.JACKPOT.UPDATE_JACKPOT, data);
          break;

         case gaCommandID_1.gaGameCMD.JACKPOT_WIN:
          this._betCmdId == data.jpInfo[0].cmdId && gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.JACKPOT.UPDATE_VALUE_JACKPOT, data.jpInfo[0].jpId, data.jpInfo[0].amt);
          break;

         case gaCommandID_1.gaGameCMD.ON_NOTIFY:
          gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.NOTIFY.SHOW_NOTIFY, data);
        }
      };
      return gaSocketManager;
    }();
    exports.gaSocketManager = gaSocketManager;
    cc._RF.pop();
  }, {
    "../Common/gaEventEmitter": "gaEventEmitter",
    "../Common/gaLocalize": "gaLocalize",
    "../Config/gaBaseConfig": "gaBaseConfig",
    "../Definitions/gaCommon": "gaCommon",
    "../Definitions/gaEventsCode": "gaEventsCode",
    "../Utilities/gaLogger": "gaLogger",
    "../Utilities/gaPromise": "gaPromise",
    "./gaCommandID": "gaCommandID",
    "./gaNetworkError": "gaNetworkError"
  } ],
  gaStateMachine: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "80355MOWdRIZry6q/GEtmOi", "gaStateMachine");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaEventEmitter_1 = require("../Common/gaEventEmitter");
    var gaLogger_1 = require("../Utilities/gaLogger");
    function Transition(fromState, event, toState, callback) {
      void 0 === callback && (callback = null);
      return {
        fromState: fromState,
        event: event,
        toState: toState,
        callback: callback
      };
    }
    exports.Transition = Transition;
    var gaStateMachine = function() {
      function gaStateMachine(initState, transitions, stateViews) {
        void 0 === transitions && (transitions = []);
        this.transitions = transitions;
        this.stateViews = stateViews;
        this._initState = null;
        this._listenedEvents = [];
        this._isRunning = false;
        this._initState = initState;
      }
      gaStateMachine.prototype.startLifeCycle = function() {
        var _this = this;
        if (!this._isRunning) {
          this._isRunning = true;
          this.currentState = this._initState;
          this.currentView = this.stateViews.get(this._initState);
          this._listenedEvents = [];
          this.transitions.forEach(function(element) {
            if (-1 == _this._listenedEvents.indexOf(element.event)) {
              _this._listenedEvents.push(element.event);
              gaEventEmitter_1.default.instance.registerEvent(element.event, function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                _this._onEvent.apply(_this, [ element.event ].concat(args));
              }, _this);
            }
          });
          this.currentView.isCurrentState = true;
          this.currentView.onEnter();
        }
      };
      gaStateMachine.prototype.addTransitions = function(transitions) {
        var _this = this;
        transitions.forEach(function(tran) {
          return _this.transitions.push(tran);
        });
        transitions.forEach(function(element) {
          if (-1 == _this._listenedEvents.indexOf(element.event)) {
            _this._listenedEvents.push(element.event);
            gaEventEmitter_1.default.instance.registerEvent(element.event, function(args) {
              _this._onEvent.apply(_this, [ element.event ].concat(args));
            }, _this);
          }
        });
      };
      gaStateMachine.prototype.getState = function() {
        return this.currentState;
      };
      gaStateMachine.prototype.can = function(event) {
        var _this = this;
        return this.transitions.some(function(trans) {
          return trans.fromState === _this.currentState && trans.event === event;
        });
      };
      gaStateMachine.prototype.isFinal = function() {
        var _this = this;
        return this.transitions.every(function(trans) {
          return trans.fromState !== _this.currentState;
        });
      };
      gaStateMachine.prototype.cleanUp = function() {
        this._listenedEvents = [];
        gaEventEmitter_1.default.instance && gaEventEmitter_1.default.instance.removeEvents(this);
        this.stateViews.forEach(function(view) {
          view && view.isValid && "function" == typeof view.destroy && view.destroy();
        });
        this.currentView = null;
      };
      gaStateMachine.prototype._onEvent = function(event) {
        var _this = this;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
        var _a;
        var transitionObj = this.transitions.find(function(tran) {
          return (tran.fromState === _this.currentState || "*" === tran.fromState) && tran.event === event;
        });
        if (transitionObj) {
          var oldStateView = this.currentView;
          var oldState = this.currentState;
          this.currentState = transitionObj.toState;
          this.currentView = this.stateViews.get(this.currentState);
          oldStateView.isCurrentState = false;
          oldStateView.onLeave.apply(oldStateView, args);
          this.currentView.isCurrentState = true;
          (_a = this.currentView).onEnter.apply(_a, args);
          "function" == typeof transitionObj.callback && transitionObj.callback.apply(transitionObj, args);
          gaLogger_1.default.warn("Transition: from " + oldState + " to " + this.currentState + ", event " + event + ", data = ", args);
        } else gaLogger_1.default.error("Invalid transition " + event + " from " + this.currentState, args);
      };
      return gaStateMachine;
    }();
    exports.gaStateMachine = gaStateMachine;
    cc._RF.pop();
  }, {
    "../Common/gaEventEmitter": "gaEventEmitter",
    "../Utilities/gaLogger": "gaLogger"
  } ],
  gaStateView: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "839e84EONZKzaLowNRKC/Sg", "gaStateView");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaComponent_1 = require("../Components/gaComponent");
    var ccclass = cc._decorator.ccclass;
    var gaStateView = function(_super) {
      __extends(gaStateView, _super);
      function gaStateView() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.isCurrentState = false;
        return _this;
      }
      gaStateView.prototype.onLoad = function() {};
      gaStateView.prototype.start = function() {};
      gaStateView.prototype.onScreenSizeChanged = function() {};
      gaStateView = __decorate([ ccclass ], gaStateView);
      return gaStateView;
    }(gaComponent_1.default);
    exports.default = gaStateView;
    cc._RF.pop();
  }, {
    "../Components/gaComponent": "gaComponent"
  } ],
  gaToast: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "cf811YunV5ACo9CFpGqunBE", "gaToast");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../../Config/gaBaseConfig");
    var gaBasePopup_1 = require("./gaBasePopup");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaToast = function(_super) {
      __extends(gaToast, _super);
      function gaToast() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.txtMessage = null;
        return _this;
      }
      Object.defineProperty(gaToast.prototype, "popupType", {
        get: function() {
          return gaBaseConfig_1.default.POPUP_TYPE.TOAST;
        },
        enumerable: true,
        configurable: true
      });
      gaToast.prototype.show = function(data) {
        void 0 === data && (data = null);
        if (!data || !this.txtMessage) return;
        _super.prototype.show.call(this, data);
        this.txtMessage.string = data.message;
        var duration = data.duration;
        null == duration && (data.duration = 2);
        duration > 0 && this.scheduleOnce(this.hide, duration);
      };
      __decorate([ property(cc.Label) ], gaToast.prototype, "txtMessage", void 0);
      gaToast = __decorate([ ccclass ], gaToast);
      return gaToast;
    }(gaBasePopup_1.default);
    exports.default = gaToast;
    cc._RF.pop();
  }, {
    "../../Config/gaBaseConfig": "gaBaseConfig",
    "./gaBasePopup": "gaBasePopup"
  } ],
  gaToggleDoubleCheckmark: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e30713QFdpE+o8mdvw53BP9", "gaToggleDoubleCheckmark");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaComponent_1 = require("../gaComponent");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaToggleDoubleCheckmark = function(_super) {
      __extends(gaToggleDoubleCheckmark, _super);
      function gaToggleDoubleCheckmark() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.spriteOn = null;
        _this.spriteOff = null;
        _this.isChecked = false;
        return _this;
      }
      gaToggleDoubleCheckmark.prototype.onLoad = function() {
        this.node.on("click", this.onToggle, this);
      };
      gaToggleDoubleCheckmark.prototype.init = function(state) {
        this.isChecked = state;
        this.setToggle();
      };
      gaToggleDoubleCheckmark.prototype.onToggle = function() {
        this.isChecked = !this.isChecked;
        this.setToggle();
      };
      gaToggleDoubleCheckmark.prototype.setToggle = function() {
        this.spriteOn.active = this.isChecked;
        this.spriteOff.active = !this.isChecked;
      };
      __decorate([ property(cc.Node) ], gaToggleDoubleCheckmark.prototype, "spriteOn", void 0);
      __decorate([ property(cc.Node) ], gaToggleDoubleCheckmark.prototype, "spriteOff", void 0);
      gaToggleDoubleCheckmark = __decorate([ ccclass ], gaToggleDoubleCheckmark);
      return gaToggleDoubleCheckmark;
    }(gaComponent_1.default);
    exports.default = gaToggleDoubleCheckmark;
    cc._RF.pop();
  }, {
    "../gaComponent": "gaComponent"
  } ],
  gaTweenUtils: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f1e10j+9fVMJJvOO0Nzvsuw", "gaTweenUtils");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaTweenUtils = function() {
      function gaTweenUtils() {}
      gaTweenUtils.fadeOut = function(node, duration, callback) {
        var tween = cc.tween(node).to(duration, {
          opacity: 0
        }).call(function() {
          callback && callback();
        }).start();
        return tween;
      };
      gaTweenUtils.fadeIn = function(node, duration, callback) {
        var tween = cc.tween(node).to(duration, {
          opacity: 255
        }).call(function() {
          callback && callback();
        }).start();
        return tween;
      };
      return gaTweenUtils;
    }();
    exports.default = gaTweenUtils;
    cc._RF.pop();
  }, {} ],
  gaUserInfo: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f2c4cgbi99NjYrVKondP6ml", "gaUserInfo");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaCommon_1 = require("../Definitions/gaCommon");
    var gaEventEmitter_1 = require("../Common/gaEventEmitter");
    var gaEventsCode_1 = require("./gaEventsCode");
    var PlayerInfoStateManager = gaCommon_1.network.PlayerInfoStateManager;
    var playerInfoStateManager = PlayerInfoStateManager.getInstance();
    var gaUserInfo = function() {
      function gaUserInfo() {
        this._pending = 0;
        this.avatar = "";
      }
      Object.defineProperty(gaUserInfo.prototype, "displayName", {
        get: function() {
          return playerInfoStateManager && playerInfoStateManager.getDisplayName();
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(gaUserInfo.prototype, "availableAmount", {
        get: function() {
          return this.totalAmount - this._pending;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(gaUserInfo.prototype, "totalAmount", {
        get: function() {
          return playerInfoStateManager && playerInfoStateManager.getWallets().amount;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(gaUserInfo.prototype, "userId", {
        get: function() {
          return playerInfoStateManager && playerInfoStateManager.getUserId();
        },
        enumerable: true,
        configurable: true
      });
      gaUserInfo.prototype.setPending = function(amount) {
        amount = Math.max(0, amount);
        var changed = amount != this._pending;
        changed && (this._pending = Math.max(0, amount));
      };
      gaUserInfo.prototype.clearPending = function() {
        this.setPending(0);
        gaEventEmitter_1.default.instance.emit(gaEventsCode_1.default.USER.UPDATE_BALANCE, this.availableAmount);
      };
      return gaUserInfo;
    }();
    exports.default = gaUserInfo;
    cc._RF.pop();
  }, {
    "../Common/gaEventEmitter": "gaEventEmitter",
    "../Definitions/gaCommon": "gaCommon",
    "./gaEventsCode": "gaEventsCode"
  } ],
  gaUserUI: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "0d890TzY1VADYeaoF60ev7j", "gaUserUI");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaEventsCode_1 = require("../../Definitions/gaEventsCode");
    var gaDataStore_1 = require("../../Common/gaDataStore");
    var gaUtils_1 = require("../../Utilities/gaUtils");
    var gaComponent_1 = require("../gaComponent");
    var gaWallet_1 = require("./gaWallet");
    var gaAvatarProvider_1 = require("../../Common/gaAvatarProvider");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaUserUI = function(_super) {
      __extends(gaUserUI, _super);
      function gaUserUI() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.lblUserName = null;
        _this.spriteAvatar = null;
        _this.lblWallet = null;
        return _this;
      }
      gaUserUI.prototype.start = function() {
        this.updateUserData();
      };
      gaUserUI.prototype.initEvents = function() {
        _super.prototype.initEvents.call(this);
        this.register(gaEventsCode_1.default.USER.UPDATE_DATA, this.updateUserData);
        this.register(gaEventsCode_1.default.USER.UPDATE_BALANCE, this.setWalletAmount);
      };
      gaUserUI.prototype.updateUserData = function() {
        if (gaDataStore_1.default.instance.userInfo) {
          this.setUserName(gaDataStore_1.default.instance.userInfo.displayName);
          this.setWalletAmount(gaDataStore_1.default.instance.userInfo.availableAmount);
          this.setUserAvatar(gaDataStore_1.default.instance.userInfo.avatar);
        } else {
          this.setUserName("");
          this.setWalletAmount(0);
          this.setUserAvatar("");
        }
      };
      gaUserUI.prototype.setUserName = function(displayName) {
        this.lblUserName.string = gaUtils_1.default.formatUserName(displayName);
      };
      gaUserUI.prototype.setWalletAmount = function(amount) {
        null == amount && (amount = gaDataStore_1.default.instance.userInfo.availableAmount);
        this.lblWallet.updateWallet(amount);
      };
      gaUserUI.prototype.setUserAvatar = function(avatar) {
        gaAvatarProvider_1.default.instance.loadAvatarFrame(this.spriteAvatar, avatar);
      };
      __decorate([ property(cc.Label) ], gaUserUI.prototype, "lblUserName", void 0);
      __decorate([ property(cc.Sprite) ], gaUserUI.prototype, "spriteAvatar", void 0);
      __decorate([ property(gaWallet_1.default) ], gaUserUI.prototype, "lblWallet", void 0);
      gaUserUI = __decorate([ ccclass ], gaUserUI);
      return gaUserUI;
    }(gaComponent_1.default);
    exports.default = gaUserUI;
    cc._RF.pop();
  }, {
    "../../Common/gaAvatarProvider": "gaAvatarProvider",
    "../../Common/gaDataStore": "gaDataStore",
    "../../Definitions/gaEventsCode": "gaEventsCode",
    "../../Utilities/gaUtils": "gaUtils",
    "../gaComponent": "gaComponent",
    "./gaWallet": "gaWallet"
  } ],
  gaUtils: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "8eafc2I6GhK/529akat/89Z", "gaUtils");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = require("utils"), formatMoney = _a.formatMoney, formatWalletMoney = _a.formatWalletMoney;
    var lodash = require("lodash");
    var gaUtils = function() {
      function gaUtils() {}
      Object.defineProperty(gaUtils, "TIME_SCALE", {
        get: function() {
          return gaUtils._TIME_SCALE;
        },
        enumerable: true,
        configurable: true
      });
      gaUtils.setTimeScale = function(timeScale) {
        gaUtils._TIME_SCALE = timeScale;
        cc.director["calculateDeltaTime"] = function(now) {
          now || (now = performance.now());
          this._deltaTime = (now - this._lastUpdate) / 1e3;
          (true, this._deltaTime > 1) && (this._deltaTime = 1 / 60);
          this._deltaTime *= timeScale;
          this._lastUpdate = now;
        };
      };
      gaUtils.hitTest = function(node, loccation) {
        return node["_hitTest"](loccation);
      };
      gaUtils.changeParent = function(child, newParent) {
        if (newParent === child.parent) return;
        var worldPos = child.convertToWorldSpaceAR(cc.v2(0, 0));
        var newPos = newParent.convertToNodeSpaceAR(worldPos);
        child.parent = newParent;
        child.setPosition(newPos);
      };
      gaUtils.getWorldPos = function(node) {
        return node.convertToWorldSpaceAR(cc.v2(0, 0));
      };
      gaUtils.getLocalPos = function(container, worldPos) {
        return container.convertToNodeSpaceAR(worldPos);
      };
      gaUtils.updateSpineTime = function(spine, dt) {
        cc.sys.isNative ? spine["_updateRealtime"](dt) : spine["update"](dt);
      };
      gaUtils.getParam = function(url, key) {
        if (-1 != url.indexOf("&" + key + "=")) return url.split("&" + key + "=")[1].split("&")[0];
        if (-1 != url.indexOf("?" + key + "=")) return url.split("?" + key + "=")[1].split("&")[0];
        return null;
      };
      gaUtils.stopTweens = function(tweens) {
        if (tweens && Array.isArray(tweens)) {
          tweens.forEach(gaUtils.stopTween);
          tweens.length = 0;
        }
      };
      gaUtils.stopTween = function(tween) {
        tween && gaUtils.stopAllByTarget(tween["_target"]);
      };
      gaUtils.stopAllByTarget = function(_target) {
        cc.director.getActionManager().removeAllActionsFromTarget(_target, true);
      };
      gaUtils.setOpacity = function(node, value) {
        var opacity = node;
        opacity.opacity = value;
      };
      gaUtils.getLast = function(array) {
        if (!array || !array.length) return null;
        return array[array.length - 1];
      };
      gaUtils.getTimeString = function(timestamp) {
        var padStart = function(value) {
          return ("0" + value).slice(-2);
        };
        var date = new Date(Number(timestamp));
        var DD = padStart(date.getDate());
        var MM = padStart(date.getMonth() + 1);
        var hh = padStart(date.getHours());
        var mm = padStart(date.getMinutes());
        var ss = padStart(date.getSeconds());
        return DD + "/" + MM + " " + hh + ":" + mm + ":" + ss;
      };
      gaUtils.shortName = function(name, max) {
        if (name.length > max) return name.substring(0, max) + "...";
        return name;
      };
      gaUtils.secondsToHHMMSS = function(seconds, stringSeperate) {
        void 0 === stringSeperate && (stringSeperate = ":");
        if ("number" !== typeof seconds || isNaN(seconds) || seconds < 0) throw new Error("seconds must be a valid, positive number");
        if ("string" !== typeof stringSeperate) throw new Error("stringSeperate must be a valid string");
        var hours = Math.floor(seconds / 3600);
        var minutes = Math.floor(seconds / 60) % 60;
        var second = seconds % 60;
        return "" + hours + stringSeperate + ("0" + minutes).slice(-2) + stringSeperate + ("0" + second).slice(-2);
      };
      gaUtils.clamp = function(x, min, max) {
        return lodash.clamp(x, min, max);
      };
      gaUtils.getSum = function(array) {
        if (!array || !array.length) return 0;
        return lodash.sum(array);
      };
      gaUtils.flatten = function(arrays) {
        return lodash.flatten(arrays);
      };
      gaUtils.randomNumber = function(min, max) {
        return Math.random() * (max - min) + min;
      };
      gaUtils.randomInt = function(min, max) {
        return Math.floor(Math.random() * (max - min)) + min;
      };
      gaUtils.randomBoolean = function(trueRate) {
        void 0 === trueRate && (trueRate = .5);
        return Math.random() < trueRate;
      };
      gaUtils.randomFromArray = function(arr, excludedElement) {
        void 0 === excludedElement && (excludedElement = null);
        if (!arr || !arr.length) return null;
        if (null != excludedElement) {
          var eligibleElements = arr.filter(function(element) {
            return element !== excludedElement;
          });
          var randomIndex = Math.floor(Math.random() * eligibleElements.length);
          var randomElement = eligibleElements[randomIndex];
          return randomElement;
        }
        return arr[gaUtils.randomInt(0, arr.length)];
      };
      gaUtils.shuffleArray = function(array) {
        var _a;
        if (0 === array.length) return array;
        var shuffledArray = array.slice();
        for (var i = shuffledArray.length - 1; i > 0; i--) {
          var randomIndex = Math.floor(Math.random() * (i + 1));
          _a = [ shuffledArray[randomIndex], shuffledArray[i] ], shuffledArray[i] = _a[0], 
          shuffledArray[randomIndex] = _a[1];
        }
        return shuffledArray;
      };
      gaUtils.getDistance = function(p1, p2) {
        return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));
      };
      gaUtils.formatMoney = function(amount, decimalPlaces, decimal, thousands) {
        void 0 === decimalPlaces && (decimalPlaces = 0);
        void 0 === decimal && (decimal = ".");
        void 0 === thousands && (thousands = ",");
        return formatMoney(amount, decimalPlaces, decimal, thousands);
      };
      gaUtils.formatWallet = function(amount, decimalPlaces, trimZero) {
        void 0 === decimalPlaces && (decimalPlaces = 0);
        void 0 === trimZero && (trimZero = true);
        return formatWalletMoney(amount, decimalPlaces, trimZero);
      };
      gaUtils.formatUserName = function(userName, maxLength, replaceText) {
        void 0 === userName && (userName = "");
        void 0 === maxLength && (maxLength = 14);
        void 0 === replaceText && (replaceText = "...");
        if (userName.length <= maxLength) return userName;
        return userName.slice(0, maxLength - replaceText.length + 1) + replaceText;
      };
      gaUtils.mergeTwoObject = function(obj1, obj2, out) {
        out = out || {};
        return lodash.merge(out, obj1, obj2);
      };
      gaUtils.cloneDeep = function(obj) {
        return lodash.cloneDeep(obj);
      };
      gaUtils.destroyAllChildren = function(node) {
        if (!cc.isValid(node)) return;
        for (var index = node.children.length - 1; index >= 0; index--) {
          var element = node.children[index];
          if (cc.isValid(element)) {
            element.removeFromParent();
            element.destroy();
          }
        }
      };
      gaUtils.replaceObjectKeys = function(obj, config) {
        for (var key in obj) if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var element = obj[key];
          if (config[key]) {
            obj[config[key]] = element;
            delete obj[key];
            element = obj[config[key]];
          }
          element && "object" === typeof element && gaUtils.replaceObjectKeys(element, config);
          Array.isArray(element) && element.forEach(function(item) {
            "object" === typeof item && gaUtils.replaceObjectKeys(item, config);
          });
        }
        return obj;
      };
      gaUtils.formatCurrency = function(amount, decimalPlaces) {
        void 0 === decimalPlaces && (decimalPlaces = 0);
        var _a = gaUtils.formatNumberWithoutRounding(amount, decimalPlaces).split("."), integerPart = _a[0], _b = _a[1], fractionalPart = void 0 === _b ? "" : _b;
        var result = integerPart.replace(/\B(?=(\d{3})+(?!\d))/g, gaUtils.numberSeparator);
        fractionalPart && (result += gaUtils.digitSeparator + fractionalPart);
        return result;
      };
      gaUtils.formatNumberWithoutRounding = function(num, decimalPlaces) {
        var multiplier = Math.pow(10, decimalPlaces);
        return (Math.floor(num * multiplier) / multiplier).toString();
      };
      gaUtils.numberSeparator = ",";
      gaUtils.digitSeparator = ".";
      gaUtils._TIME_SCALE = 1;
      return gaUtils;
    }();
    exports.default = gaUtils;
    cc._RF.pop();
  }, {
    lodash: 157,
    utils: "utils"
  } ],
  gaVersion: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "74e10gmgSJJp5Z8lEFIQip1", "gaVersion");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaBaseConfig_1 = require("../Config/gaBaseConfig");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaVersion = function(_super) {
      __extends(gaVersion, _super);
      function gaVersion() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.versionText = null;
        return _this;
      }
      gaVersion.prototype.onLoad = function() {
        this.versionText.string = gaBaseConfig_1.default.gameVersion;
      };
      __decorate([ property(cc.Label) ], gaVersion.prototype, "versionText", void 0);
      gaVersion = __decorate([ ccclass ], gaVersion);
      return gaVersion;
    }(cc.Component);
    exports.default = gaVersion;
    cc._RF.pop();
  }, {
    "../Config/gaBaseConfig": "gaBaseConfig"
  } ],
  gaWallet: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "03ee8esHflMt5nMJtCdIgAL", "gaWallet");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaCurrencyCalculator_1 = require("../../Common/gaCurrencyCalculator");
    var gaLogger_1 = require("../../Utilities/gaLogger");
    var gaComponent_1 = require("../gaComponent");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var DEBUG_WALLET = false;
    var INCREASING_TIME = .3;
    var gaWallet = function(_super) {
      __extends(gaWallet, _super);
      function gaWallet() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.displayLabel = null;
        _this.isMe = false;
        _this._displayAmount = 0;
        _this._rewardAmount = 0;
        _this._targetAmount = 0;
        _this._totalAmount = 0;
        return _this;
      }
      gaWallet.prototype.update = function(dt) {
        if (this._displayAmount == this._targetAmount) return;
        this._displayAmount += this._incSpeed * dt;
        this._displayAmount > this._targetAmount && (this._displayAmount = this._targetAmount);
        this.updateDisplay();
      };
      gaWallet.prototype.forceUpdateWallet = function(amount) {
        this._displayAmount = amount;
        this._targetAmount = amount;
        this._rewardAmount = 0;
        this._incSpeed = 0;
        this._totalAmount = amount;
        this.updateDisplay();
      };
      gaWallet.prototype.updateWallet = function(amount) {
        this._targetAmount = gaCurrencyCalculator_1.default.instance.minusTwoNumber(amount, this._rewardAmount);
        this._displayAmount > this._targetAmount ? this._displayAmount = this._targetAmount : this._incSpeed = (this._targetAmount - this._displayAmount) / INCREASING_TIME;
        this._totalAmount = amount;
        this.updateDisplay();
      };
      gaWallet.prototype.addToDisplay = function(amount) {
        var remainAmount = gaCurrencyCalculator_1.default.instance.minusTwoNumber(this._rewardAmount, amount);
        remainAmount < 0 && gaLogger_1.default.warn("Reward Wallet Amount is negative!", remainAmount);
        this._rewardAmount = remainAmount;
        this._targetAmount = gaCurrencyCalculator_1.default.instance.plusTwoNumber(this._targetAmount, amount);
        this._targetAmount > this._totalAmount && (this._targetAmount = this._totalAmount);
        this._incSpeed = (this._targetAmount - this._displayAmount) / INCREASING_TIME;
        DEBUG_WALLET && gaLogger_1.default.warn("- addToDisplay   -" + gaCurrencyCalculator_1.default.instance.formatCurrency(amount) + " \t= " + gaCurrencyCalculator_1.default.instance.formatCurrency(this._rewardAmount));
      };
      gaWallet.prototype.addGoldReward = function(reward) {
        this._rewardAmount = gaCurrencyCalculator_1.default.instance.plusTwoNumber(this._rewardAmount, reward);
        DEBUG_WALLET && gaLogger_1.default.warn("+ addGoldReward  +" + gaCurrencyCalculator_1.default.instance.formatCurrency(reward) + " \t= " + gaCurrencyCalculator_1.default.instance.formatCurrency(this._rewardAmount));
      };
      gaWallet.prototype.updateDisplay = function() {
        this.displayLabel.string = gaCurrencyCalculator_1.default.instance.formatCurrency(this._displayAmount);
      };
      gaWallet.prototype.getDisplayWallet = function() {
        return this._targetAmount;
      };
      gaWallet.prototype.getRealWallet = function() {
        return this._totalAmount;
      };
      gaWallet.prototype.resetOnExit = function() {
        this.displayLabel.string = "";
      };
      __decorate([ property(cc.Label) ], gaWallet.prototype, "displayLabel", void 0);
      gaWallet = __decorate([ ccclass ], gaWallet);
      return gaWallet;
    }(gaComponent_1.default);
    exports.default = gaWallet;
    cc._RF.pop();
  }, {
    "../../Common/gaCurrencyCalculator": "gaCurrencyCalculator",
    "../../Utilities/gaLogger": "gaLogger",
    "../gaComponent": "gaComponent"
  } ],
  "game-network": [ function(require, module, exports) {
    (function(process, Buffer) {
      "use strict";
      cc._RF.push(module, "15bb6b3u0BPwpsZ+01J0/3f", "game-network");
      "use strict";
      var _typeof = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(obj) {
        return typeof obj;
      } : function(obj) {
        return obj && "function" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
      function a0_0x16c1(_0x3d52c0, _0x8c0072) {
        var _0xb0a77c = a0_0xb0a7();
        return a0_0x16c1 = function a0_0x16c1(_0x16c101, _0x1fffa8) {
          _0x16c101 -= 499;
          var _0x46cc7a = _0xb0a77c[_0x16c101];
          return _0x46cc7a;
        }, a0_0x16c1(_0x3d52c0, _0x8c0072);
      }
      function a0_0xb0a7() {
        var _0x4a3600 = [ "10265DTVyuZ", "onpong", "iframeId", "maybeReconnectOnOpen", "COMMAND_FAILED_CONC_OVER_LIMIT", "_handleSocketEvent", "regexp", "withCredentials", "maxLastLatency", "eio_iframe_", "updateCounter", "factor", "socket.io-parser", "transport close", "second", "SocketManager - force-disconnect >>> close connect!", "encodePacket", "decoder", "ontimeout", "*/*", "documentElement", "duration", "href", "availableAmount", "cleanUp", "handshake", "COMMAND_SEND_SUCCESSFULLY", "Accept", "upgradeError", ".*?", "xscheme", "pWallet", "match", "request", "#33CCFF", "connect attempt will timeout after %d", "emitAll", "shift", " is not a scalar value", "SocketManager", "msecs", "useColors", "updateSocketIds", "MessageManager - _handleSocketEvent.", "charAt", "maxRetry", "unSubscribe", "sendXhr", "emitter", "#33CC33", "code", "getWalletTypes", "includes", "logFn", "decodePacket", "ownKeys", "#9933FF", "SOCKET_RESPONSE_EVENT_V5_1", "listenerCount", "hasMainWalletType", "isReactNative", "sId", "wallet", "year", "user-logged-out", "attachEvent", "window", "xhr data %s", "status", "TextEncoder", "reset", "sec", "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx", "count", "DEBUG", "isFull", "#FF00FF", "head", "_reconnect", "getWalletByType", "doOpen", "removeChild", "CONNECTED_EVENT", "names", "once", "toLowerCase", "0000", "transport closed", "SocketManager - Pause interval sending message!", "games", "finishedReconstruction", "abort", "my wallet update: %j", "#CC3366", "transport is open - connecting", "player-can-not-connect", "PONG", "STATUS_KILLED", "headers", "application/octet-stream", "io server disconnect", "test", "EventManager - cannotConnect.", "can-not-connect", "SockerManager - emit event can-not-connect!", "removeBlobs", "SockerManager - health-check CONNECTED!", "dequeue", "multi", "&sv=", "addListener", "minute", "reduce", "version", "MozWebSocket", "PONG_EVENT", "calling ack %s with %j", "getTime", "MessageManager - Authen token: %s", "localAddress", 'socket close with reason: "%s"', "millisecond", "close (%s)", "engine.io-client:polling-xhr", "4016920kukGlC", "force new connection", "CAN_NOT_CONNECT", "remove", "will wait %dms before reconnect attempt", "#CC6600", "filterUpgrades", "ackPacket", "walletInfos", "isEmpty", "forceNode", "popup-disconnected-event", "#FFCC33", "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_", "#CC6633", "receiveBuffer", " ms", "closing", "_reconnect_attempt", "#FF3300", "enable", "numberRetrySendingMessage", "result", "#FF3366", "_pendingSubscribeChannelList", "%c ", "sid", "has", "setWalletBalance", "_routingEventHandler", "index", "create", "CHAT_MESSAGE_EVENT", "jsonp polling iframe removal error", "Updated token must not empty.", "Duplicate", "polling", "expected-event-timeout", "buildSocketUrlQueryParam", 'The "listener" argument must be of type Function. Received type ', "rejectUnauthorized", "_ackPacket", "CommandManager %s - clean up", "requestsCount", "SocketManager - send-message-success: %s", "val is not a non-empty string or a valid number. val=", "probe error", "#0000CC", "addEventListeners", "logFnError", "_serverSocketVersion", "SOCKET_RESPONSE_EVENT", "getOwnPropertyNames", "_encrypt_5_2", "wallet-service-id", "closed", "user", "_isSkipMapNewEvent", "initSocket", "server", "main", "Content-type", "svt", "pollComplete", "splice", "readyState %s", "multiplex", "pause", "onreconnect", "chat-emit", "reconnect_attempt", "encoding", "send-message-success", "forceJSONP", "generateId", "getOwnPropertySymbols", "then", "_close", "SOCKET_REQUEST_EVENT_V4", "round", "delete", "random", "localhost", "prev", "pingInterval", '"%s" works - aborting "%s"', "SocketManagerNewMessage: CANNOT parse message: %s, keyAB: %j", "EventManager - connected.", "#FF3333", "pingTimeoutTimer", "SocketManager - chat-event: %j", "_waitForEventTimeOutId", "byteLength", "prependListener", "doPoll", "setWalletBalanceV22", "resolve", "reconstructPacket", "[object FileConstructor]", "CommandManager %s - COMMAND_FAILED_DUPLICATE. Executing type: %j", "getAvatar", "63pyqbPo", "autoConnect", "socket.io-client:url", "subscribe", "getSSID", "color: inherit", "hostname", "443", "_eventHandlerMap", "https", "writing packet %j", "_commandIdFieldName", "toString", "newListener", "q51", "defineProperty", "No transports available", "decode", "yrs", "writable", "substring", "writing close packet", "instance", "map", "drain", "ciphers", "unregisterEvent", "log", "ACK", "ServiceRest", "pausing", "domwindow", "promotion", "#00CCFF", "sendChatMessage", "upgrades", "___eio", "form", "requestTimeout", "getMaxListeners", "method", "setAvatar", "reject", "1756GNkPTz", "WebSocket", "attaching ack callback to event", "userAgent", "_getPacketType", "option", "POST", "MessageManager", "_encrypt_5_2 CANNOT encrypt: %s", "setUserId", "CommandManager %s - cannotSendMessage: messageId=%s", "keys", "parser", "_reject", "Authen token fail: %j", "https:", "onmessage", "sending connect packet with query %s", "#33CC99", "xhr", "reconnecting", "number", "emitting packet with ack id %d", "listener", "callback", "chat-message", "queue", "readyState", "sendBuffer", "transport", "sendPacket", "#CC9900", "removeItem", "packetCreate", "Active", "EventEmitter", "colors", "lib", "_data", "append", "url", "Transport", "push", "encodePayloadAsBlob", "#3366FF", "client-join-game-result", "_callbacks", "onSuccess", "host", "Deferred", "area", "createElement", "ignoring socket cache for %s", "_reconnectionDelayMax", "entries", "Decoder", "mismatch-version", "#6633CC", "transport error", "clearing existing transport %s", "packetBuffer", "#99CC33", "urlVerifyToken", "upgrade", "-1000px", "byteOffset", "env", "directory", "#6600FF", "relative", "msec", "SOCKET_REQUEST_EVENT", "sendChatMessage: _socketManager was not setup.", "coerce", "Connect without login due to missing serviceRest", "boolean", "skipReconnect", "probe", "#FFCC00", "undefined", "reconnect failed", "transports", "unload", "Authen token success: %j", "ids", "send", "responseText", "_socket", "starting upgrade probes", "token", "function", "Ignore due to config is exist.", "src", "flags", "MessageManager - _initSocket.", "_emitter", "logFnWarn", "firebug", "SockerManager - reconnect_error in ", "parse", "encoding packet %j", "onPacket", "parentNode", "onpacket", "#3300CC", "save", "get", "Authen token error", "_maxListeners", "_executingCommandType", "#FF0033", "writeBuffer", "Unknown type: ", "compress", "_cachedMessage", "#CC33CC", "getCurrency", "#CC3399", "forceBase64", "namespace", " %c", "diff", "#3399CC", "reconnect success", "player-can-not-authen", "#9933CC", "registerGame", "CAN_NOT_CONNECT_EVENT", "rememberUpgrade", "parser error: ", "listeners", "CommandManager %s - sendMessage messageId=%s, commandId=%s", "poor-connection", "binaryType", "CONNECT", "heartbeat", "return this", "#66CC00", "connect_error", "product", "local", '"encode error"', "counter", "socketUrl", "xhr poll", "_handleReponseMessage", "hasListeners", "onerror", "MessageManager - _handleSocketEvent with null _socketManager", "commandPayload", "load", "new io instance for %s", "slice", "warn", "#FF0066", "storage", "passphrase", "decodeBase64Packet", "_timeout", "q52", "Invalid continuation byte", "3434910UNlwlv", "unshift", "doWrite", "encodePayloadAsArrayBuffer", "defaultMaxListeners", "PacketManager", "SocketManagerNewMessage: %s", "_eventManager", "onping", "encodePayload", "charCodeAt", "CAN_NOT_SEND_MESSAGE_EVENT", "nodebuffer", "onNetworkWarning", "copy", "Illegal attachments", "eid", "blob", "POPUP_DISCONNECTED_EVENT", "object", "date", 'socket receive: type "%s", data "%s"', "[UnexpectedJSONParseError]: ", "poll", "open", "playerStateInfo", "takeBinaryData", "socket.io-client", "insertBefore", "async", "isAbleSendingData", "CommandManager %s - executeCommand: %j", "queueContents", "encoder", "CONNECTED", "emitBuffered", "removeEventListener", "_handleSocketStatus", "onNetworkStatus", "_packetManager", "split", "GET", "body", "MessageManager - _handleSocketStatus with null _socketManager", "_status", "randomizationFactor", "reconnect_failed", "getDisplayName", "pAmt", "getResponseHeader", "concat", "forEach", "priorWebsocketSuccess", "onack", "timeout", "changing transport and sending upgrade packet", "#0000FF", "SEND_MESSAGE_SUCCESS_EVENT", "onCannotAuthen", "submit", "createTransport", "decoded %s as %j", "flushing %d packets in socket", "addEventListener", "cleanup", "flush", "hasOwnProperty", "#0033CC", "setDisableHeaderCheck", "getWalletBalance", "_config", "UPDATE_TOKEN", "emit", "removeListener", "subs", "ssid", "transportOptions", "codePointAt", "onClose", "onPong", "_subscribeChannelList", "uid", "websocket", "1406321wLKQDE", "#FF3399", "onload", "requests", "anchor", "#CC00FF", 'probing transport "%s"', "apply", "key", "instances", "exports", "hash", "_events", "_initNewConnection", "http", "/engine.io", "resendCount", "io client disconnect", "://", "setDisplayName", "listLastLatency", "doLogin", "max", "disconnected", "wallet-updated", "onAck", "getUserId", "isBinary", "NEW_MESSAGE_EVENT", "Lone surrogate U+", "pAvaiAmt", "target", "getPrototypeOf", "engine.io-client:socket", "SOCKET_RESPONSE_EVENT_V5_2", "_buildPacket", "CommandManager %s - ack: messageId=%s", "hasPacket", "message-pushed", "event", "onopen", "onclose", "onlyBinaryUpgrades", "types", "_countPingOverTime", "amount", "absolute", "setMax", "bind() requires a function", "_reconnection", "decoded", "timestampParam", "fromCodePoint", "CommandManager %s - COMMAND_FAILED_CONC_OVER_LIMIT. current : %s, maximum: %s", "threshold", "reconnectionDelayMax", "uri", "can-not-send-message", 'probe transport "%s" opened', "updateToken", "#CC0033", "11404256asjTlD", "EIO", "destroy", "SocketManager - sendChatMessage: %j", "humanize", "_keyAB", "onevent", "removeSendingMessage", "call", "long", "ping timeout", "we are currently writing - waiting to pause", "unregisterGame", "abcd", "[object BlobConstructor]", "/socket.io", "wallet-type", "_placeholder", "#3333FF", "bind", "addNew", "hashMap", "exec", "callbackErr", "encodeQueryData", "nsp", "invalid payload", "onHeartbeat", "#00CCCC", "strict", "Content-Type", "nextTickIn", "#9900FF", "_encrypt_5_1", "_sendPacket", "application/octet-stream; charset=UTF-8", "off", "color", "server disconnect (%s)", "state-updated", "force-disconnect", "#0066FF", "stringify", "CommandManager", "day", "clearAll", "client-state-request", "DISCONNECT", "#CC3333", "2.1.2", "source", "num", "arraybuffer", "MessageManager - sendMessage: %s - %j", "decodePayloadAsBinary", "wrapFn", "exception", "backoff", "style", "xhr poll error", "enqueue", "data", "attachments", "Encoder", "_stopIntervalExtendToken", "all", "device", "debug", "Unhandled error.", "size", "timestampRequests", "jitter", "uuid", "floor", "_sId", "textarea", "chat-event", "onConnected", "wss", "reconnectionDelay", "path", "engine.io-client:polling", "packets", "TextDecoder", "#0066CC", "#0033FF", "we are currently polling - waiting to pause", "socket-info", "state-pushed", "ERROR", "error", "setMin", "ping", 'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ', "unknown packet type ", "hrs", "#CC0066", "avatar", "updateKeyAB", "script", "#FF6633", "pVer", "iteratePacket", "Queue is empty", "userId", "my wallet CANNOT update promotion wallet. current version [%s], new version [%s], wallet: %j", "Invalid UTF-8 detected", "write", 'probe transport "%s" failed', "#33CC66", "_opt", "socket error %j", "policyPort", "performing disconnect (%s)", "exists", "maxSize", "onLoad", "reconnectionAttempts", "onHandshake", "pfx", "onreadystatechange", "reconnection", "isFullfill", "setPing", "agent", "pingTimeoutWarning", "pong - latency: %s, avarage latency: %s", "upgrading", "toUpperCase", "exTkn", "reconnect_error", "transport open - closing", "SOCKET_REQUEST_EVENT_V5_2", "onCannotSendMessage", "walletType", "substr", "currentLatencyIdx", "fromCharCode", "utf-8", "EventManager - newEvent: %j", "post", "__importDefault", "doClose", "closeAndCleanUp", "defaultOption", "array", "prevBufferLen", "messageId", "update-token", "MessageManager - _handleSocketStatus.", "xhr open %s: %s", "close", "_hmuid_", "SocketManager - send message: counter=%s, messageId=%s", "beforeunload", "#33CC00", "nsps", "got binary data when not reconstructing a packet", "SocketManager - Add message to queue: %j", "sending ack %j", "Possible EventEmitter memory leak detected. ", "onShowPopupDisconnected", "_duplicateEventId", "hour", "init", "displayName", "serviceId", "string", "eventNames", "skips", "pollXhr", "protocol", "top", "min", "pre-pause writing complete", "value", "websocket error", "base64", "days", "getWallets", "prependOnceListener", "type", "TransportError", "EVENT", "peek", "console", "getInstance", "from", "CommandManager %s - COMMAND_FAILED_RETRY: messageId=%s, numberResend=%s", "removeAllListeners", "walletVersion", "accept-charset", "_commandHandlerMap", "clearRemainingCommand", "registerEvent", "DISCONNECTED_CONNECTION", "userInfo", "encode", "shouldWaitForACK", "22086UZOYzG", "setWalletInfos", "error-pushed", "fired", "_initSocket", "STATUS_INIT", "MessageManager - sendChatMessage: %j", "getPromise", "#CC0000", 'The value of "n" is out of range. It must be a non-negative number. Received ', 'creating transport "%s"', "#CCCC00", "opts", "_validateDublicateCommandType", "pingTimeout", "getBlob", "COMMAND_FAILED_RETRY", "name", "xhr post error", "setCurrency", "managers", "password", "_socketManager", "default", "paused", "formatArgs", "deconstructPacket", "#6633FF", "forced close", "jsonp poll error", "executeCommand", "xdomain", "ondisconnect", "pow", "?token=", "cert", "perMessageDeflate", "prototype", "_intervalExtendToken", "iframe", "averageLatency", "reconstructor", "pingIntervalTimer", "SocketManager - CAN_NOT_SEND_MESSAGE_EVENT : %s.", "Login error. Clean up.", "385CgQkfx", "getToken", "complete", "ondata", "EventManager", "buffers", "portal", "renderer", "socketio", "Microsoft.XMLHTTP", "encoded %j as %s", "ondecoded", "mins", "insert", "toJSON", "onError", "decodePayload", "updateLogger", "_latency", "warned", "SOCKET_REQUEST_EVENT_V5_1", "authority", "getAllWallet", "reconnect", "connecting", "BINARY_ACK", "_handleConnectionStatus", "enablesXDR", "disconnect", "#00CC00", "jsonp", "binary", "add", "promise", "serviceRest", "pong", "isBuffer", "isDebugging", "table", "after called too many times", "getElementsByTagName", "currency", "#00CC66", "socket.io-client:manager", "processPacketQueue", "presence", "POOR_CONNECTION", "iterator", "SOCKET_REQUEST_EVENT_V3", "server error", "protocols", "_reconnectionAttempts", "reconPack", "MaxListenersExceededWarning", "attempts", "EventManager - clean up.", "join", "#CC3300", "PlayerInfoStateManager", "#FF6600", "onData", "extraHeaders", "buffer", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", "__esModule", "mismatch-command", "supports", "sendMessage", "Socket", "text/plain;charset=UTF-8", "message", "[object Array]", "#FF00CC", "forceNew", "responseType", "position", "#3333CC", "isView", "readAsArrayBuffer", "setRequestHeader", "_eventsCount", "localStorage", "disconnected-connection", "socket closed", "secure", "removeEvent", "CommandManager %s - resendMessage: messageId=%s, resendMessageId=%s, numberResend=%s, resendCount=%s", "disable", "success", "isArray", "pop", "onOpen", "_ids", "_messageIdInfosMap", "Logger", "onCannotConnect", "RoutingEvent", "onconnect", "acks", "connect attempt timed out after %d", "encodeBase64Packet", "killed", "onpagehide", "set", "clear", "#9900CC", "network", "#0099CC", "pre-pause polling complete", "enabled", "opening", "minutes", "commandId", "replace", "_messageIdServiceIdMap", "appendChild", "port", "BINARY_EVENT", "SocketManager - Init new connection!!!", "indexOf", "setTransport", "#33CCCC", "removeWaitingQueue", "Request", "setWalletTypes", "packet", "636996uJPRRv", "pathNames", "_registerSystemState", "MessageManager - closeAndCleanUp.", "onDrain", "application/x-www-form-urlencoded", "rawListeners", " times. ", "Queue", "supportsBinary", "engine.io-client:websocket", "COMMAND_FAILED_DUPLICATE", "_randomizationFactor", "connect", "#0099FF", "EventManager - newEvent: data is null.", "setJitter", "_resolve", "socket", "hasXDR", "left", "options", "length", "lastPing", "SocketManager - DISCONNECTED.", "MISMATCH_DATA_VERSION", "connected", "customEventMapping", "maxConcurrentCommand", "onEvent", "engine", "_subscribe", "_unSubscribe", "_startIntervalExtendToken", "_duplicateMessageId", "#3366CC", "ipv6uri", "EventManager - newEvent: duplicate eventId %s", "query", "?v=2", "attempting reconnect", "hours", "transport not open - deferring close", "setToken", "usingBrowserWebSocket" ];
        a0_0xb0a7 = function a0_0xb0a7() {
          return _0x4a3600;
        };
        return a0_0xb0a7();
      }
      (function(_0x55f1e3, _0x511efc) {
        var _0x240598 = a0_0x16c1, _0x4bd5a4 = _0x55f1e3();
        while (!![]) try {
          var _0xd401e9 = parseInt(_0x240598(800)) / 1 + parseInt(_0x240598(1231)) / 2 + -parseInt(_0x240598(717)) / 3 + parseInt(_0x240598(556)) / 4 * (-parseInt(_0x240598(1276)) / 5) + parseInt(_0x240598(1060)) / 6 * (-parseInt(_0x240598(1105)) / 7) + -parseInt(_0x240598(861)) / 8 + -parseInt(_0x240598(513)) / 9 * (-parseInt(_0x240598(1400)) / 10);
          if (_0xd401e9 === _0x511efc) break;
          _0x4bd5a4["push"](_0x4bd5a4["shift"]());
        } catch (_0x1e9d02) {
          _0x4bd5a4["push"](_0x4bd5a4["shift"]());
        }
      })(a0_0xb0a7, 862439), !function() {
        var _0x13337f = a0_0x16c1, _0x4bb5fa = {
          5442: function _(_0x425b76, _0xdbd7af, _0x2662c6) {
            var _0x46547b = a0_0x16c1;
            var _0x325907 = this && this[_0x46547b(1002)] || function(_0x255b64) {
              var _0x5c1100 = _0x46547b;
              return _0x255b64 && _0x255b64[_0x5c1100(1169)] ? _0x255b64 : {
                default: _0x255b64
              };
            };
            Object[_0x46547b(528)](_0xdbd7af, _0x46547b(1169), {
              value: !0
            }), _0xdbd7af["Duplicate"] = void 0;
            var _0x2f844e = _0x2662c6(5084), _0x5b5341 = _0x325907(_0x2662c6(650)), _0x470855 = function() {
              var _0x4b1549 = _0x46547b;
              function _0x3bdc57(_0xbf0b90) {
                var _0x2a307b = a0_0x16c1;
                void 0 === _0xbf0b90 && (_0xbf0b90 = 1e3), this[_0x2a307b(976)] = 1e3, this["maxSize"] = _0xbf0b90, 
                this[_0x2a307b(582)] = new _0x2f844e["Queue"](_0xbf0b90), this[_0x2a307b(882)] = new (_0x5b5341[_0x2a307b(1083)])();
              }
              return _0x3bdc57[_0x4b1549(1097)][_0x4b1549(1118)] = function(_0x4c762e) {
                var _0x560cd1 = _0x4b1549;
                this[_0x560cd1(582)][_0x560cd1(930)]() >= this[_0x560cd1(976)] && this[_0x560cd1(882)]["delete"](this[_0x560cd1(582)]["dequeue"]()), 
                this["queue"][_0x560cd1(921)](_0x4c762e), this[_0x560cd1(882)][_0x560cd1(1208)](_0x4c762e, !0);
              }, _0x3bdc57[_0x4b1549(1097)][_0x4b1549(975)] = function(_0x3875d0) {
                var _0x58af13 = _0x4b1549;
                return this[_0x58af13(882)][_0x58af13(1427)](_0x3875d0);
              }, _0x3bdc57["prototype"]["clearAll"] = function() {
                var _0x225d8c = _0x4b1549;
                this[_0x225d8c(582)]["clear"](), this[_0x225d8c(882)]["clear"]();
              }, _0x3bdc57;
            }();
            _0xdbd7af[_0x46547b(1435)] = _0x470855;
          },
          5084: function _(_0x24dee1, _0x449551) {
            var _0x4feb6e = a0_0x16c1;
            Object[_0x4feb6e(528)](_0x449551, _0x4feb6e(1169), {
              value: !0
            }), _0x449551[_0x4feb6e(1239)] = void 0;
            var _0x218f5b = function() {
              var _0x43b161 = _0x4feb6e;
              function _0x495c0b(_0x422480) {
                var _0x2af4ba = a0_0x16c1;
                this[_0x2af4ba(976)] = _0x422480 > 0 ? _0x422480 : 10, this["length"] = 0, this["queue"] = new Array(this["maxSize"]);
              }
              return _0x495c0b[_0x43b161(1097)][_0x43b161(1409)] = function() {
                var _0x32303d = _0x43b161;
                return 0 === this[_0x32303d(1253)];
              }, _0x495c0b[_0x43b161(1097)][_0x43b161(1351)] = function() {
                var _0x6fea0 = _0x43b161;
                return this[_0x6fea0(1253)] === this[_0x6fea0(976)];
              }, _0x495c0b["prototype"][_0x43b161(921)] = function(_0x3ea1c9) {
                var _0x578f4f = _0x43b161;
                if (this[_0x578f4f(1351)]()) throw new Error("Queue overflow");
                this[_0x578f4f(582)][this["length"]++] = _0x3ea1c9;
              }, _0x495c0b["prototype"][_0x43b161(1383)] = function() {
                var _0x281f62 = _0x43b161;
                if (this["isEmpty"]()) throw new Error("Queue underflow");
                for (var _0x1bad64 = this[_0x281f62(582)][0], _0x22985d = 0; _0x22985d < this["length"]; _0x22985d++) this[_0x281f62(582)][_0x22985d] = this[_0x281f62(582)][_0x22985d + 1];
                return this["length"]--, _0x1bad64;
              }, _0x495c0b[_0x43b161(1097)][_0x43b161(1045)] = function() {
                var _0x2b6276 = _0x43b161;
                if (this[_0x2b6276(1409)]()) throw new Error(_0x2b6276(964));
                return this[_0x2b6276(582)][0];
              }, _0x495c0b[_0x43b161(1097)]["clear"] = function() {
                var _0x2e9e26 = _0x43b161;
                this[_0x2e9e26(1253)] = 0, this[_0x2e9e26(582)] = new Array(this[_0x2e9e26(976)]);
              }, _0x495c0b["prototype"][_0x43b161(930)] = function() {
                var _0x37477c = _0x43b161;
                return this[_0x37477c(1253)];
              }, _0x495c0b["prototype"][_0x43b161(749)] = function() {
                var _0x1c566e = _0x43b161;
                for (var _0x173120 = 0; _0x173120 < this[_0x1c566e(1253)]; ++_0x173120) ;
              }, _0x495c0b;
            }();
            _0x449551["Queue"] = _0x218f5b;
          },
          2886: function _(_0x563428, _0x20f5a6) {
            var _0xc6b693 = a0_0x16c1;
            Object[_0xc6b693(528)](_0x20f5a6, _0xc6b693(1169), {
              value: !0
            }), _0x20f5a6[_0xc6b693(605)] = void 0;
            var _0x54aa51 = function() {
              var _0x1f4729 = _0xc6b693;
              function _0x30d504() {
                var _0x3a0001 = a0_0x16c1, _0x995586 = this;
                this["_resolve"] = function() {}, this[_0x3a0001(569)] = function() {}, this[_0x3a0001(983)] = !1, 
                this[_0x3a0001(1138)] = new Promise(function(_0xa482d, _0x49c37f) {
                  var _0x2be050 = _0x3a0001;
                  _0x995586["_resolve"] = _0xa482d, _0x995586[_0x2be050(569)] = _0x49c37f;
                });
              }
              return _0x30d504[_0x1f4729(1097)][_0x1f4729(508)] = function(_0x53aa23) {
                var _0x14706d = _0x1f4729;
                this[_0x14706d(1248)](_0x53aa23), this[_0x14706d(983)] = !0;
              }, _0x30d504[_0x1f4729(1097)][_0x1f4729(555)] = function(_0x5d480b, _0x366f27) {
                var _0x46dfdd = _0x1f4729;
                this[_0x46dfdd(569)](_0x5d480b, _0x366f27), this["isFullfill"] = !0;
              }, _0x30d504["prototype"][_0x1f4729(1067)] = function() {
                var _0x4449d3 = _0x1f4729;
                return this[_0x4449d3(1138)];
              }, _0x30d504[_0x1f4729(1097)]["isPromiseFullfill"] = function() {
                var _0x39bd27 = _0x1f4729;
                return this[_0x39bd27(983)];
              }, _0x30d504;
            }();
            _0x20f5a6[_0xc6b693(605)] = _0x54aa51;
          },
          880: function _(_0x5ee56e, _0x32c394, _0x50a278) {
            var _0x40c683 = a0_0x16c1;
            var _0x43dd1b = this && this[_0x40c683(1002)] || function(_0x1eec5a) {
              return _0x1eec5a && _0x1eec5a["__esModule"] ? _0x1eec5a : {
                default: _0x1eec5a
              };
            };
            Object[_0x40c683(528)](_0x32c394, _0x40c683(1169), {
              value: !0
            }), _0x32c394[_0x40c683(542)] = _0x32c394[_0x40c683(1315)] = _0x32c394["EventManager"] = _0x32c394["CommandManager"] = _0x32c394[_0x40c683(563)] = _0x32c394[_0x40c683(1163)] = _0x32c394[_0x40c683(605)] = _0x32c394[_0x40c683(1211)] = _0x32c394[_0x40c683(593)] = void 0;
            var _0x4c68ff = _0x43dd1b(_0x50a278(650)), _0x26c1cc = _0x50a278(6809), _0x58d7e1 = _0x50a278(1880), _0x17eb58 = _0x43dd1b(_0x50a278(2025)), _0x7045b = _0x50a278(2886);
            Object[_0x40c683(528)](_0x32c394, _0x40c683(605), {
              enumerable: !0,
              get: function get() {
                var _0x4be39d = _0x40c683;
                return _0x7045b[_0x4be39d(605)];
              }
            });
            var _0x1b1e80 = _0x50a278(5425);
            Object[_0x40c683(528)](_0x32c394, "PlayerInfoStateManager", {
              enumerable: !0,
              get: function get() {
                var _0x48be5f = _0x40c683;
                return _0x1b1e80[_0x48be5f(1163)];
              }
            });
            var _0xbaa6fb = _0x50a278(6590);
            Object[_0x40c683(528)](_0x32c394, "MessageManager", {
              enumerable: !0,
              get: function get() {
                var _0x2d684c = _0x40c683;
                return _0xbaa6fb[_0x2d684c(563)];
              }
            });
            var _0x1f4092 = _0x50a278(1264);
            Object[_0x40c683(528)](_0x32c394, "CommandManager", {
              enumerable: !0,
              get: function get() {
                var _0x1235b4 = _0x40c683;
                return _0x1f4092[_0x1235b4(904)];
              }
            });
            var _0x448d2a = _0x50a278(6);
            Object[_0x40c683(528)](_0x32c394, "EventManager", {
              enumerable: !0,
              get: function get() {
                var _0x441ad3 = _0x40c683;
                return _0x448d2a[_0x441ad3(1109)];
              }
            });
            var _0xcad8e7 = _0x50a278(7567);
            Object[_0x40c683(528)](_0x32c394, _0x40c683(1315), {
              enumerable: !0,
              get: function get() {
                var _0x4cc544 = _0x40c683;
                return _0xcad8e7[_0x4cc544(1315)];
              }
            });
            var _0x3899c5 = _0x50a278(5400);
            Object[_0x40c683(528)](_0x32c394, _0x40c683(542), {
              enumerable: !0,
              get: function get() {
                var _0xe520f7 = _0x40c683;
                return _0x3899c5[_0xe520f7(542)];
              }
            }), _0x32c394["lib"] = {
              hashmap: _0x4c68ff[_0x40c683(1083)],
              io: _0x26c1cc,
              logger: _0x17eb58[_0x40c683(1083)],
              uuid: _0x58d7e1[_0x40c683(933)]
            }, _0x32c394[_0x40c683(1211)] = {
              Deferred: _0x7045b[_0x40c683(605)],
              PlayerInfoStateManager: _0x1b1e80[_0x40c683(1163)],
              MessageManager: _0xbaa6fb[_0x40c683(563)],
              CommandManager: _0x1f4092[_0x40c683(904)],
              EventManager: _0x448d2a[_0x40c683(1109)],
              SocketManager: _0xcad8e7[_0x40c683(1315)],
              ServiceRest: _0x3899c5[_0x40c683(542)]
            };
          },
          1264: function _(_0x2d2dfb, _0x2ad60a, _0x9c6f60) {
            var _0x17b7cf = a0_0x16c1;
            var _0x245eed = this && this[_0x17b7cf(1002)] || function(_0x170bc4) {
              var _0x6404ba = _0x17b7cf;
              return _0x170bc4 && _0x170bc4[_0x6404ba(1169)] ? _0x170bc4 : {
                default: _0x170bc4
              };
            };
            Object["defineProperty"](_0x2ad60a, _0x17b7cf(1169), {
              value: !0
            }), _0x2ad60a[_0x17b7cf(904)] = void 0;
            var _0x2e7dec = _0x9c6f60(6590), _0x2c2388 = _0x9c6f60(1880), _0x2b0d95 = _0x245eed(_0x9c6f60(2025)), _0x31e1b5 = _0x245eed(_0x9c6f60(7187)), _0x1e2a98 = _0x245eed(_0x9c6f60(650)), _0x5ded79 = function() {
              var _0x5f1147 = _0x17b7cf;
              function _0x12f36e(_0x283c9f, _0x581a39, _0x430bef) {
                var _0x329f75 = a0_0x16c1;
                void 0 === _0x430bef && (_0x430bef = _0x329f75(1217)), this[_0x329f75(1027)] = _0x283c9f, 
                this[_0x329f75(1259)] = _0x581a39 || 1, this["_commandIdFieldName"] = _0x430bef, 
                this[_0x329f75(651)] = new _0x31e1b5["default"](), this[_0x329f75(665)] = new (_0x1e2a98[_0x329f75(1083)])(), 
                this[_0x329f75(1198)] = new (_0x1e2a98[_0x329f75(1083)])();
              }
              return _0x12f36e[_0x5f1147(1097)][_0x5f1147(1055)] = function(_0x2f16c0, _0x18c6cd) {
                var _0x8481b1 = _0x5f1147;
                this[_0x8481b1(651)]["on"](_0x2f16c0, _0x18c6cd);
              }, _0x12f36e[_0x5f1147(1097)]["registerOnce"] = function(_0x39302d, _0x27adef) {
                var _0x4f52fa = _0x5f1147;
                this[_0x4f52fa(651)][_0x4f52fa(1360)](_0x39302d, _0x27adef);
              }, _0x12f36e[_0x5f1147(1097)]["subscribe"] = function(_0x5c9d8c) {
                var _0xce41b = _0x5f1147;
                _0x2e7dec["MessageManager"][_0xce41b(1047)]()[_0xce41b(516)](_0x5c9d8c);
              }, _0x12f36e["prototype"][_0x5f1147(1322)] = function(_0x5210fc) {
                var _0x275f41 = _0x5f1147;
                _0x2e7dec[_0x275f41(563)]["getInstance"]()[_0x275f41(1322)](_0x5210fc);
              }, _0x12f36e[_0x5f1147(1097)][_0x5f1147(1090)] = function(_0x53ba09, _0x263593) {
                var _0x451fe9 = _0x5f1147;
                _0x2b0d95[_0x451fe9(1083)][_0x451fe9(928)](_0x451fe9(748), this["serviceId"], [ _0x53ba09, _0x263593 ]);
                var _0x2d84e1 = this[_0x451fe9(665)][_0x451fe9(1349)]();
                if (!this[_0x451fe9(1073)](_0x53ba09, _0x263593)) return _0x2b0d95["default"][_0x451fe9(951)](_0x451fe9(511), this[_0x451fe9(1027)], this[_0x451fe9(665)]["keys"]()), 
                _0x12f36e[_0x451fe9(1242)];
                if (_0x2d84e1 >= this[_0x451fe9(1259)] && !this[_0x451fe9(665)][_0x451fe9(1427)](_0x53ba09["event"])) return _0x2b0d95[_0x451fe9(1083)][_0x451fe9(951)](_0x451fe9(853), this[_0x451fe9(1027)], _0x2d84e1, this["maxConcurrentCommand"]), 
                _0x12f36e[_0x451fe9(1280)];
                var _0x801a06 = (0, _0x2c2388[_0x451fe9(933)])();
                _0x53ba09[_0x451fe9(922)][this[_0x451fe9(524)]] = _0x801a06;
                var _0x27a48f = _0x2e7dec[_0x451fe9(563)]["getInstance"]()[_0x451fe9(1172)](this[_0x451fe9(1027)], _0x53ba09);
                return _0x263593[_0x451fe9(1059)] && (this[_0x451fe9(665)][_0x451fe9(1208)](_0x53ba09[_0x451fe9(839)], !0), 
                this[_0x451fe9(1198)][_0x451fe9(1208)](_0x27a48f, {
                  commandId: _0x801a06,
                  resendCount: _0x263593[_0x451fe9(816)],
                  commandPayload: _0x53ba09,
                  numberResend: 0
                })), _0x2b0d95[_0x451fe9(1083)][_0x451fe9(928)](_0x451fe9(687), this["serviceId"], _0x27a48f, _0x801a06), 
                _0x801a06;
              }, _0x12f36e[_0x5f1147(1097)][_0x5f1147(1054)] = function() {
                var _0x25df70 = _0x5f1147;
                this[_0x25df70(665)][_0x25df70(1209)](), _0x2e7dec["MessageManager"][_0x25df70(1047)]()[_0x25df70(868)](this[_0x25df70(1198)][_0x25df70(567)]()), 
                this[_0x25df70(1198)][_0x25df70(1209)]();
              }, _0x12f36e[_0x5f1147(1097)]["removeAllEventListeners"] = function() {
                var _0x2f29ef = _0x5f1147;
                this[_0x2f29ef(651)]["removeAllListeners"]();
              }, _0x12f36e["prototype"]["cleanUp"] = function() {
                var _0x1bfc5b = _0x5f1147;
                _0x2b0d95[_0x1bfc5b(1083)][_0x1bfc5b(928)](_0x1bfc5b(1442), this[_0x1bfc5b(1027)]), 
                this[_0x1bfc5b(651)][_0x1bfc5b(1050)](), this[_0x1bfc5b(1054)]();
              }, _0x12f36e[_0x5f1147(1097)][_0x5f1147(825)] = function(_0x10c1f4) {
                var _0x844eec = _0x5f1147;
                if (_0x2b0d95[_0x844eec(1083)][_0x844eec(928)](_0x844eec(836), this[_0x844eec(1027)], _0x10c1f4), 
                this[_0x844eec(1198)][_0x844eec(1427)](_0x10c1f4)) {
                  var _0x444630 = this[_0x844eec(1198)][_0x844eec(662)](_0x10c1f4)[_0x844eec(705)];
                  this[_0x844eec(1198)]["delete"](_0x10c1f4), this["_executingCommandType"][_0x844eec(1480)](_0x444630[_0x844eec(839)]), 
                  this["_emitter"][_0x844eec(789)](_0x12f36e[_0x844eec(1302)], _0x444630);
                }
              }, _0x12f36e["prototype"][_0x5f1147(994)] = function(_0x5b2896) {
                var _0x8abaea = _0x5f1147;
                if (_0x2b0d95[_0x8abaea(1083)][_0x8abaea(928)](_0x8abaea(566), this[_0x8abaea(1027)], _0x5b2896), 
                this["_messageIdInfosMap"][_0x8abaea(1427)](_0x5b2896)) {
                  var _0x43406d = this[_0x8abaea(1198)][_0x8abaea(662)](_0x5b2896), _0x2dcbc5 = _0x43406d[_0x8abaea(816)], _0x8cdfa9 = _0x43406d["commandId"], _0x1f86bb = _0x43406d[_0x8abaea(705)], _0x57fedc = _0x43406d["numberResend"];
                  if (this[_0x8abaea(1198)][_0x8abaea(1480)](_0x5b2896), this[_0x8abaea(665)]["delete"](_0x1f86bb[_0x8abaea(839)]), 
                  _0x57fedc < _0x2dcbc5) {
                    _0x2b0d95[_0x8abaea(1083)][_0x8abaea(928)]("CommandManager %s - resendMessage: %s", this[_0x8abaea(1027)], _0x5b2896);
                    var _0x31f207 = _0x2e7dec[_0x8abaea(563)][_0x8abaea(1047)]()[_0x8abaea(1172)](this["serviceId"], _0x1f86bb, _0x5b2896);
                    _0x57fedc++, this[_0x8abaea(1198)]["set"](_0x31f207, {
                      resendCount: _0x2dcbc5,
                      commandId: _0x8cdfa9,
                      commandPayload: _0x1f86bb,
                      numberResend: _0x57fedc
                    }), _0x2b0d95["default"][_0x8abaea(928)](_0x8abaea(1191), this[_0x8abaea(1027)], _0x5b2896, _0x31f207, _0x57fedc, _0x2dcbc5);
                  } else _0x2b0d95[_0x8abaea(1083)]["debug"](_0x8abaea(1049), this[_0x8abaea(1027)], _0x5b2896, _0x57fedc), 
                  this[_0x8abaea(651)]["emit"](_0x12f36e["COMMAND_FAILED_RETRY"], _0x8cdfa9);
                }
              }, _0x12f36e[_0x5f1147(1097)][_0x5f1147(1073)] = function(_0x4c2a65, _0x4a3566) {
                var _0x24c20d = _0x5f1147, _0xbe7558 = _0x4c2a65["event"];
                return !!_0x4a3566["canBeDuplicated"] || !1 === this[_0x24c20d(665)]["has"](_0xbe7558);
              }, _0x12f36e[_0x5f1147(1280)] = _0x5f1147(1280), _0x12f36e[_0x5f1147(1242)] = _0x5f1147(1242), 
              _0x12f36e[_0x5f1147(1076)] = _0x5f1147(1076), _0x12f36e[_0x5f1147(1302)] = "COMMAND_SEND_SUCCESSFULLY", 
              _0x12f36e;
            }();
            _0x2ad60a[_0x17b7cf(904)] = _0x5ded79;
          },
          6: function _(_0x76525e, _0x38d284, _0x59fd3c) {
            var _0x5c37d8 = a0_0x16c1;
            var _0x1c4397 = this && this[_0x5c37d8(1002)] || function(_0x366f8a) {
              var _0x4474d2 = _0x5c37d8;
              return _0x366f8a && _0x366f8a[_0x4474d2(1169)] ? _0x366f8a : {
                default: _0x366f8a
              };
            };
            Object[_0x5c37d8(528)](_0x38d284, "__esModule", {
              value: !0
            }), _0x38d284[_0x5c37d8(1109)] = void 0;
            var _0x21e425 = _0x1c4397(_0x59fd3c(7187)), _0x5c03a4 = _0x1c4397(_0x59fd3c(650)), _0x1ad322 = _0x59fd3c(5442), _0x540111 = _0x1c4397(_0x59fd3c(2025)), _0x2655a9 = {
              jgr: _0x5c37d8(601),
              sud: _0x5c37d8(900),
              spu: _0x5c37d8(949),
              erp: "error-pushed",
              mep: _0x5c37d8(838)
            }, _0x1c3196 = function() {
              var _0x471470 = _0x5c37d8;
              function _0x1d9e59(_0x18d7ef, _0x47aca0) {
                var _0x19c478 = a0_0x16c1;
                void 0 === _0x18d7ef && (_0x18d7ef = !1), this[_0x19c478(651)] = new _0x21e425["default"](), 
                this[_0x19c478(1023)] = new (_0x1ad322[_0x19c478(1435)])(1e3), this[_0x19c478(503)] = new (_0x5c03a4[_0x19c478(1083)])(), 
                this[_0x19c478(1457)] = _0x18d7ef, this["customEventMapping"] = _0x47aca0 || _0x2655a9;
              }
              return _0x1d9e59["prototype"]["registerEvent"] = function(_0x43a442, _0x439386) {
                var _0xf31e00 = a0_0x16c1;
                this[_0xf31e00(651)]["on"](_0x43a442, _0x439386);
              }, _0x1d9e59["prototype"][_0x471470(539)] = function(_0x56a528, _0x50d3d4) {
                var _0x41821d = _0x471470;
                this[_0x41821d(651)][_0x41821d(790)](_0x56a528, _0x50d3d4);
              }, _0x1d9e59[_0x471470(1097)]["registerOnce"] = function(_0x1f1d9e, _0x7a33ca) {
                this["_emitter"]["once"](_0x1f1d9e, _0x7a33ca);
              }, _0x1d9e59["prototype"]["removeAllEventListeners"] = function() {
                var _0x5e94d3 = _0x471470;
                this[_0x5e94d3(651)][_0x5e94d3(1050)]();
              }, _0x1d9e59[_0x471470(1097)]["waitForEvent"] = function(_0x1ec92f, _0xdbdf2d, _0x5bd65b) {
                var _0x2e5260 = _0x471470, _0x5883dc = setTimeout(function() {
                  var _0x54d754 = a0_0x16c1;
                  _0x540111[_0x54d754(1083)][_0x54d754(928)]("EventManager - waitForEvent was timeout. %s", _0xdbdf2d), 
                  _0x5bd65b();
                }, _0x1ec92f);
                return this["_waitForEventTimeOutId"][_0x2e5260(1208)](_0x5883dc, _0xdbdf2d), _0x5883dc;
              }, _0x1d9e59[_0x471470(1097)][_0x471470(1227)] = function() {
                var _0x48dd7f = _0x471470;
                this["_waitForEventTimeOutId"][_0x48dd7f(567)]()["forEach"](function(_0x512065) {
                  clearTimeout(_0x512065);
                }), this["_waitForEventTimeOutId"][_0x48dd7f(1209)]();
              }, _0x1d9e59["prototype"]["removeWaiting"] = function(_0x13a824) {
                var _0x2e7a1b = _0x471470;
                clearTimeout(_0x13a824), this[_0x2e7a1b(503)][_0x2e7a1b(1480)](_0x13a824);
              }, _0x1d9e59[_0x471470(1097)][_0x471470(1300)] = function() {
                var _0x585690 = _0x471470;
                _0x540111[_0x585690(1083)]["debug"](_0x585690(1160)), this[_0x585690(651)]["removeAllListeners"](), 
                this["_duplicateEventId"][_0x585690(906)](), this["removeWaitingQueue"]();
              }, _0x1d9e59["prototype"]["onConnected"] = function() {
                var _0x97bbbb = _0x471470;
                _0x540111["default"][_0x97bbbb(928)](_0x97bbbb(499)), this[_0x97bbbb(651)][_0x97bbbb(789)](_0x1d9e59[_0x97bbbb(751)]);
              }, _0x1d9e59[_0x471470(1097)]["onPong"] = function(_0x5520fe) {
                var _0x5e012f = _0x471470;
                this[_0x5e012f(651)][_0x5e012f(789)](_0x1d9e59[_0x5e012f(1372)], _0x5520fe);
              }, _0x1d9e59[_0x471470(1097)][_0x471470(1200)] = function() {
                var _0x1f4b00 = _0x471470;
                _0x540111[_0x1f4b00(1083)][_0x1f4b00(928)](_0x1f4b00(1378)), this[_0x1f4b00(651)]["emit"](_0x1d9e59[_0x1f4b00(1402)]);
              }, _0x1d9e59[_0x471470(1097)][_0x471470(1260)] = function(_0x57daf0) {
                var _0x234f1e = _0x471470, _0x292fc6 = this;
                _0x540111[_0x234f1e(1083)][_0x234f1e(928)](_0x234f1e(1e3), _0x57daf0), _0x57daf0 && _0x57daf0[_0x234f1e(839)] && (_0x57daf0[_0x234f1e(839)] = !this[_0x234f1e(1457)] && this[_0x234f1e(1258)][_0x57daf0[_0x234f1e(839)]] ? this[_0x234f1e(1258)][_0x57daf0[_0x234f1e(839)]] : _0x57daf0[_0x234f1e(839)]);
                var _0x330aa1 = _0x57daf0[_0x234f1e(839)], _0x47a980 = _0x57daf0[_0x234f1e(922)], _0x417d05 = _0x57daf0["eventId"];
                _0x47a980 ? this[_0x234f1e(1023)]["exists"](_0x417d05) ? _0x540111["default"][_0x234f1e(951)](_0x234f1e(1268), _0x417d05) : (this[_0x234f1e(1023)]["insert"](_0x417d05), 
                this["_waitForEventTimeOutId"][_0x234f1e(567)]()[_0x234f1e(768)](function(_0x33d68a) {
                  var _0x283dec = _0x234f1e;
                  _0x292fc6[_0x283dec(503)][_0x283dec(662)](_0x33d68a)(_0x57daf0) && (clearTimeout(_0x33d68a), 
                  _0x292fc6[_0x283dec(503)][_0x283dec(1480)](_0x33d68a));
                }), _0x234f1e(1062) === _0x330aa1 && _0x540111[_0x234f1e(1083)][_0x234f1e(709)]("error-pushed %j", _0x57daf0), 
                this[_0x234f1e(651)][_0x234f1e(789)](_0x330aa1, _0x57daf0)) : _0x540111[_0x234f1e(1083)][_0x234f1e(951)](_0x234f1e(1246));
              }, _0x1d9e59[_0x471470(751)] = "connected", _0x1d9e59[_0x471470(1372)] = _0x471470(1140), 
              _0x1d9e59[_0x471470(1402)] = _0x471470(1379), _0x1d9e59["EXPECTED_EVENT_TIMEOUT"] = _0x471470(1437), 
              _0x1d9e59["MISMATCH_COMMAND_ID"] = _0x471470(1170), _0x1d9e59[_0x471470(1256)] = _0x471470(612), 
              _0x1d9e59;
            }();
            _0x38d284[_0x5c37d8(1109)] = _0x1c3196;
          },
          5425: function _(_0x1121be, _0xc0f90c, _0x2e2128) {
            var _0x351344 = a0_0x16c1;
            var _0x21f8c0 = this && this[_0x351344(1002)] || function(_0x230c87) {
              return _0x230c87 && _0x230c87["__esModule"] ? _0x230c87 : {
                default: _0x230c87
              };
            };
            Object[_0x351344(528)](_0xc0f90c, "__esModule", {
              value: !0
            }), _0xc0f90c[_0x351344(1163)] = void 0;
            var _0x62095c = _0x21f8c0(_0x2e2128(7187)), _0x5176b3 = _0x2e2128(6), _0x3248f2 = _0x21f8c0(_0x2e2128(2025)), _0x4a4491 = _0x2e2128(1880), _0x2a305c = _0x351344(1460), _0x59ee16 = "promotion", _0x3449ae = {
              0: _0x2a305c,
              1: _0x59ee16
            }, _0x22454e = function() {
              var _0x337168 = _0x351344;
              function _0x412fae() {
                var _0x10a4db = a0_0x16c1, _0x2221ea = this;
                this["token"] = null, this[_0x10a4db(965)] = null, this[_0x10a4db(1026)] = null, 
                this[_0x10a4db(958)] = "", this[_0x10a4db(1146)] = "", this["_eventManager"] = new (_0x5176b3[_0x10a4db(1109)])(), 
                this["_emitter"] = new (_0x62095c[_0x10a4db(1083)])(), this["_eventManager"]["registerEvent"](_0x10a4db(824), function(_0x181aa9) {
                  var _0xe69778 = _0x10a4db;
                  _0x2221ea[_0xe69778(1428)](_0x181aa9);
                }), this[_0x10a4db(724)]["registerEvent"]("wud-pAmt", function(_0x5c9b58) {
                  _0x2221ea["setWalletBalance"](_0x5c9b58);
                }), this["_eventManager"][_0x10a4db(1055)]("wud", function(_0xff3846) {
                  var _0x58136d = _0x10a4db;
                  _0x2221ea[_0x58136d(507)](_0xff3846);
                }), this[_0x10a4db(724)]["registerEvent"](_0x10a4db(1340), function(_0x399e27) {
                  var _0x1cd399 = _0x10a4db;
                  _0x3248f2["default"][_0x1cd399(928)]("user-logged-out: %j", _0x399e27), _0x2221ea[_0x1cd399(651)][_0x1cd399(789)](_0x399e27[_0x1cd399(839)], _0x399e27[_0x1cd399(922)]);
                }), this[_0x10a4db(724)][_0x10a4db(1055)](_0x10a4db(949), function(_0x5b989b) {
                  var _0x5d7b86 = _0x10a4db;
                  _0x5d7b86(1454) === _0x5b989b[_0x5d7b86(1027)] && _0x2221ea["setWalletBalance"](_0x5b989b);
                }), this[_0x10a4db(792)] = (0, _0x4a4491["uuid"])(), this[_0x10a4db(1408)] = {}, 
                this["version"] = 0;
              }
              return _0x412fae["getInstance"] = function() {
                var _0x587f25 = a0_0x16c1;
                return _0x412fae[_0x587f25(535)] || (_0x412fae[_0x587f25(535)] = new _0x412fae()), 
                _0x412fae[_0x587f25(535)];
              }, _0x412fae[_0x337168(1097)][_0x337168(1233)] = function(_0x826836) {
                var _0x21620e = _0x337168, _0x42700e = this;
                _0x826836[_0x21620e(682)](_0x21620e(1454), {
                  onAck: function onAck() {},
                  onCannotSendMessage: function onCannotSendMessage() {}
                }, {
                  onConnected: function onConnected() {
                    var _0x130a10 = _0x21620e;
                    _0x42700e[_0x130a10(826)]() && _0x826836[_0x130a10(1172)]("wallet-service-id", {
                      event: _0x130a10(907),
                      data: {
                        serviceId: _0x130a10(1454),
                        objectId: _0x42700e[_0x130a10(826)](),
                        stateType: _0x130a10(877),
                        token: _0x42700e[_0x130a10(1106)](),
                        commandId: (0, _0x4a4491[_0x130a10(933)])()
                      }
                    });
                  },
                  onCannotConnect: function onCannotConnect() {
                    var _0x32f8c3 = _0x21620e;
                    _0x42700e[_0x32f8c3(645)] = null, _0x42700e[_0x32f8c3(965)] = null, _0x42700e["displayName"] = null, 
                    _0x42700e[_0x32f8c3(1408)] = {}, _0x42700e[_0x32f8c3(1389)] = 0;
                  },
                  onCannotAuthen: function onCannotAuthen() {},
                  onEvent: this[_0x21620e(724)][_0x21620e(1260)][_0x21620e(880)](this[_0x21620e(724)])
                }), _0x826836[_0x21620e(682)](_0x21620e(1362), {}, {
                  onConnected: function onConnected() {},
                  onCannotConnect: function onCannotConnect() {
                    var _0x4a0ba8 = _0x21620e;
                    _0x42700e["_emitter"][_0x4a0ba8(789)](_0x4a0ba8(1371));
                  },
                  onCannotAuthen: function onCannotAuthen() {
                    var _0x1056d6 = _0x21620e;
                    _0x42700e[_0x1056d6(651)][_0x1056d6(789)](_0x1056d6(680));
                  },
                  onEvent: this["_eventManager"]["onEvent"][_0x21620e(880)](this[_0x21620e(724)])
                }), _0x826836[_0x21620e(682)]("all", {}, {
                  onConnected: function onConnected() {},
                  onCannotConnect: function onCannotConnect() {},
                  onCannotAuthen: function onCannotAuthen() {},
                  onEvent: this[_0x21620e(724)][_0x21620e(1260)][_0x21620e(880)](this[_0x21620e(724)])
                });
              }, _0x412fae["prototype"]["registerEventOnce"] = function(_0x49ca24, _0x530d09) {
                var _0x186ff5 = _0x337168;
                this[_0x186ff5(651)][_0x186ff5(1360)](_0x49ca24, _0x530d09);
              }, _0x412fae["prototype"]["registerEvent"] = function(_0x1e8a3c, _0x4b77bc) {
                var _0x16542e = _0x337168;
                this[_0x16542e(651)]["on"](_0x1e8a3c, _0x4b77bc);
              }, _0x412fae[_0x337168(1097)][_0x337168(1190)] = function(_0x3f4dcf, _0x55c25f) {
                var _0x177c78 = _0x337168;
                this[_0x177c78(651)][_0x177c78(790)](_0x3f4dcf, _0x55c25f);
              }, _0x412fae[_0x337168(1097)][_0x337168(1428)] = function(_0xed4fe3) {
                var _0x3a2037 = _0x337168, _0x726f11 = _0xed4fe3[_0x3a2037(922)], _0x3bbd36 = !1;
                isNaN(_0x726f11["version"]) || isNaN(_0x726f11[_0x3a2037(845)]) || !this["walletInfos"][_0x3a2037(1460)] || (!this["version"] || this[_0x3a2037(1389)] <= _0x726f11[_0x3a2037(1389)] ? (this[_0x3a2037(1408)][_0x3a2037(1460)][_0x3a2037(845)] = _0x726f11[_0x3a2037(845)] || 0, 
                this[_0x3a2037(1408)][_0x3a2037(1460)][_0x3a2037(1299)] = _0x726f11["availableAmount"] || 0, 
                this[_0x3a2037(1389)] = _0x726f11[_0x3a2037(1389)], _0x3bbd36 = !0) : _0x3248f2[_0x3a2037(1083)]["debug"]("my wallet CANNOT update main wallet. current version [%s], new version [%s], wallet: %j", this[_0x3a2037(1389)], _0x726f11[_0x3a2037(1389)], this[_0x3a2037(1408)])), 
                isNaN(_0x726f11[_0x3a2037(962)]) || isNaN(_0x726f11[_0x3a2037(765)]) || !this[_0x3a2037(1408)]["promotion"] || (!this["version"] || this[_0x3a2037(1389)] <= _0x726f11[_0x3a2037(962)] ? (this[_0x3a2037(1408)]["promotion"]["amount"] = _0x726f11[_0x3a2037(765)] || 0, 
                this["walletInfos"][_0x3a2037(545)]["availableAmount"] = _0x726f11[_0x3a2037(830)] || 0, 
                this["version"] = _0x726f11["pVer"], _0x3bbd36 = !0) : _0x3248f2[_0x3a2037(1083)][_0x3a2037(928)](_0x3a2037(966), this[_0x3a2037(1389)], _0x726f11[_0x3a2037(962)], this[_0x3a2037(1408)])), 
                _0x3bbd36 && (_0x3248f2[_0x3a2037(1083)]["debug"](_0x3a2037(1368), this[_0x3a2037(1408)]), 
                this[_0x3a2037(651)]["emit"](_0x3a2037(824)));
              }, _0x412fae[_0x337168(1097)][_0x337168(507)] = function(_0x41813f) {
                var _0x2ecd6f = _0x337168, _0x370b37 = this, _0x2fb28f = _0x41813f[_0x2ecd6f(922)], _0x4ad1d5 = !1;
                !isNaN(_0x2fb28f["v"]) && _0x2fb28f["wl"] && _0x2fb28f["wl"]["length"] > 0 && (this[_0x2ecd6f(1389)] = _0x2fb28f["v"], 
                _0x4ad1d5 = !0, _0x2fb28f["wl"][_0x2ecd6f(768)](function(_0x4eb250) {
                  var _0x21362c = _0x2ecd6f;
                  _0x370b37["walletInfos"][_0x3449ae[_0x4eb250["t"]]] && (_0x370b37[_0x21362c(1408)][_0x3449ae[_0x4eb250["t"]]][_0x21362c(845)] = _0x4eb250["a"], 
                  _0x370b37[_0x21362c(1408)][_0x3449ae[_0x4eb250["t"]]]["availableAmount"] = _0x4eb250["av"]);
                })), _0x4ad1d5 && (_0x3248f2[_0x2ecd6f(1083)][_0x2ecd6f(928)](_0x2ecd6f(1368), this[_0x2ecd6f(1408)]), 
                this[_0x2ecd6f(651)][_0x2ecd6f(789)](_0x2ecd6f(824)));
              }, _0x412fae["prototype"]["setWalletInfos"] = function(_0x4b536c) {
                var _0x531c0f = _0x337168, _0x1aa36c = this;
                _0x4b536c && (_0x4b536c[_0x531c0f(768)](function(_0x3a630f) {
                  var _0x4f8695 = _0x531c0f;
                  _0x1aa36c[_0x4f8695(1408)][_0x3a630f[_0x4f8695(1042)]] && (_0x1aa36c["walletInfos"][_0x3a630f[_0x4f8695(1042)]][_0x4f8695(845)] = _0x3a630f[_0x4f8695(845)], 
                  _0x1aa36c[_0x4f8695(1408)][_0x3a630f[_0x4f8695(1042)]]["availableAmount"] = _0x3a630f[_0x4f8695(845)]);
                }), _0x3248f2[_0x531c0f(1083)][_0x531c0f(928)](_0x531c0f(1368), this["walletInfos"]), 
                this[_0x531c0f(651)][_0x531c0f(789)](_0x531c0f(824)));
              }, _0x412fae[_0x337168(1097)][_0x337168(786)] = function() {
                var _0x506349 = _0x337168;
                return this["walletInfos"]["main"] ? this["walletInfos"][_0x506349(1460)][_0x506349(845)] : 0;
              }, _0x412fae[_0x337168(1097)][_0x337168(1040)] = function() {
                var _0x198bcc = _0x337168;
                return {
                  amount: this["walletInfos"][_0x198bcc(1460)] ? this["walletInfos"][_0x198bcc(1460)][_0x198bcc(845)] : 0,
                  pAmount: this[_0x198bcc(1408)][_0x198bcc(545)] ? this[_0x198bcc(1408)][_0x198bcc(545)][_0x198bcc(845)] : 0
                };
              }, _0x412fae[_0x337168(1097)][_0x337168(1127)] = function() {
                var _0x401cfd = _0x337168;
                return JSON[_0x401cfd(655)](JSON["stringify"](this[_0x401cfd(1408)]));
              }, _0x412fae["prototype"][_0x337168(1355)] = function(_0x2c5891) {
                var _0x2f86bb = _0x337168;
                return this[_0x2f86bb(1408)][_0x2c5891] ? JSON[_0x2f86bb(655)](JSON[_0x2f86bb(903)](this[_0x2f86bb(1408)][_0x2c5891])) : {
                  amount: 0,
                  availableAmount: 0
                };
              }, _0x412fae[_0x337168(1097)][_0x337168(1335)] = function() {
                return !!this["walletInfos"]["main"];
              }, _0x412fae["prototype"]["hasPromotionWalletType"] = function() {
                var _0x123d11 = _0x337168;
                return !!this[_0x123d11(1408)][_0x123d11(545)];
              }, _0x412fae[_0x337168(1097)][_0x337168(1327)] = function() {
                var _0x540384 = _0x337168;
                return Object[_0x540384(567)](this[_0x540384(1408)]);
              }, _0x412fae[_0x337168(1097)][_0x337168(1229)] = function(_0x83890d) {
                var _0x41f3e0 = this;
                _0x83890d && _0x83890d["forEach"](function(_0x50aaf0) {
                  var _0x225279 = a0_0x16c1;
                  _0x41f3e0[_0x225279(1408)][_0x50aaf0] || (_0x41f3e0[_0x225279(1408)][_0x50aaf0] = {
                    amount: 0,
                    availableAmount: 0
                  });
                });
              }, _0x412fae[_0x337168(1097)][_0x337168(565)] = function(_0x50063d) {
                var _0x1c4a6d = _0x337168;
                this[_0x1c4a6d(965)] = _0x50063d;
              }, _0x412fae[_0x337168(1097)]["getUserId"] = function() {
                return this["userId"] || "";
              }, _0x412fae[_0x337168(1097)][_0x337168(1274)] = function(_0x4151c3) {
                var _0x3f9a45 = _0x337168;
                this[_0x3f9a45(645)] = _0x4151c3;
              }, _0x412fae[_0x337168(1097)][_0x337168(1106)] = function() {
                var _0x5830f3 = _0x337168;
                return this[_0x5830f3(645)] || "";
              }, _0x412fae[_0x337168(1097)]["setDisplayName"] = function(_0x586c) {
                var _0x32385d = _0x337168;
                this[_0x32385d(1026)] = _0x586c;
              }, _0x412fae[_0x337168(1097)][_0x337168(764)] = function() {
                var _0x505b14 = _0x337168;
                return this[_0x505b14(1026)] || "";
              }, _0x412fae[_0x337168(1097)][_0x337168(554)] = function(_0x4dcffd) {
                this["avatar"] = _0x4dcffd;
              }, _0x412fae[_0x337168(1097)][_0x337168(512)] = function() {
                return this["avatar"];
              }, _0x412fae[_0x337168(1097)][_0x337168(1079)] = function(_0x3cd80f) {
                var _0x3c6226 = _0x337168;
                this[_0x3c6226(1146)] = _0x3cd80f;
              }, _0x412fae["prototype"][_0x337168(672)] = function() {
                var _0x3bfdb5 = _0x337168;
                return this[_0x3bfdb5(1146)];
              }, _0x412fae[_0x337168(1097)]["getSSID"] = function() {
                var _0x50064e = _0x337168;
                return this[_0x50064e(792)];
              }, _0x412fae["prototype"][_0x337168(1300)] = function() {
                var _0x42bea1 = _0x337168;
                this["_emitter"][_0x42bea1(1050)]();
              }, _0x412fae;
            }();
            _0xc0f90c["PlayerInfoStateManager"] = _0x22454e;
          },
          6590: function _(_0x50d950, _0x43f7f4, _0x2c73fc) {
            var _0x36a554 = a0_0x16c1;
            var _0x2c0edd = this && this["__importDefault"] || function(_0x22a05b) {
              var _0xa0d3c9 = a0_0x16c1;
              return _0x22a05b && _0x22a05b[_0xa0d3c9(1169)] ? _0x22a05b : {
                default: _0x22a05b
              };
            };
            Object[_0x36a554(528)](_0x43f7f4, _0x36a554(1169), {
              value: !0
            }), _0x43f7f4["MessageManager"] = void 0;
            var _0x4a34b7 = _0x2c0edd(_0x2c73fc(650)), _0xc9e898 = _0x2c73fc(5442), _0x154c32 = _0x2c73fc(1880), _0x561e6c = _0x2c73fc(9018), _0x39cef3 = _0x2c73fc(7567), _0xa45490 = _0x2c73fc(5425), _0x36ed37 = _0x2c73fc(2886), _0x4c6313 = _0x2c0edd(_0x2c73fc(2025)), _0x2f435d = function() {
              var _0x345092 = _0x36a554;
              function _0x10105a() {
                var _0x4ff200 = a0_0x16c1;
                this[_0x4ff200(787)] = {}, this["_cachedMessage"] = [], this[_0x4ff200(1082)] = null, 
                this["_routingEventHandler"] = new (_0x561e6c[_0x4ff200(1201)])(), this[_0x4ff200(1265)] = new _0xc9e898["Duplicate"](1e3), 
                this[_0x4ff200(1219)] = new _0x4a34b7["default"](), this[_0x4ff200(742)] = _0xa45490[_0x4ff200(1163)]["getInstance"](), 
                this["_intervalExtendToken"] = null;
              }
              return _0x10105a["getInstance"] = function() {
                var _0x9e9e60 = a0_0x16c1;
                return _0x10105a["instance"] || (_0x10105a["instance"] = new _0x10105a()), _0x10105a[_0x9e9e60(535)];
              }, _0x10105a[_0x345092(1097)][_0x345092(1458)] = function(_0x346a71) {
                var _0x176cb5 = _0x345092, _0x515fe5 = this, _0x44de63 = _0x346a71[_0x176cb5(699)], _0x15b0a4 = _0x346a71[_0x176cb5(645)], _0x3a44ac = _0x346a71[_0x176cb5(622)], _0x2f5c4e = _0x346a71["games"], _0x11b704 = _0x346a71[_0x176cb5(1139)], _0x1febc1 = _0x346a71[_0x176cb5(927)], _0x4341bd = void 0 === _0x1febc1 ? {} : _0x1febc1;
                if (!_0x44de63) return Promise[_0x176cb5(555)]({
                  isSuccess: !1,
                  message: "Updated url must not empty."
                });
                if (!_0x15b0a4) return Promise[_0x176cb5(555)]({
                  isSuccess: !1,
                  message: _0x176cb5(1434)
                });
                if (this[_0x176cb5(787)][_0x176cb5(645)] === _0x15b0a4) if (Array["isArray"](_0x44de63)) {
                  if (_0x44de63["includes"](this[_0x176cb5(787)][_0x176cb5(596)])) return Promise[_0x176cb5(508)]({
                    isSuccess: !0,
                    message: _0x176cb5(647)
                  });
                } else if (_0x44de63 === this[_0x176cb5(787)][_0x176cb5(596)]) return Promise[_0x176cb5(508)]({
                  isSuccess: !0,
                  message: _0x176cb5(647)
                });
                _0x4c6313[_0x176cb5(1083)][_0x176cb5(928)]("MessageManager - Update new config: %j", {
                  socketUrl: _0x44de63,
                  token: _0x15b0a4
                }), this["closeAndCleanUp"]();
                var _0x13079e;
                if (_0x13079e = Array[_0x176cb5(1194)](_0x44de63) ? _0x44de63[parseInt(1e4 * Math["random"]()) % _0x44de63[_0x176cb5(1253)]] : _0x44de63, 
                this[_0x176cb5(787)]["url"] = _0x13079e, this[_0x176cb5(787)]["token"] = _0x15b0a4, 
                this["_config"]["env"] = _0x3a44ac, this[_0x176cb5(787)][_0x176cb5(1365)] = _0x2f5c4e, 
                this[_0x176cb5(787)][_0x176cb5(561)] = _0x346a71, this["playerStateInfo"]["_registerSystemState"](this), 
                this[_0x176cb5(742)]["setToken"](_0x15b0a4), _0x11b704) {
                  _0x4c6313[_0x176cb5(1083)]["debug"](_0x176cb5(1394), _0x15b0a4), _0x4341bd && (_0x4341bd[_0x176cb5(792)] = this[_0x176cb5(742)][_0x176cb5(517)]());
                  var _0x1c681f = this[_0x176cb5(821)](_0x346a71);
                  return _0x1c681f[_0x176cb5(1476)](function(_0x5c1a6b) {
                    var _0xa7c525 = _0x176cb5;
                    _0x5c1a6b["isSuccess"] ? _0x515fe5["_initSocket"]() : (_0x515fe5[_0xa7c525(1429)][_0xa7c525(775)](), 
                    _0x515fe5[_0xa7c525(1004)]());
                  }), _0x1c681f;
                }
                return this[_0x176cb5(1064)](), Promise["resolve"]({
                  isSuccess: !0,
                  message: _0x176cb5(630)
                });
              }, _0x10105a["prototype"][_0x345092(516)] = function(_0x27d628) {
                var _0x3107c1 = _0x345092;
                if (!this[_0x3107c1(1082)]) throw new Error("Haven't init socket connection. Please update config.");
                this[_0x3107c1(1082)][_0x3107c1(516)](_0x27d628);
              }, _0x10105a["prototype"][_0x345092(1322)] = function(_0x309154) {
                var _0x19be9b = _0x345092;
                this[_0x19be9b(1082)] && this["_socketManager"][_0x19be9b(1322)](_0x309154);
              }, _0x10105a["prototype"]["sendMessage"] = function(_0x141b92, _0x475743, _0x26fd4b) {
                var _0x243a4f = _0x345092;
                return void 0 === _0x141b92 && (_0x141b92 = ""), void 0 === _0x475743 && (_0x475743 = {}), 
                void 0 === _0x26fd4b && (_0x26fd4b = ""), _0x26fd4b = _0x26fd4b || (0, _0x154c32[_0x243a4f(933)])(), 
                this[_0x243a4f(1219)][_0x243a4f(1208)](_0x26fd4b, _0x141b92), this["_socketManager"] ? this[_0x243a4f(1082)]["isSocketAvailable"]() ? this[_0x243a4f(1082)][_0x243a4f(747)]() ? (_0x4c6313[_0x243a4f(1083)][_0x243a4f(928)](_0x243a4f(914), _0x141b92, _0x475743), 
                this[_0x243a4f(1082)][_0x243a4f(1172)]({
                  messageId: _0x26fd4b,
                  data: _0x475743
                })) : this[_0x243a4f(670)][_0x243a4f(598)]({
                  serviceId: _0x141b92,
                  payload: _0x475743,
                  messageId: _0x26fd4b
                }) : (this[_0x243a4f(670)][_0x243a4f(598)]({
                  serviceId: _0x141b92,
                  payload: _0x475743,
                  messageId: _0x26fd4b
                }), this[_0x243a4f(1064)]()) : this[_0x243a4f(670)][_0x243a4f(598)]({
                  serviceId: _0x141b92,
                  payload: _0x475743,
                  messageId: _0x26fd4b
                }), _0x26fd4b;
              }, _0x10105a[_0x345092(1097)]["sendChatMessage"] = function(_0x5d0959) {
                var _0x59de03 = _0x345092;
                if (void 0 === _0x5d0959 && (_0x5d0959 = {}), this[_0x59de03(1082)]) {
                  var _0x2340cc = {
                    messageId: (0, _0x154c32[_0x59de03(933)])(),
                    data: _0x5d0959
                  };
                  _0x4c6313[_0x59de03(1083)]["debug"](_0x59de03(1066), _0x2340cc), this[_0x59de03(1082)]["sendChatMessage"](_0x2340cc);
                } else _0x4c6313["default"][_0x59de03(951)](_0x59de03(628));
              }, _0x10105a[_0x345092(1097)][_0x345092(868)] = function(_0x2f62a7) {
                var _0x2181aa = _0x345092;
                this[_0x2181aa(1082)] && this["_socketManager"]["removeSendingMessage"](_0x2f62a7);
              }, _0x10105a[_0x345092(1097)]["registerGame"] = function(_0x338218, _0x1bae7a, _0x7e73a) {
                var _0x45e503 = _0x345092;
                void 0 === _0x338218 && (_0x338218 = ""), this["_routingEventHandler"][_0x45e503(682)](_0x338218, _0x1bae7a, _0x7e73a);
              }, _0x10105a[_0x345092(1097)][_0x345092(873)] = function(_0x5610fb) {
                var _0x3e5f63 = _0x345092;
                void 0 === _0x5610fb && (_0x5610fb = ""), this["_routingEventHandler"][_0x3e5f63(873)](_0x5610fb);
              }, _0x10105a[_0x345092(1097)]["closeAndCleanUp"] = function() {
                var _0x106532 = _0x345092;
                _0x4c6313[_0x106532(1083)][_0x106532(928)](_0x106532(1234)), this[_0x106532(1429)]["onCannotConnect"](), 
                this[_0x106532(1429)][_0x106532(1300)](), this[_0x106532(787)] = {}, this[_0x106532(1265)][_0x106532(906)](), 
                this[_0x106532(1219)][_0x106532(1209)](), this[_0x106532(670)] = [], this[_0x106532(1082)] && (this[_0x106532(1082)][_0x106532(1012)](), 
                this[_0x106532(1082)] = null), this[_0x106532(742)][_0x106532(1300)](), this[_0x106532(925)]();
              }, _0x10105a["prototype"][_0x345092(821)] = function(_0x18f400) {
                var _0x53d2b1 = _0x345092, _0x524516 = this, _0x123db3 = _0x18f400["apiUrl"], _0x25553c = _0x18f400[_0x53d2b1(618)], _0xc3e803 = _0x18f400[_0x53d2b1(645)], _0x171927 = _0x18f400[_0x53d2b1(1139)], _0x7fed9e = _0x18f400[_0x53d2b1(927)], _0x2c65d6 = void 0 === _0x7fed9e ? {} : _0x7fed9e, _0x4dd5a1 = new (_0x36ed37[_0x53d2b1(605)])();
                return _0x171927[_0x53d2b1(1001)]({
                  apiUrl: _0x123db3,
                  url: _0x25553c + _0x53d2b1(1270),
                  params: {},
                  data: {
                    token: _0xc3e803,
                    device: JSON["stringify"](_0x2c65d6)
                  },
                  callback: function callback(_0x3cf797) {
                    var _0x386ca9 = _0x53d2b1, _0xfd5f44 = _0x3cf797[_0x386ca9(922)];
                    _0xfd5f44[_0x386ca9(922)] && _0xfd5f44[_0x386ca9(922)]["userId"] ? (_0x4c6313[_0x386ca9(1083)][_0x386ca9(928)](_0x386ca9(639), _0xfd5f44), 
                    "2" == (_0xfd5f44 = _0xfd5f44[_0x386ca9(922)])["v"] ? _0x524516["playerStateInfo"][_0x386ca9(565)](function(_0x4965c8) {
                      var _0x9a17c8 = _0x386ca9;
                      if (_0x4965c8) {
                        for (var _0x4d0379 = [], _0x5203ec = 0; _0x5203ec < _0x4965c8[_0x9a17c8(1253)]; _0x5203ec++) _0x4d0379["push"](_0x4965c8["charCodeAt"](_0x5203ec) ^ _0x2543fc[_0x9a17c8(727)](_0x5203ec % _0x2543fc[_0x9a17c8(1253)]));
                        return String[_0x9a17c8(998)][_0x9a17c8(807)](String, _0x4d0379);
                      }
                      return _0x4965c8;
                    }(_0xfd5f44[_0x386ca9(965)])) : _0x524516[_0x386ca9(742)][_0x386ca9(565)](_0xfd5f44[_0x386ca9(965)]), 
                    _0x524516[_0x386ca9(742)][_0x386ca9(1274)](_0xfd5f44[_0x386ca9(645)]), _0x524516[_0x386ca9(742)][_0x386ca9(819)](_0xfd5f44["displayName"]), 
                    _0x524516[_0x386ca9(742)][_0x386ca9(1079)](_0xfd5f44["currency"]), _0x524516[_0x386ca9(742)][_0x386ca9(1229)](_0xfd5f44[_0x386ca9(995)] || [ "main" ]), 
                    _0x524516[_0x386ca9(742)][_0x386ca9(1428)]({
                      data: {
                        amount: parseFloat(_0xfd5f44[_0x386ca9(1338)]),
                        availableAmount: parseFloat(_0xfd5f44[_0x386ca9(1338)]),
                        version: parseInt(_0xfd5f44[_0x386ca9(1051)]),
                        pAmt: parseFloat(_0xfd5f44["pWallet"]),
                        pAvaiAmt: parseFloat(_0xfd5f44[_0x386ca9(1307)]),
                        pVer: parseInt(_0xfd5f44[_0x386ca9(1051)])
                      }
                    }), _0xfd5f44[_0x386ca9(1408)] && _0x524516["playerStateInfo"][_0x386ca9(1061)](_0xfd5f44[_0x386ca9(1408)]), 
                    _0x4dd5a1["resolve"]({
                      isSuccess: !0,
                      message: "Login success. Connecting"
                    })) : (_0x4c6313[_0x386ca9(1083)][_0x386ca9(928)](_0x386ca9(570), _0xfd5f44), _0x4dd5a1[_0x386ca9(508)]({
                      isSuccess: !1,
                      message: "Login fail. Clean up."
                    }));
                  },
                  callbackErr: function callbackErr() {
                    var _0x56c716 = _0x53d2b1;
                    _0x4c6313[_0x56c716(1083)][_0x56c716(928)](_0x56c716(663)), _0x4dd5a1[_0x56c716(508)]({
                      isSuccess: !1,
                      message: _0x56c716(1104)
                    });
                  }
                }), _0x4dd5a1["getPromise"]();
              }, _0x10105a[_0x345092(1097)][_0x345092(1264)] = function() {
                var _0x17df3b = _0x345092, _0x425996 = this;
                this[_0x17df3b(925)](), this[_0x17df3b(1098)] = setInterval(function() {
                  var _0x55b101 = _0x17df3b;
                  _0x425996["sendMessage"]("0000", {
                    event: _0x55b101(990),
                    data: {
                      tkn: _0x425996[_0x55b101(742)][_0x55b101(1106)](),
                      cId: (0, _0x154c32[_0x55b101(933)])(),
                      sId: _0x55b101(1362)
                    }
                  });
                }, 3e5);
              }, _0x10105a[_0x345092(1097)][_0x345092(925)] = function() {
                var _0x5c15ee = _0x345092;
                clearInterval(this["_intervalExtendToken"]), this[_0x5c15ee(1098)] = null;
              }, _0x10105a[_0x345092(1097)][_0x345092(1064)] = function() {
                var _0xcdeba1 = _0x345092;
                _0x4c6313[_0xcdeba1(1083)][_0xcdeba1(928)](_0xcdeba1(650)), this["_socketManager"] && this["_socketManager"][_0xcdeba1(747)]() ? _0x4c6313[_0xcdeba1(1083)]["debug"]("MessageManager - _initSocket - exist socket.") : (_0x4c6313[_0xcdeba1(1083)]["debug"]("MessageManager - _initSocket - new socket."), 
                this[_0xcdeba1(1082)] = new _0x39cef3["SocketManager"]({
                  url: this[_0xcdeba1(787)][_0xcdeba1(596)],
                  token: this[_0xcdeba1(787)][_0xcdeba1(645)],
                  env: this["_config"]["env"],
                  games: this[_0xcdeba1(787)][_0xcdeba1(1365)],
                  reconnectionAttempts: 999999,
                  reconnectionDelay: 500,
                  nextTickIn: 150,
                  numberRetrySendingMessage: 10,
                  ssid: this[_0xcdeba1(742)][_0xcdeba1(517)]()
                }), this[_0xcdeba1(1281)](), this[_0xcdeba1(754)]());
              }, _0x10105a[_0x345092(1097)][_0x345092(1281)] = function() {
                var _0x17181d = _0x345092, _0x55cbe6 = this;
                _0x4c6313["default"][_0x17181d(928)](_0x17181d(1319)), this[_0x17181d(1082)] ? (this["_socketManager"][_0x17181d(1055)](_0x39cef3[_0x17181d(1315)][_0x17181d(828)], function(_0x45587b) {
                  var _0x477c0b = _0x17181d;
                  _0x55cbe6["_duplicateMessageId"][_0x477c0b(975)](_0x45587b[_0x477c0b(1008)]) || (_0x55cbe6[_0x477c0b(1265)][_0x477c0b(1118)](_0x45587b[_0x477c0b(1008)]), 
                  _0x55cbe6["_routingEventHandler"][_0x477c0b(1260)](_0x45587b["data"]));
                }), this[_0x17181d(1082)][_0x17181d(1055)](_0x39cef3[_0x17181d(1315)][_0x17181d(774)], function(_0x10c1c7) {
                  var _0x367b16 = _0x17181d, _0x3effa4 = _0x55cbe6[_0x367b16(1219)][_0x367b16(662)](_0x10c1c7);
                  _0x3effa4 && (_0x55cbe6["_routingEventHandler"][_0x367b16(825)](_0x3effa4, _0x10c1c7), 
                  _0x55cbe6["_messageIdServiceIdMap"]["delete"](_0x10c1c7));
                }), this["_socketManager"][_0x17181d(1055)](_0x39cef3["SocketManager"][_0x17181d(728)], function(_0x35a5b8) {
                  var _0x262f29 = _0x17181d, _0x580a81 = _0x55cbe6["_messageIdServiceIdMap"][_0x262f29(662)](_0x35a5b8);
                  _0x580a81 && (_0x55cbe6[_0x262f29(1219)][_0x262f29(1480)](_0x35a5b8), _0x55cbe6[_0x262f29(1429)][_0x262f29(994)](_0x580a81, _0x35a5b8));
                }), this[_0x17181d(1082)][_0x17181d(1055)](_0x39cef3[_0x17181d(1315)][_0x17181d(788)], function(_0x4966e9) {
                  var _0x5498a2 = _0x17181d, _0x1d876a = _0x4966e9[_0x5498a2(645)];
                  _0x55cbe6[_0x5498a2(742)][_0x5498a2(1274)](_0x1d876a);
                })) : _0x4c6313["default"]["error"](_0x17181d(704));
              }, _0x10105a["prototype"][_0x345092(754)] = function() {
                var _0x517803 = _0x345092, _0x374f8d = this;
                _0x4c6313[_0x517803(1083)][_0x517803(928)](_0x517803(1010)), this[_0x517803(1082)] ? (this[_0x517803(1082)]["registerEvent"](_0x39cef3[_0x517803(1315)][_0x517803(683)], function() {
                  var _0x59e17f = _0x517803;
                  _0x374f8d[_0x59e17f(1429)][_0x59e17f(1200)](), _0x374f8d[_0x59e17f(1004)]();
                }), this["_socketManager"]["registerEvent"](_0x39cef3[_0x517803(1315)]["CONNECTED_EVENT"], function() {
                  var _0x4cc30d = _0x517803;
                  _0x374f8d["_cachedMessage"][_0x4cc30d(768)](function(_0x43d2c3) {
                    var _0x3303d5 = _0x4cc30d, _0x2c9c76 = _0x43d2c3["serviceId"], _0x4a7e57 = void 0 === _0x2c9c76 ? "" : _0x2c9c76, _0x43c0fc = _0x43d2c3["payload"], _0x4d3dde = void 0 === _0x43c0fc ? {} : _0x43c0fc, _0x390537 = _0x43d2c3[_0x3303d5(1008)], _0x4d69b0 = void 0 === _0x390537 ? "" : _0x390537;
                    _0x374f8d[_0x3303d5(1172)](_0x4a7e57, _0x4d3dde, _0x4d69b0);
                  }), _0x374f8d[_0x4cc30d(670)] = [], _0x374f8d[_0x4cc30d(1429)][_0x4cc30d(938)]();
                }), this[_0x517803(1082)]["registerEvent"](_0x39cef3["SocketManager"]["POOR_CONNECTION"], function() {
                  var _0x5354d6 = _0x517803;
                  _0x374f8d[_0x5354d6(1429)]["onNetworkStatus"](_0x39cef3[_0x5354d6(1315)][_0x5354d6(1151)]);
                }), this[_0x517803(1082)][_0x517803(1055)](_0x39cef3[_0x517803(1315)][_0x517803(1056)], function() {
                  var _0x404a09 = _0x517803;
                  _0x374f8d[_0x404a09(1429)]["onNetworkWarning"](_0x39cef3[_0x404a09(1315)][_0x404a09(1056)]);
                }), this[_0x517803(1082)][_0x517803(1055)](_0x39cef3["SocketManager"]["POPUP_DISCONNECTED_EVENT"], function() {
                  var _0x9154c8 = _0x517803;
                  _0x374f8d[_0x9154c8(1429)][_0x9154c8(1022)](_0x39cef3[_0x9154c8(1315)][_0x9154c8(735)]);
                }), this["_socketManager"][_0x517803(1055)](_0x39cef3["SocketManager"]["PONG_EVENT"], function(_0x22686a) {
                  var _0x5c12c4 = _0x517803;
                  _0x374f8d["_routingEventHandler"][_0x5c12c4(796)](_0x22686a);
                })) : _0x4c6313["default"]["error"](_0x517803(760));
              }, _0x10105a;
            }();
            _0x43f7f4[_0x36a554(563)] = _0x2f435d;
            var _0x2543fc = "921f6ca5-1f32-494c-8a6f-cbf1211ce37f";
          },
          9018: function _(_0x30951a, _0x4def92, _0x3b6f85) {
            var _0x42c031 = a0_0x16c1;
            var _0x42767e = this && this[_0x42c031(1002)] || function(_0xeb9346) {
              return _0xeb9346 && _0xeb9346["__esModule"] ? _0xeb9346 : {
                default: _0xeb9346
              };
            };
            Object[_0x42c031(528)](_0x4def92, "__esModule", {
              value: !0
            }), _0x4def92["RoutingEvent"] = void 0;
            var _0x303b6d = _0x42767e(_0x3b6f85(650)), _0x3d638b = function() {
              var _0x1ae06b = _0x42c031;
              function _0x5393eb() {
                var _0x5514cf = a0_0x16c1;
                this[_0x5514cf(1053)] = new (_0x303b6d[_0x5514cf(1083)])(), this[_0x5514cf(521)] = new _0x303b6d["default"]();
              }
              return _0x5393eb[_0x1ae06b(1097)][_0x1ae06b(682)] = function(_0x4aac9b, _0x5f350b, _0x35fd27) {
                var _0x5ab7c7 = _0x1ae06b;
                void 0 === _0x4aac9b && (_0x4aac9b = ""), this[_0x5ab7c7(1053)][_0x5ab7c7(1208)](_0x4aac9b, _0x5f350b), 
                this["_eventHandlerMap"][_0x5ab7c7(1208)](_0x4aac9b, _0x35fd27);
              }, _0x5393eb["prototype"]["unregisterGame"] = function(_0x3bd954) {
                var _0x8c279d = _0x1ae06b;
                void 0 === _0x3bd954 && (_0x3bd954 = ""), this["_commandHandlerMap"][_0x8c279d(1480)](_0x3bd954), 
                this[_0x8c279d(521)][_0x8c279d(1480)](_0x3bd954);
              }, _0x5393eb["prototype"][_0x1ae06b(825)] = function(_0x40b0ac, _0x29e525) {
                var _0x3a08ce = _0x1ae06b;
                void 0 === _0x40b0ac && (_0x40b0ac = ""), void 0 === _0x29e525 && (_0x29e525 = "");
                var _0x345a81 = this[_0x3a08ce(1053)][_0x3a08ce(662)](_0x40b0ac);
                _0x345a81 && _0x345a81["onAck"](_0x29e525);
              }, _0x5393eb[_0x1ae06b(1097)][_0x1ae06b(994)] = function(_0x13f4fd, _0x21ecca) {
                var _0x297195 = _0x1ae06b;
                void 0 === _0x13f4fd && (_0x13f4fd = ""), void 0 === _0x21ecca && (_0x21ecca = "");
                var _0x33d38e = this[_0x297195(1053)]["get"](_0x13f4fd);
                _0x33d38e && _0x33d38e[_0x297195(994)](_0x21ecca);
              }, _0x5393eb[_0x1ae06b(1097)][_0x1ae06b(1200)] = function() {
                var _0x21a1fe = _0x1ae06b, _0xa6aeb9 = this;
                this[_0x21a1fe(521)][_0x21a1fe(567)]()["forEach"](function(_0x432487) {
                  var _0x3a4f44 = _0x21a1fe;
                  void 0 === _0x432487 && (_0x432487 = "");
                  var _0x81f63b = _0xa6aeb9["_eventHandlerMap"][_0x3a4f44(662)](_0x432487);
                  _0x81f63b && _0x81f63b["onCannotConnect"]();
                });
              }, _0x5393eb[_0x1ae06b(1097)][_0x1ae06b(755)] = function(_0x5881f7) {
                var _0x11826f = _0x1ae06b, _0x10fac4 = this;
                this[_0x11826f(521)][_0x11826f(567)]()[_0x11826f(768)](function(_0x4f54f1) {
                  var _0x492856 = _0x11826f;
                  void 0 === _0x4f54f1 && (_0x4f54f1 = "");
                  var _0x122c89 = _0x10fac4[_0x492856(521)][_0x492856(662)](_0x4f54f1);
                  _0x122c89 && _0x122c89[_0x492856(755)] && _0x122c89["onNetworkStatus"](_0x5881f7);
                });
              }, _0x5393eb[_0x1ae06b(1097)][_0x1ae06b(730)] = function(_0x1b121d) {
                var _0x51d613 = _0x1ae06b, _0x26b06f = this;
                this[_0x51d613(521)][_0x51d613(567)]()[_0x51d613(768)](function(_0x24c3c1) {
                  var _0x3edd9f = _0x51d613;
                  void 0 === _0x24c3c1 && (_0x24c3c1 = "");
                  var _0x1263ed = _0x26b06f[_0x3edd9f(521)][_0x3edd9f(662)](_0x24c3c1);
                  _0x1263ed && _0x1263ed["onNetworkWarning"] && _0x1263ed[_0x3edd9f(730)](_0x1b121d);
                });
              }, _0x5393eb["prototype"]["onShowPopupDisconnected"] = function(_0x458c52) {
                var _0x357824 = _0x1ae06b, _0x162014 = this;
                this[_0x357824(521)][_0x357824(567)]()[_0x357824(768)](function(_0x49f731) {
                  var _0x3f5dd4 = _0x357824;
                  void 0 === _0x49f731 && (_0x49f731 = "");
                  var _0x51b30a = _0x162014[_0x3f5dd4(521)][_0x3f5dd4(662)](_0x49f731);
                  _0x51b30a && _0x51b30a[_0x3f5dd4(1022)] && _0x51b30a[_0x3f5dd4(1022)]();
                });
              }, _0x5393eb[_0x1ae06b(1097)][_0x1ae06b(775)] = function() {
                var _0x96ca26 = _0x1ae06b, _0x320d34 = this;
                this[_0x96ca26(521)]["keys"]()["forEach"](function(_0x1d3cf6) {
                  var _0x5e52bd = _0x96ca26;
                  void 0 === _0x1d3cf6 && (_0x1d3cf6 = "");
                  var _0x43ff9d = _0x320d34[_0x5e52bd(521)][_0x5e52bd(662)](_0x1d3cf6);
                  _0x43ff9d && _0x43ff9d[_0x5e52bd(775)]();
                });
              }, _0x5393eb["prototype"][_0x1ae06b(938)] = function() {
                var _0x428a0a = _0x1ae06b, _0x10ec72 = this;
                this[_0x428a0a(521)][_0x428a0a(567)]()[_0x428a0a(768)](function(_0x28784c) {
                  var _0xa3833 = _0x428a0a;
                  void 0 === _0x28784c && (_0x28784c = "");
                  var _0x3324e0 = _0x10ec72[_0xa3833(521)][_0xa3833(662)](_0x28784c);
                  _0x3324e0 && _0x3324e0["onConnected"]();
                });
              }, _0x5393eb[_0x1ae06b(1097)][_0x1ae06b(796)] = function(_0x30c865) {
                var _0x4fabd4 = _0x1ae06b, _0x2d4bf8 = this;
                this[_0x4fabd4(521)][_0x4fabd4(567)]()[_0x4fabd4(768)](function(_0x3f7e68) {
                  var _0x1016bf = _0x4fabd4;
                  void 0 === _0x3f7e68 && (_0x3f7e68 = "");
                  var _0x2d8661 = _0x2d4bf8[_0x1016bf(521)][_0x1016bf(662)](_0x3f7e68);
                  _0x2d8661 && _0x2d8661["onPong"] && _0x2d8661[_0x1016bf(796)](_0x30c865);
                });
              }, _0x5393eb[_0x1ae06b(1097)][_0x1ae06b(1260)] = function(_0x42f919) {
                var _0x1cbff5 = _0x1ae06b, _0x523e70 = this[_0x1cbff5(521)]["get"](_0x42f919["serviceId"]);
                _0x523e70 && _0x523e70[_0x1cbff5(1260)](_0x42f919);
              }, _0x5393eb[_0x1ae06b(1097)][_0x1ae06b(1300)] = function() {
                var _0x2175aa = _0x1ae06b;
                this[_0x2175aa(1053)]["clear"](), this[_0x2175aa(521)]["clear"]();
              }, _0x5393eb;
            }();
            _0x4def92[_0x42c031(1201)] = _0x3d638b;
          },
          2681: function _(_0x37f877, _0x1c6f36) {
            var _0x92886 = a0_0x16c1;
            Object[_0x92886(528)](_0x1c6f36, "__esModule", {
              value: !0
            }), _0x1c6f36[_0x92886(722)] = void 0;
            var _0x33c460 = function() {
              var _0x17afda = _0x92886;
              function _0x7a9548(_0x272f7c) {
                var _0x3f76fb = a0_0x16c1;
                void 0 === _0x272f7c && (_0x272f7c = 3), this[_0x3f76fb(1441)] = {}, this["_ids"] = 0, 
                this[_0x3f76fb(1321)] = _0x272f7c;
              }
              return _0x7a9548[_0x17afda(1097)][_0x17afda(837)] = function() {
                var _0x1da835 = _0x17afda;
                return Object[_0x1da835(567)](this[_0x1da835(1441)])["length"] > 0;
              }, _0x7a9548[_0x17afda(1097)][_0x17afda(881)] = function(_0x33f65f) {
                var _0x435c45 = _0x17afda, _0x28a858 = this[_0x435c45(1197)]++;
                return this["_ackPacket"][_0x28a858] = {
                  counter: 0,
                  message: _0x33f65f
                }, _0x28a858;
              }, _0x7a9548[_0x17afda(1097)][_0x17afda(868)] = function(_0x586100) {
                var _0x253a08 = _0x17afda, _0x1ae77d = this;
                Object["keys"](this[_0x253a08(1441)])[_0x253a08(768)](function(_0x2a653d) {
                  var _0x28ad4d = _0x253a08, _0x225814 = _0x1ae77d[_0x28ad4d(1441)][_0x2a653d][_0x28ad4d(1175)];
                  _0x586100(_0x225814) && delete _0x1ae77d[_0x28ad4d(1441)][_0x2a653d];
                });
              }, _0x7a9548[_0x17afda(1097)][_0x17afda(963)] = function(_0x7b860d, _0x778da3) {
                var _0xd1c7fe = _0x17afda, _0x45f32f, _0x34c222 = this;
                Object[_0xd1c7fe(567)](this["_ackPacket"])[_0xd1c7fe(768)](function(_0x4c6e7e) {
                  var _0x18c7a9 = _0xd1c7fe;
                  0 === (_0x45f32f = _0x34c222[_0x18c7a9(1441)][_0x4c6e7e])[_0x18c7a9(698)] ? _0x45f32f[_0x18c7a9(698)]++ : _0x45f32f[_0x18c7a9(698)] < _0x34c222[_0x18c7a9(1321)] ? (_0x7b860d(_0x4c6e7e, _0x45f32f[_0x18c7a9(1175)], _0x45f32f[_0x18c7a9(698)]), 
                  _0x45f32f[_0x18c7a9(698)]++) : (delete _0x34c222[_0x18c7a9(1441)][_0x4c6e7e], _0x778da3(_0x45f32f[_0x18c7a9(1175)]));
                });
              }, _0x7a9548[_0x17afda(1097)][_0x17afda(1407)] = function(_0x5e4937) {
                var _0x442844 = _0x17afda, _0x44bc98 = this[_0x442844(1441)][_0x5e4937];
                return delete this[_0x442844(1441)][_0x5e4937], _0x44bc98 ? _0x44bc98["message"] : null;
              }, _0x7a9548[_0x17afda(1097)]["updateAllCounter"] = function(_0x5302aa) {
                var _0x45cd82 = _0x17afda, _0x5a6a5d = this;
                Object["keys"](this[_0x45cd82(1441)])[_0x45cd82(768)](function(_0x57f2fd) {
                  var _0x3f5354 = _0x45cd82;
                  _0x5a6a5d["_ackPacket"][_0x57f2fd][_0x3f5354(698)] = _0x5302aa;
                });
              }, _0x7a9548[_0x17afda(1097)][_0x17afda(1286)] = function(_0x520ec0, _0xf28573) {
                var _0x3667f1 = _0x17afda;
                this[_0x3667f1(1441)][_0x520ec0][_0x3667f1(698)] = _0xf28573;
              }, _0x7a9548[_0x17afda(1097)][_0x17afda(906)] = function() {
                var _0x45d78c = _0x17afda;
                this[_0x45d78c(1441)] = {};
              }, _0x7a9548;
            }();
            _0x1c6f36[_0x92886(722)] = _0x33c460;
          },
          7567: function _(_0x3a5d36, _0x55b121, _0x1dffdb) {
            var _0x262136 = a0_0x16c1;
            var _0x15860a = this && this[_0x262136(1002)] || function(_0x190e85) {
              return _0x190e85 && _0x190e85["__esModule"] ? _0x190e85 : {
                default: _0x190e85
              };
            };
            Object[_0x262136(528)](_0x55b121, _0x262136(1169), {
              value: !0
            }), _0x55b121[_0x262136(1315)] = void 0;
            var _0x2c1a35 = _0x1dffdb(2681), _0x3809ee = _0x15860a(_0x1dffdb(2025)), _0x5388bf = _0x15860a(_0x1dffdb(7187)), _0x58da68 = _0x1dffdb(6809), _0x419b32 = _0x15860a(_0x1dffdb(9473)), _0x2d1f18 = _0x1dffdb(4594), _0x4603f7 = "v5", _0x14a8a2 = "v4", _0x584723 = "v5", _0x56ccda = function() {
              var _0x5bf98e = _0x262136;
              function _0xf0328a(_0x3dd45c) {
                var _0x4fb60f = a0_0x16c1;
                this[_0x4fb60f(797)] = [], this["_pendingSubscribeChannelList"] = [], this[_0x4fb60f(844)] = 0, 
                this[_0x4fb60f(1450)] = _0x4603f7, this["_latency"] = {
                  listLastLatency: [],
                  maxLastLatency: 5,
                  currentLatencyIdx: -1,
                  averageLatency: 150
                }, this[_0x4fb60f(1418)] = 0, this[_0x4fb60f(643)] = null, this[_0x4fb60f(935)] = "", 
                this[_0x4fb60f(866)] = null, this[_0x4fb60f(971)] = this[_0x4fb60f(1005)](_0x3dd45c), 
                this["_emitter"] = new (_0x5388bf[_0x4fb60f(1083)])(), this[_0x4fb60f(756)] = new (_0x2c1a35[_0x4fb60f(722)])(this[_0x4fb60f(971)][_0x4fb60f(1421)]), 
                this["_status"] = _0xf0328a[_0x4fb60f(1065)], this["_initNewConnection"]();
              }
              return _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1438)] = function() {
                var _0x2dfe5b = _0x5bf98e;
                return "token="["concat"](this[_0x2dfe5b(971)][_0x2dfe5b(645)], _0x2dfe5b(1385))[_0x2dfe5b(767)](_0x4603f7, "&env=")["concat"](this[_0x2dfe5b(971)][_0x2dfe5b(622)], "&games=")[_0x2dfe5b(767)](this["_opt"][_0x2dfe5b(1365)], "&ssid=")[_0x2dfe5b(767)](this[_0x2dfe5b(971)][_0x2dfe5b(792)]);
              }, _0xf0328a["prototype"][_0x5bf98e(813)] = function() {
                var _0x2fde11 = _0x5bf98e, _0x20391a = this;
                Object[_0x2fde11(567)](_0x58da68[_0x2fde11(1080)])[_0x2fde11(768)](function(_0x3d5c2e) {
                  var _0x1bff0d = _0x2fde11;
                  delete _0x58da68[_0x1bff0d(1080)][_0x3d5c2e];
                }), this[_0x2fde11(761)] !== _0xf0328a[_0x2fde11(1373)] ? (this["_socket"] = _0x58da68(""[_0x2fde11(767)](this[_0x2fde11(971)]["url"], "/?")[_0x2fde11(767)](this[_0x2fde11(1438)]()), {
                  transports: this[_0x2fde11(971)][_0x2fde11(637)],
                  reconnection: !0,
                  forceNew: this[_0x2fde11(971)][_0x2fde11(1178)],
                  reconnectionAttempts: this[_0x2fde11(971)][_0x2fde11(978)] || 10,
                  reconnectionDelay: this["_opt"][_0x2fde11(940)] || 500,
                  randomizationFactor: 0,
                  rememberUpgrade: !0,
                  timestampRequests: !0,
                  parser: _0x419b32["default"]
                }), this["_reconnect_attempt"] = 0, this["_handleReponseMessage"](this["_socket"]), 
                this[_0x2fde11(1131)](this["_socket"]), this[_0x2fde11(797)][_0x2fde11(768)](function(_0x18fda6) {
                  var _0x7e6fd1 = _0x2fde11;
                  _0x20391a[_0x7e6fd1(1262)](_0x18fda6);
                }), _0x3809ee[_0x2fde11(1083)]["debug"](_0x2fde11(1223))) : _0x3809ee[_0x2fde11(1083)][_0x2fde11(928)]("SocketManager status KILLED, not init new connection!");
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1005)] = function(_0x4f161b) {
                var _0x4e631e = _0x5bf98e;
                return {
                  url: _0x4f161b[_0x4e631e(596)] || "",
                  token: _0x4f161b["token"] || "",
                  numberRetrySendingMessage: _0x4f161b["numberRetrySendingMessage"] || 2,
                  forceNew: _0x4f161b["forceNew"] || !1,
                  transports: _0x4f161b[_0x4e631e(637)] || [ _0x4e631e(799) ],
                  reconnectionDelay: _0x4f161b[_0x4e631e(940)] || 1e3,
                  reconnectionDelayMax: _0x4f161b[_0x4e631e(855)] || 3e3,
                  reconnectionAttempts: _0x4f161b["reconnectionAttempts"] || 3,
                  nextTickIn: _0x4f161b[_0x4e631e(892)] || 200,
                  pingTimeoutWarning: 600,
                  env: _0x4f161b[_0x4e631e(622)] || _0x4e631e(1111),
                  games: _0x4f161b[_0x4e631e(1365)] || _0x4e631e(926),
                  ssid: _0x4f161b[_0x4e631e(792)] || _0x4f161b[_0x4e631e(645)] || ""
                };
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(701)] = function(_0x5f1baf) {
                var _0x3d63d9 = _0x5bf98e, _0x17625d = this;
                _0x5f1baf["on"](_0xf0328a["SOCKET_RESPONSE_EVENT"], function(_0x307550, _0x1746a2) {
                  var _0x3885c7 = a0_0x16c1;
                  _0x1746a2 && _0x1746a2(), _0x307550 && (_0x307550["v"] === _0x14a8a2 && (_0x307550 = {
                    messageId: _0x307550["id"],
                    data: {
                      event: _0x307550["da"]["ev"],
                      svt: _0x307550["da"][_0x3885c7(1462)],
                      serviceId: _0x307550["da"][_0x3885c7(1426)],
                      eventId: _0x307550["da"][_0x3885c7(733)],
                      data: _0x307550["da"]["da"],
                      channelType: _0x307550["da"]["ch"]
                    },
                    version: _0x307550["v"]
                  }), _0x17625d[_0x3885c7(651)][_0x3885c7(789)](_0xf0328a[_0x3885c7(828)], _0x307550));
                }), _0x5f1baf["on"](_0xf0328a[_0x3d63d9(1333)], function(_0x3cd7b1, _0x2f4ad0) {
                  var _0x488355 = _0x3d63d9;
                  if (_0x2f4ad0 && _0x2f4ad0(), _0x3cd7b1) {
                    for (var _0x584af5 = new Uint8Array(_0x3cd7b1), _0x411b9c = 0; _0x411b9c < _0x584af5[_0x488355(1253)]; _0x411b9c++) _0x584af5[_0x411b9c]--;
                    _0x3cd7b1 = _0x2d1f18[_0x488355(944)][_0x488355(530)](_0x584af5), _0x3809ee[_0x488355(1083)][_0x488355(928)]("SocketManagerNewMessage: %s", _0x3cd7b1), 
                    _0x3cd7b1 = {
                      messageId: (_0x3cd7b1 = JSON[_0x488355(655)](_0x3cd7b1))["id"],
                      data: {
                        event: _0x3cd7b1["da"]["ev"],
                        svt: _0x3cd7b1["da"][_0x488355(1462)],
                        serviceId: _0x3cd7b1["da"][_0x488355(1426)],
                        eventId: _0x3cd7b1["da"][_0x488355(733)],
                        data: _0x3cd7b1["da"]["da"],
                        channelType: _0x3cd7b1["da"]["ch"]
                      },
                      version: _0x3cd7b1["v"]
                    }, _0x17625d[_0x488355(651)][_0x488355(789)](_0xf0328a[_0x488355(828)], _0x3cd7b1);
                  }
                }), _0x5f1baf["on"](_0xf0328a[_0x3d63d9(834)], function(_0x46f676, _0x543b66) {
                  var _0xe0fa69 = _0x3d63d9;
                  if (_0x543b66 && _0x543b66(), _0x46f676 && _0x17625d[_0xe0fa69(866)]) {
                    for (var _0x540600 = new Uint8Array(_0x46f676), _0x551611 = 0; _0x551611 < _0x540600[_0xe0fa69(1253)]; _0x551611++) _0x540600[_0x551611] = _0x540600[_0x551611] ^ _0x17625d[_0xe0fa69(866)][_0x551611 % _0x17625d[_0xe0fa69(866)]["length"]];
                    _0x46f676 = _0x2d1f18[_0xe0fa69(944)]["decode"](_0x540600), _0x3809ee[_0xe0fa69(1083)][_0xe0fa69(928)](_0xe0fa69(723), _0x46f676), 
                    _0x46f676 = {
                      messageId: (_0x46f676 = JSON[_0xe0fa69(655)](_0x46f676))["id"],
                      data: {
                        event: _0x46f676["da"]["ev"],
                        svt: _0x46f676["da"][_0xe0fa69(1462)],
                        serviceId: _0x46f676["da"][_0xe0fa69(1426)],
                        eventId: _0x46f676["da"][_0xe0fa69(733)],
                        data: _0x46f676["da"]["da"],
                        channelType: _0x46f676["da"]["ch"]
                      },
                      version: _0x46f676["v"]
                    }, _0x17625d["_emitter"][_0xe0fa69(789)](_0xf0328a[_0xe0fa69(828)], _0x46f676);
                  } else _0x3809ee[_0xe0fa69(1083)][_0xe0fa69(709)](_0xe0fa69(1486), _0x46f676, _0x17625d[_0xe0fa69(866)]);
                }), _0x5f1baf["on"](_0x3d63d9(937), function(_0x106dd5) {
                  var _0x599aab = _0x3d63d9;
                  _0x106dd5 && (_0x3809ee[_0x599aab(1083)]["debug"](_0x599aab(502), _0x106dd5), _0x17625d["_emitter"][_0x599aab(789)](_0xf0328a["NEW_MESSAGE_EVENT"], {
                    messageId: _0x106dd5["messageId"],
                    data: {
                      event: _0x599aab(937),
                      eventId: _0x106dd5["messageId"],
                      serviceId: _0x106dd5[_0x599aab(922)][_0x599aab(1027)],
                      channelType: _0x599aab(1150),
                      data: _0x106dd5["data"]
                    }
                  }));
                }), _0x5f1baf["on"]("update-token", function(_0x1a0276) {
                  var _0x2cf8f5 = _0x3d63d9, _0x291878 = _0x1a0276[_0x2cf8f5(645)];
                  _0x17625d[_0x2cf8f5(651)]["emit"](_0xf0328a[_0x2cf8f5(788)], {
                    token: _0x291878
                  }), _0x17625d[_0x2cf8f5(859)](_0x291878);
                });
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1131)] = function(_0x441f77) {
                var _0x5039be = _0x5bf98e, _0x4a51dd, _0x124962, _0x221c7e, _0x256edc = this, _0x3c1a9c = function _0x3c1a9c() {
                  var _0x3373be = a0_0x16c1, _0x1677cf = !1, _0x162f4a = [];
                  if (_0x256edc["_packetManager"]["iteratePacket"](function(_0x29440f, _0x55d098, _0x3430f7) {
                    var _0x4f730b = a0_0x16c1;
                    _0x256edc[_0x4f730b(756)]["updateCounter"](_0x29440f, _0x3430f7 + 1);
                  }, function(_0xc57f72) {
                    var _0x2a6e40 = a0_0x16c1;
                    _0x162f4a["push"](_0xc57f72[_0x2a6e40(1008)]), _0x1677cf = !0;
                  }), _0x1677cf && _0x162f4a["forEach"](function(_0x545ee6) {
                    var _0x327657 = a0_0x16c1;
                    _0x3809ee[_0x327657(1083)][_0x327657(928)](_0x327657(1103), _0x545ee6), _0x256edc[_0x327657(651)]["emit"](_0xf0328a[_0x327657(728)], _0x545ee6);
                  }), _0x256edc[_0x3373be(756)]["hasPacket"]()) {
                    var _0x1cae8e = _0x256edc["_latency"][_0x3373be(1100)];
                    _0x4a51dd = setTimeout(function() {
                      _0x3c1a9c();
                    }, _0x1cae8e);
                  } else _0x4a51dd = setTimeout(function() {
                    _0x3c1a9c();
                  }, 150);
                }, _0x24dc1c = function _0x24dc1c() {
                  var _0x3af7cc = a0_0x16c1;
                  _0x3809ee[_0x3af7cc(1083)][_0x3af7cc(928)]("SocketManager - Clear interval sending message!"), 
                  clearTimeout(_0x4a51dd), clearTimeout(_0x124962), clearTimeout(_0x221c7e), _0x256edc[_0x3af7cc(756)]["clearAll"]();
                };
                _0x441f77["on"](_0x5039be(1244), function() {
                  var _0x22b9db = _0x5039be;
                  _0x256edc[_0x22b9db(761)] = _0xf0328a["STATUS_ALIVE"], _0x256edc[_0x22b9db(844)] = 0, 
                  _0x256edc[_0x22b9db(1424)][_0x22b9db(1253)] > 0 && _0x256edc["_pendingSubscribeChannelList"][_0x22b9db(768)](function(_0x4b11db) {
                    var _0x56a161 = _0x22b9db;
                    _0x256edc[_0x56a161(516)](_0x4b11db);
                  }), _0x256edc[_0x22b9db(1424)] = [], clearTimeout(_0x124962), clearTimeout(_0x221c7e), 
                  _0x3809ee["default"]["debug"](_0x22b9db(1382));
                }), _0x441f77["on"](_0x5039be(1133), function() {
                  var _0x376e41 = _0x5039be;
                  _0x3809ee[_0x376e41(1083)][_0x376e41(928)](_0x376e41(1255)), _0x3809ee["default"][_0x376e41(928)](_0x376e41(1364)), 
                  clearTimeout(_0x4a51dd), _0x256edc[_0x376e41(866)] = null, _0x124962 = setTimeout(function() {
                    var _0x1cd714 = _0x376e41;
                    _0x256edc[_0x1cd714(651)][_0x1cd714(789)](_0xf0328a[_0x1cd714(1056)]);
                  }, 1e4), _0x221c7e = setTimeout(function() {
                    var _0x48e2ba = _0x376e41;
                    _0x256edc["_emitter"][_0x48e2ba(789)](_0xf0328a[_0x48e2ba(735)]);
                  }, 15e3);
                }), _0x441f77["on"](_0x5039be(576), function(_0x4db5f0) {
                  var _0x4002b4 = _0x5039be;
                  _0x256edc[_0x4002b4(1418)] = _0x4db5f0;
                }), _0x441f77["on"](_0x5039be(991), function(_0xf04908) {
                  var _0x1005d6 = _0x5039be;
                  _0x3809ee[_0x1005d6(1083)]["debug"](_0x1005d6(654)[_0x1005d6(767)](_0x256edc[_0x1005d6(1418)], _0x1005d6(1238))["concat"](_0x256edc[_0x1005d6(971)][_0x1005d6(978)])), 
                  _0x256edc[_0x1005d6(1418)] >= _0x256edc[_0x1005d6(971)][_0x1005d6(978)] ? (_0x256edc[_0x1005d6(1477)](), 
                  _0x256edc[_0x1005d6(761)] = _0xf0328a[_0x1005d6(1373)], _0x24dc1c(), _0x3809ee[_0x1005d6(1083)][_0x1005d6(928)](_0x1005d6(1380)), 
                  _0x256edc["_emitter"][_0x1005d6(789)](_0xf0328a[_0x1005d6(683)])) : _0x256edc[_0x1005d6(651)][_0x1005d6(789)](_0xf0328a[_0x1005d6(1151)]);
                }), _0x441f77["on"](_0x5039be(901), function(_0x404b02) {
                  var _0x551a63 = _0x5039be;
                  _0x3809ee[_0x551a63(1083)]["debug"](_0x551a63(1291)), _0x256edc[_0x551a63(1477)](), 
                  _0x256edc[_0x551a63(761)] = _0xf0328a[_0x551a63(1373)], _0x24dc1c(), _0x3809ee[_0x551a63(1083)][_0x551a63(928)]("SocketManager - emit event can-not-connect!"), 
                  _0x256edc[_0x551a63(651)][_0x551a63(789)](_0xf0328a["CAN_NOT_CONNECT_EVENT"]);
                }), _0x441f77["on"](_0x5039be(953), function() {
                  var _0x579264 = _0x5039be;
                  _0x3809ee["default"][_0x579264(928)](_0x579264(953));
                }), _0x441f77["on"](_0x5039be(1140), function(_0x4395d7) {
                  var _0x1c39a6 = _0x5039be;
                  _0x4395d7 > _0x256edc[_0x1c39a6(971)][_0x1c39a6(986)] ? _0x256edc[_0x1c39a6(844)]++ : _0x256edc[_0x1c39a6(844)] = 0, 
                  _0x256edc["_countPingOverTime"] >= 5 && (_0x256edc["_emitter"][_0x1c39a6(789)](_0xf0328a[_0x1c39a6(1151)]), 
                  _0x256edc["_countPingOverTime"] = 0), _0x256edc[_0x1c39a6(1123)]["currentLatencyIdx"] = ++_0x256edc[_0x1c39a6(1123)][_0x1c39a6(997)] % _0x256edc[_0x1c39a6(1123)][_0x1c39a6(1284)], 
                  _0x256edc[_0x1c39a6(1123)][_0x1c39a6(820)][_0x256edc[_0x1c39a6(1123)][_0x1c39a6(997)]] = _0x4395d7, 
                  _0x256edc["_latency"][_0x1c39a6(1100)] = _0x256edc[_0x1c39a6(1123)]["listLastLatency"][_0x1c39a6(1388)](function(_0x282480, _0x3b017a) {
                    return _0x282480 + _0x3b017a;
                  }, 0) / _0x256edc[_0x1c39a6(1123)][_0x1c39a6(820)][_0x1c39a6(1253)], _0x256edc[_0x1c39a6(1123)]["averageLatency"] < 150 && (_0x256edc[_0x1c39a6(1123)][_0x1c39a6(1100)] = 150), 
                  _0x3809ee[_0x1c39a6(1083)][_0x1c39a6(928)](_0x1c39a6(987), _0x4395d7, _0x256edc[_0x1c39a6(1123)]["averageLatency"]), 
                  _0x256edc[_0x1c39a6(651)][_0x1c39a6(789)](_0xf0328a["PONG_EVENT"], {
                    latency: _0x4395d7,
                    averageLatency: _0x256edc[_0x1c39a6(1123)][_0x1c39a6(1100)]
                  });
                }), _0x441f77["on"](_0x5039be(948), function(_0x627f) {
                  var _0x5308fd = _0x5039be;
                  _0x627f[_0x5308fd(1459)];
                  var _0x264b36 = _0x627f[_0x5308fd(1337)];
                  _0x256edc["_serverSocketVersion"] = _0x4603f7, _0x256edc[_0x5308fd(935)] = _0x264b36, 
                  _0x256edc["updateKeyAB"](_0x264b36), _0x256edc[_0x5308fd(651)]["emit"](_0xf0328a[_0x5308fd(1358)]), 
                  _0x3c1a9c();
                });
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(895)] = function(_0x1d03bd, _0x3a610f, _0x66b48c) {
                var _0xdd9b41 = _0x5bf98e, _0x1757e0 = this;
                if (this[_0xdd9b41(643)] && this[_0xdd9b41(643)][_0xdd9b41(1257)]) {
                  var _0x40fb67 = _0x3a610f;
                  this[_0xdd9b41(1450)] !== _0x14a8a2 && this[_0xdd9b41(1450)] !== _0x584723 || (_0x40fb67 = {
                    id: _0x3a610f[_0xdd9b41(1008)],
                    da: {
                      ev: _0x3a610f[_0xdd9b41(922)][_0xdd9b41(839)],
                      da: _0x3a610f[_0xdd9b41(922)][_0xdd9b41(922)],
                      v: _0x3a610f["data"][_0xdd9b41(1389)] ? _0x3a610f["data"]["version"] : 1
                    }
                  });
                  var _0x2da096 = this[_0xdd9b41(835)](_0x1d03bd, _0x40fb67);
                  this["_socket"][_0xdd9b41(1203)][_0x1d03bd] = function() {
                    var _0x57624b = _0xdd9b41, _0x18ece2 = _0x1757e0["_packetManager"][_0x57624b(1407)](_0x1d03bd);
                    _0x18ece2 && (_0x3809ee["default"][_0x57624b(928)](_0x57624b(1444), _0x18ece2[_0x57624b(1008)]), 
                    _0x1757e0["_emitter"][_0x57624b(789)](_0xf0328a[_0x57624b(774)], _0x18ece2[_0x57624b(1008)]));
                  }, _0x3809ee["default"][_0xdd9b41(928)](_0xdd9b41(1014), _0x66b48c, _0x3a610f[_0xdd9b41(1008)]), 
                  this[_0xdd9b41(643)][_0xdd9b41(1230)](_0x2da096);
                } else this["_packetManager"][_0xdd9b41(1286)](_0x1d03bd, _0x66b48c + 1);
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(835)] = function(_0x181c42, _0x484306) {
                var _0x3bd108 = _0x5bf98e;
                return {
                  type: this[_0x3bd108(560)](),
                  options: {
                    compress: !0
                  },
                  id: _0x181c42,
                  data: this["_encrypt"](_0x484306)
                };
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(560)] = function() {
                var _0x433719 = _0x5bf98e;
                return this[_0x433719(1450)] === _0x584723 ? 5 : 2;
              }, _0xf0328a[_0x5bf98e(1097)]["_encrypt"] = function(_0x1f3620) {
                var _0x38349b = _0x5bf98e, _0x423dfe = _0xf0328a[_0x38349b(1153)];
                return this[_0x38349b(1450)] === _0x14a8a2 ? _0x423dfe = _0xf0328a[_0x38349b(1478)] : this[_0x38349b(1450)] === _0x584723 && (_0x1f3620 = JSON[_0x38349b(903)](_0x1f3620), 
                _0x423dfe = _0xf0328a[_0x38349b(993)], _0x1f3620 = this[_0x38349b(1453)](_0x1f3620)), 
                [ _0x423dfe, _0x1f3620 ];
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(894)] = function(_0x15137) {
                var _0x4c014a = _0x5bf98e;
                for (var _0x188686 = _0x2d1f18["TextEncoder"][_0x4c014a(1058)](_0x15137), _0x456a1e = 0; _0x456a1e < _0x188686[_0x4c014a(1253)]; _0x456a1e++) _0x188686[_0x456a1e]++;
                return _0x188686["buffer"];
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1453)] = function(_0x36f0ad) {
                var _0x329bea = _0x5bf98e;
                if (this[_0x329bea(866)]) {
                  for (var _0x41f769 = _0x2d1f18[_0x329bea(1345)][_0x329bea(1058)](_0x36f0ad), _0x51525e = 0; _0x51525e < _0x41f769["length"]; _0x51525e++) _0x41f769[_0x51525e] = _0x41f769[_0x51525e] ^ this[_0x329bea(866)][_0x51525e % this[_0x329bea(866)][_0x329bea(1253)]];
                  return _0x41f769["buffer"];
                }
                return _0x3809ee[_0x329bea(1083)]["error"](_0x329bea(564), _0x36f0ad), null;
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(859)] = function(_0x79ef5b) {
                var _0xc42044 = _0x5bf98e;
                this[_0xc42044(643)] && (this["_opt"]["token"] = _0x79ef5b, this["_socket"]["io"][_0xc42044(1072)][_0xc42044(1269)] = this[_0xc42044(1438)](), 
                this["_socket"]["io"][_0xc42044(856)] = ""["concat"](this[_0xc42044(971)]["url"], "/?")["concat"](this["buildSocketUrlQueryParam"]())), 
                this[_0xc42044(971)]["token"] = _0x79ef5b;
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1172)] = function(_0x449c02) {
                var _0x14e223 = _0x5bf98e;
                _0x3809ee[_0x14e223(1083)][_0x14e223(928)](_0x14e223(1019), _0x449c02);
                var _0xd89b96 = this[_0x14e223(756)][_0x14e223(881)](_0x449c02);
                this["_sendPacket"](_0xd89b96, _0x449c02, 0);
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(868)] = function(_0x245592) {
                var _0x383cbd = _0x5bf98e;
                _0x245592 = _0x245592 || [], this[_0x383cbd(756)][_0x383cbd(868)](function(_0x560a55) {
                  var _0x22476d = _0x383cbd;
                  return _0x245592[_0x22476d(1328)](_0x560a55[_0x22476d(1008)]);
                });
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(547)] = function(_0x16020e) {
                var _0x28ac69 = _0x5bf98e;
                _0x3809ee[_0x28ac69(1083)][_0x28ac69(928)](_0x28ac69(864), _0x16020e), this[_0x28ac69(643)][_0x28ac69(789)](_0x28ac69(1469), _0x16020e);
              }, _0xf0328a["prototype"]["registerEvent"] = function(_0x5a5e5a, _0x2b25c1) {
                var _0x446f25 = _0x5bf98e;
                this[_0x446f25(651)]["on"](_0x5a5e5a, _0x2b25c1);
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1190)] = function(_0x49a084, _0x4f3ea2) {
                var _0x2cad1b = _0x5bf98e;
                this["_emitter"][_0x2cad1b(790)](_0x49a084, _0x4f3ea2);
              }, _0xf0328a["prototype"][_0x5bf98e(516)] = function(_0x3febf6) {
                var _0x2c9081 = _0x5bf98e;
                _0x3febf6 && (_0x3febf6 = _0x3febf6[_0x2c9081(1218)](_0x2c9081(1150), "p"), this[_0x2c9081(797)][_0x2c9081(1328)](_0x3febf6) || (this[_0x2c9081(643)]["connected"] ? (this["_subscribeChannelList"][_0x2c9081(598)](_0x3febf6), 
                this[_0x2c9081(1262)](_0x3febf6)) : this["_pendingSubscribeChannelList"][_0x2c9081(598)](_0x3febf6)));
              }, _0xf0328a["prototype"][_0x5bf98e(1262)] = function(_0x5a3801) {
                var _0x40cf46 = _0x5bf98e, _0x5b052e = _0x58da68(""[_0x40cf46(767)](this[_0x40cf46(971)][_0x40cf46(596)], "/")[_0x40cf46(767)](_0x5a3801, _0x40cf46(1094))[_0x40cf46(767)](this[_0x40cf46(971)][_0x40cf46(645)], _0x40cf46(1385))[_0x40cf46(767)](_0x4603f7));
                this[_0x40cf46(701)](_0x5b052e);
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1322)] = function(_0x256f5b) {
                var _0x381817 = _0x5bf98e;
                _0x256f5b && (_0x256f5b = _0x256f5b[_0x381817(1218)](_0x381817(1150), "p"), this["_subscribeChannelList"]["includes"](_0x256f5b) && (this[_0x381817(797)][_0x381817(1464)](this["_subscribeChannelList"][_0x381817(1224)](_0x256f5b), 1), 
                this["_unSubscribe"](_0x256f5b)), this["_pendingSubscribeChannelList"][_0x381817(1328)](_0x256f5b) && this[_0x381817(1424)][_0x381817(1464)](this[_0x381817(1424)][_0x381817(1224)](_0x256f5b), 1));
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1263)] = function(_0x419157) {
                var _0x45dc80 = _0x5bf98e, _0x1c372c = this[_0x45dc80(643)]["io"][_0x45dc80(1017)]["/"[_0x45dc80(767)](_0x419157)];
                _0x1c372c && (_0x1c372c[_0x45dc80(1012)](), _0x1c372c["removeAllListeners"](), delete this[_0x45dc80(643)]["io"][_0x45dc80(1017)]["/"[_0x45dc80(767)](_0x419157)]);
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1477)] = function() {
                var _0xb10e4f = _0x5bf98e, _0x180bc0 = this;
                Object["keys"](this[_0xb10e4f(643)]["io"][_0xb10e4f(1017)])[_0xb10e4f(768)](function(_0x57cb46) {
                  var _0x5077c6 = _0xb10e4f, _0x2c45c8 = _0x180bc0["_socket"]["io"][_0x5077c6(1017)][_0x57cb46];
                  _0x2c45c8 && (_0x2c45c8[_0x5077c6(1012)](), _0x2c45c8[_0x5077c6(1050)](), delete _0x180bc0[_0x5077c6(643)]["io"]["nsps"][_0x57cb46]);
                });
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(1012)] = function() {
                var _0x268227 = _0x5bf98e;
                this[_0x268227(1477)](), this[_0x268227(761)] = _0xf0328a[_0x268227(1373)], this[_0x268227(651)][_0x268227(1050)](), 
                this[_0x268227(756)][_0x268227(906)]();
              }, _0xf0328a["prototype"][_0x5bf98e(1354)] = function() {
                var _0xe689f6 = _0x5bf98e;
                this["_close"](), this[_0xe689f6(813)]();
              }, _0xf0328a["prototype"]["isSocketAvailable"] = function() {
                var _0x4ff8a0 = _0x5bf98e;
                return this[_0x4ff8a0(761)] !== _0xf0328a[_0x4ff8a0(1373)];
              }, _0xf0328a["prototype"]["isAbleSendingData"] = function() {
                var _0x569f04 = _0x5bf98e;
                return !!this[_0x569f04(866)];
              }, _0xf0328a[_0x5bf98e(1097)][_0x5bf98e(959)] = function(_0x4fb0de) {
                var _0x3403ce = _0x5bf98e, _0x2f14e0 = _0x3403ce(874);
                _0x4fb0de && (_0x2f14e0 = _0x4fb0de[_0x3403ce(533)](9, 13));
                for (var _0x3ca555 = new ArrayBuffer(4), _0x40ed49 = new Uint8Array(_0x3ca555), _0x3c1590 = 0; _0x3c1590 < _0x2f14e0[_0x3403ce(1253)]; _0x3c1590++) _0x40ed49[_0x3c1590] = _0x2f14e0["charCodeAt"](_0x3c1590) % 128;
                this["_keyAB"] = _0x40ed49;
              }, _0xf0328a[_0x5bf98e(627)] = "q", _0xf0328a[_0x5bf98e(1451)] = "p", _0xf0328a[_0x5bf98e(1333)] = "1", 
              _0xf0328a["SOCKET_RESPONSE_EVENT_V5_2"] = "2", _0xf0328a["SOCKET_REQUEST_EVENT_V3"] = "q", 
              _0xf0328a[_0x5bf98e(1478)] = "q4", _0xf0328a[_0x5bf98e(1125)] = _0x5bf98e(527), 
              _0xf0328a[_0x5bf98e(993)] = _0x5bf98e(715), _0xf0328a[_0x5bf98e(1358)] = "connected", 
              _0xf0328a[_0x5bf98e(683)] = _0x5bf98e(1379), _0xf0328a[_0x5bf98e(728)] = _0x5bf98e(857), 
              _0xf0328a[_0x5bf98e(774)] = _0x5bf98e(1472), _0xf0328a[_0x5bf98e(828)] = "new-message", 
              _0xf0328a[_0x5bf98e(1432)] = _0x5bf98e(581), _0xf0328a[_0x5bf98e(1391)] = "ping-event", 
              _0xf0328a[_0x5bf98e(788)] = _0x5bf98e(1009), _0xf0328a[_0x5bf98e(1151)] = _0x5bf98e(688), 
              _0xf0328a[_0x5bf98e(735)] = _0x5bf98e(1411), _0xf0328a[_0x5bf98e(1056)] = _0x5bf98e(1187), 
              _0xf0328a["STATUS_INIT"] = _0x5bf98e(1025), _0xf0328a["STATUS_ALIVE"] = "alive", 
              _0xf0328a[_0x5bf98e(1373)] = _0x5bf98e(1206), _0xf0328a;
            }();
            _0x55b121[_0x262136(1315)] = _0x56ccda;
          },
          53: function _(_0x45a9a0, _0x4794bb, _0x359bba) {
            var _0x249981 = a0_0x16c1;
            var _0x612276 = _0x359bba(5826), _0x37553d = _0x359bba(5146), _0x180f4e = Object[_0x249981(1097)][_0x249981(525)], _0x37c8c8 = _0x249981(646) == ("undefined" === typeof Blob ? "undefined" : _typeof(Blob)) || "undefined" != typeof Blob && _0x249981(875) === _0x180f4e["call"](Blob), _0x1f61c0 = _0x249981(646) == ("undefined" === typeof File ? "undefined" : _typeof(File)) || _0x249981(635) != ("undefined" === typeof File ? "undefined" : _typeof(File)) && _0x249981(510) === _0x180f4e[_0x249981(869)](File);
            function _0xf6ceeb(_0x60af86, _0x15459c) {
              var _0x19d73b = _0x249981;
              if (!_0x60af86) return _0x60af86;
              if (_0x37553d(_0x60af86)) {
                var _0x3e49c8 = {
                  p: 1,
                  n: _0x15459c[_0x19d73b(1253)]
                };
                return _0x15459c[_0x19d73b(598)](_0x60af86), _0x3e49c8;
              }
              if (_0x612276(_0x60af86)) {
                for (var _0x3a7d55 = new Array(_0x60af86["length"]), _0x5c6dde = 0; _0x5c6dde < _0x60af86[_0x19d73b(1253)]; _0x5c6dde++) _0x3a7d55[_0x5c6dde] = _0xf6ceeb(_0x60af86[_0x5c6dde], _0x15459c);
                return _0x3a7d55;
              }
              if ("object" == ("undefined" === typeof _0x60af86 ? "undefined" : _typeof(_0x60af86)) && !(_0x60af86 instanceof Date)) {
                for (var _0x1f0d4c in _0x3a7d55 = {}, _0x60af86) _0x3a7d55[_0x1f0d4c] = _0xf6ceeb(_0x60af86[_0x1f0d4c], _0x15459c);
                return _0x3a7d55;
              }
              return _0x60af86;
            }
            function _0x454ea0(_0xac5fb1, _0x4f3702) {
              var _0x5a28cc = _0x249981;
              if (!_0xac5fb1) return _0xac5fb1;
              if (_0xac5fb1 && _0xac5fb1[_0x5a28cc(878)]) return _0x4f3702[_0xac5fb1["num"]];
              if (_0xac5fb1 && "string" == typeof _0xac5fb1 && _0xac5fb1["startsWith"]("b")) return _0x4f3702[parseInt(_0xac5fb1[_0x5a28cc(533)](1))];
              if (_0x612276(_0xac5fb1)) for (var _0x486d2d = 0; _0x486d2d < _0xac5fb1[_0x5a28cc(1253)]; _0x486d2d++) _0xac5fb1[_0x486d2d] = _0x454ea0(_0xac5fb1[_0x486d2d], _0x4f3702); else if ("object" == ("undefined" === typeof _0xac5fb1 ? "undefined" : _typeof(_0xac5fb1))) for (var _0x332cc8 in _0xac5fb1) _0xac5fb1[_0x332cc8] = _0x454ea0(_0xac5fb1[_0x332cc8], _0x4f3702);
              return _0xac5fb1;
            }
            _0x4794bb["deconstructPacket"] = function(_0x2848f9) {
              var _0x33fde0 = _0x249981, _0x1fbd9c = [], _0x327d2e = _0x2848f9["data"], _0x4c5eb8 = _0x2848f9;
              return _0x4c5eb8[_0x33fde0(922)] = _0xf6ceeb(_0x327d2e, _0x1fbd9c), _0x4c5eb8[_0x33fde0(923)] = _0x1fbd9c[_0x33fde0(1253)], 
              {
                packet: _0x4c5eb8,
                buffers: _0x1fbd9c
              };
            }, _0x4794bb[_0x249981(509)] = function(_0x53aae0, _0x346b39) {
              var _0x38ae57 = _0x249981;
              return _0x53aae0[_0x38ae57(922)] = _0x454ea0(_0x53aae0[_0x38ae57(922)], _0x346b39), 
              _0x53aae0[_0x38ae57(923)] = void 0, _0x53aae0;
            }, _0x4794bb[_0x249981(1381)] = function(_0x1398fb, _0x4c99cc) {
              var _0x51434f = 0, _0x30b6ae = _0x1398fb;
              !function _0xc13263(_0x51d7cd, _0x50e094, _0x4b8b96) {
                var _0x58f7df = a0_0x16c1;
                if (!_0x51d7cd) return _0x51d7cd;
                if (_0x37c8c8 && _0x51d7cd instanceof Blob || _0x1f61c0 && _0x51d7cd instanceof File) {
                  _0x51434f++;
                  var _0x315747 = new FileReader();
                  _0x315747["onload"] = function() {
                    var _0x1f2145 = a0_0x16c1;
                    _0x4b8b96 ? _0x4b8b96[_0x50e094] = this[_0x1f2145(1422)] : _0x30b6ae = this[_0x1f2145(1422)], 
                    --_0x51434f || _0x4c99cc(_0x30b6ae);
                  }, _0x315747["readAsArrayBuffer"](_0x51d7cd);
                } else if (_0x612276(_0x51d7cd)) for (var _0x385322 = 0; _0x385322 < _0x51d7cd[_0x58f7df(1253)]; _0x385322++) _0xc13263(_0x51d7cd[_0x385322], _0x385322, _0x51d7cd); else if ("object" == ("undefined" === typeof _0x51d7cd ? "undefined" : _typeof(_0x51d7cd)) && !_0x37553d(_0x51d7cd)) for (var _0x37d33e in _0x51d7cd) _0xc13263(_0x51d7cd[_0x37d33e], _0x37d33e, _0x51d7cd);
              }(_0x30b6ae), _0x51434f || _0x4c99cc(_0x30b6ae);
            };
          },
          9473: function _(_0x22a9e5, _0xac5f25, _0x151c40) {
            var _0x4b0164 = a0_0x16c1;
            var _0x4ffbd8 = _0x151c40(1227)(_0x4b0164(1288)), _0x2b6faa = _0x151c40(8767), _0x21f4c7 = _0x151c40(53), _0x337abf = _0x151c40(5826), _0x2cef37 = _0x151c40(5146);
            function _0x406397() {}
            _0xac5f25[_0x4b0164(1032)] = 4, _0xac5f25[_0x4b0164(843)] = [ _0x4b0164(690), "DISCONNECT", "EVENT", _0x4b0164(541), _0x4b0164(950), _0x4b0164(1222), "BINARY_ACK" ], 
            _0xac5f25["CONNECT"] = 0, _0xac5f25["DISCONNECT"] = 1, _0xac5f25[_0x4b0164(1044)] = 2, 
            _0xac5f25["ACK"] = 3, _0xac5f25[_0x4b0164(950)] = 4, _0xac5f25[_0x4b0164(1222)] = 5, 
            _0xac5f25[_0x4b0164(1130)] = 6, _0xac5f25["Encoder"] = _0x406397, _0xac5f25[_0x4b0164(611)] = _0x2ee46b;
            var _0x53a12e = _0xac5f25[_0x4b0164(950)] + _0x4b0164(697);
            function _0xc6d31b(_0x2a690c) {
              var _0x510867 = _0x4b0164, _0xc104e6 = "" + _0x2a690c[_0x510867(1042)];
              if (_0xac5f25[_0x510867(1222)] !== _0x2a690c[_0x510867(1042)] && _0xac5f25[_0x510867(1130)] !== _0x2a690c[_0x510867(1042)] || (_0xc104e6 += _0x2a690c["attachments"] + "-"), 
              _0x2a690c["nsp"] && "/" !== _0x2a690c["nsp"] && (_0xc104e6 += _0x2a690c[_0x510867(886)] + ","), 
              null != _0x2a690c["id"] && (_0xc104e6 += _0x2a690c["id"]), null != _0x2a690c[_0x510867(922)]) {
                var _0x2a867f = function(_0x418df7) {
                  var _0xec4635 = _0x510867;
                  try {
                    return JSON[_0xec4635(903)](_0x418df7);
                  } catch (_0x55ef8b) {
                    return !1;
                  }
                }(_0x2a690c["data"]);
                if (!1 === _0x2a867f) return _0x53a12e;
                _0xc104e6 += _0x2a867f;
              }
              return _0x4ffbd8(_0x510867(1115), _0x2a690c, _0xc104e6), _0xc104e6;
            }
            function _0x2ee46b() {
              var _0x5ba819 = _0x4b0164;
              this[_0x5ba819(1101)] = null;
            }
            function _0x4e6834(_0xdc5bc1) {
              var _0x480f9b = _0x4b0164;
              this["reconPack"] = _0xdc5bc1, this[_0x480f9b(1110)] = [];
            }
            function _0x54920c(_0x3401c0) {
              var _0xd1382d = _0x4b0164;
              return {
                type: _0xac5f25[_0xd1382d(950)],
                data: "parser error: " + _0x3401c0
              };
            }
            _0x406397[_0x4b0164(1097)][_0x4b0164(1058)] = function(_0x280448, _0x55ec74) {
              var _0x10483a = _0x4b0164;
              _0x4ffbd8(_0x10483a(656), _0x280448), _0xac5f25["BINARY_EVENT"] === _0x280448[_0x10483a(1042)] || _0xac5f25[_0x10483a(1130)] === _0x280448[_0x10483a(1042)] ? function(_0x5b0c49, _0x3f1a4d) {
                _0x21f4c7["removeBlobs"](_0x5b0c49, function(_0x2007ab) {
                  var _0x441998 = a0_0x16c1, _0xa0615f = _0x21f4c7[_0x441998(1086)](_0x2007ab), _0xc9c7c0 = _0xc6d31b(_0xa0615f[_0x441998(1230)]), _0x25759f = _0xa0615f[_0x441998(1110)];
                  _0x25759f["unshift"](_0xc9c7c0), _0x3f1a4d(_0x25759f);
                });
              }(_0x280448, _0x55ec74) : _0x55ec74([ _0xc6d31b(_0x280448) ]);
            }, _0x2b6faa(_0x2ee46b["prototype"]), _0x2ee46b[_0x4b0164(1097)][_0x4b0164(1137)] = function(_0x57935d) {
              var _0x566cda = _0x4b0164, _0x415d30;
              if (_0x566cda(1028) == ("undefined" === typeof _0x57935d ? "undefined" : _typeof(_0x57935d))) _0x415d30 = function(_0x5b740a) {
                var _0x422139 = _0x566cda, _0x812023 = 0, _0x15b7cb = {
                  type: Number(_0x5b740a["charAt"](0))
                };
                if (null == _0xac5f25[_0x422139(843)][_0x15b7cb[_0x422139(1042)]]) return _0x54920c(_0x422139(955) + _0x15b7cb["type"]);
                if (_0xac5f25[_0x422139(1222)] === _0x15b7cb[_0x422139(1042)] || _0xac5f25["BINARY_ACK"] === _0x15b7cb[_0x422139(1042)]) {
                  for (var _0x92b14b = _0x812023 + 1; "-" !== _0x5b740a["charAt"](++_0x812023) && _0x812023 != _0x5b740a[_0x422139(1253)]; ) ;
                  var _0x2ad854 = _0x5b740a[_0x422139(533)](_0x92b14b, _0x812023);
                  if (_0x2ad854 != Number(_0x2ad854) || "-" !== _0x5b740a[_0x422139(1320)](_0x812023)) throw new Error("Illegal attachments");
                  _0x15b7cb[_0x422139(923)] = Number(_0x2ad854);
                }
                if ("/" === _0x5b740a[_0x422139(1320)](_0x812023 + 1)) {
                  for (_0x92b14b = _0x812023 + 1; ++_0x812023 && "," !== (_0x3771dc = _0x5b740a[_0x422139(1320)](_0x812023)) && _0x812023 !== _0x5b740a[_0x422139(1253)]; ) ;
                  _0x15b7cb[_0x422139(886)] = _0x5b740a[_0x422139(533)](_0x92b14b, _0x812023);
                } else _0x15b7cb[_0x422139(886)] = "/";
                var _0x266308 = _0x5b740a[_0x422139(1320)](_0x812023 + 1);
                if ("" !== _0x266308 && Number(_0x266308) == _0x266308) {
                  for (_0x92b14b = _0x812023 + 1; ++_0x812023; ) {
                    var _0x3771dc;
                    if (null == (_0x3771dc = _0x5b740a[_0x422139(1320)](_0x812023)) || Number(_0x3771dc) != _0x3771dc) {
                      --_0x812023;
                      break;
                    }
                    if (_0x812023 === _0x5b740a["length"]) break;
                  }
                  _0x15b7cb["id"] = Number(_0x5b740a["substring"](_0x92b14b, _0x812023 + 1));
                }
                if (_0x5b740a[_0x422139(1320)](++_0x812023)) {
                  var _0x144479 = function(_0xcf1b19) {
                    var _0x1fb00a = _0x422139;
                    try {
                      return JSON[_0x1fb00a(655)](_0xcf1b19);
                    } catch (_0x56aef4) {
                      return !1;
                    }
                  }(_0x5b740a["substr"](_0x812023));
                  if (!1 === _0x144479 || _0x15b7cb[_0x422139(1042)] !== _0xac5f25[_0x422139(950)] && !_0x337abf(_0x144479)) return _0x54920c(_0x422139(887));
                  _0x15b7cb[_0x422139(922)] = _0x144479;
                }
                return _0x4ffbd8("decoded %s as %j", _0x5b740a, _0x15b7cb), _0x15b7cb;
              }(_0x57935d), _0xac5f25[_0x566cda(1222)] === _0x415d30[_0x566cda(1042)] || _0xac5f25[_0x566cda(1130)] === _0x415d30[_0x566cda(1042)] ? (this[_0x566cda(1101)] = new _0x4e6834(_0x415d30), 
              0 === this["reconstructor"][_0x566cda(1157)][_0x566cda(923)] && this[_0x566cda(789)](_0x566cda(850), _0x415d30)) : this[_0x566cda(789)](_0x566cda(850), _0x415d30); else {
                if (!_0x2cef37(_0x57935d) && !_0x57935d["base64"]) throw new Error(_0x566cda(668) + _0x57935d);
                if (!this[_0x566cda(1101)]) throw new Error(_0x566cda(1018));
                (_0x415d30 = this[_0x566cda(1101)][_0x566cda(743)](_0x57935d)) && (this[_0x566cda(1101)] = null, 
                this["emit"]("decoded", _0x415d30));
              }
            }, _0x2ee46b[_0x4b0164(1097)]["destroy"] = function() {
              var _0x3aed51 = _0x4b0164;
              this[_0x3aed51(1101)] && this["reconstructor"][_0x3aed51(1366)]();
            }, _0x4e6834["prototype"][_0x4b0164(743)] = function(_0x564001) {
              var _0x1e55e5 = _0x4b0164;
              if (this[_0x1e55e5(1110)][_0x1e55e5(598)](_0x564001), this[_0x1e55e5(1110)][_0x1e55e5(1253)] === this[_0x1e55e5(1157)]["attachments"]) {
                var _0x3c70be = _0x21f4c7["reconstructPacket"](this[_0x1e55e5(1157)], this[_0x1e55e5(1110)]);
                return this[_0x1e55e5(1366)](), _0x3c70be;
              }
              return null;
            }, _0x4e6834[_0x4b0164(1097)][_0x4b0164(1366)] = function() {
              var _0x212305 = _0x4b0164;
              this[_0x212305(1157)] = null, this[_0x212305(1110)] = [];
            };
          },
          5146: function _(_0xbb64b0) {
            var _0x239fe2 = a0_0x16c1;
            _0xbb64b0[_0x239fe2(810)] = function(_0x26df96) {
              var _0x2246ea = _0x239fe2;
              return _0x3f9c35 && Buffer[_0x2246ea(1141)](_0x26df96) || _0x44e1df && (_0x26df96 instanceof ArrayBuffer || function(_0x4dc94c) {
                var _0x281dad = _0x2246ea;
                return "function" == typeof ArrayBuffer[_0x281dad(1182)] ? ArrayBuffer[_0x281dad(1182)](_0x4dc94c) : _0x4dc94c["buffer"] instanceof ArrayBuffer;
              }(_0x26df96));
            };
            var _0x3f9c35 = _0x239fe2(646) == ("undefined" === typeof Buffer ? "undefined" : _typeof(Buffer)) && _0x239fe2(646) == _typeof(Buffer[_0x239fe2(1141)]), _0x44e1df = _0x239fe2(646) == ("undefined" === typeof ArrayBuffer ? "undefined" : _typeof(ArrayBuffer));
          },
          2025: function _(_0x509118, _0x1fb378) {
            var _0x4f5e19 = a0_0x16c1;
            Object[_0x4f5e19(528)](_0x1fb378, _0x4f5e19(1169), {
              value: !0
            }), _0x1fb378[_0x4f5e19(1199)] = void 0;
            var _0x5d3176 = console[_0x4f5e19(540)], _0xf9dfc3 = console["warn"], _0x35a0bd = function() {
              var _0x4aca36 = _0x4f5e19;
              function _0x542468(_0x50f194, _0x1b8771, _0x422971) {
                var _0x4a233f = a0_0x16c1;
                this[_0x4a233f(1142)] = !!_0x50f194, this[_0x4a233f(1329)] = _0x50f194, this[_0x4a233f(1449)] = _0x1b8771, 
                this[_0x4a233f(652)] = _0x422971;
              }
              return _0x542468["prototype"]["debug"] = function(_0x3c359c) {
                var _0x34804a = a0_0x16c1;
                for (var _0x3d6b4f = [], _0x41062e = 1; _0x41062e < arguments[_0x34804a(1253)]; _0x41062e++) _0x3d6b4f[_0x41062e - 1] = arguments[_0x41062e];
                var _0x5a9ffa = _0x3c359c;
                this["isDebugging"] && (_0x5a9ffa += JSON[_0x34804a(903)](_0x3d6b4f)), this[_0x34804a(1142)] && this[_0x34804a(1329)](_0x5a9ffa);
              }, _0x542468[_0x4aca36(1097)][_0x4aca36(709)] = function(_0x45c571) {
                var _0x1e2875 = _0x4aca36;
                for (var _0x40232e = [], _0x24e9ce = 1; _0x24e9ce < arguments[_0x1e2875(1253)]; _0x24e9ce++) _0x40232e[_0x24e9ce - 1] = arguments[_0x24e9ce];
                var _0x3680e7 = _0x45c571;
                this[_0x1e2875(1142)] && (_0x3680e7 += JSON[_0x1e2875(903)](_0x40232e)), this[_0x1e2875(1142)] && this[_0x1e2875(652)](_0x3680e7);
              }, _0x542468["prototype"][_0x4aca36(951)] = function(_0x51359a) {
                var _0x234aee = _0x4aca36;
                for (var _0xd0b0a = [], _0x30d59e = 1; _0x30d59e < arguments[_0x234aee(1253)]; _0x30d59e++) _0xd0b0a[_0x30d59e - 1] = arguments[_0x30d59e];
                var _0x42e6da = _0x51359a;
                this[_0x234aee(1142)] && (_0x42e6da += JSON["stringify"](_0xd0b0a)), this["isDebugging"] && this[_0x234aee(1449)](_0x42e6da);
              }, _0x542468["prototype"][_0x4aca36(1122)] = function(_0x5f424f, _0x298dcb, _0x5af3fa) {
                var _0x51d75b = _0x4aca36;
                this["logFn"] = _0x5f424f, this[_0x51d75b(1449)] = _0x298dcb, this[_0x51d75b(652)] = _0x5af3fa;
              }, _0x542468;
            }();
            _0x1fb378["Logger"] = _0x35a0bd, _0x1fb378["default"] = new _0x35a0bd(_0x5d3176, _0xf9dfc3, _0xf9dfc3);
          },
          5400: function _(_0x149a53, _0x29afe4) {
            var _0x7241b8 = a0_0x16c1;
            Object[_0x7241b8(528)](_0x29afe4, _0x7241b8(1169), {
              value: !0
            }), _0x29afe4["XMLHttpServiceRest"] = _0x29afe4[_0x7241b8(542)] = void 0;
            var _0xaeb812 = function() {
              var _0x456b8d = _0x7241b8;
              function _0xa6d321() {}
              return _0xa6d321[_0x456b8d(1047)] = function(_0x349cbd) {
                return new _0x3542d8();
              }, _0xa6d321;
            }();
            _0x29afe4["ServiceRest"] = _0xaeb812;
            var _0x3542d8 = function() {
              var _0x3942b8 = _0x7241b8;
              function _0x56c4e7() {}
              return _0x56c4e7[_0x3942b8(1097)][_0x3942b8(885)] = function(_0xd76b22) {
                var _0x5dd1c7 = _0x3942b8;
                return Object["keys"](_0xd76b22)[_0x5dd1c7(536)](function(_0x408baa) {
                  var _0x160a9e = _0x5dd1c7;
                  return [ _0x408baa, _0xd76b22[_0x408baa] ][_0x160a9e(536)](encodeURIComponent)[_0x160a9e(1161)]("=");
                })[_0x5dd1c7(1161)]("&");
              }, _0x56c4e7[_0x3942b8(1097)][_0x3942b8(1001)] = function(_0x39fcdb) {
                var _0x18ebdc = _0x3942b8, _0x8ab52e = _0x39fcdb[_0x18ebdc(596)], _0xca675f = _0x39fcdb[_0x18ebdc(922)], _0x1bf7f7 = _0x39fcdb["apiUrl"], _0x2ff55e = _0x39fcdb[_0x18ebdc(580)], _0x34f531 = _0x39fcdb[_0x18ebdc(884)], _0x36ee1d = this[_0x18ebdc(885)](_0xca675f), _0x4e289e = _0x1bf7f7 + _0x8ab52e, _0x5b4d1d = new XMLHttpRequest();
                _0x5b4d1d[_0x18ebdc(741)]("POST", _0x4e289e, !0), _0x5b4d1d[_0x18ebdc(771)] = 15e3, 
                _0x5b4d1d[_0x18ebdc(1184)](_0x18ebdc(1461), _0x18ebdc(1236)), _0x5b4d1d["onreadystatechange"] = function() {
                  var _0x2487ed = _0x18ebdc;
                  4 == _0x5b4d1d[_0x2487ed(583)] ? _0x5b4d1d[_0x2487ed(642)] ? _0x2ff55e({
                    status: _0x5b4d1d[_0x2487ed(1344)],
                    data: JSON[_0x2487ed(655)](_0x5b4d1d[_0x2487ed(642)])
                  }) : _0x34f531() : 0 === _0x5b4d1d[_0x2487ed(583)] && _0x34f531(), 200 !== _0x5b4d1d[_0x2487ed(1344)] && _0x34f531();
                }, _0x5b4d1d[_0x18ebdc(1294)] = function(_0x3ba24b) {
                  _0x34f531();
                }, _0x5b4d1d["onerror"] = function(_0xd44968) {
                  _0x34f531();
                }, _0x5b4d1d["send"](_0x36ee1d);
              }, _0x56c4e7;
            }();
            _0x29afe4["XMLHttpServiceRest"] = _0x3542d8;
          },
          4594: function _(_0x22c6d1, _0xcdc36) {
            var _0x2c7df7 = a0_0x16c1;
            Object[_0x2c7df7(528)](_0xcdc36, _0x2c7df7(1169), {
              value: !0
            }), _0xcdc36[_0x2c7df7(944)] = _0xcdc36[_0x2c7df7(1345)] = void 0;
            var _0x5691c5 = function() {
              var _0x3b68e1 = _0x2c7df7;
              function _0x25623d() {}
              return _0x25623d[_0x3b68e1(1058)] = function(_0x474497) {
                var _0x8e384b = _0x3b68e1;
                for (var _0x40aea2 = [], _0x415727 = _0x474497[_0x8e384b(1253)], _0x10abc3 = 0; _0x10abc3 < _0x415727; ) {
                  var _0x7beb26 = _0x474497[_0x8e384b(794)](_0x10abc3), _0x320cea = 0, _0x3032ab = 0;
                  for (_0x7beb26 <= 127 ? (_0x320cea = 0, _0x3032ab = 0) : _0x7beb26 <= 2047 ? (_0x320cea = 6, 
                  _0x3032ab = 192) : _0x7beb26 <= 65535 ? (_0x320cea = 12, _0x3032ab = 224) : _0x7beb26 <= 2097151 && (_0x320cea = 18, 
                  _0x3032ab = 240), _0x40aea2[_0x8e384b(598)](_0x3032ab | _0x7beb26 >> _0x320cea), 
                  _0x320cea -= 6; _0x320cea >= 0; ) _0x40aea2["push"](128 | _0x7beb26 >> _0x320cea & 63), 
                  _0x320cea -= 6;
                  _0x10abc3 += _0x7beb26 >= 65536 ? 2 : 1;
                }
                return new Uint8Array(_0x40aea2);
              }, _0x25623d;
            }();
            _0xcdc36[_0x2c7df7(1345)] = _0x5691c5;
            var _0x45157d = function() {
              var _0x35338f = _0x2c7df7;
              function _0x4155fe() {}
              return _0x4155fe[_0x35338f(530)] = function(_0x1b1557) {
                var _0x1e330b = _0x35338f;
                for (var _0x40d1ee = Array[_0x1e330b(1048)](_0x1b1557), _0x2f98a5 = "", _0x512492 = 0; _0x512492 < _0x40d1ee["length"]; ) {
                  var _0x470cd0 = _0x40d1ee[_0x512492], _0x196cfb = 0, _0x35e527 = 0;
                  if (_0x470cd0 <= 127 ? (_0x196cfb = 0, _0x35e527 = 255 & _0x470cd0) : _0x470cd0 <= 223 ? (_0x196cfb = 1, 
                  _0x35e527 = 31 & _0x470cd0) : _0x470cd0 <= 239 ? (_0x196cfb = 2, _0x35e527 = 15 & _0x470cd0) : _0x470cd0 <= 244 && (_0x196cfb = 3, 
                  _0x35e527 = 7 & _0x470cd0), _0x40d1ee[_0x1e330b(1253)] - _0x512492 - _0x196cfb > 0) for (var _0x2069c3 = 0; _0x2069c3 < _0x196cfb; ) _0x35e527 = _0x35e527 << 6 | 63 & (_0x470cd0 = _0x40d1ee[_0x512492 + _0x2069c3 + 1]), 
                  _0x2069c3 += 1; else _0x35e527 = 65533, _0x196cfb = _0x40d1ee[_0x1e330b(1253)] - _0x512492;
                  _0x2f98a5 += String[_0x1e330b(852)](_0x35e527), _0x512492 += _0x196cfb + 1;
                }
                return _0x2f98a5;
              }, _0x4155fe;
            }();
            _0xcdc36["TextDecoder"] = _0x45157d;
          },
          1880: function _(_0x3c8044, _0xd3ce9f) {
            var _0x59db24 = a0_0x16c1;
            Object[_0x59db24(528)](_0xd3ce9f, _0x59db24(1169), {
              value: !0
            }), _0xd3ce9f["uuid"] = void 0, _0xd3ce9f[_0x59db24(933)] = function() {
              var _0x3b3280 = _0x59db24;
              return _0x3b3280(1348)[_0x3b3280(1218)](/[xy]/g, function(_0x54d1c2) {
                var _0x1f14e9 = _0x3b3280, _0x42801c = 16 * Math["random"]() | 0;
                return ("x" === _0x54d1c2 ? _0x42801c : 3 & _0x42801c | 8)[_0x1f14e9(525)](16);
              })[_0x3b3280(1218)](/-/gi, "");
            };
          },
          6906: function _(_0x32e71b) {
            var _0x1cb6cb = a0_0x16c1;
            function _0x144f46() {}
            _0x32e71b[_0x1cb6cb(810)] = function(_0x5cc80d, _0xd98994, _0x461aba) {
              var _0x19dced = _0x1cb6cb, _0x17a0f2 = !1;
              return _0x461aba = _0x461aba || _0x144f46, _0x1c4b69[_0x19dced(1349)] = _0x5cc80d, 
              0 === _0x5cc80d ? _0xd98994() : _0x1c4b69;
              function _0x1c4b69(_0x277eb9, _0x5a2504) {
                var _0x5bc386 = _0x19dced;
                if (_0x1c4b69[_0x5bc386(1349)] <= 0) throw new Error(_0x5bc386(1144));
                --_0x1c4b69[_0x5bc386(1349)], _0x277eb9 ? (_0x17a0f2 = !0, _0xd98994(_0x277eb9), 
                _0xd98994 = _0x461aba) : 0 !== _0x1c4b69[_0x5bc386(1349)] || _0x17a0f2 || _0xd98994(null, _0x5a2504);
              }
            };
          },
          9718: function _(_0x22177d) {
            _0x22177d["exports"] = function(_0x37dbb0, _0x77efd5, _0x4790f0) {
              var _0x35b385 = a0_0x16c1, _0x321d4f = _0x37dbb0["byteLength"];
              if (_0x77efd5 = _0x77efd5 || 0, _0x4790f0 = _0x4790f0 || _0x321d4f, _0x37dbb0[_0x35b385(708)]) return _0x37dbb0[_0x35b385(708)](_0x77efd5, _0x4790f0);
              if (_0x77efd5 < 0 && (_0x77efd5 += _0x321d4f), _0x4790f0 < 0 && (_0x4790f0 += _0x321d4f), 
              _0x4790f0 > _0x321d4f && (_0x4790f0 = _0x321d4f), _0x77efd5 >= _0x321d4f || _0x77efd5 >= _0x4790f0 || 0 === _0x321d4f) return new ArrayBuffer(0);
              for (var _0x1e4df5 = new Uint8Array(_0x37dbb0), _0x397913 = new Uint8Array(_0x4790f0 - _0x77efd5), _0x914642 = _0x77efd5, _0x318b35 = 0; _0x914642 < _0x4790f0; _0x914642++, 
              _0x318b35++) _0x397913[_0x318b35] = _0x1e4df5[_0x914642];
              return _0x397913["buffer"];
            };
          },
          3010: function _(_0x276630) {
            var _0xac801d = a0_0x16c1;
            function _0x22edf5(_0x23c88e) {
              var _0x115650 = a0_0x16c1;
              _0x23c88e = _0x23c88e || {}, this["ms"] = _0x23c88e[_0x115650(1034)] || 100, this["max"] = _0x23c88e[_0x115650(822)] || 1e4, 
              this[_0x115650(1287)] = _0x23c88e["factor"] || 2, this["jitter"] = _0x23c88e[_0x115650(932)] > 0 && _0x23c88e["jitter"] <= 1 ? _0x23c88e[_0x115650(932)] : 0, 
              this[_0x115650(1159)] = 0;
            }
            _0x276630[_0xac801d(810)] = _0x22edf5, _0x22edf5[_0xac801d(1097)][_0xac801d(1297)] = function() {
              var _0x18e97 = _0xac801d, _0xf06b5e = this["ms"] * Math[_0x18e97(1093)](this[_0x18e97(1287)], this[_0x18e97(1159)]++);
              if (this["jitter"]) {
                var _0x473d20 = Math[_0x18e97(1481)](), _0x1708a9 = Math[_0x18e97(934)](_0x473d20 * this["jitter"] * _0xf06b5e);
                _0xf06b5e = 0 == (1 & Math[_0x18e97(934)](10 * _0x473d20)) ? _0xf06b5e - _0x1708a9 : _0xf06b5e + _0x1708a9;
              }
              return 0 | Math[_0x18e97(1034)](_0xf06b5e, this[_0x18e97(822)]);
            }, _0x22edf5[_0xac801d(1097)]["reset"] = function() {
              var _0x195e9e = _0xac801d;
              this[_0x195e9e(1159)] = 0;
            }, _0x22edf5[_0xac801d(1097)]["setMin"] = function(_0x5bc11f) {
              this["ms"] = _0x5bc11f;
            }, _0x22edf5[_0xac801d(1097)][_0xac801d(847)] = function(_0xf6ca08) {
              var _0x38e697 = _0xac801d;
              this[_0x38e697(822)] = _0xf6ca08;
            }, _0x22edf5[_0xac801d(1097)]["setJitter"] = function(_0xf7a747) {
              this["jitter"] = _0xf7a747;
            };
          },
          3704: function _(_0x2a9ca4, _0x5eb09d) {
            var _0x5abe24 = a0_0x16c1;
            !function(_0xa28ace) {
              var _0xd66573 = a0_0x16c1;
              _0x5eb09d[_0xd66573(1058)] = function(_0x524a76) {
                var _0x27c217 = _0xd66573, _0x5b899e, _0x55a87e = new Uint8Array(_0x524a76), _0x625b5f = _0x55a87e["length"], _0x350b83 = "";
                for (_0x5b899e = 0; _0x5b899e < _0x625b5f; _0x5b899e += 3) _0x350b83 += _0xa28ace[_0x55a87e[_0x5b899e] >> 2], 
                _0x350b83 += _0xa28ace[(3 & _0x55a87e[_0x5b899e]) << 4 | _0x55a87e[_0x5b899e + 1] >> 4], 
                _0x350b83 += _0xa28ace[(15 & _0x55a87e[_0x5b899e + 1]) << 2 | _0x55a87e[_0x5b899e + 2] >> 6], 
                _0x350b83 += _0xa28ace[63 & _0x55a87e[_0x5b899e + 2]];
                return _0x625b5f % 3 == 2 ? _0x350b83 = _0x350b83["substring"](0, _0x350b83[_0x27c217(1253)] - 1) + "=" : _0x625b5f % 3 == 1 && (_0x350b83 = _0x350b83[_0x27c217(533)](0, _0x350b83["length"] - 2) + "=="), 
                _0x350b83;
              }, _0x5eb09d[_0xd66573(530)] = function(_0x1f7bdc) {
                var _0x12964c = _0xd66573, _0x242c01, _0x28c605, _0x1f4cf6, _0x225a4c, _0x1fc89f, _0x3839bc = .75 * _0x1f7bdc[_0x12964c(1253)], _0x428697 = _0x1f7bdc[_0x12964c(1253)], _0xb951ce = 0;
                "=" === _0x1f7bdc[_0x1f7bdc["length"] - 1] && (_0x3839bc--, "=" === _0x1f7bdc[_0x1f7bdc["length"] - 2] && _0x3839bc--);
                var _0x52c167 = new ArrayBuffer(_0x3839bc), _0x5093a6 = new Uint8Array(_0x52c167);
                for (_0x242c01 = 0; _0x242c01 < _0x428697; _0x242c01 += 4) _0x28c605 = _0xa28ace[_0x12964c(1224)](_0x1f7bdc[_0x242c01]), 
                _0x1f4cf6 = _0xa28ace[_0x12964c(1224)](_0x1f7bdc[_0x242c01 + 1]), _0x225a4c = _0xa28ace[_0x12964c(1224)](_0x1f7bdc[_0x242c01 + 2]), 
                _0x1fc89f = _0xa28ace[_0x12964c(1224)](_0x1f7bdc[_0x242c01 + 3]), _0x5093a6[_0xb951ce++] = _0x28c605 << 2 | _0x1f4cf6 >> 4, 
                _0x5093a6[_0xb951ce++] = (15 & _0x1f4cf6) << 4 | _0x225a4c >> 2, _0x5093a6[_0xb951ce++] = (3 & _0x225a4c) << 6 | 63 & _0x1fc89f;
                return _0x52c167;
              };
            }(_0x5abe24(1168));
          },
          5548: function _(_0x1561ad) {
            var _0x1f218e = a0_0x16c1, _0x2d59ec = void 0 !== _0x2d59ec ? _0x2d59ec : _0x1f218e(635) != ("undefined" === typeof WebKitBlobBuilder ? "undefined" : _typeof(WebKitBlobBuilder)) ? WebKitBlobBuilder : _0x1f218e(635) != ("undefined" === typeof MSBlobBuilder ? "undefined" : _typeof(MSBlobBuilder)) ? MSBlobBuilder : _0x1f218e(635) != ("undefined" === typeof MozBlobBuilder ? "undefined" : _typeof(MozBlobBuilder)) && MozBlobBuilder, _0xe19b58 = function() {
              try {
                return 2 === new Blob([ "hi" ])["size"];
              } catch (_0x55756c) {
                return !1;
              }
            }(), _0x24f20c = _0xe19b58 && function() {
              var _0x47c867 = _0x1f218e;
              try {
                return 2 === new Blob([ new Uint8Array([ 1, 2 ]) ])[_0x47c867(930)];
              } catch (_0x47d0a2) {
                return !1;
              }
            }(), _0x4db06d = _0x2d59ec && _0x2d59ec[_0x1f218e(1097)][_0x1f218e(595)] && _0x2d59ec[_0x1f218e(1097)]["getBlob"];
            function _0xf49d4a(_0x44ff5c) {
              var _0x2cbe11 = _0x1f218e;
              return _0x44ff5c[_0x2cbe11(536)](function(_0x33a196) {
                var _0x5ff764 = _0x2cbe11;
                if (_0x33a196["buffer"] instanceof ArrayBuffer) {
                  var _0x16f430 = _0x33a196[_0x5ff764(1167)];
                  if (_0x33a196[_0x5ff764(504)] !== _0x16f430[_0x5ff764(504)]) {
                    var _0x89d86b = new Uint8Array(_0x33a196[_0x5ff764(504)]);
                    _0x89d86b["set"](new Uint8Array(_0x16f430, _0x33a196[_0x5ff764(621)], _0x33a196["byteLength"])), 
                    _0x16f430 = _0x89d86b[_0x5ff764(1167)];
                  }
                  return _0x16f430;
                }
                return _0x33a196;
              });
            }
            function _0x4166a1(_0x1d3686, _0x2d04c4) {
              var _0x995360 = _0x1f218e;
              _0x2d04c4 = _0x2d04c4 || {};
              var _0x801921 = new _0x2d59ec();
              return _0xf49d4a(_0x1d3686)[_0x995360(768)](function(_0x33a740) {
                _0x801921["append"](_0x33a740);
              }), _0x2d04c4["type"] ? _0x801921[_0x995360(1075)](_0x2d04c4[_0x995360(1042)]) : _0x801921[_0x995360(1075)]();
            }
            function _0xa586f0(_0x4abf78, _0x231b01) {
              return new Blob(_0xf49d4a(_0x4abf78), _0x231b01 || {});
            }
            "undefined" != typeof Blob && (_0x4166a1[_0x1f218e(1097)] = Blob[_0x1f218e(1097)], 
            _0xa586f0["prototype"] = Blob["prototype"]), _0x1561ad["exports"] = _0xe19b58 ? _0x24f20c ? Blob : _0xa586f0 : _0x4db06d ? _0x4166a1 : void 0;
          },
          6077: function _(_0x17bf07) {
            var _0xb64e84 = []["slice"];
            _0x17bf07["exports"] = function(_0x5201d6, _0x31a511) {
              var _0x5ccbb4 = a0_0x16c1;
              if (_0x5ccbb4(1028) == ("undefined" === typeof _0x31a511 ? "undefined" : _typeof(_0x31a511)) && (_0x31a511 = _0x5201d6[_0x31a511]), 
              _0x5ccbb4(646) != ("undefined" === typeof _0x31a511 ? "undefined" : _typeof(_0x31a511))) throw new Error(_0x5ccbb4(848));
              var _0x5cbf85 = _0xb64e84["call"](arguments, 2);
              return function() {
                var _0x483219 = _0x5ccbb4;
                return _0x31a511[_0x483219(807)](_0x5201d6, _0x5cbf85[_0x483219(767)](_0xb64e84["call"](arguments)));
              };
            };
          },
          8767: function _(_0x2fd6c4) {
            var _0x25a625 = a0_0x16c1;
            function _0x58f2de(_0x55078a) {
              if (_0x55078a) return function(_0x127fcc) {
                for (var _0x5de1f6 in _0x58f2de["prototype"]) _0x127fcc[_0x5de1f6] = _0x58f2de["prototype"][_0x5de1f6];
                return _0x127fcc;
              }(_0x55078a);
            }
            _0x2fd6c4["exports"] = _0x58f2de, _0x58f2de[_0x25a625(1097)]["on"] = _0x58f2de[_0x25a625(1097)][_0x25a625(780)] = function(_0x37abc4, _0x3ee2f3) {
              var _0xde919d = _0x25a625;
              return this["_callbacks"] = this[_0xde919d(602)] || {}, (this[_0xde919d(602)]["$" + _0x37abc4] = this[_0xde919d(602)]["$" + _0x37abc4] || [])[_0xde919d(598)](_0x3ee2f3), 
              this;
            }, _0x58f2de[_0x25a625(1097)][_0x25a625(1360)] = function(_0x508b25, _0x13494b) {
              function _0x1b0a89() {
                var _0x2cee39 = a0_0x16c1;
                this[_0x2cee39(897)](_0x508b25, _0x1b0a89), _0x13494b[_0x2cee39(807)](this, arguments);
              }
              return _0x1b0a89["fn"] = _0x13494b, this["on"](_0x508b25, _0x1b0a89), this;
            }, _0x58f2de["prototype"][_0x25a625(897)] = _0x58f2de[_0x25a625(1097)][_0x25a625(790)] = _0x58f2de[_0x25a625(1097)]["removeAllListeners"] = _0x58f2de[_0x25a625(1097)][_0x25a625(753)] = function(_0x5c8c3e, _0x4c97c0) {
              var _0x206ee2 = _0x25a625;
              if (this[_0x206ee2(602)] = this[_0x206ee2(602)] || {}, 0 == arguments["length"]) return this["_callbacks"] = {}, 
              this;
              var _0x2517b2, _0x3e9f83 = this[_0x206ee2(602)]["$" + _0x5c8c3e];
              if (!_0x3e9f83) return this;
              if (1 == arguments[_0x206ee2(1253)]) return delete this[_0x206ee2(602)]["$" + _0x5c8c3e], 
              this;
              for (var _0x2d5287 = 0; _0x2d5287 < _0x3e9f83[_0x206ee2(1253)]; _0x2d5287++) if ((_0x2517b2 = _0x3e9f83[_0x2d5287]) === _0x4c97c0 || _0x2517b2["fn"] === _0x4c97c0) {
                _0x3e9f83[_0x206ee2(1464)](_0x2d5287, 1);
                break;
              }
              return 0 === _0x3e9f83[_0x206ee2(1253)] && delete this[_0x206ee2(602)]["$" + _0x5c8c3e], 
              this;
            }, _0x58f2de[_0x25a625(1097)][_0x25a625(789)] = function(_0x34a1c4) {
              var _0x2ddf3c = _0x25a625;
              this["_callbacks"] = this[_0x2ddf3c(602)] || {};
              for (var _0x472e3a = new Array(arguments[_0x2ddf3c(1253)] - 1), _0x2bd9a7 = this[_0x2ddf3c(602)]["$" + _0x34a1c4], _0xade709 = 1; _0xade709 < arguments[_0x2ddf3c(1253)]; _0xade709++) _0x472e3a[_0xade709 - 1] = arguments[_0xade709];
              if (_0x2bd9a7) {
                _0xade709 = 0;
                for (var _0x9f42a2 = (_0x2bd9a7 = _0x2bd9a7[_0x2ddf3c(708)](0))[_0x2ddf3c(1253)]; _0xade709 < _0x9f42a2; ++_0xade709) _0x2bd9a7[_0xade709][_0x2ddf3c(807)](this, _0x472e3a);
              }
              return this;
            }, _0x58f2de[_0x25a625(1097)][_0x25a625(686)] = function(_0x1747be) {
              var _0x1528cf = _0x25a625;
              return this[_0x1528cf(602)] = this[_0x1528cf(602)] || {}, this[_0x1528cf(602)]["$" + _0x1747be] || [];
            }, _0x58f2de[_0x25a625(1097)][_0x25a625(702)] = function(_0x33099b) {
              var _0x42dc34 = _0x25a625;
              return !!this["listeners"](_0x33099b)[_0x42dc34(1253)];
            };
          },
          3861: function _(_0x3b46bc) {
            var _0x21fdcc = a0_0x16c1;
            _0x3b46bc[_0x21fdcc(810)] = function(_0xebcccf, _0x21229d) {
              var _0x1f3609 = _0x21fdcc, _0x4b8ea9 = function _0x4b8ea9() {};
              _0x4b8ea9[_0x1f3609(1097)] = _0x21229d[_0x1f3609(1097)], _0xebcccf[_0x1f3609(1097)] = new _0x4b8ea9(), 
              _0xebcccf[_0x1f3609(1097)]["constructor"] = _0xebcccf;
            };
          },
          1227: function _(_0x277a44, _0x23356b, _0xf6c8eb) {
            var _0x396110 = a0_0x16c1;
            function _0x3af08b() {
              var _0x7ff15 = a0_0x16c1, _0x225d5e;
              try {
                _0x225d5e = _0x23356b["storage"][_0x7ff15(928)];
              } catch (_0x2ee928) {}
              return !_0x225d5e && _0x7ff15(635) != ("undefined" === typeof process ? "undefined" : _typeof(process)) && _0x7ff15(622) in process && (_0x225d5e = process["env"][_0x7ff15(1350)]), 
              _0x225d5e;
            }
            (_0x23356b = _0x277a44[_0x396110(810)] = _0xf6c8eb(1658))[_0x396110(540)] = function() {
              var _0xc64201 = _0x396110;
              return _0xc64201(736) == ("undefined" === typeof console ? "undefined" : _typeof(console)) && console["log"] && Function[_0xc64201(1097)][_0xc64201(807)][_0xc64201(869)](console[_0xc64201(540)], console, arguments);
            }, _0x23356b[_0x396110(1085)] = function(_0x13ba72) {
              var _0x487472 = _0x396110, _0x379bd3 = this["useColors"];
              if (_0x13ba72[0] = (_0x379bd3 ? "%c" : "") + this[_0x487472(675)] + (_0x379bd3 ? _0x487472(676) : " ") + _0x13ba72[0] + (_0x379bd3 ? _0x487472(1425) : " ") + "+" + _0x23356b[_0x487472(865)](this[_0x487472(677)]), 
              _0x379bd3) {
                var _0x239bf1 = "color: " + this[_0x487472(898)];
                _0x13ba72["splice"](1, 0, _0x239bf1, _0x487472(518));
                var _0x220d7c = 0, _0x53eae2 = 0;
                _0x13ba72[0]["replace"](/%[a-zA-Z%]/g, function(_0x3b6421) {
                  "%%" !== _0x3b6421 && (_0x220d7c++, "%c" === _0x3b6421 && (_0x53eae2 = _0x220d7c));
                }), _0x13ba72[_0x487472(1464)](_0x53eae2, 0, _0x239bf1);
              }
            }, _0x23356b["save"] = function(_0x251512) {
              var _0x457dd3 = _0x396110;
              try {
                null == _0x251512 ? _0x23356b[_0x457dd3(711)][_0x457dd3(588)](_0x457dd3(928)) : _0x23356b[_0x457dd3(711)][_0x457dd3(928)] = _0x251512;
              } catch (_0x388fa7) {}
            }, _0x23356b[_0x396110(706)] = _0x3af08b, _0x23356b[_0x396110(1317)] = function() {
              var _0x77f9f7 = _0x396110;
              return !(_0x77f9f7(635) == ("undefined" === typeof window ? "undefined" : _typeof(window)) || !window["process"] || _0x77f9f7(1112) !== window["process"][_0x77f9f7(1042)]) || ("undefined" == typeof navigator || !navigator[_0x77f9f7(559)] || !navigator[_0x77f9f7(559)]["toLowerCase"]()["match"](/(edge|trident)\/(\d+)/)) && (_0x77f9f7(635) != ("undefined" === typeof document ? "undefined" : _typeof(document)) && document[_0x77f9f7(1296)] && document[_0x77f9f7(1296)][_0x77f9f7(919)] && document[_0x77f9f7(1296)][_0x77f9f7(919)]["WebkitAppearance"] || "undefined" != typeof window && window[_0x77f9f7(1046)] && (window[_0x77f9f7(1046)][_0x77f9f7(653)] || window[_0x77f9f7(1046)][_0x77f9f7(917)] && window["console"][_0x77f9f7(1143)]) || "undefined" != typeof navigator && navigator[_0x77f9f7(559)] && navigator[_0x77f9f7(559)][_0x77f9f7(1361)]()[_0x77f9f7(1308)](/firefox\/(\d+)/) && parseInt(RegExp["$1"], 10) >= 31 || _0x77f9f7(635) != ("undefined" === typeof navigator ? "undefined" : _typeof(navigator)) && navigator[_0x77f9f7(559)] && navigator[_0x77f9f7(559)][_0x77f9f7(1361)]()[_0x77f9f7(1308)](/applewebkit\/(\d+)/));
            }, _0x23356b[_0x396110(711)] = _0x396110(635) != ("undefined" === typeof chrome ? "undefined" : _typeof(chrome)) && void 0 !== chrome[_0x396110(711)] ? chrome[_0x396110(711)][_0x396110(696)] : function() {
              var _0x4fcced = _0x396110;
              try {
                return window[_0x4fcced(1186)];
              } catch (_0x3e6b8b) {}
            }(), _0x23356b[_0x396110(592)] = [ _0x396110(1447), _0x396110(773), _0x396110(784), _0x396110(946), _0x396110(945), _0x396110(902), _0x396110(1212), _0x396110(1245), _0x396110(1134), "#00CC33", _0x396110(1147), "#00CC99", _0x396110(889), _0x396110(546), _0x396110(660), "#3300FF", _0x396110(1181), _0x396110(879), _0x396110(1266), _0x396110(600), _0x396110(678), "#3399FF", _0x396110(1016), _0x396110(1325), _0x396110(970), _0x396110(574), _0x396110(1226), _0x396110(1310), "#6600CC", _0x396110(624), _0x396110(613), _0x396110(1087), _0x396110(693), "#66CC33", _0x396110(1210), _0x396110(893), _0x396110(681), _0x396110(1332), "#99CC00", _0x396110(617), _0x396110(1068), _0x396110(860), _0x396110(957), "#CC0099", "#CC00CC", _0x396110(805), _0x396110(1162), _0x396110(909), _0x396110(1369), _0x396110(673), _0x396110(671), "#CC33FF", _0x396110(1405), _0x396110(1414), _0x396110(587), "#CC9933", _0x396110(1071), "#CCCC33", "#FF0000", _0x396110(666), _0x396110(710), "#FF0099", _0x396110(1177), _0x396110(1352), _0x396110(1419), _0x396110(500), _0x396110(1423), _0x396110(801), "#FF33CC", "#FF33FF", _0x396110(1164), _0x396110(961), "#FF9900", "#FF9933", _0x396110(634), _0x396110(1412) ], 
            _0x23356b["formatters"]["j"] = function(_0x1319a3) {
              var _0x524271 = _0x396110;
              try {
                return JSON[_0x524271(903)](_0x1319a3);
              } catch (_0x54604c) {
                return _0x524271(739) + _0x54604c[_0x524271(1175)];
              }
            }, _0x23356b[_0x396110(1420)](_0x3af08b());
          },
          1658: function _(_0x85bde1, _0x2fd88d, _0x3fcd6a) {
            var _0x40246d = a0_0x16c1;
            function _0x26f87a(_0x24b514) {
              var _0xdfb610 = a0_0x16c1, _0x2ea7d2;
              function _0x42a1a5() {
                var _0x3b23fb = a0_0x16c1;
                if (_0x42a1a5[_0x3b23fb(1214)]) {
                  var _0x57e551 = _0x42a1a5, _0x2d8b9f = +new Date(), _0x3755fb = _0x2d8b9f - (_0x2ea7d2 || _0x2d8b9f);
                  _0x57e551[_0x3b23fb(677)] = _0x3755fb, _0x57e551[_0x3b23fb(1483)] = _0x2ea7d2, _0x57e551["curr"] = _0x2d8b9f, 
                  _0x2ea7d2 = _0x2d8b9f;
                  for (var _0x4a5134 = new Array(arguments[_0x3b23fb(1253)]), _0x217ed2 = 0; _0x217ed2 < _0x4a5134[_0x3b23fb(1253)]; _0x217ed2++) _0x4a5134[_0x217ed2] = arguments[_0x217ed2];
                  _0x4a5134[0] = _0x2fd88d[_0x3b23fb(629)](_0x4a5134[0]), _0x3b23fb(1028) != _typeof(_0x4a5134[0]) && _0x4a5134[_0x3b23fb(718)]("%O");
                  var _0xc192a2 = 0;
                  _0x4a5134[0] = _0x4a5134[0][_0x3b23fb(1218)](/%([a-zA-Z%])/g, function(_0xa644be, _0x43068b) {
                    var _0x8e56a = _0x3b23fb;
                    if ("%%" === _0xa644be) return _0xa644be;
                    _0xc192a2++;
                    var _0x2eb1b1 = _0x2fd88d["formatters"][_0x43068b];
                    if (_0x8e56a(646) == ("undefined" === typeof _0x2eb1b1 ? "undefined" : _typeof(_0x2eb1b1))) {
                      var _0x21caf7 = _0x4a5134[_0xc192a2];
                      _0xa644be = _0x2eb1b1[_0x8e56a(869)](_0x57e551, _0x21caf7), _0x4a5134[_0x8e56a(1464)](_0xc192a2, 1), 
                      _0xc192a2--;
                    }
                    return _0xa644be;
                  }), _0x2fd88d["formatArgs"][_0x3b23fb(869)](_0x57e551, _0x4a5134);
                  var _0x2da02a = _0x42a1a5[_0x3b23fb(540)] || _0x2fd88d[_0x3b23fb(540)] || console[_0x3b23fb(540)][_0x3b23fb(880)](console);
                  _0x2da02a["apply"](_0x57e551, _0x4a5134);
                }
              }
              return _0x42a1a5[_0xdfb610(675)] = _0x24b514, _0x42a1a5[_0xdfb610(1214)] = _0x2fd88d[_0xdfb610(1214)](_0x24b514), 
              _0x42a1a5[_0xdfb610(1317)] = _0x2fd88d[_0xdfb610(1317)](), _0x42a1a5[_0xdfb610(898)] = function(_0x81fecf) {
                var _0x9e2449 = _0xdfb610, _0x256137, _0x57ecc9 = 0;
                for (_0x256137 in _0x81fecf) _0x57ecc9 = (_0x57ecc9 << 5) - _0x57ecc9 + _0x81fecf[_0x9e2449(727)](_0x256137), 
                _0x57ecc9 |= 0;
                return _0x2fd88d["colors"][Math["abs"](_0x57ecc9) % _0x2fd88d[_0x9e2449(592)]["length"]];
              }(_0x24b514), _0x42a1a5[_0xdfb610(863)] = _0x885e80, _0xdfb610(646) == _typeof(_0x2fd88d[_0xdfb610(1025)]) && _0x2fd88d[_0xdfb610(1025)](_0x42a1a5), 
              _0x2fd88d[_0xdfb610(809)][_0xdfb610(598)](_0x42a1a5), _0x42a1a5;
            }
            function _0x885e80() {
              var _0x10bb29 = a0_0x16c1, _0xf3ecb1 = _0x2fd88d["instances"][_0x10bb29(1224)](this);
              return -1 !== _0xf3ecb1 && (_0x2fd88d[_0x10bb29(809)][_0x10bb29(1464)](_0xf3ecb1, 1), 
              !0);
            }
            (_0x2fd88d = _0x85bde1[_0x40246d(810)] = _0x26f87a["debug"] = _0x26f87a["default"] = _0x26f87a)["coerce"] = function(_0x3e16c6) {
              var _0x155ca0 = _0x40246d;
              return _0x3e16c6 instanceof Error ? _0x3e16c6["stack"] || _0x3e16c6[_0x155ca0(1175)] : _0x3e16c6;
            }, _0x2fd88d[_0x40246d(1192)] = function() {
              var _0xa3dec3 = _0x40246d;
              _0x2fd88d[_0xa3dec3(1420)]("");
            }, _0x2fd88d["enable"] = function(_0x209066) {
              var _0x430b00 = _0x40246d, _0x2e372a;
              _0x2fd88d[_0x430b00(661)](_0x209066), _0x2fd88d[_0x430b00(1359)] = [], _0x2fd88d[_0x430b00(1030)] = [];
              var _0x5b89e0 = (_0x430b00(1028) == ("undefined" === typeof _0x209066 ? "undefined" : _typeof(_0x209066)) ? _0x209066 : "")[_0x430b00(757)](/[\s,]+/), _0x45c327 = _0x5b89e0["length"];
              for (_0x2e372a = 0; _0x2e372a < _0x45c327; _0x2e372a++) _0x5b89e0[_0x2e372a] && ("-" === (_0x209066 = _0x5b89e0[_0x2e372a][_0x430b00(1218)](/\*/g, _0x430b00(1305)))[0] ? _0x2fd88d[_0x430b00(1030)]["push"](new RegExp("^" + _0x209066["substr"](1) + "$")) : _0x2fd88d[_0x430b00(1359)]["push"](new RegExp("^" + _0x209066 + "$")));
              for (_0x2e372a = 0; _0x2e372a < _0x2fd88d[_0x430b00(809)][_0x430b00(1253)]; _0x2e372a++) {
                var _0x3718bf = _0x2fd88d[_0x430b00(809)][_0x2e372a];
                _0x3718bf[_0x430b00(1214)] = _0x2fd88d[_0x430b00(1214)](_0x3718bf["namespace"]);
              }
            }, _0x2fd88d[_0x40246d(1214)] = function(_0x24a4d1) {
              var _0x3ea8eb = _0x40246d;
              if ("*" === _0x24a4d1[_0x24a4d1[_0x3ea8eb(1253)] - 1]) return !0;
              var _0x4502bd, _0x40eff9;
              for (_0x4502bd = 0, _0x40eff9 = _0x2fd88d[_0x3ea8eb(1030)][_0x3ea8eb(1253)]; _0x4502bd < _0x40eff9; _0x4502bd++) if (_0x2fd88d[_0x3ea8eb(1030)][_0x4502bd][_0x3ea8eb(1377)](_0x24a4d1)) return !1;
              for (_0x4502bd = 0, _0x40eff9 = _0x2fd88d[_0x3ea8eb(1359)]["length"]; _0x4502bd < _0x40eff9; _0x4502bd++) if (_0x2fd88d["names"][_0x4502bd][_0x3ea8eb(1377)](_0x24a4d1)) return !0;
              return !1;
            }, _0x2fd88d["humanize"] = _0x3fcd6a(7824), _0x2fd88d[_0x40246d(809)] = [], _0x2fd88d["names"] = [], 
            _0x2fd88d["skips"] = [], _0x2fd88d["formatters"] = {};
          },
          3549: function _(_0x36a73a) {
            var _0x3edab3 = a0_0x16c1;
            _0x36a73a[_0x3edab3(810)] = _0x3edab3(635) != ("undefined" === typeof self ? "undefined" : _typeof(self)) ? self : _0x3edab3(635) != ("undefined" === typeof window ? "undefined" : _typeof(window)) ? window : Function(_0x3edab3(692))();
          },
          5983: function _(_0x47ed35, _0x4a91d8, _0x4d1882) {
            var _0x317398 = a0_0x16c1;
            _0x47ed35["exports"] = _0x4d1882(2192), _0x47ed35[_0x317398(810)][_0x317398(568)] = _0x4d1882(4455);
          },
          2192: function _(_0x2d73fb, _0x44c516, _0x9195d5) {
            var _0x56172e = a0_0x16c1, _0x368454 = _0x9195d5(3352), _0x53404f = _0x9195d5(8767), _0xdd3bcb = _0x9195d5(1227)(_0x56172e(833)), _0x1b0cf4 = _0x9195d5(7355), _0x2ecd01 = _0x9195d5(4455), _0x3148fb = _0x9195d5(4187), _0x5a173e = _0x9195d5(1830);
            function _0xfda852(_0x5361cd, _0x578c2e) {
              var _0x77ebdb = _0x56172e;
              if (!(this instanceof _0xfda852)) return new _0xfda852(_0x5361cd, _0x578c2e);
              _0x578c2e = _0x578c2e || {}, _0x5361cd && _0x77ebdb(736) == ("undefined" === typeof _0x5361cd ? "undefined" : _typeof(_0x5361cd)) && (_0x578c2e = _0x5361cd, 
              _0x5361cd = null), _0x5361cd ? (_0x5361cd = _0x3148fb(_0x5361cd), _0x578c2e[_0x77ebdb(519)] = _0x5361cd["host"], 
              _0x578c2e["secure"] = _0x77ebdb(522) === _0x5361cd[_0x77ebdb(1032)] || _0x77ebdb(939) === _0x5361cd[_0x77ebdb(1032)], 
              _0x578c2e["port"] = _0x5361cd[_0x77ebdb(1221)], _0x5361cd[_0x77ebdb(1269)] && (_0x578c2e[_0x77ebdb(1269)] = _0x5361cd["query"])) : _0x578c2e[_0x77ebdb(604)] && (_0x578c2e[_0x77ebdb(519)] = _0x3148fb(_0x578c2e[_0x77ebdb(604)])[_0x77ebdb(604)]), 
              this[_0x77ebdb(1189)] = null != _0x578c2e[_0x77ebdb(1189)] ? _0x578c2e[_0x77ebdb(1189)] : _0x77ebdb(635) != ("undefined" === typeof location ? "undefined" : _typeof(location)) && _0x77ebdb(571) === location[_0x77ebdb(1032)], 
              _0x578c2e[_0x77ebdb(519)] && !_0x578c2e[_0x77ebdb(1221)] && (_0x578c2e["port"] = this[_0x77ebdb(1189)] ? _0x77ebdb(520) : "80"), 
              this["agent"] = _0x578c2e[_0x77ebdb(985)] || !1, this[_0x77ebdb(519)] = _0x578c2e[_0x77ebdb(519)] || (_0x77ebdb(635) != ("undefined" === typeof location ? "undefined" : _typeof(location)) ? location[_0x77ebdb(519)] : _0x77ebdb(1482)), 
              this["port"] = _0x578c2e[_0x77ebdb(1221)] || ("undefined" != typeof location && location[_0x77ebdb(1221)] ? location["port"] : this[_0x77ebdb(1189)] ? 443 : 80), 
              this[_0x77ebdb(1269)] = _0x578c2e["query"] || {}, "string" == typeof this[_0x77ebdb(1269)] && (this[_0x77ebdb(1269)] = _0x5a173e["decode"](this["query"])), 
              this["upgrade"] = !1 !== _0x578c2e[_0x77ebdb(619)], this["path"] = (_0x578c2e[_0x77ebdb(941)] || _0x77ebdb(815))["replace"](/\/$/, "") + "/", 
              this[_0x77ebdb(1473)] = !!_0x578c2e[_0x77ebdb(1473)], this["jsonp"] = !1 !== _0x578c2e[_0x77ebdb(1135)], 
              this[_0x77ebdb(674)] = !!_0x578c2e[_0x77ebdb(674)], this[_0x77ebdb(1132)] = !!_0x578c2e[_0x77ebdb(1132)], 
              this[_0x77ebdb(1283)] = !1 !== _0x578c2e[_0x77ebdb(1283)], this["timestampParam"] = _0x578c2e[_0x77ebdb(851)] || "t", 
              this[_0x77ebdb(931)] = _0x578c2e[_0x77ebdb(931)], this[_0x77ebdb(637)] = _0x578c2e[_0x77ebdb(637)] || [ "polling", "websocket" ], 
              this[_0x77ebdb(793)] = _0x578c2e[_0x77ebdb(793)] || {}, this[_0x77ebdb(583)] = "", 
              this[_0x77ebdb(667)] = [], this["prevBufferLen"] = 0, this[_0x77ebdb(973)] = _0x578c2e[_0x77ebdb(973)] || 843, 
              this[_0x77ebdb(684)] = _0x578c2e[_0x77ebdb(684)] || !1, this[_0x77ebdb(689)] = null, 
              this[_0x77ebdb(842)] = _0x578c2e[_0x77ebdb(842)], this[_0x77ebdb(1096)] = !1 !== _0x578c2e[_0x77ebdb(1096)] && (_0x578c2e[_0x77ebdb(1096)] || {}), 
              !0 === this[_0x77ebdb(1096)] && (this[_0x77ebdb(1096)] = {}), this[_0x77ebdb(1096)] && null == this[_0x77ebdb(1096)]["threshold"] && (this[_0x77ebdb(1096)]["threshold"] = 1024), 
              this["pfx"] = _0x578c2e[_0x77ebdb(980)] || void 0, this[_0x77ebdb(808)] = _0x578c2e[_0x77ebdb(808)] || void 0, 
              this["passphrase"] = _0x578c2e[_0x77ebdb(712)] || void 0, this[_0x77ebdb(1095)] = _0x578c2e[_0x77ebdb(1095)] || void 0, 
              this["ca"] = _0x578c2e["ca"] || void 0, this[_0x77ebdb(538)] = _0x578c2e[_0x77ebdb(538)] || void 0, 
              this[_0x77ebdb(1440)] = void 0 === _0x578c2e[_0x77ebdb(1440)] || _0x578c2e["rejectUnauthorized"], 
              this[_0x77ebdb(1410)] = !!_0x578c2e[_0x77ebdb(1410)], this["isReactNative"] = _0x77ebdb(635) != ("undefined" === typeof navigator ? "undefined" : _typeof(navigator)) && _0x77ebdb(1028) == _typeof(navigator[_0x77ebdb(695)]) && "reactnative" === navigator[_0x77ebdb(695)][_0x77ebdb(1361)](), 
              (_0x77ebdb(635) == ("undefined" === typeof self ? "undefined" : _typeof(self)) || this[_0x77ebdb(1336)]) && (_0x578c2e[_0x77ebdb(1166)] && Object["keys"](_0x578c2e[_0x77ebdb(1166)])[_0x77ebdb(1253)] > 0 && (this[_0x77ebdb(1166)] = _0x578c2e[_0x77ebdb(1166)]), 
              _0x578c2e[_0x77ebdb(1395)] && (this[_0x77ebdb(1395)] = _0x578c2e[_0x77ebdb(1395)])), 
              this["id"] = null, this[_0x77ebdb(548)] = null, this[_0x77ebdb(1484)] = null, this[_0x77ebdb(1074)] = null, 
              this[_0x77ebdb(1102)] = null, this[_0x77ebdb(501)] = null, this[_0x77ebdb(741)]();
            }
            _0x2d73fb["exports"] = _0xfda852, _0xfda852[_0x56172e(769)] = !1, _0x53404f(_0xfda852["prototype"]), 
            _0xfda852[_0x56172e(1032)] = _0x2ecd01["protocol"], _0xfda852[_0x56172e(1173)] = _0xfda852, 
            _0xfda852[_0x56172e(597)] = _0x9195d5(6496), _0xfda852[_0x56172e(637)] = _0x9195d5(3352), 
            _0xfda852[_0x56172e(568)] = _0x9195d5(4455), _0xfda852[_0x56172e(1097)]["createTransport"] = function(_0x229f2f) {
              var _0x2f85fa = _0x56172e;
              _0xdd3bcb(_0x2f85fa(1070), _0x229f2f);
              var _0x53d797 = function(_0x37d2aa) {
                var _0x30f48b = {};
                for (var _0x259c86 in _0x37d2aa) _0x37d2aa["hasOwnProperty"](_0x259c86) && (_0x30f48b[_0x259c86] = _0x37d2aa[_0x259c86]);
                return _0x30f48b;
              }(this[_0x2f85fa(1269)]);
              _0x53d797[_0x2f85fa(862)] = _0x2ecd01[_0x2f85fa(1032)], _0x53d797[_0x2f85fa(585)] = _0x229f2f;
              var _0x546e6a = this[_0x2f85fa(793)][_0x229f2f] || {};
              return this["id"] && (_0x53d797[_0x2f85fa(1426)] = this["id"]), new _0x368454[_0x229f2f]({
                query: _0x53d797,
                socket: this,
                agent: _0x546e6a[_0x2f85fa(985)] || this[_0x2f85fa(985)],
                hostname: _0x546e6a[_0x2f85fa(519)] || this["hostname"],
                port: _0x546e6a[_0x2f85fa(1221)] || this[_0x2f85fa(1221)],
                secure: _0x546e6a[_0x2f85fa(1189)] || this["secure"],
                path: _0x546e6a[_0x2f85fa(941)] || this[_0x2f85fa(941)],
                forceJSONP: _0x546e6a[_0x2f85fa(1473)] || this[_0x2f85fa(1473)],
                jsonp: _0x546e6a[_0x2f85fa(1135)] || this[_0x2f85fa(1135)],
                forceBase64: _0x546e6a[_0x2f85fa(674)] || this[_0x2f85fa(674)],
                enablesXDR: _0x546e6a["enablesXDR"] || this[_0x2f85fa(1132)],
                withCredentials: _0x546e6a[_0x2f85fa(1283)] || this["withCredentials"],
                timestampRequests: _0x546e6a["timestampRequests"] || this[_0x2f85fa(931)],
                timestampParam: _0x546e6a[_0x2f85fa(851)] || this["timestampParam"],
                policyPort: _0x546e6a[_0x2f85fa(973)] || this["policyPort"],
                pfx: _0x546e6a["pfx"] || this[_0x2f85fa(980)],
                key: _0x546e6a[_0x2f85fa(808)] || this[_0x2f85fa(808)],
                passphrase: _0x546e6a[_0x2f85fa(712)] || this["passphrase"],
                cert: _0x546e6a[_0x2f85fa(1095)] || this["cert"],
                ca: _0x546e6a["ca"] || this["ca"],
                ciphers: _0x546e6a[_0x2f85fa(538)] || this[_0x2f85fa(538)],
                rejectUnauthorized: _0x546e6a["rejectUnauthorized"] || this[_0x2f85fa(1440)],
                perMessageDeflate: _0x546e6a[_0x2f85fa(1096)] || this[_0x2f85fa(1096)],
                extraHeaders: _0x546e6a[_0x2f85fa(1166)] || this[_0x2f85fa(1166)],
                forceNode: _0x546e6a[_0x2f85fa(1410)] || this["forceNode"],
                localAddress: _0x546e6a[_0x2f85fa(1395)] || this[_0x2f85fa(1395)],
                requestTimeout: _0x546e6a[_0x2f85fa(551)] || this["requestTimeout"],
                protocols: _0x546e6a[_0x2f85fa(1155)] || void 0,
                isReactNative: this[_0x2f85fa(1336)]
              });
            }, _0xfda852[_0x56172e(1097)][_0x56172e(741)] = function() {
              var _0x5dcb6b = _0x56172e, _0x3785ee;
              if (this[_0x5dcb6b(684)] && _0xfda852[_0x5dcb6b(769)] && -1 !== this[_0x5dcb6b(637)][_0x5dcb6b(1224)](_0x5dcb6b(799))) _0x3785ee = _0x5dcb6b(799); else {
                if (0 === this[_0x5dcb6b(637)][_0x5dcb6b(1253)]) {
                  var _0x43d47e = this;
                  return void setTimeout(function() {
                    var _0x259f1b = _0x5dcb6b;
                    _0x43d47e["emit"](_0x259f1b(951), _0x259f1b(529));
                  }, 0);
                }
                _0x3785ee = this[_0x5dcb6b(637)][0];
              }
              this[_0x5dcb6b(583)] = _0x5dcb6b(1215);
              try {
                _0x3785ee = this[_0x5dcb6b(777)](_0x3785ee);
              } catch (_0xc43c6a) {
                return this["transports"][_0x5dcb6b(1313)](), void this[_0x5dcb6b(741)]();
              }
              _0x3785ee[_0x5dcb6b(741)](), this["setTransport"](_0x3785ee);
            }, _0xfda852[_0x56172e(1097)][_0x56172e(1225)] = function(_0x20e667) {
              var _0x304f9f = _0x56172e;
              _0xdd3bcb("setting transport %s", _0x20e667[_0x304f9f(1077)]);
              var _0x2e27c9 = this;
              this[_0x304f9f(585)] && (_0xdd3bcb(_0x304f9f(615), this["transport"]["name"]), this[_0x304f9f(585)][_0x304f9f(1050)]()), 
              this[_0x304f9f(585)] = _0x20e667, _0x20e667["on"](_0x304f9f(537), function() {
                var _0x4a22dd = _0x304f9f;
                _0x2e27c9[_0x4a22dd(1235)]();
              })["on"]("packet", function(_0x19c55f) {
                var _0x473ca3 = _0x304f9f;
                _0x2e27c9[_0x473ca3(657)](_0x19c55f);
              })["on"]("error", function(_0x2f21e5) {
                var _0x230cae = _0x304f9f;
                _0x2e27c9[_0x230cae(1120)](_0x2f21e5);
              })["on"]("close", function() {
                var _0x3146be = _0x304f9f;
                _0x2e27c9["onClose"](_0x3146be(1289));
              });
            }, _0xfda852["prototype"]["probe"] = function(_0x4c944a) {
              var _0x3c6cea = _0x56172e;
              _0xdd3bcb(_0x3c6cea(806), _0x4c944a);
              var _0x5bc87f = this[_0x3c6cea(777)](_0x4c944a, {
                probe: 1
              }), _0x47eed0 = !1, _0xac8498 = this;
              function _0x1040a7() {
                var _0x4dc4de = _0x3c6cea;
                if (_0xac8498[_0x4dc4de(842)]) {
                  var _0xb6dfcb = !this[_0x4dc4de(1240)] && _0xac8498[_0x4dc4de(585)][_0x4dc4de(1240)];
                  _0x47eed0 = _0x47eed0 || _0xb6dfcb;
                }
                _0x47eed0 || (_0xdd3bcb(_0x4dc4de(858), _0x4c944a), _0x5bc87f["send"]([ {
                  type: _0x4dc4de(953),
                  data: _0x4dc4de(633)
                } ]), _0x5bc87f["once"]("packet", function(_0x54d97d) {
                  var _0x25b12a = _0x4dc4de;
                  if (!_0x47eed0) if (_0x25b12a(1140) === _0x54d97d[_0x25b12a(1042)] && _0x25b12a(633) === _0x54d97d[_0x25b12a(922)]) {
                    if (_0xdd3bcb('probe transport "%s" pong', _0x4c944a), _0xac8498[_0x25b12a(988)] = !0, 
                    _0xac8498[_0x25b12a(789)](_0x25b12a(988), _0x5bc87f), !_0x5bc87f) return;
                    _0xfda852[_0x25b12a(769)] = _0x25b12a(799) === _0x5bc87f[_0x25b12a(1077)], _0xdd3bcb('pausing current transport "%s"', _0xac8498[_0x25b12a(585)][_0x25b12a(1077)]), 
                    _0xac8498[_0x25b12a(585)][_0x25b12a(1467)](function() {
                      var _0xc1b26f = _0x25b12a;
                      _0x47eed0 || _0xc1b26f(1455) !== _0xac8498["readyState"] && (_0xdd3bcb(_0xc1b26f(772)), 
                      _0xd85500(), _0xac8498[_0xc1b26f(1225)](_0x5bc87f), _0x5bc87f[_0xc1b26f(641)]([ {
                        type: _0xc1b26f(619)
                      } ]), _0xac8498[_0xc1b26f(789)](_0xc1b26f(619), _0x5bc87f), _0x5bc87f = null, _0xac8498[_0xc1b26f(988)] = !1, 
                      _0xac8498[_0xc1b26f(782)]());
                    });
                  } else {
                    _0xdd3bcb(_0x25b12a(969), _0x4c944a);
                    var _0x2a11a7 = new Error(_0x25b12a(1446));
                    _0x2a11a7[_0x25b12a(585)] = _0x5bc87f[_0x25b12a(1077)], _0xac8498["emit"]("upgradeError", _0x2a11a7);
                  }
                }));
              }
              function _0x4cafc4() {
                var _0x23fcda = _0x3c6cea;
                _0x47eed0 || (_0x47eed0 = !0, _0xd85500(), _0x5bc87f[_0x23fcda(1012)](), _0x5bc87f = null);
              }
              function _0x4d1461(_0x188d8c) {
                var _0x111d9a = _0x3c6cea, _0x4d7b06 = new Error("probe error: " + _0x188d8c);
                _0x4d7b06[_0x111d9a(585)] = _0x5bc87f[_0x111d9a(1077)], _0x4cafc4(), _0xdd3bcb('probe transport "%s" failed because of error: %s', _0x4c944a, _0x188d8c), 
                _0xac8498[_0x111d9a(789)]("upgradeError", _0x4d7b06);
              }
              function _0x3b58ba() {
                var _0x4bd823 = _0x3c6cea;
                _0x4d1461(_0x4bd823(1363));
              }
              function _0x28409f() {
                var _0x20a48b = _0x3c6cea;
                _0x4d1461(_0x20a48b(1188));
              }
              function _0x5355cf(_0x3adcb3) {
                var _0x379431 = _0x3c6cea;
                _0x5bc87f && _0x3adcb3[_0x379431(1077)] !== _0x5bc87f[_0x379431(1077)] && (_0xdd3bcb(_0x379431(1485), _0x3adcb3["name"], _0x5bc87f[_0x379431(1077)]), 
                _0x4cafc4());
              }
              function _0xd85500() {
                var _0x10d4c8 = _0x3c6cea;
                _0x5bc87f[_0x10d4c8(790)](_0x10d4c8(741), _0x1040a7), _0x5bc87f[_0x10d4c8(790)](_0x10d4c8(951), _0x4d1461), 
                _0x5bc87f[_0x10d4c8(790)](_0x10d4c8(1012), _0x3b58ba), _0xac8498[_0x10d4c8(790)](_0x10d4c8(1012), _0x28409f), 
                _0xac8498[_0x10d4c8(790)](_0x10d4c8(988), _0x5355cf);
              }
              _0xfda852[_0x3c6cea(769)] = !1, _0x5bc87f["once"](_0x3c6cea(741), _0x1040a7), _0x5bc87f[_0x3c6cea(1360)]("error", _0x4d1461), 
              _0x5bc87f[_0x3c6cea(1360)](_0x3c6cea(1012), _0x3b58ba), this["once"](_0x3c6cea(1012), _0x28409f), 
              this[_0x3c6cea(1360)]("upgrading", _0x5355cf), _0x5bc87f[_0x3c6cea(741)]();
            }, _0xfda852[_0x56172e(1097)]["onOpen"] = function() {
              var _0x155bde = _0x56172e;
              if (_0xdd3bcb("socket open"), this[_0x155bde(583)] = _0x155bde(741), _0xfda852["priorWebsocketSuccess"] = _0x155bde(799) === this[_0x155bde(585)][_0x155bde(1077)], 
              this["emit"]("open"), this[_0x155bde(782)](), _0x155bde(741) === this["readyState"] && this[_0x155bde(619)] && this[_0x155bde(585)]["pause"]) {
                _0xdd3bcb(_0x155bde(644));
                for (var _0xe86ad8 = 0, _0x3c9099 = this[_0x155bde(548)][_0x155bde(1253)]; _0xe86ad8 < _0x3c9099; _0xe86ad8++) this[_0x155bde(633)](this[_0x155bde(548)][_0xe86ad8]);
              }
            }, _0xfda852[_0x56172e(1097)]["onPacket"] = function(_0x3ab1c5) {
              var _0x4a01b9 = _0x56172e;
              if ("opening" === this[_0x4a01b9(583)] || _0x4a01b9(741) === this[_0x4a01b9(583)] || _0x4a01b9(1417) === this[_0x4a01b9(583)]) switch (_0xdd3bcb(_0x4a01b9(738), _0x3ab1c5[_0x4a01b9(1042)], _0x3ab1c5[_0x4a01b9(922)]), 
              this[_0x4a01b9(789)](_0x4a01b9(1230), _0x3ab1c5), this[_0x4a01b9(789)](_0x4a01b9(691)), 
              _0x3ab1c5[_0x4a01b9(1042)]) {
               case _0x4a01b9(741):
                this[_0x4a01b9(979)](JSON[_0x4a01b9(655)](_0x3ab1c5[_0x4a01b9(922)]));
                break;

               case _0x4a01b9(1140):
                this[_0x4a01b9(984)](), this[_0x4a01b9(789)](_0x4a01b9(1140));
                break;

               case _0x4a01b9(951):
                var _0x1a1ab2 = new Error(_0x4a01b9(1154));
                _0x1a1ab2[_0x4a01b9(1326)] = _0x3ab1c5["data"], this[_0x4a01b9(1120)](_0x1a1ab2);
                break;

               case _0x4a01b9(1175):
                this[_0x4a01b9(789)](_0x4a01b9(922), _0x3ab1c5["data"]), this[_0x4a01b9(789)](_0x4a01b9(1175), _0x3ab1c5["data"]);
              } else _0xdd3bcb('packet received with socket readyState "%s"', this[_0x4a01b9(583)]);
            }, _0xfda852[_0x56172e(1097)][_0x56172e(979)] = function(_0x2b1f88) {
              var _0x3077f1 = _0x56172e;
              this[_0x3077f1(789)](_0x3077f1(1301), _0x2b1f88), this["id"] = _0x2b1f88[_0x3077f1(1426)], 
              this["transport"][_0x3077f1(1269)]["sid"] = _0x2b1f88[_0x3077f1(1426)], this[_0x3077f1(548)] = this[_0x3077f1(1406)](_0x2b1f88["upgrades"]), 
              this[_0x3077f1(1484)] = _0x2b1f88[_0x3077f1(1484)], this[_0x3077f1(1074)] = _0x2b1f88[_0x3077f1(1074)], 
              this["onOpen"](), "closed" !== this[_0x3077f1(583)] && (this[_0x3077f1(984)](), 
              this[_0x3077f1(790)]("heartbeat", this[_0x3077f1(888)]), this["on"](_0x3077f1(691), this["onHeartbeat"]));
            }, _0xfda852[_0x56172e(1097)]["onHeartbeat"] = function(_0x5ead0c) {
              var _0x155a02 = _0x56172e;
              clearTimeout(this[_0x155a02(501)]);
              var _0x5507c3 = this;
              _0x5507c3[_0x155a02(501)] = setTimeout(function() {
                var _0x58877a = _0x155a02;
                "closed" !== _0x5507c3[_0x58877a(583)] && _0x5507c3[_0x58877a(795)](_0x58877a(871));
              }, _0x5ead0c || _0x5507c3["pingInterval"] + _0x5507c3["pingTimeout"]);
            }, _0xfda852[_0x56172e(1097)][_0x56172e(984)] = function() {
              var _0x1ccf32 = _0x56172e, _0x5208cc = this;
              clearTimeout(_0x5208cc[_0x1ccf32(1102)]), _0x5208cc[_0x1ccf32(1102)] = setTimeout(function() {
                var _0x307aec = _0x1ccf32;
                _0xdd3bcb("writing ping packet - expecting pong within %sms", _0x5208cc[_0x307aec(1074)]), 
                _0x5208cc[_0x307aec(953)](), _0x5208cc["onHeartbeat"](_0x5208cc[_0x307aec(1074)]);
              }, _0x5208cc[_0x1ccf32(1484)]);
            }, _0xfda852[_0x56172e(1097)][_0x56172e(953)] = function() {
              var _0x5c0e75 = _0x56172e, _0x464b31 = this;
              this["sendPacket"](_0x5c0e75(953), function() {
                var _0xcc13a8 = _0x5c0e75;
                _0x464b31["emit"](_0xcc13a8(953));
              });
            }, _0xfda852[_0x56172e(1097)][_0x56172e(1235)] = function() {
              var _0x4cadb1 = _0x56172e;
              this[_0x4cadb1(667)][_0x4cadb1(1464)](0, this[_0x4cadb1(1007)]), this["prevBufferLen"] = 0, 
              0 === this[_0x4cadb1(667)][_0x4cadb1(1253)] ? this[_0x4cadb1(789)](_0x4cadb1(537)) : this["flush"]();
            }, _0xfda852["prototype"][_0x56172e(782)] = function() {
              var _0x523e34 = _0x56172e;
              "closed" !== this[_0x523e34(583)] && this[_0x523e34(585)][_0x523e34(532)] && !this["upgrading"] && this[_0x523e34(667)]["length"] && (_0xdd3bcb(_0x523e34(779), this[_0x523e34(667)]["length"]), 
              this[_0x523e34(585)][_0x523e34(641)](this[_0x523e34(667)]), this["prevBufferLen"] = this[_0x523e34(667)][_0x523e34(1253)], 
              this[_0x523e34(789)]("flush"));
            }, _0xfda852[_0x56172e(1097)][_0x56172e(968)] = _0xfda852["prototype"][_0x56172e(641)] = function(_0xc18ed3, _0x5c4aca, _0x4f26ce) {
              var _0x44927b = _0x56172e;
              return this[_0x44927b(586)](_0x44927b(1175), _0xc18ed3, _0x5c4aca, _0x4f26ce), this;
            }, _0xfda852[_0x56172e(1097)]["sendPacket"] = function(_0x33fda1, _0x1ac603, _0x34020b, _0x28b5b6) {
              var _0x3857b4 = _0x56172e;
              if (_0x3857b4(646) == ("undefined" === typeof _0x1ac603 ? "undefined" : _typeof(_0x1ac603)) && (_0x28b5b6 = _0x1ac603, 
              _0x1ac603 = void 0), _0x3857b4(646) == ("undefined" === typeof _0x34020b ? "undefined" : _typeof(_0x34020b)) && (_0x28b5b6 = _0x34020b, 
              _0x34020b = null), _0x3857b4(1417) !== this[_0x3857b4(583)] && "closed" !== this[_0x3857b4(583)]) {
                (_0x34020b = _0x34020b || {})[_0x3857b4(669)] = !1 !== _0x34020b["compress"];
                var _0x5cd3cc = {
                  type: _0x33fda1,
                  data: _0x1ac603,
                  options: _0x34020b
                };
                this[_0x3857b4(789)](_0x3857b4(589), _0x5cd3cc), this["writeBuffer"][_0x3857b4(598)](_0x5cd3cc), 
                _0x28b5b6 && this["once"]("flush", _0x28b5b6), this["flush"]();
              }
            }, _0xfda852["prototype"][_0x56172e(1012)] = function() {
              var _0x38dbfb = _0x56172e;
              if ("opening" === this[_0x38dbfb(583)] || _0x38dbfb(741) === this[_0x38dbfb(583)]) {
                this[_0x38dbfb(583)] = _0x38dbfb(1417);
                var _0x109e37 = this;
                this["writeBuffer"][_0x38dbfb(1253)] ? this[_0x38dbfb(1360)](_0x38dbfb(537), function() {
                  var _0x3150c2 = _0x38dbfb;
                  this[_0x3150c2(988)] ? _0x3bd478() : _0x3100a4();
                }) : this["upgrading"] ? _0x3bd478() : _0x3100a4();
              }
              function _0x3100a4() {
                var _0x17d7aa = _0x38dbfb;
                _0x109e37[_0x17d7aa(795)](_0x17d7aa(1088)), _0xdd3bcb("socket closing - telling transport to close"), 
                _0x109e37[_0x17d7aa(585)][_0x17d7aa(1012)]();
              }
              function _0x535814() {
                var _0x5b1473 = _0x38dbfb;
                _0x109e37[_0x5b1473(790)]("upgrade", _0x535814), _0x109e37[_0x5b1473(790)](_0x5b1473(1304), _0x535814), 
                _0x3100a4();
              }
              function _0x3bd478() {
                var _0x183c45 = _0x38dbfb;
                _0x109e37[_0x183c45(1360)]("upgrade", _0x535814), _0x109e37[_0x183c45(1360)]("upgradeError", _0x535814);
              }
              return this;
            }, _0xfda852["prototype"]["onError"] = function(_0x31d8d7) {
              var _0x6e9d52 = _0x56172e;
              _0xdd3bcb(_0x6e9d52(972), _0x31d8d7), _0xfda852[_0x6e9d52(769)] = !1, this[_0x6e9d52(789)]("error", _0x31d8d7), 
              this[_0x6e9d52(795)](_0x6e9d52(614), _0x31d8d7);
            }, _0xfda852["prototype"]["onClose"] = function(_0x5ad4df, _0x2ad303) {
              var _0x486787 = _0x56172e;
              _0x486787(1215) !== this[_0x486787(583)] && "open" !== this[_0x486787(583)] && _0x486787(1417) !== this["readyState"] || (_0xdd3bcb(_0x486787(1396), _0x5ad4df), 
              clearTimeout(this[_0x486787(1102)]), clearTimeout(this["pingTimeoutTimer"]), this[_0x486787(585)][_0x486787(1050)](_0x486787(1012)), 
              this["transport"][_0x486787(1012)](), this["transport"][_0x486787(1050)](), this["readyState"] = "closed", 
              this["id"] = null, this[_0x486787(789)](_0x486787(1012), _0x5ad4df, _0x2ad303), 
              this[_0x486787(667)] = [], this["prevBufferLen"] = 0);
            }, _0xfda852[_0x56172e(1097)][_0x56172e(1406)] = function(_0x1e8698) {
              var _0x2651d4 = _0x56172e;
              for (var _0x142573 = [], _0x15c3a4 = 0, _0x4d6f8b = _0x1e8698[_0x2651d4(1253)]; _0x15c3a4 < _0x4d6f8b; _0x15c3a4++) ~_0x1b0cf4(this[_0x2651d4(637)], _0x1e8698[_0x15c3a4]) && _0x142573[_0x2651d4(598)](_0x1e8698[_0x15c3a4]);
              return _0x142573;
            };
          },
          6496: function _(_0x4e767c, _0xcb7be1, _0x135fa9) {
            var _0x40b767 = a0_0x16c1, _0x4f495e = _0x135fa9(4455), _0x2f4706 = _0x135fa9(8767);
            function _0x523360(_0x577976) {
              var _0x4a76f5 = a0_0x16c1;
              this["path"] = _0x577976[_0x4a76f5(941)], this["hostname"] = _0x577976[_0x4a76f5(519)], 
              this[_0x4a76f5(1221)] = _0x577976[_0x4a76f5(1221)], this["secure"] = _0x577976["secure"], 
              this[_0x4a76f5(1269)] = _0x577976[_0x4a76f5(1269)], this[_0x4a76f5(851)] = _0x577976[_0x4a76f5(851)], 
              this[_0x4a76f5(931)] = _0x577976["timestampRequests"], this[_0x4a76f5(583)] = "", 
              this[_0x4a76f5(985)] = _0x577976["agent"] || !1, this[_0x4a76f5(1249)] = _0x577976[_0x4a76f5(1249)], 
              this["enablesXDR"] = _0x577976[_0x4a76f5(1132)], this[_0x4a76f5(1283)] = _0x577976[_0x4a76f5(1283)], 
              this[_0x4a76f5(980)] = _0x577976[_0x4a76f5(980)], this[_0x4a76f5(808)] = _0x577976[_0x4a76f5(808)], 
              this["passphrase"] = _0x577976["passphrase"], this["cert"] = _0x577976[_0x4a76f5(1095)], 
              this["ca"] = _0x577976["ca"], this["ciphers"] = _0x577976["ciphers"], this[_0x4a76f5(1440)] = _0x577976[_0x4a76f5(1440)], 
              this[_0x4a76f5(1410)] = _0x577976[_0x4a76f5(1410)], this[_0x4a76f5(1336)] = _0x577976[_0x4a76f5(1336)], 
              this[_0x4a76f5(1166)] = _0x577976[_0x4a76f5(1166)], this[_0x4a76f5(1395)] = _0x577976[_0x4a76f5(1395)];
            }
            _0x4e767c[_0x40b767(810)] = _0x523360, _0x2f4706(_0x523360[_0x40b767(1097)]), _0x523360[_0x40b767(1097)]["onError"] = function(_0x252ae2, _0x521df3) {
              var _0x79f6fc = _0x40b767, _0x5438fa = new Error(_0x252ae2);
              return _0x5438fa[_0x79f6fc(1042)] = _0x79f6fc(1043), _0x5438fa["description"] = _0x521df3, 
              this[_0x79f6fc(789)](_0x79f6fc(951), _0x5438fa), this;
            }, _0x523360[_0x40b767(1097)][_0x40b767(741)] = function() {
              var _0x3d874e = _0x40b767;
              return _0x3d874e(1455) !== this[_0x3d874e(583)] && "" !== this["readyState"] || (this[_0x3d874e(583)] = _0x3d874e(1215), 
              this[_0x3d874e(1356)]()), this;
            }, _0x523360[_0x40b767(1097)][_0x40b767(1012)] = function() {
              var _0x18d6da = _0x40b767;
              return _0x18d6da(1215) !== this["readyState"] && _0x18d6da(741) !== this[_0x18d6da(583)] || (this[_0x18d6da(1003)](), 
              this[_0x18d6da(795)]()), this;
            }, _0x523360[_0x40b767(1097)][_0x40b767(641)] = function(_0x2616d1) {
              var _0xf12f77 = _0x40b767;
              if (_0xf12f77(741) !== this[_0xf12f77(583)]) throw new Error("Transport not open");
              this[_0xf12f77(968)](_0x2616d1);
            }, _0x523360[_0x40b767(1097)][_0x40b767(1196)] = function() {
              var _0x109513 = _0x40b767;
              this["readyState"] = _0x109513(741), this[_0x109513(532)] = !0, this[_0x109513(789)](_0x109513(741));
            }, _0x523360["prototype"][_0x40b767(1165)] = function(_0x23c5aa) {
              var _0x5e4bce = _0x40b767, _0x16de22 = _0x4f495e[_0x5e4bce(1330)](_0x23c5aa, this[_0x5e4bce(1249)][_0x5e4bce(689)]);
              this["onPacket"](_0x16de22);
            }, _0x523360[_0x40b767(1097)]["onPacket"] = function(_0x2fad1e) {
              var _0x5295ef = _0x40b767;
              this[_0x5295ef(789)](_0x5295ef(1230), _0x2fad1e);
            }, _0x523360["prototype"][_0x40b767(795)] = function() {
              var _0x479200 = _0x40b767;
              this[_0x479200(583)] = _0x479200(1455), this[_0x479200(789)](_0x479200(1012));
            };
          },
          3352: function _(_0x299d81, _0x13b250, _0x15c5c0) {
            var _0x27376e = a0_0x16c1, _0x6bf59 = _0x15c5c0(2777), _0x5a2c99 = _0x15c5c0(3416), _0x1cf493 = _0x15c5c0(9785), _0x1ac204 = _0x15c5c0(4442);
            _0x13b250[_0x27376e(1436)] = function(_0x51850b) {
              var _0x2a3bfc = _0x27376e, _0x4123a9 = !1, _0x17acb7 = !1, _0xd9e839 = !1 !== _0x51850b["jsonp"];
              if (_0x2a3bfc(635) != ("undefined" === typeof location ? "undefined" : _typeof(location))) {
                var _0x34d03e = _0x2a3bfc(571) === location[_0x2a3bfc(1032)], _0x4ab26e = location[_0x2a3bfc(1221)];
                _0x4ab26e || (_0x4ab26e = _0x34d03e ? 443 : 80), _0x4123a9 = _0x51850b[_0x2a3bfc(519)] !== location[_0x2a3bfc(519)] || _0x4ab26e !== _0x51850b[_0x2a3bfc(1221)], 
                _0x17acb7 = _0x51850b[_0x2a3bfc(1189)] !== _0x34d03e;
              }
              if (_0x51850b[_0x2a3bfc(1091)] = _0x4123a9, _0x51850b["xscheme"] = _0x17acb7, "open" in new _0x6bf59(_0x51850b) && !_0x51850b[_0x2a3bfc(1473)]) return new _0x5a2c99(_0x51850b);
              if (!_0xd9e839) throw new Error("JSONP disabled");
              return new _0x1cf493(_0x51850b);
            }, _0x13b250["websocket"] = _0x1ac204;
          },
          9785: function _(_0x1679e2, _0x23c4ec, _0x497aa4) {
            var _0xfd51c6 = a0_0x16c1, _0x23cb45 = _0x497aa4(9015), _0x3157c8 = _0x497aa4(3861), _0x5ded15 = _0x497aa4(3549);
            _0x1679e2[_0xfd51c6(810)] = _0x3617e2;
            var _0x41c466, _0xb724f1 = /\n/g, _0x4495ad = /\\n/g;
            function _0x5ed460() {}
            function _0x3617e2(_0x1ad363) {
              var _0x2176e9 = _0xfd51c6;
              _0x23cb45[_0x2176e9(869)](this, _0x1ad363), this[_0x2176e9(1269)] = this[_0x2176e9(1269)] || {}, 
              _0x41c466 || (_0x41c466 = _0x5ded15[_0x2176e9(549)] = _0x5ded15[_0x2176e9(549)] || []), 
              this[_0x2176e9(1430)] = _0x41c466[_0x2176e9(1253)];
              var _0x20f1fa = this;
              _0x41c466[_0x2176e9(598)](function(_0xc31420) {
                _0x20f1fa["onData"](_0xc31420);
              }), this[_0x2176e9(1269)]["j"] = this[_0x2176e9(1430)], _0x2176e9(646) == ("undefined" === typeof addEventListener ? "undefined" : _typeof(addEventListener)) && addEventListener(_0x2176e9(1015), function() {
                var _0x5a8814 = _0x2176e9;
                _0x20f1fa["script"] && (_0x20f1fa[_0x5a8814(960)][_0x5a8814(703)] = _0x5ed460);
              }, !1);
            }
            _0x3157c8(_0x3617e2, _0x23cb45), _0x3617e2[_0xfd51c6(1097)][_0xfd51c6(1240)] = !1, 
            _0x3617e2[_0xfd51c6(1097)][_0xfd51c6(1003)] = function() {
              var _0x24d8cb = _0xfd51c6;
              this["script"] && (this[_0x24d8cb(960)]["parentNode"][_0x24d8cb(1357)](this[_0x24d8cb(960)]), 
              this[_0x24d8cb(960)] = null), this[_0x24d8cb(550)] && (this["form"][_0x24d8cb(658)][_0x24d8cb(1357)](this[_0x24d8cb(550)]), 
              this[_0x24d8cb(550)] = null, this[_0x24d8cb(1099)] = null), _0x23cb45[_0x24d8cb(1097)]["doClose"][_0x24d8cb(869)](this);
            }, _0x3617e2[_0xfd51c6(1097)][_0xfd51c6(506)] = function() {
              var _0x372657 = _0xfd51c6, _0x5aa77d = this, _0x5550c0 = document["createElement"]("script");
              this[_0x372657(960)] && (this[_0x372657(960)]["parentNode"][_0x372657(1357)](this[_0x372657(960)]), 
              this[_0x372657(960)] = null), _0x5550c0[_0x372657(746)] = !0, _0x5550c0[_0x372657(648)] = this[_0x372657(856)](), 
              _0x5550c0["onerror"] = function(_0x5821df) {
                var _0x58acf6 = _0x372657;
                _0x5aa77d[_0x58acf6(1120)](_0x58acf6(1089), _0x5821df);
              };
              var _0x2d165 = document[_0x372657(1145)](_0x372657(960))[0];
              _0x2d165 ? _0x2d165[_0x372657(658)][_0x372657(745)](_0x5550c0, _0x2d165) : (document[_0x372657(1353)] || document["body"])[_0x372657(1220)](_0x5550c0), 
              this[_0x372657(960)] = _0x5550c0, _0x372657(635) != ("undefined" === typeof navigator ? "undefined" : _typeof(navigator)) && /gecko/i[_0x372657(1377)](navigator["userAgent"]) && setTimeout(function() {
                var _0x1f5b0b = _0x372657, _0x258dd1 = document[_0x1f5b0b(607)](_0x1f5b0b(1099));
                document[_0x1f5b0b(759)][_0x1f5b0b(1220)](_0x258dd1), document["body"][_0x1f5b0b(1357)](_0x258dd1);
              }, 100);
            }, _0x3617e2["prototype"][_0xfd51c6(719)] = function(_0x51349c, _0x138e3e) {
              var _0x2b18c9 = _0xfd51c6, _0x544aab = this;
              if (!this[_0x2b18c9(550)]) {
                var _0x4bfe41, _0x510827 = document["createElement"](_0x2b18c9(550)), _0x464dfb = document["createElement"](_0x2b18c9(936)), _0x20fc5c = this[_0x2b18c9(1278)] = _0x2b18c9(1285) + this[_0x2b18c9(1430)];
                _0x510827["className"] = _0x2b18c9(1113), _0x510827["style"][_0x2b18c9(1180)] = _0x2b18c9(846), 
                _0x510827[_0x2b18c9(919)][_0x2b18c9(1033)] = _0x2b18c9(620), _0x510827["style"][_0x2b18c9(1251)] = _0x2b18c9(620), 
                _0x510827[_0x2b18c9(831)] = _0x20fc5c, _0x510827[_0x2b18c9(553)] = _0x2b18c9(562), 
                _0x510827["setAttribute"](_0x2b18c9(1052), _0x2b18c9(999)), _0x464dfb["name"] = "d", 
                _0x510827[_0x2b18c9(1220)](_0x464dfb), document["body"][_0x2b18c9(1220)](_0x510827), 
                this[_0x2b18c9(550)] = _0x510827, this[_0x2b18c9(606)] = _0x464dfb;
              }
              function _0x3db181() {
                _0x317fb4(), _0x138e3e();
              }
              function _0x317fb4() {
                var _0x48adf2 = _0x2b18c9;
                if (_0x544aab[_0x48adf2(1099)]) try {
                  _0x544aab[_0x48adf2(550)][_0x48adf2(1357)](_0x544aab[_0x48adf2(1099)]);
                } catch (_0x2d43fd) {
                  _0x544aab[_0x48adf2(1120)](_0x48adf2(1433), _0x2d43fd);
                }
                try {
                  var _0x1094dd = '<iframe src="javascript:0" name="' + _0x544aab["iframeId"] + '">';
                  _0x4bfe41 = document[_0x48adf2(607)](_0x1094dd);
                } catch (_0x5132b9) {
                  (_0x4bfe41 = document[_0x48adf2(607)](_0x48adf2(1099)))[_0x48adf2(1077)] = _0x544aab["iframeId"], 
                  _0x4bfe41[_0x48adf2(648)] = "javascript:0";
                }
                _0x4bfe41["id"] = _0x544aab[_0x48adf2(1278)], _0x544aab["form"][_0x48adf2(1220)](_0x4bfe41), 
                _0x544aab["iframe"] = _0x4bfe41;
              }
              this["form"]["action"] = this["uri"](), _0x317fb4(), _0x51349c = _0x51349c[_0x2b18c9(1218)](_0x4495ad, "\\\n"), 
              this[_0x2b18c9(606)][_0x2b18c9(1036)] = _0x51349c[_0x2b18c9(1218)](_0xb724f1, "\\n");
              try {
                this[_0x2b18c9(550)][_0x2b18c9(776)]();
              } catch (_0x4ec1d2) {}
              this["iframe"][_0x2b18c9(1341)] ? this[_0x2b18c9(1099)][_0x2b18c9(981)] = function() {
                var _0x24e1ef = _0x2b18c9;
                _0x24e1ef(1107) === _0x544aab[_0x24e1ef(1099)][_0x24e1ef(583)] && _0x3db181();
              } : this[_0x2b18c9(1099)][_0x2b18c9(802)] = _0x3db181;
            };
          },
          3416: function _(_0x7ac975, _0x45634e, _0x225faf) {
            var _0x4e515e = a0_0x16c1, _0xecadaf = _0x225faf(2777), _0x20fd8b = _0x225faf(9015), _0xbb0571 = _0x225faf(8767), _0xd70345 = _0x225faf(3861), _0x59614a = _0x225faf(1227)(_0x4e515e(1399)), _0x4af6e9 = _0x225faf(3549);
            function _0xb7c390() {}
            function _0x1b9da0(_0x1a0771) {
              var _0x23036e = _0x4e515e;
              if (_0x20fd8b[_0x23036e(869)](this, _0x1a0771), this[_0x23036e(551)] = _0x1a0771[_0x23036e(551)], 
              this[_0x23036e(1166)] = _0x1a0771[_0x23036e(1166)], _0x23036e(635) != ("undefined" === typeof location ? "undefined" : _typeof(location))) {
                var _0x2c0da6 = _0x23036e(571) === location[_0x23036e(1032)], _0x13fd31 = location[_0x23036e(1221)];
                _0x13fd31 || (_0x13fd31 = _0x2c0da6 ? 443 : 80), this["xd"] = _0x23036e(635) != ("undefined" === typeof location ? "undefined" : _typeof(location)) && _0x1a0771[_0x23036e(519)] !== location[_0x23036e(519)] || _0x13fd31 !== _0x1a0771[_0x23036e(1221)], 
                this["xs"] = _0x1a0771[_0x23036e(1189)] !== _0x2c0da6;
              }
            }
            function _0x925ba6(_0x33c052) {
              var _0x1b6c9c = _0x4e515e;
              this[_0x1b6c9c(553)] = _0x33c052[_0x1b6c9c(553)] || _0x1b6c9c(758), this["uri"] = _0x33c052[_0x1b6c9c(856)], 
              this["xd"] = !!_0x33c052["xd"], this["xs"] = !!_0x33c052["xs"], this[_0x1b6c9c(746)] = !1 !== _0x33c052[_0x1b6c9c(746)], 
              this[_0x1b6c9c(922)] = void 0 !== _0x33c052["data"] ? _0x33c052[_0x1b6c9c(922)] : null, 
              this[_0x1b6c9c(985)] = _0x33c052[_0x1b6c9c(985)], this["isBinary"] = _0x33c052[_0x1b6c9c(827)], 
              this["supportsBinary"] = _0x33c052["supportsBinary"], this[_0x1b6c9c(1132)] = _0x33c052[_0x1b6c9c(1132)], 
              this[_0x1b6c9c(1283)] = _0x33c052[_0x1b6c9c(1283)], this["requestTimeout"] = _0x33c052["requestTimeout"], 
              this["pfx"] = _0x33c052[_0x1b6c9c(980)], this[_0x1b6c9c(808)] = _0x33c052[_0x1b6c9c(808)], 
              this[_0x1b6c9c(712)] = _0x33c052[_0x1b6c9c(712)], this["cert"] = _0x33c052[_0x1b6c9c(1095)], 
              this["ca"] = _0x33c052["ca"], this[_0x1b6c9c(538)] = _0x33c052["ciphers"], this[_0x1b6c9c(1440)] = _0x33c052["rejectUnauthorized"], 
              this[_0x1b6c9c(1166)] = _0x33c052["extraHeaders"], this[_0x1b6c9c(1431)]();
            }
            function _0x29d826() {
              var _0x98e584 = _0x4e515e;
              for (var _0x26f4e5 in _0x925ba6["requests"]) _0x925ba6[_0x98e584(803)][_0x98e584(783)](_0x26f4e5) && _0x925ba6[_0x98e584(803)][_0x26f4e5][_0x98e584(1367)]();
            }
            _0x7ac975["exports"] = _0x1b9da0, _0x7ac975[_0x4e515e(810)][_0x4e515e(1228)] = _0x925ba6, 
            _0xd70345(_0x1b9da0, _0x20fd8b), _0x1b9da0["prototype"]["supportsBinary"] = !0, 
            _0x1b9da0[_0x4e515e(1097)]["request"] = function(_0x2a0f93) {
              var _0x28d50e = _0x4e515e;
              return (_0x2a0f93 = _0x2a0f93 || {})[_0x28d50e(856)] = this[_0x28d50e(856)](), _0x2a0f93["xd"] = this["xd"], 
              _0x2a0f93["xs"] = this["xs"], _0x2a0f93["agent"] = this["agent"] || !1, _0x2a0f93["supportsBinary"] = this[_0x28d50e(1240)], 
              _0x2a0f93[_0x28d50e(1132)] = this[_0x28d50e(1132)], _0x2a0f93[_0x28d50e(1283)] = this["withCredentials"], 
              _0x2a0f93[_0x28d50e(980)] = this[_0x28d50e(980)], _0x2a0f93[_0x28d50e(808)] = this[_0x28d50e(808)], 
              _0x2a0f93[_0x28d50e(712)] = this[_0x28d50e(712)], _0x2a0f93[_0x28d50e(1095)] = this[_0x28d50e(1095)], 
              _0x2a0f93["ca"] = this["ca"], _0x2a0f93[_0x28d50e(538)] = this[_0x28d50e(538)], 
              _0x2a0f93[_0x28d50e(1440)] = this["rejectUnauthorized"], _0x2a0f93[_0x28d50e(551)] = this["requestTimeout"], 
              _0x2a0f93[_0x28d50e(1166)] = this[_0x28d50e(1166)], new _0x925ba6(_0x2a0f93);
            }, _0x1b9da0[_0x4e515e(1097)]["doWrite"] = function(_0x17ac1a, _0x526a39) {
              var _0x29d4cd = _0x4e515e, _0x37c252 = _0x29d4cd(1028) != ("undefined" === typeof _0x17ac1a ? "undefined" : _typeof(_0x17ac1a)) && void 0 !== _0x17ac1a, _0x3275fe = this[_0x29d4cd(1309)]({
                method: "POST",
                data: _0x17ac1a,
                isBinary: _0x37c252
              }), _0x4cb49f = this;
              _0x3275fe["on"](_0x29d4cd(1193), _0x526a39), _0x3275fe["on"](_0x29d4cd(951), function(_0x1c16fe) {
                var _0x237819 = _0x29d4cd;
                _0x4cb49f["onError"](_0x237819(1078), _0x1c16fe);
              }), this[_0x29d4cd(1323)] = _0x3275fe;
            }, _0x1b9da0[_0x4e515e(1097)][_0x4e515e(506)] = function() {
              var _0x11b8dd = _0x4e515e;
              _0x59614a(_0x11b8dd(700));
              var _0x56cd9c = this[_0x11b8dd(1309)](), _0x258817 = this;
              _0x56cd9c["on"]("data", function(_0x15e05a) {
                var _0xd5359b = _0x11b8dd;
                _0x258817[_0xd5359b(1165)](_0x15e05a);
              }), _0x56cd9c["on"](_0x11b8dd(951), function(_0x5a52ec) {
                var _0x2fa414 = _0x11b8dd;
                _0x258817[_0x2fa414(1120)](_0x2fa414(920), _0x5a52ec);
              }), this[_0x11b8dd(1031)] = _0x56cd9c;
            }, _0xbb0571(_0x925ba6[_0x4e515e(1097)]), _0x925ba6[_0x4e515e(1097)][_0x4e515e(1431)] = function() {
              var _0x2f3ee7 = _0x4e515e, _0x1d18c3 = {
                agent: this[_0x2f3ee7(985)],
                xdomain: this["xd"],
                xscheme: this["xs"],
                enablesXDR: this[_0x2f3ee7(1132)]
              };
              _0x1d18c3[_0x2f3ee7(980)] = this["pfx"], _0x1d18c3[_0x2f3ee7(808)] = this[_0x2f3ee7(808)], 
              _0x1d18c3[_0x2f3ee7(712)] = this[_0x2f3ee7(712)], _0x1d18c3[_0x2f3ee7(1095)] = this[_0x2f3ee7(1095)], 
              _0x1d18c3["ca"] = this["ca"], _0x1d18c3["ciphers"] = this[_0x2f3ee7(538)], _0x1d18c3["rejectUnauthorized"] = this[_0x2f3ee7(1440)];
              var _0x4c80f1 = this[_0x2f3ee7(575)] = new _0xecadaf(_0x1d18c3), _0x4ad95c = this;
              try {
                _0x59614a(_0x2f3ee7(1011), this[_0x2f3ee7(553)], this[_0x2f3ee7(856)]), _0x4c80f1[_0x2f3ee7(741)](this["method"], this[_0x2f3ee7(856)], this[_0x2f3ee7(746)]);
                try {
                  if (this[_0x2f3ee7(1166)]) for (var _0x4267e2 in _0x4c80f1[_0x2f3ee7(785)] && _0x4c80f1[_0x2f3ee7(785)](!0), 
                  this[_0x2f3ee7(1166)]) this[_0x2f3ee7(1166)][_0x2f3ee7(783)](_0x4267e2) && _0x4c80f1[_0x2f3ee7(1184)](_0x4267e2, this["extraHeaders"][_0x4267e2]);
                } catch (_0x3f20ad) {}
                if (_0x2f3ee7(562) === this[_0x2f3ee7(553)]) try {
                  this[_0x2f3ee7(827)] ? _0x4c80f1["setRequestHeader"](_0x2f3ee7(1461), _0x2f3ee7(1375)) : _0x4c80f1["setRequestHeader"](_0x2f3ee7(1461), _0x2f3ee7(1174));
                } catch (_0x154cb5) {}
                try {
                  _0x4c80f1[_0x2f3ee7(1184)](_0x2f3ee7(1303), _0x2f3ee7(1295));
                } catch (_0x4b9095) {}
                _0x2f3ee7(1283) in _0x4c80f1 && (_0x4c80f1[_0x2f3ee7(1283)] = this["withCredentials"]), 
                this[_0x2f3ee7(551)] && (_0x4c80f1[_0x2f3ee7(771)] = this[_0x2f3ee7(551)]), this[_0x2f3ee7(1250)]() ? (_0x4c80f1[_0x2f3ee7(802)] = function() {
                  var _0xc0a147 = _0x2f3ee7;
                  _0x4ad95c[_0xc0a147(977)]();
                }, _0x4c80f1[_0x2f3ee7(703)] = function() {
                  var _0x3bcff3 = _0x2f3ee7;
                  _0x4ad95c["onError"](_0x4c80f1[_0x3bcff3(642)]);
                }) : _0x4c80f1[_0x2f3ee7(981)] = function() {
                  var _0x2f1392 = _0x2f3ee7;
                  if (2 === _0x4c80f1[_0x2f1392(583)]) try {
                    var _0x3ea9dc = _0x4c80f1["getResponseHeader"](_0x2f1392(891));
                    (_0x4ad95c["supportsBinary"] && _0x2f1392(1375) === _0x3ea9dc || _0x2f1392(896) === _0x3ea9dc) && (_0x4c80f1[_0x2f1392(1179)] = _0x2f1392(913));
                  } catch (_0x477e24) {}
                  4 === _0x4c80f1[_0x2f1392(583)] && (200 === _0x4c80f1["status"] || 1223 === _0x4c80f1["status"] ? _0x4ad95c["onLoad"]() : setTimeout(function() {
                    var _0x5caa54 = _0x2f1392;
                    _0x4ad95c[_0x5caa54(1120)](_0x5caa54(577) == _typeof(_0x4c80f1[_0x5caa54(1344)]) ? _0x4c80f1[_0x5caa54(1344)] : 0);
                  }, 0));
                }, _0x59614a(_0x2f3ee7(1343), this[_0x2f3ee7(922)]), _0x4c80f1["send"](this[_0x2f3ee7(922)]);
              } catch (_0x218d4d) {
                return void setTimeout(function() {
                  var _0x32465c = _0x2f3ee7;
                  _0x4ad95c[_0x32465c(1120)](_0x218d4d);
                }, 0);
              }
              "undefined" != typeof document && (this["index"] = _0x925ba6[_0x2f3ee7(1443)]++, 
              _0x925ba6[_0x2f3ee7(803)][this[_0x2f3ee7(1430)]] = this);
            }, _0x925ba6[_0x4e515e(1097)][_0x4e515e(603)] = function() {
              var _0x12f7ea = _0x4e515e;
              this[_0x12f7ea(789)](_0x12f7ea(1193)), this[_0x12f7ea(781)]();
            }, _0x925ba6["prototype"]["onData"] = function(_0x1daf77) {
              var _0xf1f9a2 = _0x4e515e;
              this[_0xf1f9a2(789)](_0xf1f9a2(922), _0x1daf77), this[_0xf1f9a2(603)]();
            }, _0x925ba6[_0x4e515e(1097)]["onError"] = function(_0x1094e0) {
              var _0x5adb56 = _0x4e515e;
              this[_0x5adb56(789)]("error", _0x1094e0), this["cleanup"](!0);
            }, _0x925ba6["prototype"][_0x4e515e(781)] = function(_0x27d27f) {
              var _0x320da9 = _0x4e515e;
              if (void 0 !== this[_0x320da9(575)] && null !== this[_0x320da9(575)]) {
                if (this[_0x320da9(1250)]() ? this[_0x320da9(575)][_0x320da9(802)] = this["xhr"][_0x320da9(703)] = _0xb7c390 : this[_0x320da9(575)][_0x320da9(981)] = _0xb7c390, 
                _0x27d27f) try {
                  this[_0x320da9(575)][_0x320da9(1367)]();
                } catch (_0xdc56a) {}
                "undefined" != typeof document && delete _0x925ba6[_0x320da9(803)][this[_0x320da9(1430)]], 
                this[_0x320da9(575)] = null;
              }
            }, _0x925ba6["prototype"]["onLoad"] = function() {
              var _0x439c52 = _0x4e515e, _0x1def79;
              try {
                var _0x45930a;
                try {
                  _0x45930a = this["xhr"][_0x439c52(766)]("Content-Type");
                } catch (_0x427527) {}
                _0x1def79 = ("application/octet-stream" === _0x45930a || "application/octet-stream; charset=UTF-8" === _0x45930a) && this[_0x439c52(575)]["response"] || this["xhr"][_0x439c52(642)];
              } catch (_0x2b72a7) {
                this[_0x439c52(1120)](_0x2b72a7);
              }
              null != _0x1def79 && this[_0x439c52(1165)](_0x1def79);
            }, _0x925ba6[_0x4e515e(1097)][_0x4e515e(1250)] = function() {
              var _0x4f8c5a = _0x4e515e;
              return _0x4f8c5a(635) != ("undefined" === typeof XDomainRequest ? "undefined" : _typeof(XDomainRequest)) && !this["xs"] && this[_0x4f8c5a(1132)];
            }, _0x925ba6[_0x4e515e(1097)][_0x4e515e(1367)] = function() {
              this["cleanup"]();
            }, _0x925ba6[_0x4e515e(1443)] = 0, _0x925ba6[_0x4e515e(803)] = {}, _0x4e515e(635) != ("undefined" === typeof document ? "undefined" : _typeof(document)) && (_0x4e515e(646) == ("undefined" === typeof attachEvent ? "undefined" : _typeof(attachEvent)) ? attachEvent("onunload", _0x29d826) : _0x4e515e(646) == ("undefined" === typeof addEventListener ? "undefined" : _typeof(addEventListener)) && addEventListener(_0x4e515e(1207) in _0x4af6e9 ? "pagehide" : _0x4e515e(638), _0x29d826, !1));
          },
          9015: function _(_0x42e001, _0x149cda, _0x3a4884) {
            var _0x3c3a9b = a0_0x16c1, _0x258ce4 = _0x3a4884(6496), _0x2d74f6 = _0x3a4884(1830), _0x25d759 = _0x3a4884(4455), _0x13b43d = _0x3a4884(3861), _0x3920d0 = _0x3a4884(2281), _0x8ed0af = _0x3a4884(1227)(_0x3c3a9b(942));
            _0x42e001[_0x3c3a9b(810)] = _0x1df923;
            var _0x413c16 = null != new (_0x3a4884(2777))({
              xdomain: !1
            })["responseType"];
            function _0x1df923(_0x1aa8bc) {
              var _0x1bfbb7 = _0x3c3a9b, _0x3531a7 = _0x1aa8bc && _0x1aa8bc[_0x1bfbb7(674)];
              _0x413c16 && !_0x3531a7 || (this[_0x1bfbb7(1240)] = !1), _0x258ce4["call"](this, _0x1aa8bc);
            }
            _0x13b43d(_0x1df923, _0x258ce4), _0x1df923["prototype"][_0x3c3a9b(1077)] = "polling", 
            _0x1df923[_0x3c3a9b(1097)][_0x3c3a9b(1356)] = function() {
              this["poll"]();
            }, _0x1df923[_0x3c3a9b(1097)]["pause"] = function(_0xa0182e) {
              var _0x599bc7 = _0x3c3a9b, _0x5e36d2 = this;
              function _0x112144() {
                var _0x4508ce = a0_0x16c1;
                _0x8ed0af(_0x4508ce(1084)), _0x5e36d2[_0x4508ce(583)] = _0x4508ce(1084), _0xa0182e();
              }
              if (this["readyState"] = _0x599bc7(543), this[_0x599bc7(1436)] || !this["writable"]) {
                var _0x1db9e4 = 0;
                this[_0x599bc7(1436)] && (_0x8ed0af(_0x599bc7(947)), _0x1db9e4++, this[_0x599bc7(1360)](_0x599bc7(1463), function() {
                  var _0x367126 = _0x599bc7;
                  _0x8ed0af(_0x367126(1213)), --_0x1db9e4 || _0x112144();
                })), this["writable"] || (_0x8ed0af(_0x599bc7(872)), _0x1db9e4++, this[_0x599bc7(1360)]("drain", function() {
                  var _0x28ffca = _0x599bc7;
                  _0x8ed0af(_0x28ffca(1035)), --_0x1db9e4 || _0x112144();
                }));
              } else _0x112144();
            }, _0x1df923[_0x3c3a9b(1097)]["poll"] = function() {
              var _0x59fe4a = _0x3c3a9b;
              _0x8ed0af("polling"), this[_0x59fe4a(1436)] = !0, this["doPoll"](), this[_0x59fe4a(789)](_0x59fe4a(740));
            }, _0x1df923["prototype"][_0x3c3a9b(1165)] = function(_0x532958) {
              var _0x50b19b = _0x3c3a9b, _0x6700dc = this;
              _0x8ed0af("polling got data %s", _0x532958), _0x25d759[_0x50b19b(1121)](_0x532958, this[_0x50b19b(1249)][_0x50b19b(689)], function(_0xbe3892, _0x20d2fe, _0x397bd7) {
                var _0x32819a = _0x50b19b;
                if (_0x32819a(1215) === _0x6700dc[_0x32819a(583)] && "open" === _0xbe3892[_0x32819a(1042)] && _0x6700dc["onOpen"](), 
                _0x32819a(1012) === _0xbe3892[_0x32819a(1042)]) return _0x6700dc[_0x32819a(795)](), 
                !1;
                _0x6700dc[_0x32819a(657)](_0xbe3892);
              }), _0x50b19b(1455) !== this[_0x50b19b(583)] && (this[_0x50b19b(1436)] = !1, this[_0x50b19b(789)]("pollComplete"), 
              "open" === this[_0x50b19b(583)] ? this[_0x50b19b(740)]() : _0x8ed0af('ignoring poll - transport state "%s"', this[_0x50b19b(583)]));
            }, _0x1df923[_0x3c3a9b(1097)][_0x3c3a9b(1003)] = function() {
              var _0x55e6ef = _0x3c3a9b, _0xa2366e = this;
              function _0x21ffa1() {
                var _0x20d07e = a0_0x16c1;
                _0x8ed0af(_0x20d07e(534)), _0xa2366e[_0x20d07e(968)]([ {
                  type: _0x20d07e(1012)
                } ]);
              }
              _0x55e6ef(741) === this["readyState"] ? (_0x8ed0af(_0x55e6ef(992)), _0x21ffa1()) : (_0x8ed0af(_0x55e6ef(1273)), 
              this[_0x55e6ef(1360)](_0x55e6ef(741), _0x21ffa1));
            }, _0x1df923[_0x3c3a9b(1097)][_0x3c3a9b(968)] = function(_0x41b02e) {
              var _0x507afb = _0x3c3a9b, _0x480ef6 = this;
              this[_0x507afb(532)] = !1;
              var _0x903db9 = function _0x903db9() {
                var _0x27f6fc = _0x507afb;
                _0x480ef6[_0x27f6fc(532)] = !0, _0x480ef6["emit"](_0x27f6fc(537));
              };
              _0x25d759[_0x507afb(726)](_0x41b02e, this[_0x507afb(1240)], function(_0x216d4c) {
                var _0x39e7c8 = _0x507afb;
                _0x480ef6[_0x39e7c8(719)](_0x216d4c, _0x903db9);
              });
            }, _0x1df923[_0x3c3a9b(1097)][_0x3c3a9b(856)] = function() {
              var _0x3517ab = _0x3c3a9b, _0x497e73 = this[_0x3517ab(1269)] || {}, _0x1c4eba = this[_0x3517ab(1189)] ? _0x3517ab(522) : _0x3517ab(814), _0x74359a = "";
              return !1 !== this[_0x3517ab(931)] && (_0x497e73[this[_0x3517ab(851)]] = _0x3920d0()), 
              this[_0x3517ab(1240)] || _0x497e73[_0x3517ab(1426)] || (_0x497e73["b64"] = 1), _0x497e73 = _0x2d74f6[_0x3517ab(1058)](_0x497e73), 
              this[_0x3517ab(1221)] && (_0x3517ab(522) === _0x1c4eba && 443 !== Number(this[_0x3517ab(1221)]) || _0x3517ab(814) === _0x1c4eba && 80 !== Number(this[_0x3517ab(1221)])) && (_0x74359a = ":" + this[_0x3517ab(1221)]), 
              _0x497e73[_0x3517ab(1253)] && (_0x497e73 = "?" + _0x497e73), _0x1c4eba + _0x3517ab(818) + (-1 !== this[_0x3517ab(519)]["indexOf"](":") ? "[" + this[_0x3517ab(519)] + "]" : this["hostname"]) + _0x74359a + this["path"] + _0x497e73;
            };
          },
          4442: function _(_0x275785, _0x5e4313, _0x246407) {
            var _0x3d0437 = a0_0x16c1, _0x193b05, _0x5a591b, _0x40ce13 = _0x246407(6496), _0x318e1f = _0x246407(4455), _0x482c69 = _0x246407(1830), _0x28fe4f = _0x246407(3861), _0x456276 = _0x246407(2281), _0x402402 = _0x246407(1227)(_0x3d0437(1241));
            if (_0x3d0437(635) != ("undefined" === typeof WebSocket ? "undefined" : _typeof(WebSocket)) ? _0x193b05 = WebSocket : _0x3d0437(635) != ("undefined" === typeof self ? "undefined" : _typeof(self)) && (_0x193b05 = self[_0x3d0437(557)] || self[_0x3d0437(1390)]), 
            "undefined" == typeof window) try {
              _0x5a591b = _0x246407(7020);
            } catch (_0x5ded2f) {}
            var _0x123223 = _0x193b05 || _0x5a591b;
            function _0x42d0fd(_0x5e095e) {
              var _0x22d5e6 = _0x3d0437;
              _0x5e095e && _0x5e095e[_0x22d5e6(674)] && (this["supportsBinary"] = !1), this["perMessageDeflate"] = _0x5e095e["perMessageDeflate"], 
              this[_0x22d5e6(1275)] = _0x193b05 && !_0x5e095e[_0x22d5e6(1410)], this[_0x22d5e6(1155)] = _0x5e095e[_0x22d5e6(1155)], 
              this[_0x22d5e6(1275)] || (_0x123223 = _0x5a591b), _0x40ce13[_0x22d5e6(869)](this, _0x5e095e);
            }
            _0x275785[_0x3d0437(810)] = _0x42d0fd, _0x28fe4f(_0x42d0fd, _0x40ce13), _0x42d0fd["prototype"]["name"] = _0x3d0437(799), 
            _0x42d0fd[_0x3d0437(1097)][_0x3d0437(1240)] = !0, _0x42d0fd[_0x3d0437(1097)][_0x3d0437(1356)] = function() {
              var _0x59486a = _0x3d0437;
              if (this["check"]()) {
                var _0x2274bd = this[_0x59486a(856)](), _0x4ede0d = this[_0x59486a(1155)], _0x1ac634 = {};
                this[_0x59486a(1336)] || (_0x1ac634[_0x59486a(985)] = this[_0x59486a(985)], _0x1ac634[_0x59486a(1096)] = this[_0x59486a(1096)], 
                _0x1ac634[_0x59486a(980)] = this[_0x59486a(980)], _0x1ac634[_0x59486a(808)] = this[_0x59486a(808)], 
                _0x1ac634[_0x59486a(712)] = this[_0x59486a(712)], _0x1ac634["cert"] = this[_0x59486a(1095)], 
                _0x1ac634["ca"] = this["ca"], _0x1ac634["ciphers"] = this[_0x59486a(538)], _0x1ac634[_0x59486a(1440)] = this[_0x59486a(1440)]), 
                this[_0x59486a(1166)] && (_0x1ac634[_0x59486a(1374)] = this[_0x59486a(1166)]), this[_0x59486a(1395)] && (_0x1ac634[_0x59486a(1395)] = this[_0x59486a(1395)]);
                try {
                  this["ws"] = this[_0x59486a(1275)] && !this[_0x59486a(1336)] ? _0x4ede0d ? new _0x123223(_0x2274bd, _0x4ede0d) : new _0x123223(_0x2274bd) : new _0x123223(_0x2274bd, _0x4ede0d, _0x1ac634);
                } catch (_0x480a19) {
                  return this[_0x59486a(789)](_0x59486a(951), _0x480a19);
                }
                void 0 === this["ws"][_0x59486a(689)] && (this[_0x59486a(1240)] = !1), this["ws"][_0x59486a(1171)] && this["ws"][_0x59486a(1171)][_0x59486a(1136)] ? (this["supportsBinary"] = !0, 
                this["ws"][_0x59486a(689)] = _0x59486a(729)) : this["ws"][_0x59486a(689)] = _0x59486a(913), 
                this["addEventListeners"]();
              }
            }, _0x42d0fd["prototype"][_0x3d0437(1448)] = function() {
              var _0x5395b6 = _0x3d0437, _0x8dd8e8 = this;
              this["ws"][_0x5395b6(840)] = function() {
                _0x8dd8e8["onOpen"]();
              }, this["ws"][_0x5395b6(841)] = function() {
                _0x8dd8e8["onClose"]();
              }, this["ws"][_0x5395b6(572)] = function(_0x23fd3b) {
                var _0x1665e5 = _0x5395b6;
                _0x8dd8e8[_0x1665e5(1165)](_0x23fd3b[_0x1665e5(922)]);
              }, this["ws"][_0x5395b6(703)] = function(_0x2a6d2d) {
                var _0x19e18f = _0x5395b6;
                _0x8dd8e8[_0x19e18f(1120)](_0x19e18f(1037), _0x2a6d2d);
              };
            }, _0x42d0fd[_0x3d0437(1097)][_0x3d0437(968)] = function(_0x4e0831) {
              var _0x1fb156 = _0x3d0437, _0xc939a8 = this;
              this["writable"] = !1;
              for (var _0x7fc8af = _0x4e0831[_0x1fb156(1253)], _0x34b086 = 0, _0xb413c1 = _0x7fc8af; _0x34b086 < _0xb413c1; _0x34b086++) !function(_0x3ad976) {
                var _0x9656e6 = _0x1fb156;
                _0x318e1f[_0x9656e6(1292)](_0x3ad976, _0xc939a8["supportsBinary"], function(_0x4db67a) {
                  var _0x4661e4 = _0x9656e6;
                  if (!_0xc939a8[_0x4661e4(1275)]) {
                    var _0x1c283c = {};
                    _0x3ad976[_0x4661e4(1252)] && (_0x1c283c[_0x4661e4(669)] = _0x3ad976[_0x4661e4(1252)]["compress"]), 
                    _0xc939a8[_0x4661e4(1096)] && ("string" == typeof _0x4db67a ? Buffer["byteLength"](_0x4db67a) : _0x4db67a["length"]) < _0xc939a8[_0x4661e4(1096)][_0x4661e4(854)] && (_0x1c283c["compress"] = !1);
                  }
                  try {
                    _0xc939a8[_0x4661e4(1275)] ? _0xc939a8["ws"][_0x4661e4(641)](_0x4db67a) : _0xc939a8["ws"]["send"](_0x4db67a, _0x1c283c);
                  } catch (_0x3cdad2) {
                    _0x402402("websocket closed before onclose event");
                  }
                  --_0x7fc8af || (_0xc939a8[_0x4661e4(789)]("flush"), setTimeout(function() {
                    var _0x23e991 = _0x4661e4;
                    _0xc939a8[_0x23e991(532)] = !0, _0xc939a8["emit"](_0x23e991(537));
                  }, 0));
                });
              }(_0x4e0831[_0x34b086]);
            }, _0x42d0fd["prototype"][_0x3d0437(795)] = function() {
              var _0xe68e2a = _0x3d0437;
              _0x40ce13[_0xe68e2a(1097)][_0xe68e2a(795)][_0xe68e2a(869)](this);
            }, _0x42d0fd[_0x3d0437(1097)][_0x3d0437(1003)] = function() {
              void 0 !== this["ws"] && this["ws"]["close"]();
            }, _0x42d0fd[_0x3d0437(1097)]["uri"] = function() {
              var _0xb31bce = _0x3d0437, _0x66faa = this[_0xb31bce(1269)] || {}, _0x364490 = this[_0xb31bce(1189)] ? _0xb31bce(939) : "ws", _0x284697 = "";
              return this["port"] && ("wss" === _0x364490 && 443 !== Number(this[_0xb31bce(1221)]) || "ws" === _0x364490 && 80 !== Number(this["port"])) && (_0x284697 = ":" + this[_0xb31bce(1221)]), 
              this[_0xb31bce(931)] && (_0x66faa[this[_0xb31bce(851)]] = _0x456276()), this[_0xb31bce(1240)] || (_0x66faa["b64"] = 1), 
              (_0x66faa = _0x482c69[_0xb31bce(1058)](_0x66faa))[_0xb31bce(1253)] && (_0x66faa = "?" + _0x66faa), 
              _0x364490 + _0xb31bce(818) + (-1 !== this[_0xb31bce(519)]["indexOf"](":") ? "[" + this[_0xb31bce(519)] + "]" : this[_0xb31bce(519)]) + _0x284697 + this[_0xb31bce(941)] + _0x66faa;
            }, _0x42d0fd["prototype"]["check"] = function() {
              var _0x185a2f = _0x3d0437;
              return !(!_0x123223 || "__initialize" in _0x123223 && this[_0x185a2f(1077)] === _0x42d0fd["prototype"][_0x185a2f(1077)]);
            };
          },
          2777: function _(_0x4a08f3, _0x55eed1, _0x2335c7) {
            var _0x3cd839 = a0_0x16c1, _0x3583ba = _0x2335c7(8058), _0x5c95d7 = _0x2335c7(3549);
            _0x4a08f3[_0x3cd839(810)] = function(_0x395356) {
              var _0x549290 = _0x3cd839, _0x469970 = _0x395356["xdomain"], _0x30fc7d = _0x395356[_0x549290(1306)], _0x169f8f = _0x395356[_0x549290(1132)];
              try {
                if (_0x549290(635) != ("undefined" === typeof XMLHttpRequest ? "undefined" : _typeof(XMLHttpRequest)) && (!_0x469970 || _0x3583ba)) return new XMLHttpRequest();
              } catch (_0x360e8c) {}
              try {
                if (_0x549290(635) != ("undefined" === typeof XDomainRequest ? "undefined" : _typeof(XDomainRequest)) && !_0x30fc7d && _0x169f8f) return new XDomainRequest();
              } catch (_0x1cdb5c) {}
              if (!_0x469970) try {
                return new (_0x5c95d7[[ _0x549290(590) ][_0x549290(767)]("Object")[_0x549290(1161)]("X")])(_0x549290(1114));
              } catch (_0x33517e) {}
            };
          },
          4455: function _(_0x3e1a9f, _0x5987b0, _0x1486a4) {
            var _0x5835c8 = a0_0x16c1, _0x35b56d, _0x416bd2 = _0x1486a4(7990), _0xaadccb = _0x1486a4(3466), _0x48434b = _0x1486a4(9718), _0xa5fd2c = _0x1486a4(6906), _0x3af863 = _0x1486a4(3414);
            _0x5835c8(635) != ("undefined" === typeof ArrayBuffer ? "undefined" : _typeof(ArrayBuffer)) && (_0x35b56d = _0x1486a4(3704));
            var _0x39672e = _0x5835c8(635) != ("undefined" === typeof navigator ? "undefined" : _typeof(navigator)) && /Android/i[_0x5835c8(1377)](navigator[_0x5835c8(559)]), _0x267c9a = _0x5835c8(635) != ("undefined" === typeof navigator ? "undefined" : _typeof(navigator)) && /PhantomJS/i[_0x5835c8(1377)](navigator["userAgent"]), _0x1c61ac = _0x39672e || _0x267c9a;
            _0x5987b0[_0x5835c8(1032)] = 3;
            var _0x282c6b = _0x5987b0[_0x5835c8(943)] = {
              open: 0,
              close: 1,
              ping: 2,
              pong: 3,
              message: 4,
              upgrade: 5,
              noop: 6
            }, _0x6284a4 = _0x416bd2(_0x282c6b), _0x5a1fdf = {
              type: _0x5835c8(951),
              data: "parser error"
            }, _0x50bbb2 = _0x1486a4(5548);
            function _0x13704c(_0x1c1155, _0x2507e0, _0x3113c8) {
              var _0x1f0dd1 = _0x5835c8;
              for (var _0x31dd3d = new Array(_0x1c1155[_0x1f0dd1(1253)]), _0x4a2917 = _0xa5fd2c(_0x1c1155[_0x1f0dd1(1253)], _0x3113c8), _0x390003 = function _0x390003(_0x1b6dfa, _0x4fd363, _0x5224b6) {
                _0x2507e0(_0x4fd363, function(_0x2d4066, _0x5ec530) {
                  _0x31dd3d[_0x1b6dfa] = _0x5ec530, _0x5224b6(_0x2d4066, _0x31dd3d);
                });
              }, _0x9a77b5 = 0; _0x9a77b5 < _0x1c1155[_0x1f0dd1(1253)]; _0x9a77b5++) _0x390003(_0x9a77b5, _0x1c1155[_0x9a77b5], _0x4a2917);
            }
            _0x5987b0[_0x5835c8(1292)] = function(_0x293c8a, _0x51ffa2, _0x56aff1, _0x3e17fa) {
              var _0x48479a = _0x5835c8;
              _0x48479a(646) == ("undefined" === typeof _0x51ffa2 ? "undefined" : _typeof(_0x51ffa2)) && (_0x3e17fa = _0x51ffa2, 
              _0x51ffa2 = !1), _0x48479a(646) == ("undefined" === typeof _0x56aff1 ? "undefined" : _typeof(_0x56aff1)) && (_0x3e17fa = _0x56aff1, 
              _0x56aff1 = null);
              var _0xc2257d = void 0 === _0x293c8a[_0x48479a(922)] ? void 0 : _0x293c8a[_0x48479a(922)][_0x48479a(1167)] || _0x293c8a[_0x48479a(922)];
              if (_0x48479a(635) != ("undefined" === typeof ArrayBuffer ? "undefined" : _typeof(ArrayBuffer)) && _0xc2257d instanceof ArrayBuffer) return function(_0x4df78c, _0x13a93b, _0x2df7e4) {
                var _0x719603 = _0x48479a;
                if (!_0x13a93b) return _0x5987b0["encodeBase64Packet"](_0x4df78c, _0x2df7e4);
                var _0x3f754f = _0x4df78c["data"], _0x532d25 = new Uint8Array(_0x3f754f), _0x7e9490 = new Uint8Array(1 + _0x3f754f[_0x719603(504)]);
                _0x7e9490[0] = _0x282c6b[_0x4df78c[_0x719603(1042)]];
                for (var _0x244a28 = 0; _0x244a28 < _0x532d25["length"]; _0x244a28++) _0x7e9490[_0x244a28 + 1] = _0x532d25[_0x244a28];
                return _0x2df7e4(_0x7e9490[_0x719603(1167)]);
              }(_0x293c8a, _0x51ffa2, _0x3e17fa);
              if (void 0 !== _0x50bbb2 && _0xc2257d instanceof _0x50bbb2) return function(_0x16e480, _0x58d2aa, _0x155f2a) {
                var _0x38596f = _0x48479a;
                if (!_0x58d2aa) return _0x5987b0[_0x38596f(1205)](_0x16e480, _0x155f2a);
                if (_0x1c61ac) return function(_0xfa184f, _0x43a8c5, _0x2b846d) {
                  var _0x3c33da = _0x38596f;
                  if (!_0x43a8c5) return _0x5987b0[_0x3c33da(1205)](_0xfa184f, _0x2b846d);
                  var _0x496539 = new FileReader();
                  return _0x496539[_0x3c33da(802)] = function() {
                    var _0x3c8b48 = _0x3c33da;
                    _0x5987b0[_0x3c8b48(1292)]({
                      type: _0xfa184f[_0x3c8b48(1042)],
                      data: _0x496539[_0x3c8b48(1422)]
                    }, _0x43a8c5, !0, _0x2b846d);
                  }, _0x496539[_0x3c33da(1183)](_0xfa184f[_0x3c33da(922)]);
                }(_0x16e480, _0x58d2aa, _0x155f2a);
                var _0x52da44 = new Uint8Array(1);
                return _0x52da44[0] = _0x282c6b[_0x16e480[_0x38596f(1042)]], _0x155f2a(new _0x50bbb2([ _0x52da44[_0x38596f(1167)], _0x16e480["data"] ]));
              }(_0x293c8a, _0x51ffa2, _0x3e17fa);
              if (_0xc2257d && _0xc2257d[_0x48479a(1038)]) return function(_0x15bf50, _0x1ca72b) {
                var _0x4f73ed = _0x48479a;
                return _0x1ca72b("b" + _0x5987b0[_0x4f73ed(943)][_0x15bf50[_0x4f73ed(1042)]] + _0x15bf50["data"][_0x4f73ed(922)]);
              }(_0x293c8a, _0x3e17fa);
              var _0x5a7ded = _0x282c6b[_0x293c8a[_0x48479a(1042)]];
              return void 0 !== _0x293c8a["data"] && (_0x5a7ded += _0x56aff1 ? _0x3af863[_0x48479a(1058)](String(_0x293c8a[_0x48479a(922)]), {
                strict: !1
              }) : String(_0x293c8a[_0x48479a(922)])), _0x3e17fa("" + _0x5a7ded);
            }, _0x5987b0[_0x5835c8(1205)] = function(_0x328830, _0x287951) {
              var _0x5c4f3e = _0x5835c8, _0x381741, _0x2703bf = "b" + _0x5987b0[_0x5c4f3e(943)][_0x328830["type"]];
              if (void 0 !== _0x50bbb2 && _0x328830[_0x5c4f3e(922)] instanceof _0x50bbb2) {
                var _0x4b2397 = new FileReader();
                return _0x4b2397[_0x5c4f3e(802)] = function() {
                  var _0x19d40b = _0x5c4f3e, _0xbc38a1 = _0x4b2397[_0x19d40b(1422)]["split"](",")[1];
                  _0x287951(_0x2703bf + _0xbc38a1);
                }, _0x4b2397["readAsDataURL"](_0x328830[_0x5c4f3e(922)]);
              }
              try {
                _0x381741 = String["fromCharCode"][_0x5c4f3e(807)](null, new Uint8Array(_0x328830[_0x5c4f3e(922)]));
              } catch (_0x4461dc) {
                for (var _0x2739d4 = new Uint8Array(_0x328830[_0x5c4f3e(922)]), _0x30f93b = new Array(_0x2739d4[_0x5c4f3e(1253)]), _0x295d03 = 0; _0x295d03 < _0x2739d4[_0x5c4f3e(1253)]; _0x295d03++) _0x30f93b[_0x295d03] = _0x2739d4[_0x295d03];
                _0x381741 = String[_0x5c4f3e(998)][_0x5c4f3e(807)](null, _0x30f93b);
              }
              return _0x2703bf += btoa(_0x381741), _0x287951(_0x2703bf);
            }, _0x5987b0[_0x5835c8(1330)] = function(_0x457a09, _0x3f8a35, _0x51081d) {
              var _0xcbbb55 = _0x5835c8;
              if (void 0 === _0x457a09) return _0x5a1fdf;
              if (_0xcbbb55(1028) == ("undefined" === typeof _0x457a09 ? "undefined" : _typeof(_0x457a09))) {
                if ("b" === _0x457a09["charAt"](0)) return _0x5987b0[_0xcbbb55(713)](_0x457a09[_0xcbbb55(996)](1), _0x3f8a35);
                if (_0x51081d && !1 === (_0x457a09 = function(_0x49069b) {
                  var _0x520505 = _0xcbbb55;
                  try {
                    _0x49069b = _0x3af863[_0x520505(530)](_0x49069b, {
                      strict: !1
                    });
                  } catch (_0x173573) {
                    return !1;
                  }
                  return _0x49069b;
                }(_0x457a09))) return _0x5a1fdf;
                var _0xb04817 = _0x457a09[_0xcbbb55(1320)](0);
                return Number(_0xb04817) == _0xb04817 && _0x6284a4[_0xb04817] ? _0x457a09["length"] > 1 ? {
                  type: _0x6284a4[_0xb04817],
                  data: _0x457a09[_0xcbbb55(533)](1)
                } : {
                  type: _0x6284a4[_0xb04817]
                } : _0x5a1fdf;
              }
              _0xb04817 = new Uint8Array(_0x457a09)[0];
              var _0x58a955 = _0x48434b(_0x457a09, 1);
              return _0x50bbb2 && _0xcbbb55(734) === _0x3f8a35 && (_0x58a955 = new _0x50bbb2([ _0x58a955 ])), 
              {
                type: _0x6284a4[_0xb04817],
                data: _0x58a955
              };
            }, _0x5987b0["decodeBase64Packet"] = function(_0x16dbb2, _0x2a7ca7) {
              var _0x47d062 = _0x5835c8, _0x5a7a8b = _0x6284a4[_0x16dbb2[_0x47d062(1320)](0)];
              if (!_0x35b56d) return {
                type: _0x5a7a8b,
                data: {
                  base64: !0,
                  data: _0x16dbb2[_0x47d062(996)](1)
                }
              };
              var _0x39845a = _0x35b56d[_0x47d062(530)](_0x16dbb2[_0x47d062(996)](1));
              return _0x47d062(734) === _0x2a7ca7 && _0x50bbb2 && (_0x39845a = new _0x50bbb2([ _0x39845a ])), 
              {
                type: _0x5a7a8b,
                data: _0x39845a
              };
            }, _0x5987b0["encodePayload"] = function(_0x5b036d, _0x5d9007, _0x3e5cd4) {
              var _0x4a4069 = _0x5835c8;
              "function" == typeof _0x5d9007 && (_0x3e5cd4 = _0x5d9007, _0x5d9007 = null);
              var _0x23ce41 = _0xaadccb(_0x5b036d);
              return _0x5d9007 && _0x23ce41 ? _0x50bbb2 && !_0x1c61ac ? _0x5987b0[_0x4a4069(599)](_0x5b036d, _0x3e5cd4) : _0x5987b0[_0x4a4069(720)](_0x5b036d, _0x3e5cd4) : _0x5b036d[_0x4a4069(1253)] ? void _0x13704c(_0x5b036d, function(_0x55a545, _0x46592a) {
                var _0x25d18e = _0x4a4069;
                _0x5987b0[_0x25d18e(1292)](_0x55a545, !!_0x23ce41 && _0x5d9007, !1, function(_0x873efc) {
                  _0x46592a(null, function(_0x389883) {
                    var _0x9c734b = a0_0x16c1;
                    return _0x389883[_0x9c734b(1253)] + ":" + _0x389883;
                  }(_0x873efc));
                });
              }, function(_0x513da1, _0x2eb20f) {
                var _0x186f5c = _0x4a4069;
                return _0x3e5cd4(_0x2eb20f[_0x186f5c(1161)](""));
              }) : _0x3e5cd4("0:");
            }, _0x5987b0["decodePayload"] = function(_0x4aa868, _0x448c0b, _0x357e28) {
              var _0x50f8db = _0x5835c8;
              if (_0x50f8db(1028) != ("undefined" === typeof _0x4aa868 ? "undefined" : _typeof(_0x4aa868))) return _0x5987b0[_0x50f8db(915)](_0x4aa868, _0x448c0b, _0x357e28);
              var _0x22c2bc;
              if (_0x50f8db(646) == ("undefined" === typeof _0x448c0b ? "undefined" : _typeof(_0x448c0b)) && (_0x357e28 = _0x448c0b, 
              _0x448c0b = null), "" === _0x4aa868) return _0x357e28(_0x5a1fdf, 0, 1);
              for (var _0x12fb1f, _0x3519e8, _0x33b56b = "", _0x5c8b58 = 0, _0x421a17 = _0x4aa868["length"]; _0x5c8b58 < _0x421a17; _0x5c8b58++) {
                var _0x58dc42 = _0x4aa868[_0x50f8db(1320)](_0x5c8b58);
                if (":" === _0x58dc42) {
                  if ("" === _0x33b56b || _0x33b56b != (_0x12fb1f = Number(_0x33b56b))) return _0x357e28(_0x5a1fdf, 0, 1);
                  if (_0x33b56b != (_0x3519e8 = _0x4aa868[_0x50f8db(996)](_0x5c8b58 + 1, _0x12fb1f))[_0x50f8db(1253)]) return _0x357e28(_0x5a1fdf, 0, 1);
                  if (_0x3519e8[_0x50f8db(1253)]) {
                    if (_0x22c2bc = _0x5987b0[_0x50f8db(1330)](_0x3519e8, _0x448c0b, !1), _0x5a1fdf["type"] === _0x22c2bc[_0x50f8db(1042)] && _0x5a1fdf["data"] === _0x22c2bc[_0x50f8db(922)]) return _0x357e28(_0x5a1fdf, 0, 1);
                    if (!1 === _0x357e28(_0x22c2bc, _0x5c8b58 + _0x12fb1f, _0x421a17)) return;
                  }
                  _0x5c8b58 += _0x12fb1f, _0x33b56b = "";
                } else _0x33b56b += _0x58dc42;
              }
              return "" !== _0x33b56b ? _0x357e28(_0x5a1fdf, 0, 1) : void 0;
            }, _0x5987b0["encodePayloadAsArrayBuffer"] = function(_0xa37592, _0x49fd58) {
              var _0x14919f = _0x5835c8;
              if (!_0xa37592[_0x14919f(1253)]) return _0x49fd58(new ArrayBuffer(0));
              _0x13704c(_0xa37592, function(_0x183c6b, _0xb11d2d) {
                _0x5987b0["encodePacket"](_0x183c6b, !0, !0, function(_0x377ec2) {
                  return _0xb11d2d(null, _0x377ec2);
                });
              }, function(_0x3dc97d, _0x442f94) {
                var _0x42e52d = _0x14919f, _0x47b445 = _0x442f94[_0x42e52d(1388)](function(_0x4ab06e, _0x405491) {
                  var _0x3e5d77 = _0x42e52d, _0x4020d3;
                  return _0x4ab06e + (_0x4020d3 = _0x3e5d77(1028) == ("undefined" === typeof _0x405491 ? "undefined" : _typeof(_0x405491)) ? _0x405491[_0x3e5d77(1253)] : _0x405491[_0x3e5d77(504)])[_0x3e5d77(525)]()["length"] + _0x4020d3 + 2;
                }, 0), _0x24a292 = new Uint8Array(_0x47b445), _0x1e77f9 = 0;
                return _0x442f94[_0x42e52d(768)](function(_0x25c4ea) {
                  var _0x189fb8 = _0x42e52d, _0x255182 = _0x189fb8(1028) == ("undefined" === typeof _0x25c4ea ? "undefined" : _typeof(_0x25c4ea)), _0x558fab = _0x25c4ea;
                  if (_0x255182) {
                    for (var _0x6ea1bb = new Uint8Array(_0x25c4ea[_0x189fb8(1253)]), _0x3564ce = 0; _0x3564ce < _0x25c4ea[_0x189fb8(1253)]; _0x3564ce++) _0x6ea1bb[_0x3564ce] = _0x25c4ea[_0x189fb8(727)](_0x3564ce);
                    _0x558fab = _0x6ea1bb["buffer"];
                  }
                  _0x24a292[_0x1e77f9++] = _0x255182 ? 0 : 1;
                  var _0x1754b4 = _0x558fab["byteLength"][_0x189fb8(525)]();
                  for (_0x3564ce = 0; _0x3564ce < _0x1754b4[_0x189fb8(1253)]; _0x3564ce++) _0x24a292[_0x1e77f9++] = parseInt(_0x1754b4[_0x3564ce]);
                  for (_0x24a292[_0x1e77f9++] = 255, _0x6ea1bb = new Uint8Array(_0x558fab), _0x3564ce = 0; _0x3564ce < _0x6ea1bb["length"]; _0x3564ce++) _0x24a292[_0x1e77f9++] = _0x6ea1bb[_0x3564ce];
                }), _0x49fd58(_0x24a292[_0x42e52d(1167)]);
              });
            }, _0x5987b0[_0x5835c8(599)] = function(_0x104bac, _0x4f259c) {
              _0x13704c(_0x104bac, function(_0x40f0db, _0x323498) {
                _0x5987b0["encodePacket"](_0x40f0db, !0, !0, function(_0x4b4af2) {
                  var _0x119982 = a0_0x16c1, _0x22ef85 = new Uint8Array(1);
                  if (_0x22ef85[0] = 1, _0x119982(1028) == ("undefined" === typeof _0x4b4af2 ? "undefined" : _typeof(_0x4b4af2))) {
                    for (var _0xb01e4f = new Uint8Array(_0x4b4af2["length"]), _0x47ef06 = 0; _0x47ef06 < _0x4b4af2[_0x119982(1253)]; _0x47ef06++) _0xb01e4f[_0x47ef06] = _0x4b4af2[_0x119982(727)](_0x47ef06);
                    _0x4b4af2 = _0xb01e4f[_0x119982(1167)], _0x22ef85[0] = 0;
                  }
                  var _0x3c537d = (_0x4b4af2 instanceof ArrayBuffer ? _0x4b4af2[_0x119982(504)] : _0x4b4af2[_0x119982(930)])[_0x119982(525)](), _0x48513b = new Uint8Array(_0x3c537d["length"] + 1);
                  for (_0x47ef06 = 0; _0x47ef06 < _0x3c537d[_0x119982(1253)]; _0x47ef06++) _0x48513b[_0x47ef06] = parseInt(_0x3c537d[_0x47ef06]);
                  if (_0x48513b[_0x3c537d[_0x119982(1253)]] = 255, _0x50bbb2) {
                    var _0x5372e9 = new _0x50bbb2([ _0x22ef85[_0x119982(1167)], _0x48513b["buffer"], _0x4b4af2 ]);
                    _0x323498(null, _0x5372e9);
                  }
                });
              }, function(_0x5e5fcb, _0x2fe120) {
                return _0x4f259c(new _0x50bbb2(_0x2fe120));
              });
            }, _0x5987b0[_0x5835c8(915)] = function(_0x2f26f7, _0x2248bb, _0x621dda) {
              var _0x4a8677 = _0x5835c8;
              _0x4a8677(646) == ("undefined" === typeof _0x2248bb ? "undefined" : _typeof(_0x2248bb)) && (_0x621dda = _0x2248bb, 
              _0x2248bb = null);
              for (var _0x20fa15 = _0x2f26f7, _0x6d5a87 = []; _0x20fa15[_0x4a8677(504)] > 0; ) {
                for (var _0x1f1e8c = new Uint8Array(_0x20fa15), _0x394912 = 0 === _0x1f1e8c[0], _0x4949b8 = "", _0x375cd1 = 1; 255 !== _0x1f1e8c[_0x375cd1]; _0x375cd1++) {
                  if (_0x4949b8["length"] > 310) return _0x621dda(_0x5a1fdf, 0, 1);
                  _0x4949b8 += _0x1f1e8c[_0x375cd1];
                }
                _0x20fa15 = _0x48434b(_0x20fa15, 2 + _0x4949b8["length"]), _0x4949b8 = parseInt(_0x4949b8);
                var _0x2f25a5 = _0x48434b(_0x20fa15, 0, _0x4949b8);
                if (_0x394912) try {
                  _0x2f25a5 = String[_0x4a8677(998)][_0x4a8677(807)](null, new Uint8Array(_0x2f25a5));
                } catch (_0x2aeaf3) {
                  var _0x1ee6fc = new Uint8Array(_0x2f25a5);
                  for (_0x2f25a5 = "", _0x375cd1 = 0; _0x375cd1 < _0x1ee6fc[_0x4a8677(1253)]; _0x375cd1++) _0x2f25a5 += String[_0x4a8677(998)](_0x1ee6fc[_0x375cd1]);
                }
                _0x6d5a87[_0x4a8677(598)](_0x2f25a5), _0x20fa15 = _0x48434b(_0x20fa15, _0x4949b8);
              }
              var _0xc1ab0c = _0x6d5a87[_0x4a8677(1253)];
              _0x6d5a87[_0x4a8677(768)](function(_0x8d93aa, _0x2f37ce) {
                _0x621dda(_0x5987b0["decodePacket"](_0x8d93aa, _0x2248bb, !0), _0x2f37ce, _0xc1ab0c);
              });
            };
          },
          7990: function _(_0x5e700b) {
            var _0x236f28 = a0_0x16c1;
            _0x5e700b[_0x236f28(810)] = Object["keys"] || function(_0x264fea) {
              var _0x456842 = _0x236f28, _0x53da5f = [], _0x180d65 = Object[_0x456842(1097)][_0x456842(783)];
              for (var _0x55ee50 in _0x264fea) _0x180d65[_0x456842(869)](_0x264fea, _0x55ee50) && _0x53da5f[_0x456842(598)](_0x55ee50);
              return _0x53da5f;
            };
          },
          3414: function _(_0x3b43a4) {
            var _0x23b14b = a0_0x16c1, _0x58441d, _0x5181ca, _0x2c284f, _0xbf18fa = String[_0x23b14b(998)];
            function _0x461a6d(_0x26d8a4) {
              var _0x2ca852 = _0x23b14b;
              for (var _0x189979, _0x3ae15f, _0x554cf3 = [], _0x5c965d = 0, _0x5914ee = _0x26d8a4[_0x2ca852(1253)]; _0x5c965d < _0x5914ee; ) (_0x189979 = _0x26d8a4[_0x2ca852(727)](_0x5c965d++)) >= 55296 && _0x189979 <= 56319 && _0x5c965d < _0x5914ee ? 56320 == (64512 & (_0x3ae15f = _0x26d8a4[_0x2ca852(727)](_0x5c965d++))) ? _0x554cf3["push"](((1023 & _0x189979) << 10) + (1023 & _0x3ae15f) + 65536) : (_0x554cf3["push"](_0x189979), 
              _0x5c965d--) : _0x554cf3[_0x2ca852(598)](_0x189979);
              return _0x554cf3;
            }
            function _0x4a5b8a(_0x1c922b, _0x352f1a) {
              var _0x42561b = _0x23b14b;
              if (_0x1c922b >= 55296 && _0x1c922b <= 57343) {
                if (_0x352f1a) throw Error(_0x42561b(829) + _0x1c922b[_0x42561b(525)](16)[_0x42561b(989)]() + _0x42561b(1314));
                return !1;
              }
              return !0;
            }
            function _0x469e03(_0x59f2bf, _0x4d983c) {
              return _0xbf18fa(_0x59f2bf >> _0x4d983c & 63 | 128);
            }
            function _0x2f7479(_0x5e39bc, _0x41a889) {
              if (0 == (4294967168 & _0x5e39bc)) return _0xbf18fa(_0x5e39bc);
              var _0x381a98 = "";
              return 0 == (4294965248 & _0x5e39bc) ? _0x381a98 = _0xbf18fa(_0x5e39bc >> 6 & 31 | 192) : 0 == (4294901760 & _0x5e39bc) ? (_0x4a5b8a(_0x5e39bc, _0x41a889) || (_0x5e39bc = 65533), 
              _0x381a98 = _0xbf18fa(_0x5e39bc >> 12 & 15 | 224), _0x381a98 += _0x469e03(_0x5e39bc, 6)) : 0 == (4292870144 & _0x5e39bc) && (_0x381a98 = _0xbf18fa(_0x5e39bc >> 18 & 7 | 240), 
              _0x381a98 += _0x469e03(_0x5e39bc, 12), _0x381a98 += _0x469e03(_0x5e39bc, 6)), _0x381a98 + _0xbf18fa(63 & _0x5e39bc | 128);
            }
            function _0x413c8b() {
              var _0x27a63e = _0x23b14b;
              if (_0x2c284f >= _0x5181ca) throw Error("Invalid byte index");
              var _0x4c188d = 255 & _0x58441d[_0x2c284f];
              if (_0x2c284f++, 128 == (192 & _0x4c188d)) return 63 & _0x4c188d;
              throw Error(_0x27a63e(716));
            }
            function _0x34de1e(_0x2cdd8a) {
              var _0xa4f46 = _0x23b14b, _0x46f437, _0x10d70d;
              if (_0x2c284f > _0x5181ca) throw Error("Invalid byte index");
              if (_0x2c284f == _0x5181ca) return !1;
              if (_0x46f437 = 255 & _0x58441d[_0x2c284f], _0x2c284f++, 0 == (128 & _0x46f437)) return _0x46f437;
              if (192 == (224 & _0x46f437)) {
                if ((_0x10d70d = (31 & _0x46f437) << 6 | _0x413c8b()) >= 128) return _0x10d70d;
                throw Error(_0xa4f46(716));
              }
              if (224 == (240 & _0x46f437)) {
                if ((_0x10d70d = (15 & _0x46f437) << 12 | _0x413c8b() << 6 | _0x413c8b()) >= 2048) return _0x4a5b8a(_0x10d70d, _0x2cdd8a) ? _0x10d70d : 65533;
                throw Error("Invalid continuation byte");
              }
              if (240 == (248 & _0x46f437) && (_0x10d70d = (7 & _0x46f437) << 18 | _0x413c8b() << 12 | _0x413c8b() << 6 | _0x413c8b()) >= 65536 && _0x10d70d <= 1114111) return _0x10d70d;
              throw Error(_0xa4f46(967));
            }
            _0x3b43a4[_0x23b14b(810)] = {
              version: _0x23b14b(910),
              encode: function encode(_0x1397f0, _0x4dc1e8) {
                var _0x1ecd87 = _0x23b14b;
                for (var _0x41e988 = !1 !== (_0x4dc1e8 = _0x4dc1e8 || {})[_0x1ecd87(890)], _0x1365ac = _0x461a6d(_0x1397f0), _0x16a143 = _0x1365ac[_0x1ecd87(1253)], _0x1fc031 = -1, _0x3e79d2 = ""; ++_0x1fc031 < _0x16a143; ) _0x3e79d2 += _0x2f7479(_0x1365ac[_0x1fc031], _0x41e988);
                return _0x3e79d2;
              },
              decode: function decode(_0x113cab, _0x28db2e) {
                var _0x1bf85a = _0x23b14b, _0x2523a = !1 !== (_0x28db2e = _0x28db2e || {})[_0x1bf85a(890)];
                _0x58441d = _0x461a6d(_0x113cab), _0x5181ca = _0x58441d["length"], _0x2c284f = 0;
                for (var _0x1fab89, _0x90d37b = []; !1 !== (_0x1fab89 = _0x34de1e(_0x2523a)); ) _0x90d37b["push"](_0x1fab89);
                return function(_0x239b4b) {
                  var _0x456668 = _0x1bf85a;
                  for (var _0x3038ce, _0x3af69c = _0x239b4b[_0x456668(1253)], _0x3db31a = -1, _0x47bbf0 = ""; ++_0x3db31a < _0x3af69c; ) (_0x3038ce = _0x239b4b[_0x3db31a]) > 65535 && (_0x47bbf0 += _0xbf18fa((_0x3038ce -= 65536) >>> 10 & 1023 | 55296), 
                  _0x3038ce = 56320 | 1023 & _0x3038ce), _0x47bbf0 += _0xbf18fa(_0x3038ce);
                  return _0x47bbf0;
                }(_0x90d37b);
              }
            };
          },
          7187: function _(_0x43092d) {
            var _0x3ecb0e = a0_0x16c1;
            var _0x820551, _0xe4452b = _0x3ecb0e(736) == ("undefined" === typeof Reflect ? "undefined" : _typeof(Reflect)) ? Reflect : null, _0xd7ab40 = _0xe4452b && _0x3ecb0e(646) == _typeof(_0xe4452b[_0x3ecb0e(807)]) ? _0xe4452b["apply"] : function(_0x1fe604, _0x3233cc, _0x3b9668) {
              var _0x443e0b = _0x3ecb0e;
              return Function[_0x443e0b(1097)][_0x443e0b(807)][_0x443e0b(869)](_0x1fe604, _0x3233cc, _0x3b9668);
            };
            _0x820551 = _0xe4452b && _0x3ecb0e(646) == _typeof(_0xe4452b[_0x3ecb0e(1331)]) ? _0xe4452b["ownKeys"] : Object["getOwnPropertySymbols"] ? function(_0x42d218) {
              var _0x3940fe = _0x3ecb0e;
              return Object[_0x3940fe(1452)](_0x42d218)[_0x3940fe(767)](Object[_0x3940fe(1475)](_0x42d218));
            } : function(_0xa680f3) {
              return Object["getOwnPropertyNames"](_0xa680f3);
            };
            var _0x868265 = Number["isNaN"] || function(_0xf1dc81) {
              return _0xf1dc81 != _0xf1dc81;
            };
            function _0x435c03() {
              var _0x38d433 = _0x3ecb0e;
              _0x435c03[_0x38d433(1025)][_0x38d433(869)](this);
            }
            _0x43092d[_0x3ecb0e(810)] = _0x435c03, _0x43092d[_0x3ecb0e(810)][_0x3ecb0e(1360)] = function(_0x6ea669, _0x506245) {
              return new Promise(function(_0x4f93be, _0x265c05) {
                var _0x115966 = a0_0x16c1;
                function _0x30dceb(_0x4d437c) {
                  var _0x338283 = a0_0x16c1;
                  _0x6ea669[_0x338283(790)](_0x506245, _0x330d5c), _0x265c05(_0x4d437c);
                }
                function _0x330d5c() {
                  var _0x4b1c52 = a0_0x16c1;
                  _0x4b1c52(646) == _typeof(_0x6ea669["removeListener"]) && _0x6ea669[_0x4b1c52(790)](_0x4b1c52(951), _0x30dceb), 
                  _0x4f93be([]["slice"][_0x4b1c52(869)](arguments));
                }
                _0x35d324(_0x6ea669, _0x506245, _0x330d5c, {
                  once: !0
                }), _0x115966(951) !== _0x506245 && function(_0x168291, _0x1d81f6, _0x345727) {
                  var _0x2f0a00 = _0x115966;
                  _0x2f0a00(646) == _typeof(_0x168291["on"]) && _0x35d324(_0x168291, _0x2f0a00(951), _0x1d81f6, {
                    once: !0
                  });
                }(_0x6ea669, _0x30dceb);
              });
            }, _0x435c03[_0x3ecb0e(591)] = _0x435c03, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(812)] = void 0, 
            _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(1185)] = 0, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(664)] = void 0;
            var _0x48c3cf = 10;
            function _0x105e44(_0x20c72d) {
              var _0x5a0898 = _0x3ecb0e;
              if (_0x5a0898(646) != ("undefined" === typeof _0x20c72d ? "undefined" : _typeof(_0x20c72d))) throw new TypeError(_0x5a0898(1439) + ("undefined" === typeof _0x20c72d ? "undefined" : _typeof(_0x20c72d)));
            }
            function _0x1d559e(_0xf155fe) {
              var _0x2cc0c4 = _0x3ecb0e;
              return void 0 === _0xf155fe["_maxListeners"] ? _0x435c03[_0x2cc0c4(721)] : _0xf155fe[_0x2cc0c4(664)];
            }
            function _0x338010(_0x48a5bb, _0x687e47, _0x177a74, _0x4d7abd) {
              var _0x1a8cde = _0x3ecb0e, _0x3e9c84, _0x43b857, _0x5dcb6a, _0x11957e;
              if (_0x105e44(_0x177a74), void 0 === (_0x43b857 = _0x48a5bb[_0x1a8cde(812)]) ? (_0x43b857 = _0x48a5bb[_0x1a8cde(812)] = Object[_0x1a8cde(1431)](null), 
              _0x48a5bb[_0x1a8cde(1185)] = 0) : (void 0 !== _0x43b857[_0x1a8cde(526)] && (_0x48a5bb[_0x1a8cde(789)](_0x1a8cde(526), _0x687e47, _0x177a74[_0x1a8cde(579)] ? _0x177a74[_0x1a8cde(579)] : _0x177a74), 
              _0x43b857 = _0x48a5bb[_0x1a8cde(812)]), _0x5dcb6a = _0x43b857[_0x687e47]), void 0 === _0x5dcb6a) _0x5dcb6a = _0x43b857[_0x687e47] = _0x177a74, 
              ++_0x48a5bb["_eventsCount"]; else if (_0x1a8cde(646) == ("undefined" === typeof _0x5dcb6a ? "undefined" : _typeof(_0x5dcb6a)) ? _0x5dcb6a = _0x43b857[_0x687e47] = _0x4d7abd ? [ _0x177a74, _0x5dcb6a ] : [ _0x5dcb6a, _0x177a74 ] : _0x4d7abd ? _0x5dcb6a[_0x1a8cde(718)](_0x177a74) : _0x5dcb6a[_0x1a8cde(598)](_0x177a74), 
              (_0x3e9c84 = _0x1d559e(_0x48a5bb)) > 0 && _0x5dcb6a[_0x1a8cde(1253)] > _0x3e9c84 && !_0x5dcb6a[_0x1a8cde(1124)]) {
                _0x5dcb6a["warned"] = !0;
                var _0x3f5fe8 = new Error(_0x1a8cde(1021) + _0x5dcb6a["length"] + " " + String(_0x687e47) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                _0x3f5fe8[_0x1a8cde(1077)] = _0x1a8cde(1158), _0x3f5fe8[_0x1a8cde(1324)] = _0x48a5bb, 
                _0x3f5fe8[_0x1a8cde(1042)] = _0x687e47, _0x3f5fe8[_0x1a8cde(1349)] = _0x5dcb6a[_0x1a8cde(1253)], 
                _0x11957e = _0x3f5fe8, console && console["warn"] && console[_0x1a8cde(709)](_0x11957e);
              }
              return _0x48a5bb;
            }
            function _0x37e9be() {
              var _0x43afb3 = _0x3ecb0e;
              if (!this[_0x43afb3(1063)]) return this["target"][_0x43afb3(790)](this[_0x43afb3(1042)], this[_0x43afb3(916)]), 
              this["fired"] = !0, 0 === arguments[_0x43afb3(1253)] ? this[_0x43afb3(579)]["call"](this["target"]) : this[_0x43afb3(579)]["apply"](this[_0x43afb3(831)], arguments);
            }
            function _0x8f1a6(_0x5e6687, _0x5b2177, _0x28b51d) {
              var _0x4238d0 = _0x3ecb0e, _0x28dfbc = {
                fired: !1,
                wrapFn: void 0,
                target: _0x5e6687,
                type: _0x5b2177,
                listener: _0x28b51d
              }, _0x36c4f1 = _0x37e9be[_0x4238d0(880)](_0x28dfbc);
              return _0x36c4f1[_0x4238d0(579)] = _0x28b51d, _0x28dfbc[_0x4238d0(916)] = _0x36c4f1, 
              _0x36c4f1;
            }
            function _0x336eef(_0x953d7f, _0x1aa9ff, _0x12762f) {
              var _0x405461 = _0x3ecb0e, _0x5d9578 = _0x953d7f[_0x405461(812)];
              if (void 0 === _0x5d9578) return [];
              var _0x3b28cc = _0x5d9578[_0x1aa9ff];
              return void 0 === _0x3b28cc ? [] : _0x405461(646) == ("undefined" === typeof _0x3b28cc ? "undefined" : _typeof(_0x3b28cc)) ? _0x12762f ? [ _0x3b28cc[_0x405461(579)] || _0x3b28cc ] : [ _0x3b28cc ] : _0x12762f ? function(_0x49796d) {
                var _0x59ce9c = _0x405461;
                for (var _0x4f4f27 = new Array(_0x49796d[_0x59ce9c(1253)]), _0x8cdc82 = 0; _0x8cdc82 < _0x4f4f27[_0x59ce9c(1253)]; ++_0x8cdc82) _0x4f4f27[_0x8cdc82] = _0x49796d[_0x8cdc82][_0x59ce9c(579)] || _0x49796d[_0x8cdc82];
                return _0x4f4f27;
              }(_0x3b28cc) : _0x257fd3(_0x3b28cc, _0x3b28cc[_0x405461(1253)]);
            }
            function _0x4581c8(_0x408d02) {
              var _0x5785b9 = _0x3ecb0e, _0xe71896 = this["_events"];
              if (void 0 !== _0xe71896) {
                var _0x280a3f = _0xe71896[_0x408d02];
                if (_0x5785b9(646) == ("undefined" === typeof _0x280a3f ? "undefined" : _typeof(_0x280a3f))) return 1;
                if (void 0 !== _0x280a3f) return _0x280a3f[_0x5785b9(1253)];
              }
              return 0;
            }
            function _0x257fd3(_0x250bfb, _0x4feef6) {
              for (var _0x4e25b0 = new Array(_0x4feef6), _0x3e4aa4 = 0; _0x3e4aa4 < _0x4feef6; ++_0x3e4aa4) _0x4e25b0[_0x3e4aa4] = _0x250bfb[_0x3e4aa4];
              return _0x4e25b0;
            }
            function _0x35d324(_0x3220d1, _0x2e99c9, _0x477a47, _0x1eb224) {
              var _0x5cced6 = _0x3ecb0e;
              if (_0x5cced6(646) == _typeof(_0x3220d1["on"])) _0x1eb224[_0x5cced6(1360)] ? _0x3220d1["once"](_0x2e99c9, _0x477a47) : _0x3220d1["on"](_0x2e99c9, _0x477a47); else {
                if (_0x5cced6(646) != _typeof(_0x3220d1[_0x5cced6(780)])) throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + ("undefined" === typeof _0x3220d1 ? "undefined" : _typeof(_0x3220d1)));
                _0x3220d1["addEventListener"](_0x2e99c9, function _0x103874(_0x50b9ec) {
                  var _0x3c8c87 = _0x5cced6;
                  _0x1eb224[_0x3c8c87(1360)] && _0x3220d1[_0x3c8c87(753)](_0x2e99c9, _0x103874), _0x477a47(_0x50b9ec);
                });
              }
            }
            Object[_0x3ecb0e(528)](_0x435c03, "defaultMaxListeners", {
              enumerable: !0,
              get: function get() {
                return _0x48c3cf;
              },
              set: function set(_0x1d3feb) {
                var _0x1b58f3 = _0x3ecb0e;
                if (_0x1b58f3(577) != ("undefined" === typeof _0x1d3feb ? "undefined" : _typeof(_0x1d3feb)) || _0x1d3feb < 0 || _0x868265(_0x1d3feb)) throw new RangeError(_0x1b58f3(954) + _0x1d3feb + ".");
                _0x48c3cf = _0x1d3feb;
              }
            }), _0x435c03[_0x3ecb0e(1025)] = function() {
              var _0xa30660 = _0x3ecb0e;
              void 0 !== this["_events"] && this[_0xa30660(812)] !== Object[_0xa30660(832)](this)[_0xa30660(812)] || (this[_0xa30660(812)] = Object["create"](null), 
              this[_0xa30660(1185)] = 0), this["_maxListeners"] = this["_maxListeners"] || void 0;
            }, _0x435c03[_0x3ecb0e(1097)]["setMaxListeners"] = function(_0xe2eb00) {
              var _0xe7dbc7 = _0x3ecb0e;
              if (_0xe7dbc7(577) != ("undefined" === typeof _0xe2eb00 ? "undefined" : _typeof(_0xe2eb00)) || _0xe2eb00 < 0 || _0x868265(_0xe2eb00)) throw new RangeError(_0xe7dbc7(1069) + _0xe2eb00 + ".");
              return this[_0xe7dbc7(664)] = _0xe2eb00, this;
            }, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(552)] = function() {
              return _0x1d559e(this);
            }, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(789)] = function(_0xe96d55) {
              var _0x457c41 = _0x3ecb0e;
              for (var _0x4edb3d = [], _0x20aa3f = 1; _0x20aa3f < arguments[_0x457c41(1253)]; _0x20aa3f++) _0x4edb3d[_0x457c41(598)](arguments[_0x20aa3f]);
              var _0x57fed4 = _0x457c41(951) === _0xe96d55, _0xbee11c = this[_0x457c41(812)];
              if (void 0 !== _0xbee11c) _0x57fed4 = _0x57fed4 && void 0 === _0xbee11c["error"]; else if (!_0x57fed4) return !1;
              if (_0x57fed4) {
                var _0x5d32ff;
                if (_0x4edb3d["length"] > 0 && (_0x5d32ff = _0x4edb3d[0]), _0x5d32ff instanceof Error) throw _0x5d32ff;
                var _0x3c61ff = new Error(_0x457c41(929) + (_0x5d32ff ? " (" + _0x5d32ff[_0x457c41(1175)] + ")" : ""));
                throw _0x3c61ff["context"] = _0x5d32ff, _0x3c61ff;
              }
              var _0x29a45a = _0xbee11c[_0xe96d55];
              if (void 0 === _0x29a45a) return !1;
              if (_0x457c41(646) == ("undefined" === typeof _0x29a45a ? "undefined" : _typeof(_0x29a45a))) _0xd7ab40(_0x29a45a, this, _0x4edb3d); else {
                var _0x1e423f = _0x29a45a["length"], _0x7bf035 = _0x257fd3(_0x29a45a, _0x1e423f);
                for (_0x20aa3f = 0; _0x20aa3f < _0x1e423f; ++_0x20aa3f) _0xd7ab40(_0x7bf035[_0x20aa3f], this, _0x4edb3d);
              }
              return !0;
            }, _0x435c03["prototype"][_0x3ecb0e(1386)] = function(_0x2289e8, _0x4e980a) {
              return _0x338010(this, _0x2289e8, _0x4e980a, !1);
            }, _0x435c03[_0x3ecb0e(1097)]["on"] = _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(1386)], 
            _0x435c03["prototype"][_0x3ecb0e(505)] = function(_0x145a8f, _0x432ea4) {
              return _0x338010(this, _0x145a8f, _0x432ea4, !0);
            }, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(1360)] = function(_0x1ad698, _0x210ffe) {
              return _0x105e44(_0x210ffe), this["on"](_0x1ad698, _0x8f1a6(this, _0x1ad698, _0x210ffe)), 
              this;
            }, _0x435c03["prototype"][_0x3ecb0e(1041)] = function(_0x38f2ed, _0x3bc7d0) {
              var _0x565276 = _0x3ecb0e;
              return _0x105e44(_0x3bc7d0), this[_0x565276(505)](_0x38f2ed, _0x8f1a6(this, _0x38f2ed, _0x3bc7d0)), 
              this;
            }, _0x435c03[_0x3ecb0e(1097)]["removeListener"] = function(_0x1e2277, _0x54455c) {
              var _0x3dfeb5 = _0x3ecb0e, _0x26c9fa, _0x32f7e4, _0x3f351b, _0x45356f, _0x439b72;
              if (_0x105e44(_0x54455c), void 0 === (_0x32f7e4 = this[_0x3dfeb5(812)])) return this;
              if (void 0 === (_0x26c9fa = _0x32f7e4[_0x1e2277])) return this;
              if (_0x26c9fa === _0x54455c || _0x26c9fa["listener"] === _0x54455c) 0 == --this[_0x3dfeb5(1185)] ? this[_0x3dfeb5(812)] = Object[_0x3dfeb5(1431)](null) : (delete _0x32f7e4[_0x1e2277], 
              _0x32f7e4[_0x3dfeb5(790)] && this[_0x3dfeb5(789)](_0x3dfeb5(790), _0x1e2277, _0x26c9fa[_0x3dfeb5(579)] || _0x54455c)); else if (_0x3dfeb5(646) != ("undefined" === typeof _0x26c9fa ? "undefined" : _typeof(_0x26c9fa))) {
                for (_0x3f351b = -1, _0x45356f = _0x26c9fa["length"] - 1; _0x45356f >= 0; _0x45356f--) if (_0x26c9fa[_0x45356f] === _0x54455c || _0x26c9fa[_0x45356f]["listener"] === _0x54455c) {
                  _0x439b72 = _0x26c9fa[_0x45356f][_0x3dfeb5(579)], _0x3f351b = _0x45356f;
                  break;
                }
                if (_0x3f351b < 0) return this;
                0 === _0x3f351b ? _0x26c9fa[_0x3dfeb5(1313)]() : function(_0x52c6c3, _0x167316) {
                  var _0x35b441 = _0x3dfeb5;
                  for (;_0x167316 + 1 < _0x52c6c3[_0x35b441(1253)]; _0x167316++) _0x52c6c3[_0x167316] = _0x52c6c3[_0x167316 + 1];
                  _0x52c6c3[_0x35b441(1195)]();
                }(_0x26c9fa, _0x3f351b), 1 === _0x26c9fa[_0x3dfeb5(1253)] && (_0x32f7e4[_0x1e2277] = _0x26c9fa[0]), 
                void 0 !== _0x32f7e4[_0x3dfeb5(790)] && this[_0x3dfeb5(789)](_0x3dfeb5(790), _0x1e2277, _0x439b72 || _0x54455c);
              }
              return this;
            }, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(897)] = _0x435c03[_0x3ecb0e(1097)]["removeListener"], 
            _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(1050)] = function(_0x594dd4) {
              var _0x521bb1 = _0x3ecb0e, _0x9e4ac2, _0x2bdb25, _0x13e746;
              if (void 0 === (_0x2bdb25 = this[_0x521bb1(812)])) return this;
              if (void 0 === _0x2bdb25[_0x521bb1(790)]) return 0 === arguments[_0x521bb1(1253)] ? (this[_0x521bb1(812)] = Object[_0x521bb1(1431)](null), 
              this["_eventsCount"] = 0) : void 0 !== _0x2bdb25[_0x594dd4] && (0 == --this[_0x521bb1(1185)] ? this["_events"] = Object[_0x521bb1(1431)](null) : delete _0x2bdb25[_0x594dd4]), 
              this;
              if (0 === arguments[_0x521bb1(1253)]) {
                var _0x138816, _0x3fb748 = Object["keys"](_0x2bdb25);
                for (_0x13e746 = 0; _0x13e746 < _0x3fb748[_0x521bb1(1253)]; ++_0x13e746) _0x521bb1(790) !== (_0x138816 = _0x3fb748[_0x13e746]) && this["removeAllListeners"](_0x138816);
                return this[_0x521bb1(1050)]("removeListener"), this["_events"] = Object["create"](null), 
                this["_eventsCount"] = 0, this;
              }
              if ("function" == typeof (_0x9e4ac2 = _0x2bdb25[_0x594dd4])) this[_0x521bb1(790)](_0x594dd4, _0x9e4ac2); else if (void 0 !== _0x9e4ac2) for (_0x13e746 = _0x9e4ac2["length"] - 1; _0x13e746 >= 0; _0x13e746--) this[_0x521bb1(790)](_0x594dd4, _0x9e4ac2[_0x13e746]);
              return this;
            }, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(686)] = function(_0x4783a5) {
              return _0x336eef(this, _0x4783a5, !0);
            }, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(1237)] = function(_0x24a9f5) {
              return _0x336eef(this, _0x24a9f5, !1);
            }, _0x435c03[_0x3ecb0e(1334)] = function(_0x1a118a, _0x27add4) {
              var _0x51a4d3 = _0x3ecb0e;
              return _0x51a4d3(646) == _typeof(_0x1a118a[_0x51a4d3(1334)]) ? _0x1a118a[_0x51a4d3(1334)](_0x27add4) : _0x4581c8[_0x51a4d3(869)](_0x1a118a, _0x27add4);
            }, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(1334)] = _0x4581c8, _0x435c03[_0x3ecb0e(1097)][_0x3ecb0e(1029)] = function() {
              var _0x30119a = _0x3ecb0e;
              return this[_0x30119a(1185)] > 0 ? _0x820551(this["_events"]) : [];
            };
          },
          3466: function _(_0x4f4b85, _0x3755b0, _0x19260f) {
            var _0x133d0a = a0_0x16c1, _0x4ac897 = _0x19260f(5826), _0x2f4c37 = Object[_0x133d0a(1097)]["toString"], _0x16f6e4 = _0x133d0a(646) == ("undefined" === typeof Blob ? "undefined" : _typeof(Blob)) || _0x133d0a(635) != ("undefined" === typeof Blob ? "undefined" : _typeof(Blob)) && _0x133d0a(875) === _0x2f4c37[_0x133d0a(869)](Blob), _0x2dfbb4 = _0x133d0a(646) == ("undefined" === typeof File ? "undefined" : _typeof(File)) || "undefined" != typeof File && "[object FileConstructor]" === _0x2f4c37[_0x133d0a(869)](File);
            _0x4f4b85[_0x133d0a(810)] = function _0x3f3c7a(_0x2bc97b) {
              var _0x51c7e8 = _0x133d0a;
              if (!_0x2bc97b || _0x51c7e8(736) != ("undefined" === typeof _0x2bc97b ? "undefined" : _typeof(_0x2bc97b))) return !1;
              if (_0x4ac897(_0x2bc97b)) {
                for (var _0x139bbf = 0, _0x3e1279 = _0x2bc97b[_0x51c7e8(1253)]; _0x139bbf < _0x3e1279; _0x139bbf++) if (_0x3f3c7a(_0x2bc97b[_0x139bbf])) return !0;
                return !1;
              }
              if (_0x51c7e8(646) == ("undefined" === typeof Buffer ? "undefined" : _typeof(Buffer)) && Buffer[_0x51c7e8(1141)] && Buffer[_0x51c7e8(1141)](_0x2bc97b) || _0x51c7e8(646) == ("undefined" === typeof ArrayBuffer ? "undefined" : _typeof(ArrayBuffer)) && _0x2bc97b instanceof ArrayBuffer || _0x16f6e4 && _0x2bc97b instanceof Blob || _0x2dfbb4 && _0x2bc97b instanceof File) return !0;
              if (_0x2bc97b[_0x51c7e8(1119)] && _0x51c7e8(646) == _typeof(_0x2bc97b["toJSON"]) && 1 === arguments[_0x51c7e8(1253)]) return _0x3f3c7a(_0x2bc97b[_0x51c7e8(1119)](), !0);
              for (var _0x3d6380 in _0x2bc97b) if (Object[_0x51c7e8(1097)][_0x51c7e8(783)][_0x51c7e8(869)](_0x2bc97b, _0x3d6380) && _0x3f3c7a(_0x2bc97b[_0x3d6380])) return !0;
              return !1;
            };
          },
          8058: function _(_0x1447f1) {
            var _0x8f8ebd = a0_0x16c1;
            try {
              _0x1447f1[_0x8f8ebd(810)] = _0x8f8ebd(635) != ("undefined" === typeof XMLHttpRequest ? "undefined" : _typeof(XMLHttpRequest)) && _0x8f8ebd(1283) in new XMLHttpRequest();
            } catch (_0xbb5bde) {
              _0x1447f1[_0x8f8ebd(810)] = !1;
            }
          },
          650: function _(_0x198048, _0x3afae4) {
            var _0x2a6088 = a0_0x16c1, _0x1764fc, _0x530f88;
            _0x1764fc = function _0x1764fc() {
              var _0x50214e = a0_0x16c1;
              function _0x2c127a(_0x1687f2) {
                var _0x297512 = a0_0x16c1;
                switch (this[_0x297512(1209)](), arguments[_0x297512(1253)]) {
                 case 0:
                  break;

                 case 1:
                  _0x297512(1253) in _0x1687f2 ? _0xc512e4(this, Array[_0x297512(1097)][_0x297512(767)][_0x297512(807)]([], _0x1687f2)) : this[_0x297512(731)](_0x1687f2);
                  break;

                 default:
                  _0xc512e4(this, arguments);
                }
              }
              var _0x235e1d = _0x2c127a[_0x50214e(1097)] = {
                constructor: _0x2c127a,
                get: function get(_0x38b89c) {
                  var _0x5e9da9 = _0x50214e, _0x512139 = this[_0x5e9da9(594)][this[_0x5e9da9(811)](_0x38b89c)];
                  return _0x512139 && _0x512139[1];
                },
                set: function set(_0x4c44c4, _0x189433) {
                  var _0x21948d = _0x50214e, _0x1ff38e = this[_0x21948d(811)](_0x4c44c4);
                  _0x1ff38e in this["_data"] || this[_0x21948d(930)]++, this["_data"][_0x1ff38e] = [ _0x4c44c4, _0x189433 ];
                },
                multi: function multi() {
                  _0xc512e4(this, arguments);
                },
                copy: function copy(_0x54dc9f) {
                  var _0x1d88a6 = _0x50214e;
                  for (var _0x43b231 in _0x54dc9f[_0x1d88a6(594)]) _0x43b231 in this["_data"] || this[_0x1d88a6(930)]++, 
                  this[_0x1d88a6(594)][_0x43b231] = _0x54dc9f[_0x1d88a6(594)][_0x43b231];
                },
                has: function has(_0x40ada7) {
                  var _0x48d3bf = _0x50214e;
                  return this[_0x48d3bf(811)](_0x40ada7) in this[_0x48d3bf(594)];
                },
                search: function search(_0x1faa94) {
                  var _0x42de49 = _0x50214e;
                  for (var _0x49f958 in this[_0x42de49(594)]) if (this[_0x42de49(594)][_0x49f958][1] === _0x1faa94) return this[_0x42de49(594)][_0x49f958][0];
                  return null;
                },
                delete: function _delete(_0x4d71fb) {
                  var _0x2b57cc = _0x50214e, _0x47fc2e = this[_0x2b57cc(811)](_0x4d71fb);
                  _0x47fc2e in this[_0x2b57cc(594)] && (this[_0x2b57cc(930)]--, delete this[_0x2b57cc(594)][_0x47fc2e]);
                },
                type: function type(_0x540383) {
                  var _0x5e7281 = _0x50214e, _0x2fde31 = Object["prototype"]["toString"]["call"](_0x540383)[_0x5e7281(708)](8, -1)[_0x5e7281(1361)]();
                  return _0x540383 || _0x5e7281(544) !== _0x2fde31 && _0x5e7281(1342) !== _0x2fde31 ? _0x2fde31 : _0x540383 + "";
                },
                keys: function keys() {
                  var _0x266087 = _0x50214e, _0x31770b = [];
                  return this[_0x266087(768)](function(_0x5aac2c, _0x35ca7e) {
                    var _0x1aed56 = _0x266087;
                    _0x31770b[_0x1aed56(598)](_0x35ca7e);
                  }), _0x31770b;
                },
                values: function values() {
                  var _0x4782a3 = [];
                  return this["forEach"](function(_0x1ac4b4) {
                    var _0x5b2ec2 = a0_0x16c1;
                    _0x4782a3[_0x5b2ec2(598)](_0x1ac4b4);
                  }), _0x4782a3;
                },
                entries: function entries() {
                  var _0x5f1159 = _0x50214e, _0x2b3c1a = [];
                  return this[_0x5f1159(768)](function(_0x123181, _0x31cb69) {
                    var _0x50ce31 = _0x5f1159;
                    _0x2b3c1a[_0x50ce31(598)]([ _0x31cb69, _0x123181 ]);
                  }), _0x2b3c1a;
                },
                count: function count() {
                  var _0x47d02a = _0x50214e;
                  return this[_0x47d02a(930)];
                },
                clear: function clear() {
                  this["_data"] = {}, this["size"] = 0;
                },
                clone: function clone() {
                  return new _0x2c127a(this);
                },
                hash: function hash(_0x32b77d) {
                  var _0x54e6df = _0x50214e;
                  switch (this[_0x54e6df(1042)](_0x32b77d)) {
                   case _0x54e6df(635):
                   case "null":
                   case _0x54e6df(631):
                   case _0x54e6df(577):
                   case _0x54e6df(1282):
                    return _0x32b77d + "";

                   case _0x54e6df(737):
                    return "\u2663" + _0x32b77d[_0x54e6df(1393)]();

                   case _0x54e6df(1028):
                    return "\u2660" + _0x32b77d;

                   case _0x54e6df(1006):
                    for (var _0x4e7abe = [], _0x1ef7bf = 0; _0x1ef7bf < _0x32b77d[_0x54e6df(1253)]; _0x1ef7bf++) _0x4e7abe[_0x1ef7bf] = this["hash"](_0x32b77d[_0x1ef7bf]);
                    return "\u2665" + _0x4e7abe[_0x54e6df(1161)]("\u205e");

                   default:
                    return _0x32b77d["hasOwnProperty"](_0x54e6df(1013)) || (_0x32b77d["_hmuid_"] = ++_0x2c127a[_0x54e6df(798)], 
                    _0x592fbd = _0x32b77d, _0x4781f8 = _0x54e6df(1013), Object["defineProperty"] && Object[_0x54e6df(528)](_0x592fbd, _0x4781f8, {
                      enumerable: !1
                    })), "\u2666" + _0x32b77d[_0x54e6df(1013)];
                  }
                  var _0x592fbd, _0x4781f8;
                },
                forEach: function forEach(_0x3aa12b, _0x46b03f) {
                  var _0x316166 = _0x50214e;
                  for (var _0x1fad56 in this[_0x316166(594)]) {
                    var _0x269ea9 = this["_data"][_0x1fad56];
                    _0x3aa12b[_0x316166(869)](_0x46b03f || this, _0x269ea9[1], _0x269ea9[0]);
                  }
                }
              };
              function _0xc512e4(_0x43bd62, _0x49439e) {
                var _0x1d3267 = _0x50214e;
                for (var _0x22c65c = 0; _0x22c65c < _0x49439e[_0x1d3267(1253)]; _0x22c65c += 2) _0x43bd62[_0x1d3267(1208)](_0x49439e[_0x22c65c], _0x49439e[_0x22c65c + 1]);
              }
              return _0x2c127a[_0x50214e(798)] = 0, "undefined" != typeof Symbol && void 0 !== Symbol["iterator"] && (_0x235e1d[Symbol[_0x50214e(1152)]] = function() {
                var _0x29db7f = _0x50214e, _0x1221c2 = this[_0x29db7f(610)](), _0x273f86 = 0;
                return {
                  next: function next() {
                    var _0x4566db = _0x29db7f;
                    if (_0x273f86 === _0x1221c2[_0x4566db(1253)]) return {
                      done: !0
                    };
                    var _0xaa6358 = _0x1221c2[_0x273f86++];
                    return {
                      value: {
                        key: _0xaa6358[0],
                        value: _0xaa6358[1]
                      },
                      done: !1
                    };
                  }
                };
              }), [ _0x50214e(1208), _0x50214e(1384), _0x50214e(731), "delete", _0x50214e(1209), _0x50214e(768) ][_0x50214e(768)](function(_0x41cb7f) {
                var _0x270606 = _0x235e1d[_0x41cb7f];
                _0x235e1d[_0x41cb7f] = function() {
                  var _0x331425 = a0_0x16c1;
                  return _0x270606[_0x331425(807)](this, arguments), this;
                };
              }), _0x2c127a[_0x50214e(1097)][_0x50214e(1403)] = _0x2c127a[_0x50214e(1097)][_0x50214e(1480)], 
              _0x2c127a;
            }, void 0 === (_0x530f88 = _0x1764fc[_0x2a6088(807)](_0x3afae4, [])) || (_0x198048["exports"] = _0x530f88);
          },
          7355: function _(_0x1e28e6) {
            var _0xf29902 = a0_0x16c1, _0x6eac27 = [][_0xf29902(1224)];
            _0x1e28e6[_0xf29902(810)] = function(_0x5e9a45, _0xec42c6) {
              var _0x410f60 = _0xf29902;
              if (_0x6eac27) return _0x5e9a45[_0x410f60(1224)](_0xec42c6);
              for (var _0x293277 = 0; _0x293277 < _0x5e9a45[_0x410f60(1253)]; ++_0x293277) if (_0x5e9a45[_0x293277] === _0xec42c6) return _0x293277;
              return -1;
            };
          },
          5826: function _(_0x49ce21) {
            var _0x3a2ccd = a0_0x16c1, _0x34178a = {}["toString"];
            _0x49ce21["exports"] = Array[_0x3a2ccd(1194)] || function(_0x58300d) {
              var _0xcaf99d = _0x3a2ccd;
              return _0xcaf99d(1176) == _0x34178a[_0xcaf99d(869)](_0x58300d);
            };
          },
          7824: function _(_0xeac8de) {
            var _0x203e6b = a0_0x16c1, _0x2a1f78 = 1e3, _0x6471e8 = 60 * _0x2a1f78, _0x21f287 = 60 * _0x6471e8, _0x43ad53 = 24 * _0x21f287;
            function _0x3702c0(_0x3ae3fb, _0x45cadf, _0x1c7f68) {
              var _0x35dc4d = a0_0x16c1;
              if (!(_0x3ae3fb < _0x45cadf)) return _0x3ae3fb < 1.5 * _0x45cadf ? Math[_0x35dc4d(934)](_0x3ae3fb / _0x45cadf) + " " + _0x1c7f68 : Math["ceil"](_0x3ae3fb / _0x45cadf) + " " + _0x1c7f68 + "s";
            }
            _0xeac8de[_0x203e6b(810)] = function(_0x1a7e61, _0x8fd20d) {
              var _0x35f3b5 = _0x203e6b;
              _0x8fd20d = _0x8fd20d || {};
              var _0x3f173a, _0x55fc13 = "undefined" === typeof _0x1a7e61 ? "undefined" : _typeof(_0x1a7e61);
              if (_0x35f3b5(1028) === _0x55fc13 && _0x1a7e61["length"] > 0) return function(_0x12e456) {
                var _0x9db3b6 = _0x35f3b5;
                if (!((_0x12e456 = String(_0x12e456))[_0x9db3b6(1253)] > 100)) {
                  var _0x2000b8 = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i[_0x9db3b6(883)](_0x12e456);
                  if (_0x2000b8) {
                    var _0x39669a = parseFloat(_0x2000b8[1]);
                    switch ((_0x2000b8[2] || "ms")["toLowerCase"]()) {
                     case "years":
                     case _0x9db3b6(1339):
                     case _0x9db3b6(531):
                     case "yr":
                     case "y":
                      return 315576e5 * _0x39669a;

                     case _0x9db3b6(1039):
                     case "day":
                     case "d":
                      return _0x39669a * _0x43ad53;

                     case _0x9db3b6(1272):
                     case "hour":
                     case _0x9db3b6(956):
                     case "hr":
                     case "h":
                      return _0x39669a * _0x21f287;

                     case _0x9db3b6(1216):
                     case "minute":
                     case _0x9db3b6(1117):
                     case "min":
                     case "m":
                      return _0x39669a * _0x6471e8;

                     case "seconds":
                     case _0x9db3b6(1290):
                     case "secs":
                     case _0x9db3b6(1347):
                     case "s":
                      return _0x39669a * _0x2a1f78;

                     case "milliseconds":
                     case _0x9db3b6(1397):
                     case _0x9db3b6(1316):
                     case _0x9db3b6(626):
                     case "ms":
                      return _0x39669a;

                     default:
                      return;
                    }
                  }
                }
              }(_0x1a7e61);
              if (_0x35f3b5(577) === _0x55fc13 && !1 === isNaN(_0x1a7e61)) return _0x8fd20d[_0x35f3b5(870)] ? _0x3702c0(_0x3f173a = _0x1a7e61, _0x43ad53, _0x35f3b5(905)) || _0x3702c0(_0x3f173a, _0x21f287, _0x35f3b5(1024)) || _0x3702c0(_0x3f173a, _0x6471e8, _0x35f3b5(1387)) || _0x3702c0(_0x3f173a, _0x2a1f78, "second") || _0x3f173a + _0x35f3b5(1416) : function(_0x231ff9) {
                var _0x12fb10 = _0x35f3b5;
                return _0x231ff9 >= _0x43ad53 ? Math[_0x12fb10(1479)](_0x231ff9 / _0x43ad53) + "d" : _0x231ff9 >= _0x21f287 ? Math["round"](_0x231ff9 / _0x21f287) + "h" : _0x231ff9 >= _0x6471e8 ? Math["round"](_0x231ff9 / _0x6471e8) + "m" : _0x231ff9 >= _0x2a1f78 ? Math[_0x12fb10(1479)](_0x231ff9 / _0x2a1f78) + "s" : _0x231ff9 + "ms";
              }(_0x1a7e61);
              throw new Error(_0x35f3b5(1445) + JSON[_0x35f3b5(903)](_0x1a7e61));
            };
          },
          1830: function _(_0x18c146, _0x3eb4bb) {
            var _0x50494f = a0_0x16c1;
            _0x3eb4bb["encode"] = function(_0xc35d30) {
              var _0x2cff54 = a0_0x16c1, _0x2243f7 = "";
              for (var _0x5175e2 in _0xc35d30) _0xc35d30[_0x2cff54(783)](_0x5175e2) && (_0x2243f7[_0x2cff54(1253)] && (_0x2243f7 += "&"), 
              _0x2243f7 += encodeURIComponent(_0x5175e2) + "=" + encodeURIComponent(_0xc35d30[_0x5175e2]));
              return _0x2243f7;
            }, _0x3eb4bb[_0x50494f(530)] = function(_0x4bd8fe) {
              var _0x5418bf = _0x50494f;
              for (var _0x26615c = {}, _0x2b2f2d = _0x4bd8fe["split"]("&"), _0x320e81 = 0, _0x1e5378 = _0x2b2f2d["length"]; _0x320e81 < _0x1e5378; _0x320e81++) {
                var _0x63c187 = _0x2b2f2d[_0x320e81][_0x5418bf(757)]("=");
                _0x26615c[decodeURIComponent(_0x63c187[0])] = decodeURIComponent(_0x63c187[1]);
              }
              return _0x26615c;
            };
          },
          4187: function _(_0x230ffe) {
            var _0x1f9183 = a0_0x16c1, _0x4557b1 = /^(?:(?![^:@]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/, _0x403bc2 = [ _0x1f9183(911), _0x1f9183(1032), _0x1f9183(1126), _0x1f9183(1057), _0x1f9183(1456), _0x1f9183(1081), _0x1f9183(604), _0x1f9183(1221), _0x1f9183(625), _0x1f9183(941), _0x1f9183(623), "file", _0x1f9183(1269), _0x1f9183(804) ];
            _0x230ffe[_0x1f9183(810)] = function(_0x13c702) {
              var _0x5b927b = _0x1f9183, _0xa3a8af, _0x5ad742, _0x2b162b = _0x13c702, _0x527f5e = _0x13c702["indexOf"]("["), _0x1fcb79 = _0x13c702[_0x5b927b(1224)]("]");
              -1 != _0x527f5e && -1 != _0x1fcb79 && (_0x13c702 = _0x13c702[_0x5b927b(533)](0, _0x527f5e) + _0x13c702["substring"](_0x527f5e, _0x1fcb79)["replace"](/:/g, ";") + _0x13c702[_0x5b927b(533)](_0x1fcb79, _0x13c702["length"]));
              for (var _0x4e0534, _0x3c47a9, _0x8d7051 = _0x4557b1[_0x5b927b(883)](_0x13c702 || ""), _0xc39bd9 = {}, _0xf8ea7 = 14; _0xf8ea7--; ) _0xc39bd9[_0x403bc2[_0xf8ea7]] = _0x8d7051[_0xf8ea7] || "";
              return -1 != _0x527f5e && -1 != _0x1fcb79 && (_0xc39bd9[_0x5b927b(911)] = _0x2b162b, 
              _0xc39bd9[_0x5b927b(604)] = _0xc39bd9[_0x5b927b(604)][_0x5b927b(533)](1, _0xc39bd9[_0x5b927b(604)][_0x5b927b(1253)] - 1)[_0x5b927b(1218)](/;/g, ":"), 
              _0xc39bd9[_0x5b927b(1126)] = _0xc39bd9[_0x5b927b(1126)][_0x5b927b(1218)]("[", "")["replace"]("]", "")[_0x5b927b(1218)](/;/g, ":"), 
              _0xc39bd9[_0x5b927b(1267)] = !0), _0xc39bd9[_0x5b927b(1232)] = (_0xa3a8af = _0xc39bd9[_0x5b927b(941)], 
              _0x5ad742 = _0xa3a8af["replace"](/\/{2,9}/g, "/")[_0x5b927b(757)]("/"), "/" != _0xa3a8af["substr"](0, 1) && 0 !== _0xa3a8af[_0x5b927b(1253)] || _0x5ad742[_0x5b927b(1464)](0, 1), 
              "/" == _0xa3a8af[_0x5b927b(996)](_0xa3a8af[_0x5b927b(1253)] - 1, 1) && _0x5ad742[_0x5b927b(1464)](_0x5ad742[_0x5b927b(1253)] - 1, 1), 
              _0x5ad742), _0xc39bd9["queryKey"] = (_0x4e0534 = _0xc39bd9["query"], _0x3c47a9 = {}, 
              _0x4e0534[_0x5b927b(1218)](/(?:^|&)([^&=]*)=?([^&]*)/g, function(_0x3f32cf, _0x101d9c, _0x2c38b0) {
                _0x101d9c && (_0x3c47a9[_0x101d9c] = _0x2c38b0);
              }), _0x3c47a9), _0xc39bd9;
            };
          },
          6809: function _(_0x10ddd3, _0x549e94, _0x3a1774) {
            var _0x3d9d4a = a0_0x16c1, _0x561a81 = _0x3a1774(3678), _0x1f7487 = _0x3a1774(9113), _0x17a4a9 = _0x3a1774(2739), _0x56f9cd = _0x3a1774(1227)(_0x3d9d4a(744));
            _0x10ddd3["exports"] = _0x549e94 = _0x5800e7;
            var _0x50f35b = _0x549e94["managers"] = {};
            function _0x5800e7(_0x12fc7d, _0x5d9194) {
              var _0x208c56 = _0x3d9d4a;
              _0x208c56(736) == ("undefined" === typeof _0x12fc7d ? "undefined" : _typeof(_0x12fc7d)) && (_0x5d9194 = _0x12fc7d, 
              _0x12fc7d = void 0), _0x5d9194 = _0x5d9194 || {};
              var _0xc4e09b, _0x4b7078 = _0x561a81(_0x12fc7d), _0x5f4620 = _0x4b7078[_0x208c56(911)], _0x3f310c = _0x4b7078["id"], _0x14eebc = _0x4b7078[_0x208c56(941)], _0x83b5a8 = _0x50f35b[_0x3f310c] && _0x14eebc in _0x50f35b[_0x3f310c][_0x208c56(1017)];
              return _0x5d9194["forceNew"] || _0x5d9194[_0x208c56(1401)] || !1 === _0x5d9194[_0x208c56(1466)] || _0x83b5a8 ? (_0x56f9cd(_0x208c56(608), _0x5f4620), 
              _0xc4e09b = _0x17a4a9(_0x5f4620, _0x5d9194)) : (_0x50f35b[_0x3f310c] || (_0x56f9cd(_0x208c56(707), _0x5f4620), 
              _0x50f35b[_0x3f310c] = _0x17a4a9(_0x5f4620, _0x5d9194)), _0xc4e09b = _0x50f35b[_0x3f310c]), 
              _0x4b7078["query"] && !_0x5d9194[_0x208c56(1269)] && (_0x5d9194[_0x208c56(1269)] = _0x4b7078[_0x208c56(1269)]), 
              _0xc4e09b["socket"](_0x4b7078[_0x208c56(941)], _0x5d9194);
            }
            _0x549e94[_0x3d9d4a(1032)] = _0x1f7487[_0x3d9d4a(1032)], _0x549e94[_0x3d9d4a(1244)] = _0x5800e7, 
            _0x549e94["Manager"] = _0x3a1774(2739), _0x549e94[_0x3d9d4a(1173)] = _0x3a1774(8584);
          },
          2739: function _(_0x2c6095, _0xd0c6db, _0x5b1123) {
            var _0x1273d2 = a0_0x16c1, _0x4717af = _0x5b1123(5983), _0x3b40d1 = _0x5b1123(8584), _0x295a5b = _0x5b1123(8767), _0x2ac4aa = _0x5b1123(9113), _0x48139d = _0x5b1123(5464), _0x30cea5 = _0x5b1123(6077), _0xab3eed = _0x5b1123(1227)(_0x1273d2(1148)), _0x4a4eb3 = _0x5b1123(7355), _0x53e7b7 = _0x5b1123(3010), _0x2755e8 = Object[_0x1273d2(1097)][_0x1273d2(783)];
            function _0x4e5af0(_0x507d83, _0x200cce) {
              var _0x4ec0be = _0x1273d2;
              if (!(this instanceof _0x4e5af0)) return new _0x4e5af0(_0x507d83, _0x200cce);
              _0x507d83 && _0x4ec0be(736) == ("undefined" === typeof _0x507d83 ? "undefined" : _typeof(_0x507d83)) && (_0x200cce = _0x507d83, 
              _0x507d83 = void 0), (_0x200cce = _0x200cce || {})[_0x4ec0be(941)] = _0x200cce[_0x4ec0be(941)] || _0x4ec0be(876), 
              this["nsps"] = {}, this["subs"] = [], this[_0x4ec0be(1072)] = _0x200cce, this["reconnection"](!1 !== _0x200cce[_0x4ec0be(982)]), 
              this[_0x4ec0be(978)](_0x200cce["reconnectionAttempts"] || 1 / 0), this[_0x4ec0be(940)](_0x200cce[_0x4ec0be(940)] || 1e3), 
              this["reconnectionDelayMax"](_0x200cce[_0x4ec0be(855)] || 5e3), this[_0x4ec0be(762)](_0x200cce["randomizationFactor"] || .5), 
              this[_0x4ec0be(918)] = new _0x53e7b7({
                min: this[_0x4ec0be(940)](),
                max: this[_0x4ec0be(855)](),
                jitter: this["randomizationFactor"]()
              }), this["timeout"](null == _0x200cce[_0x4ec0be(771)] ? 2e4 : _0x200cce[_0x4ec0be(771)]), 
              this["readyState"] = _0x4ec0be(1455), this["uri"] = _0x507d83, this[_0x4ec0be(1129)] = [], 
              this[_0x4ec0be(1254)] = null, this[_0x4ec0be(1471)] = !1, this[_0x4ec0be(616)] = [];
              var _0x7e99ec = _0x200cce["parser"] || _0x2ac4aa;
              this[_0x4ec0be(750)] = new _0x7e99ec["Encoder"](), this["decoder"] = new (_0x7e99ec[_0x4ec0be(611)])(), 
              this[_0x4ec0be(514)] = !1 !== _0x200cce[_0x4ec0be(514)], this["autoConnect"] && this[_0x4ec0be(741)]();
            }
            _0x2c6095[_0x1273d2(810)] = _0x4e5af0, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1312)] = function() {
              var _0x300f13 = _0x1273d2;
              for (var _0x39e06a in this["emit"][_0x300f13(807)](this, arguments), this["nsps"]) _0x2755e8[_0x300f13(869)](this[_0x300f13(1017)], _0x39e06a) && this[_0x300f13(1017)][_0x39e06a][_0x300f13(789)][_0x300f13(807)](this[_0x300f13(1017)][_0x39e06a], arguments);
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1318)] = function() {
              var _0x1e9183 = _0x1273d2;
              for (var _0xb11ff0 in this[_0x1e9183(1017)]) _0x2755e8["call"](this[_0x1e9183(1017)], _0xb11ff0) && (this[_0x1e9183(1017)][_0xb11ff0]["id"] = this["generateId"](_0xb11ff0));
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1474)] = function(_0x5808f3) {
              return ("/" === _0x5808f3 ? "" : _0x5808f3 + "#") + this["engine"]["id"];
            }, _0x295a5b(_0x4e5af0[_0x1273d2(1097)]), _0x4e5af0[_0x1273d2(1097)][_0x1273d2(982)] = function(_0x52c8cf) {
              var _0x325d46 = _0x1273d2;
              return arguments[_0x325d46(1253)] ? (this[_0x325d46(849)] = !!_0x52c8cf, this) : this[_0x325d46(849)];
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(978)] = function(_0x318316) {
              var _0x6f0861 = _0x1273d2;
              return arguments[_0x6f0861(1253)] ? (this[_0x6f0861(1156)] = _0x318316, this) : this[_0x6f0861(1156)];
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(940)] = function(_0x338fb6) {
              var _0x18fd0b = _0x1273d2;
              return arguments[_0x18fd0b(1253)] ? (this["_reconnectionDelay"] = _0x338fb6, this[_0x18fd0b(918)] && this["backoff"][_0x18fd0b(952)](_0x338fb6), 
              this) : this["_reconnectionDelay"];
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(762)] = function(_0x3b1c89) {
              var _0x353cba = _0x1273d2;
              return arguments[_0x353cba(1253)] ? (this[_0x353cba(1243)] = _0x3b1c89, this[_0x353cba(918)] && this[_0x353cba(918)][_0x353cba(1247)](_0x3b1c89), 
              this) : this["_randomizationFactor"];
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(855)] = function(_0x42b953) {
              var _0x1c7611 = _0x1273d2;
              return arguments[_0x1c7611(1253)] ? (this["_reconnectionDelayMax"] = _0x42b953, 
              this[_0x1c7611(918)] && this[_0x1c7611(918)][_0x1c7611(847)](_0x42b953), this) : this[_0x1c7611(609)];
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(771)] = function(_0x205f7f) {
              var _0x1a7e1d = _0x1273d2;
              return arguments["length"] ? (this[_0x1a7e1d(714)] = _0x205f7f, this) : this["_timeout"];
            }, _0x4e5af0["prototype"][_0x1273d2(1279)] = function() {
              var _0x39fd65 = _0x1273d2;
              !this[_0x39fd65(576)] && this[_0x39fd65(849)] && 0 === this[_0x39fd65(918)]["attempts"] && this["reconnect"]();
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(741)] = _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1244)] = function(_0x49256a, _0x1f6fae) {
              var _0xa5602a = _0x1273d2;
              if (_0xab3eed(_0xa5602a(1465), this[_0xa5602a(583)]), ~this[_0xa5602a(583)][_0xa5602a(1224)](_0xa5602a(741))) return this;
              _0xab3eed("opening %s", this[_0xa5602a(856)]), this["engine"] = _0x4717af(this["uri"], this[_0xa5602a(1072)]);
              var _0x386eca = this[_0xa5602a(1261)], _0x545862 = this;
              this["readyState"] = "opening", this[_0xa5602a(632)] = !1;
              var _0xdfc6f8 = _0x48139d(_0x386eca, _0xa5602a(741), function() {
                var _0x1fb3f8 = _0xa5602a;
                _0x545862[_0x1fb3f8(840)](), _0x49256a && _0x49256a();
              }), _0x46ff43 = _0x48139d(_0x386eca, "error", function(_0x1c154b) {
                var _0xdeef05 = _0xa5602a;
                if (_0xab3eed(_0xdeef05(694)), _0x545862[_0xdeef05(781)](), _0x545862["readyState"] = _0xdeef05(1455), 
                _0x545862["emitAll"]("connect_error", _0x1c154b), _0x49256a) {
                  var _0x2d3505 = new Error("Connection error");
                  _0x2d3505[_0xdeef05(922)] = _0x1c154b, _0x49256a(_0x2d3505);
                } else _0x545862["maybeReconnectOnOpen"]();
              });
              if (!1 !== this["_timeout"]) {
                var _0x5bb3e4 = this[_0xa5602a(714)];
                _0xab3eed(_0xa5602a(1311), _0x5bb3e4), 0 === _0x5bb3e4 && _0xdfc6f8["destroy"]();
                var _0xa35f4b = setTimeout(function() {
                  var _0x35d7fd = _0xa5602a;
                  _0xab3eed(_0x35d7fd(1204), _0x5bb3e4), _0xdfc6f8["destroy"](), _0x386eca[_0x35d7fd(1012)](), 
                  _0x386eca[_0x35d7fd(789)]("error", _0x35d7fd(771)), _0x545862["emitAll"]("connect_timeout", _0x5bb3e4);
                }, _0x5bb3e4);
                this[_0xa5602a(791)][_0xa5602a(598)]({
                  destroy: function destroy() {
                    clearTimeout(_0xa35f4b);
                  }
                });
              }
              return this[_0xa5602a(791)][_0xa5602a(598)](_0xdfc6f8), this[_0xa5602a(791)][_0xa5602a(598)](_0x46ff43), 
              this;
            }, _0x4e5af0[_0x1273d2(1097)]["onopen"] = function() {
              var _0x19e10e = _0x1273d2;
              _0xab3eed(_0x19e10e(741)), this[_0x19e10e(781)](), this[_0x19e10e(583)] = "open", 
              this[_0x19e10e(789)]("open");
              var _0x5dffcf = this[_0x19e10e(1261)];
              this[_0x19e10e(791)][_0x19e10e(598)](_0x48139d(_0x5dffcf, _0x19e10e(922), _0x30cea5(this, _0x19e10e(1108)))), 
              this["subs"]["push"](_0x48139d(_0x5dffcf, _0x19e10e(953), _0x30cea5(this, _0x19e10e(725)))), 
              this["subs"][_0x19e10e(598)](_0x48139d(_0x5dffcf, _0x19e10e(1140), _0x30cea5(this, _0x19e10e(1277)))), 
              this[_0x19e10e(791)][_0x19e10e(598)](_0x48139d(_0x5dffcf, "error", _0x30cea5(this, _0x19e10e(703)))), 
              this[_0x19e10e(791)][_0x19e10e(598)](_0x48139d(_0x5dffcf, _0x19e10e(1012), _0x30cea5(this, _0x19e10e(841)))), 
              this[_0x19e10e(791)]["push"](_0x48139d(this[_0x19e10e(1293)], "decoded", _0x30cea5(this, "ondecoded")));
            }, _0x4e5af0["prototype"][_0x1273d2(725)] = function() {
              var _0x131ac0 = _0x1273d2;
              this[_0x131ac0(1254)] = new Date(), this[_0x131ac0(1312)](_0x131ac0(953));
            }, _0x4e5af0[_0x1273d2(1097)]["onpong"] = function() {
              var _0xd07bd2 = _0x1273d2;
              this[_0xd07bd2(1312)](_0xd07bd2(1140), new Date() - this[_0xd07bd2(1254)]);
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1108)] = function(_0x2ed26e) {
              var _0x3565a1 = _0x1273d2;
              this["decoder"][_0x3565a1(1137)](_0x2ed26e);
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1116)] = function(_0x96663e) {
              var _0x4daad1 = _0x1273d2;
              this["emit"](_0x4daad1(1230), _0x96663e);
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(703)] = function(_0x42fe68) {
              var _0x14ac95 = _0x1273d2;
              _0xab3eed(_0x14ac95(951), _0x42fe68), this[_0x14ac95(1312)](_0x14ac95(951), _0x42fe68);
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1249)] = function(_0x3d2a2a, _0xeba6ac) {
              var _0x30dddb = _0x1273d2, _0x39bf32 = this["nsps"][_0x3d2a2a];
              if (!_0x39bf32) {
                _0x39bf32 = new _0x3b40d1(this, _0x3d2a2a, _0xeba6ac), this[_0x30dddb(1017)][_0x3d2a2a] = _0x39bf32;
                var _0x43a472 = this;
                _0x39bf32["on"]("connecting", _0x4accb2), _0x39bf32["on"]("connect", function() {
                  var _0x5042d7 = _0x30dddb;
                  _0x39bf32["id"] = _0x43a472[_0x5042d7(1474)](_0x3d2a2a);
                }), this["autoConnect"] && _0x4accb2();
              }
              function _0x4accb2() {
                var _0x574da9 = _0x30dddb;
                ~_0x4a4eb3(_0x43a472[_0x574da9(1129)], _0x39bf32) || _0x43a472[_0x574da9(1129)][_0x574da9(598)](_0x39bf32);
              }
              return _0x39bf32;
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(863)] = function(_0xb06cb5) {
              var _0x16acf0 = _0x1273d2, _0x4aecb9 = _0x4a4eb3(this[_0x16acf0(1129)], _0xb06cb5);
              ~_0x4aecb9 && this[_0x16acf0(1129)]["splice"](_0x4aecb9, 1), this[_0x16acf0(1129)][_0x16acf0(1253)] || this["close"]();
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1230)] = function(_0x2dcf99) {
              var _0x154f48 = _0x1273d2;
              _0xab3eed(_0x154f48(523), _0x2dcf99);
              var _0x1fec86 = this;
              _0x2dcf99[_0x154f48(1269)] && 0 === _0x2dcf99[_0x154f48(1042)] && (_0x2dcf99[_0x154f48(886)] += "?" + _0x2dcf99["query"]), 
              _0x1fec86[_0x154f48(1471)] ? _0x1fec86[_0x154f48(616)][_0x154f48(598)](_0x2dcf99) : (_0x1fec86[_0x154f48(1471)] = !0, 
              this[_0x154f48(750)]["encode"](_0x2dcf99, function(_0x104f35) {
                var _0x16bf7a = _0x154f48;
                for (var _0x4ffe3d = 0; _0x4ffe3d < _0x104f35[_0x16bf7a(1253)]; _0x4ffe3d++) _0x1fec86[_0x16bf7a(1261)][_0x16bf7a(968)](_0x104f35[_0x4ffe3d], _0x2dcf99[_0x16bf7a(1252)]);
                _0x1fec86[_0x16bf7a(1471)] = !1, _0x1fec86[_0x16bf7a(1149)]();
              }));
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1149)] = function() {
              var _0x15611e = _0x1273d2;
              if (this[_0x15611e(616)][_0x15611e(1253)] > 0 && !this["encoding"]) {
                var _0x21d325 = this[_0x15611e(616)]["shift"]();
                this[_0x15611e(1230)](_0x21d325);
              }
            }, _0x4e5af0["prototype"][_0x1273d2(781)] = function() {
              var _0x964e81 = _0x1273d2;
              _0xab3eed(_0x964e81(781));
              for (var _0x6f63c6 = this[_0x964e81(791)][_0x964e81(1253)], _0x42c06e = 0; _0x42c06e < _0x6f63c6; _0x42c06e++) this[_0x964e81(791)][_0x964e81(1313)]()["destroy"]();
              this[_0x964e81(616)] = [], this[_0x964e81(1471)] = !1, this[_0x964e81(1254)] = null, 
              this[_0x964e81(1293)][_0x964e81(863)]();
            }, _0x4e5af0["prototype"][_0x1273d2(1012)] = _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1133)] = function() {
              var _0x1f6112 = _0x1273d2;
              _0xab3eed(_0x1f6112(1133)), this[_0x1f6112(632)] = !0, this[_0x1f6112(576)] = !1, 
              _0x1f6112(1215) === this[_0x1f6112(583)] && this[_0x1f6112(781)](), this[_0x1f6112(918)][_0x1f6112(1346)](), 
              this[_0x1f6112(583)] = _0x1f6112(1455), this[_0x1f6112(1261)] && this[_0x1f6112(1261)][_0x1f6112(1012)]();
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(841)] = function(_0x4691d9) {
              var _0x38ac45 = _0x1273d2;
              _0xab3eed("onclose"), this["cleanup"](), this["backoff"]["reset"](), this[_0x38ac45(583)] = "closed", 
              this[_0x38ac45(789)](_0x38ac45(1012), _0x4691d9), this[_0x38ac45(849)] && !this[_0x38ac45(632)] && this[_0x38ac45(1128)]();
            }, _0x4e5af0["prototype"][_0x1273d2(1128)] = function() {
              var _0x2b3605 = _0x1273d2;
              if (this[_0x2b3605(576)] || this[_0x2b3605(632)]) return this;
              var _0x4e533e = this;
              if (this[_0x2b3605(918)][_0x2b3605(1159)] >= this[_0x2b3605(1156)]) _0xab3eed(_0x2b3605(636)), 
              this[_0x2b3605(918)][_0x2b3605(1346)](), this[_0x2b3605(1312)](_0x2b3605(763)), 
              this["reconnecting"] = !1; else {
                var _0x335d31 = this[_0x2b3605(918)]["duration"]();
                _0xab3eed(_0x2b3605(1404), _0x335d31), this["reconnecting"] = !0;
                var _0x2a178d = setTimeout(function() {
                  var _0x4a08d4 = _0x2b3605;
                  _0x4e533e[_0x4a08d4(632)] || (_0xab3eed(_0x4a08d4(1271)), _0x4e533e[_0x4a08d4(1312)](_0x4a08d4(1470), _0x4e533e[_0x4a08d4(918)]["attempts"]), 
                  _0x4e533e[_0x4a08d4(1312)](_0x4a08d4(576), _0x4e533e[_0x4a08d4(918)][_0x4a08d4(1159)]), 
                  _0x4e533e[_0x4a08d4(632)] || _0x4e533e[_0x4a08d4(741)](function(_0x2ff053) {
                    var _0xbf479 = _0x4a08d4;
                    _0x2ff053 ? (_0xab3eed("reconnect attempt error"), _0x4e533e[_0xbf479(576)] = !1, 
                    _0x4e533e[_0xbf479(1128)](), _0x4e533e["emitAll"](_0xbf479(991), _0x2ff053[_0xbf479(922)])) : (_0xab3eed(_0xbf479(679)), 
                    _0x4e533e[_0xbf479(1468)]());
                  }));
                }, _0x335d31);
                this["subs"][_0x2b3605(598)]({
                  destroy: function destroy() {
                    clearTimeout(_0x2a178d);
                  }
                });
              }
            }, _0x4e5af0[_0x1273d2(1097)][_0x1273d2(1468)] = function() {
              var _0x1c92e1 = _0x1273d2, _0x2da395 = this[_0x1c92e1(918)]["attempts"];
              this[_0x1c92e1(576)] = !1, this[_0x1c92e1(918)][_0x1c92e1(1346)](), this["updateSocketIds"](), 
              this[_0x1c92e1(1312)](_0x1c92e1(1128), _0x2da395);
            };
          },
          5464: function _(_0x53b284) {
            var _0x514d83 = a0_0x16c1;
            _0x53b284[_0x514d83(810)] = function(_0x12d7fa, _0x5ac4fa, _0x1020f1) {
              return _0x12d7fa["on"](_0x5ac4fa, _0x1020f1), {
                destroy: function destroy() {
                  var _0x4b52b3 = a0_0x16c1;
                  _0x12d7fa[_0x4b52b3(790)](_0x5ac4fa, _0x1020f1);
                }
              };
            };
          },
          8584: function _(_0x9e4d61, _0x14a59c, _0x5601bd) {
            var _0x671ed7 = a0_0x16c1, _0x3ae65b = _0x5601bd(9113), _0x46d0ef = _0x5601bd(8767), _0x48ece6 = _0x5601bd(4042), _0x2b35cd = _0x5601bd(5464), _0x1e0004 = _0x5601bd(6077), _0x59d799 = _0x5601bd(1227)("socket.io-client:socket"), _0xe6e4fe = _0x5601bd(1830), _0x4083da = _0x5601bd(3466);
            _0x9e4d61[_0x671ed7(810)] = _0x1f2062;
            var _0x477c33 = {
              connect: 1,
              connect_error: 1,
              connect_timeout: 1,
              connecting: 1,
              disconnect: 1,
              error: 1,
              reconnect: 1,
              reconnect_attempt: 1,
              reconnect_failed: 1,
              reconnect_error: 1,
              reconnecting: 1,
              ping: 1,
              pong: 1
            }, _0x3dee1a = _0x46d0ef[_0x671ed7(1097)][_0x671ed7(789)];
            function _0x1f2062(_0x3d815f, _0x3f30b5, _0x343099) {
              var _0x134819 = _0x671ed7;
              this["io"] = _0x3d815f, this[_0x134819(886)] = _0x3f30b5, this["json"] = this, this["ids"] = 0, 
              this["acks"] = {}, this[_0x134819(1415)] = [], this[_0x134819(584)] = [], this[_0x134819(1257)] = !1, 
              this[_0x134819(823)] = !0, this[_0x134819(649)] = {}, _0x343099 && _0x343099[_0x134819(1269)] && (this[_0x134819(1269)] = _0x343099["query"]), 
              this["io"]["autoConnect"] && this["open"]();
            }
            _0x46d0ef(_0x1f2062[_0x671ed7(1097)]), _0x1f2062[_0x671ed7(1097)]["subEvents"] = function() {
              var _0x4c4a0b = _0x671ed7;
              if (!this["subs"]) {
                var _0x41761c = this["io"];
                this[_0x4c4a0b(791)] = [ _0x2b35cd(_0x41761c, _0x4c4a0b(741), _0x1e0004(this, _0x4c4a0b(840))), _0x2b35cd(_0x41761c, _0x4c4a0b(1230), _0x1e0004(this, "onpacket")), _0x2b35cd(_0x41761c, _0x4c4a0b(1012), _0x1e0004(this, _0x4c4a0b(841))) ];
              }
            }, _0x1f2062[_0x671ed7(1097)][_0x671ed7(741)] = _0x1f2062["prototype"][_0x671ed7(1244)] = function() {
              var _0x196157 = _0x671ed7;
              return this[_0x196157(1257)] || (this["subEvents"](), this["io"][_0x196157(576)] || this["io"][_0x196157(741)](), 
              _0x196157(741) === this["io"]["readyState"] && this[_0x196157(840)](), this[_0x196157(789)](_0x196157(1129))), 
              this;
            }, _0x1f2062["prototype"][_0x671ed7(641)] = function() {
              var _0x12f161 = _0x671ed7, _0x46d37d = _0x48ece6(arguments);
              return _0x46d37d[_0x12f161(718)](_0x12f161(1175)), this[_0x12f161(789)][_0x12f161(807)](this, _0x46d37d), 
              this;
            }, _0x1f2062[_0x671ed7(1097)][_0x671ed7(789)] = function(_0x3fe2e8) {
              var _0x483ef2 = _0x671ed7;
              if (_0x477c33["hasOwnProperty"](_0x3fe2e8)) return _0x3dee1a["apply"](this, arguments), 
              this;
              var _0x4df05c = _0x48ece6(arguments), _0x19ff3d = {
                type: (void 0 !== this[_0x483ef2(649)][_0x483ef2(1136)] ? this["flags"][_0x483ef2(1136)] : _0x4083da(_0x4df05c)) ? _0x3ae65b[_0x483ef2(1222)] : _0x3ae65b[_0x483ef2(1044)],
                data: _0x4df05c,
                options: {}
              };
              return _0x19ff3d[_0x483ef2(1252)][_0x483ef2(669)] = !this[_0x483ef2(649)] || !1 !== this["flags"][_0x483ef2(669)], 
              _0x483ef2(646) == _typeof(_0x4df05c[_0x4df05c[_0x483ef2(1253)] - 1]) && (_0x59d799(_0x483ef2(578), this["ids"]), 
              this[_0x483ef2(1203)][this[_0x483ef2(640)]] = _0x4df05c[_0x483ef2(1195)](), _0x19ff3d["id"] = this[_0x483ef2(640)]++), 
              this["connected"] ? this[_0x483ef2(1230)](_0x19ff3d) : this[_0x483ef2(584)][_0x483ef2(598)](_0x19ff3d), 
              this[_0x483ef2(649)] = {}, this;
            }, _0x1f2062["prototype"][_0x671ed7(1230)] = function(_0x358667) {
              var _0x17f0ef = _0x671ed7;
              _0x358667["nsp"] = this[_0x17f0ef(886)], this["io"][_0x17f0ef(1230)](_0x358667);
            }, _0x1f2062[_0x671ed7(1097)][_0x671ed7(840)] = function() {
              var _0x5dc368 = _0x671ed7;
              if (_0x59d799(_0x5dc368(1370)), "/" !== this["nsp"]) if (this[_0x5dc368(1269)]) {
                var _0x2f9e87 = "object" == _typeof(this[_0x5dc368(1269)]) ? _0xe6e4fe["encode"](this[_0x5dc368(1269)]) : this[_0x5dc368(1269)];
                _0x59d799(_0x5dc368(573), _0x2f9e87), this[_0x5dc368(1230)]({
                  type: _0x3ae65b[_0x5dc368(690)],
                  query: _0x2f9e87
                });
              } else this["packet"]({
                type: _0x3ae65b[_0x5dc368(690)]
              });
            }, _0x1f2062["prototype"][_0x671ed7(841)] = function(_0x1ed1a5) {
              var _0x3a58af = _0x671ed7;
              _0x59d799(_0x3a58af(1398), _0x1ed1a5), this["connected"] = !1, this[_0x3a58af(823)] = !0, 
              delete this["id"], this[_0x3a58af(789)](_0x3a58af(1133), _0x1ed1a5);
            }, _0x1f2062[_0x671ed7(1097)][_0x671ed7(659)] = function(_0x4734eb) {
              var _0x47cabf = _0x671ed7, _0x222b5b = _0x4734eb[_0x47cabf(886)] === this[_0x47cabf(886)], _0x3118ab = _0x4734eb[_0x47cabf(1042)] === _0x3ae65b[_0x47cabf(950)] && "/" === _0x4734eb[_0x47cabf(886)];
              if (_0x222b5b || _0x3118ab) switch (_0x4734eb[_0x47cabf(1042)]) {
               case _0x3ae65b[_0x47cabf(690)]:
                this[_0x47cabf(1202)]();
                break;

               case _0x3ae65b["EVENT"]:
               case _0x3ae65b[_0x47cabf(1222)]:
                this[_0x47cabf(867)](_0x4734eb);
                break;

               case _0x3ae65b[_0x47cabf(541)]:
               case _0x3ae65b["BINARY_ACK"]:
                this[_0x47cabf(770)](_0x4734eb);
                break;

               case _0x3ae65b[_0x47cabf(908)]:
                this[_0x47cabf(1092)]();
                break;

               case _0x3ae65b[_0x47cabf(950)]:
                this["emit"](_0x47cabf(951), _0x4734eb["data"]);
              }
            }, _0x1f2062[_0x671ed7(1097)][_0x671ed7(867)] = function(_0x54fda2) {
              var _0x43bc70 = _0x671ed7, _0x1d3192 = _0x54fda2[_0x43bc70(922)] || [];
              _0x59d799("emitting event %j", _0x1d3192), null != _0x54fda2["id"] && (_0x59d799(_0x43bc70(558)), 
              _0x1d3192[_0x43bc70(598)](this["ack"](_0x54fda2["id"]))), this[_0x43bc70(1257)] ? _0x3dee1a[_0x43bc70(807)](this, _0x1d3192) : this["receiveBuffer"]["push"](_0x1d3192);
            }, _0x1f2062[_0x671ed7(1097)]["ack"] = function(_0x4fb76) {
              var _0x3be1fa = this, _0x175acb = !1;
              return function() {
                var _0x4a5eda = a0_0x16c1;
                if (!_0x175acb) {
                  _0x175acb = !0;
                  var _0x1adbd0 = _0x48ece6(arguments);
                  _0x59d799(_0x4a5eda(1020), _0x1adbd0), _0x3be1fa["packet"]({
                    type: _0x4083da(_0x1adbd0) ? _0x3ae65b["BINARY_ACK"] : _0x3ae65b[_0x4a5eda(541)],
                    id: _0x4fb76,
                    data: _0x1adbd0
                  });
                }
              };
            }, _0x1f2062[_0x671ed7(1097)][_0x671ed7(770)] = function(_0x2fed6d) {
              var _0x377254 = _0x671ed7, _0xfc8d28 = this["acks"][_0x2fed6d["id"]];
              _0x377254(646) == ("undefined" === typeof _0xfc8d28 ? "undefined" : _typeof(_0xfc8d28)) ? (_0x59d799(_0x377254(1392), _0x2fed6d["id"], _0x2fed6d[_0x377254(922)]), 
              _0xfc8d28["apply"](this, _0x2fed6d["data"]), delete this["acks"][_0x2fed6d["id"]]) : _0x59d799("bad ack %s", _0x2fed6d["id"]);
            }, _0x1f2062[_0x671ed7(1097)]["onconnect"] = function() {
              var _0x391706 = _0x671ed7;
              this["connected"] = !0, this[_0x391706(823)] = !1, this["emitBuffered"](), this["emit"](_0x391706(1244));
            }, _0x1f2062[_0x671ed7(1097)][_0x671ed7(752)] = function() {
              var _0x50ad61 = _0x671ed7, _0x48fb28;
              for (_0x48fb28 = 0; _0x48fb28 < this[_0x50ad61(1415)][_0x50ad61(1253)]; _0x48fb28++) _0x3dee1a[_0x50ad61(807)](this, this[_0x50ad61(1415)][_0x48fb28]);
              for (this[_0x50ad61(1415)] = [], _0x48fb28 = 0; _0x48fb28 < this["sendBuffer"][_0x50ad61(1253)]; _0x48fb28++) this[_0x50ad61(1230)](this["sendBuffer"][_0x48fb28]);
              this[_0x50ad61(584)] = [];
            }, _0x1f2062["prototype"][_0x671ed7(1092)] = function() {
              var _0x165db4 = _0x671ed7;
              _0x59d799(_0x165db4(899), this["nsp"]), this["destroy"](), this[_0x165db4(841)](_0x165db4(1376));
            }, _0x1f2062["prototype"]["destroy"] = function() {
              var _0x8da694 = _0x671ed7;
              if (this[_0x8da694(791)]) {
                for (var _0x13daa7 = 0; _0x13daa7 < this["subs"]["length"]; _0x13daa7++) this[_0x8da694(791)][_0x13daa7][_0x8da694(863)]();
                this[_0x8da694(791)] = null;
              }
              this["io"][_0x8da694(863)](this);
            }, _0x1f2062[_0x671ed7(1097)][_0x671ed7(1012)] = _0x1f2062[_0x671ed7(1097)][_0x671ed7(1133)] = function() {
              var _0x4014c8 = _0x671ed7;
              return this["connected"] && (_0x59d799(_0x4014c8(974), this["nsp"]), this[_0x4014c8(1230)]({
                type: _0x3ae65b[_0x4014c8(908)]
              })), this[_0x4014c8(863)](), this["connected"] && this["onclose"](_0x4014c8(817)), 
              this;
            }, _0x1f2062["prototype"][_0x671ed7(669)] = function(_0x3e1076) {
              var _0x45c4d1 = _0x671ed7;
              return this[_0x45c4d1(649)][_0x45c4d1(669)] = _0x3e1076, this;
            }, _0x1f2062[_0x671ed7(1097)]["binary"] = function(_0xc870f1) {
              var _0x30db42 = _0x671ed7;
              return this["flags"][_0x30db42(1136)] = _0xc870f1, this;
            };
          },
          3678: function _(_0x30a032, _0x463a4d, _0x52d554) {
            var _0x4bd482 = a0_0x16c1, _0x3fd676 = _0x52d554(4187), _0x28284c = _0x52d554(1227)(_0x4bd482(515));
            _0x30a032[_0x4bd482(810)] = function(_0x1caf35, _0x3c232d) {
              var _0x18e79d = _0x4bd482, _0x3af2eb = _0x1caf35;
              _0x3c232d = _0x3c232d || "undefined" != typeof location && location, null == _0x1caf35 && (_0x1caf35 = _0x3c232d["protocol"] + "//" + _0x3c232d[_0x18e79d(604)]), 
              _0x18e79d(1028) == ("undefined" === typeof _0x1caf35 ? "undefined" : _typeof(_0x1caf35)) && ("/" === _0x1caf35["charAt"](0) && (_0x1caf35 = "/" === _0x1caf35["charAt"](1) ? _0x3c232d["protocol"] + _0x1caf35 : _0x3c232d[_0x18e79d(604)] + _0x1caf35), 
              /^(https?|wss?):\/\//[_0x18e79d(1377)](_0x1caf35) || (_0x28284c("protocol-less url %s", _0x1caf35), 
              _0x1caf35 = void 0 !== _0x3c232d ? _0x3c232d[_0x18e79d(1032)] + "//" + _0x1caf35 : "https://" + _0x1caf35), 
              _0x28284c("parse %s", _0x1caf35), _0x3af2eb = _0x3fd676(_0x1caf35)), _0x3af2eb[_0x18e79d(1221)] || (/^(http|ws)$/[_0x18e79d(1377)](_0x3af2eb[_0x18e79d(1032)]) ? _0x3af2eb[_0x18e79d(1221)] = "80" : /^(http|ws)s$/["test"](_0x3af2eb[_0x18e79d(1032)]) && (_0x3af2eb[_0x18e79d(1221)] = _0x18e79d(520))), 
              _0x3af2eb[_0x18e79d(941)] = _0x3af2eb[_0x18e79d(941)] || "/";
              var _0x14b699 = -1 !== _0x3af2eb[_0x18e79d(604)][_0x18e79d(1224)](":") ? "[" + _0x3af2eb["host"] + "]" : _0x3af2eb[_0x18e79d(604)];
              return _0x3af2eb["id"] = _0x3af2eb[_0x18e79d(1032)] + _0x18e79d(818) + _0x14b699 + ":" + _0x3af2eb[_0x18e79d(1221)], 
              _0x3af2eb[_0x18e79d(1298)] = _0x3af2eb["protocol"] + _0x18e79d(818) + _0x14b699 + (_0x3c232d && _0x3c232d[_0x18e79d(1221)] === _0x3af2eb["port"] ? "" : ":" + _0x3af2eb[_0x18e79d(1221)]), 
              _0x3af2eb;
            };
          },
          2326: function _(_0x9196b3, _0x35b5d6, _0x1a714a) {
            var _0x1225bb = a0_0x16c1, _0x42e8c3 = _0x1a714a(5826), _0x23d297 = _0x1a714a(6066), _0x2ecb27 = Object["prototype"][_0x1225bb(525)], _0x2c962e = _0x1225bb(646) == ("undefined" === typeof Blob ? "undefined" : _typeof(Blob)) || _0x1225bb(635) != ("undefined" === typeof Blob ? "undefined" : _typeof(Blob)) && _0x1225bb(875) === _0x2ecb27[_0x1225bb(869)](Blob), _0x21f9e2 = _0x1225bb(646) == ("undefined" === typeof File ? "undefined" : _typeof(File)) || "undefined" != typeof File && "[object FileConstructor]" === _0x2ecb27["call"](File);
            function _0x389622(_0x379a52, _0x10313a) {
              var _0x581817 = _0x1225bb;
              if (!_0x379a52) return _0x379a52;
              if (_0x23d297(_0x379a52)) {
                var _0x2e3b5c = {
                  _placeholder: !0,
                  num: _0x10313a[_0x581817(1253)]
                };
                return _0x10313a[_0x581817(598)](_0x379a52), _0x2e3b5c;
              }
              if (_0x42e8c3(_0x379a52)) {
                for (var _0x1cbbf8 = new Array(_0x379a52[_0x581817(1253)]), _0x48dc0b = 0; _0x48dc0b < _0x379a52[_0x581817(1253)]; _0x48dc0b++) _0x1cbbf8[_0x48dc0b] = _0x389622(_0x379a52[_0x48dc0b], _0x10313a);
                return _0x1cbbf8;
              }
              if (_0x581817(736) == ("undefined" === typeof _0x379a52 ? "undefined" : _typeof(_0x379a52)) && !(_0x379a52 instanceof Date)) {
                for (var _0xd5682d in _0x1cbbf8 = {}, _0x379a52) _0x1cbbf8[_0xd5682d] = _0x389622(_0x379a52[_0xd5682d], _0x10313a);
                return _0x1cbbf8;
              }
              return _0x379a52;
            }
            function _0x3940e9(_0x51eb0e, _0x1c7342) {
              var _0x29a684 = _0x1225bb;
              if (!_0x51eb0e) return _0x51eb0e;
              if (_0x51eb0e && _0x51eb0e[_0x29a684(878)]) return _0x1c7342[_0x51eb0e[_0x29a684(912)]];
              if (_0x42e8c3(_0x51eb0e)) for (var _0x10587c = 0; _0x10587c < _0x51eb0e[_0x29a684(1253)]; _0x10587c++) _0x51eb0e[_0x10587c] = _0x3940e9(_0x51eb0e[_0x10587c], _0x1c7342); else if (_0x29a684(736) == ("undefined" === typeof _0x51eb0e ? "undefined" : _typeof(_0x51eb0e))) for (var _0x566d8f in _0x51eb0e) _0x51eb0e[_0x566d8f] = _0x3940e9(_0x51eb0e[_0x566d8f], _0x1c7342);
              return _0x51eb0e;
            }
            _0x35b5d6[_0x1225bb(1086)] = function(_0x1e06af) {
              var _0xef40f3 = _0x1225bb, _0x2befa5 = [], _0x1fd01a = _0x1e06af[_0xef40f3(922)], _0x4c654d = _0x1e06af;
              return _0x4c654d[_0xef40f3(922)] = _0x389622(_0x1fd01a, _0x2befa5), _0x4c654d[_0xef40f3(923)] = _0x2befa5[_0xef40f3(1253)], 
              {
                packet: _0x4c654d,
                buffers: _0x2befa5
              };
            }, _0x35b5d6[_0x1225bb(509)] = function(_0x4e3d0f, _0x1ae418) {
              var _0x456de1 = _0x1225bb;
              return _0x4e3d0f[_0x456de1(922)] = _0x3940e9(_0x4e3d0f[_0x456de1(922)], _0x1ae418), 
              _0x4e3d0f[_0x456de1(923)] = void 0, _0x4e3d0f;
            }, _0x35b5d6[_0x1225bb(1381)] = function(_0x1da518, _0x5e7b40) {
              var _0x3dbb2d = 0, _0x2dda08 = _0x1da518;
              !function _0x53da96(_0x3cafc2, _0x3cca7a, _0x4c005e) {
                var _0x1db7ad = a0_0x16c1;
                if (!_0x3cafc2) return _0x3cafc2;
                if (_0x2c962e && _0x3cafc2 instanceof Blob || _0x21f9e2 && _0x3cafc2 instanceof File) {
                  _0x3dbb2d++;
                  var _0xa86ba1 = new FileReader();
                  _0xa86ba1[_0x1db7ad(802)] = function() {
                    var _0x56b597 = _0x1db7ad;
                    _0x4c005e ? _0x4c005e[_0x3cca7a] = this[_0x56b597(1422)] : _0x2dda08 = this[_0x56b597(1422)], 
                    --_0x3dbb2d || _0x5e7b40(_0x2dda08);
                  }, _0xa86ba1["readAsArrayBuffer"](_0x3cafc2);
                } else if (_0x42e8c3(_0x3cafc2)) for (var _0xf65487 = 0; _0xf65487 < _0x3cafc2[_0x1db7ad(1253)]; _0xf65487++) _0x53da96(_0x3cafc2[_0xf65487], _0xf65487, _0x3cafc2); else if ("object" == ("undefined" === typeof _0x3cafc2 ? "undefined" : _typeof(_0x3cafc2)) && !_0x23d297(_0x3cafc2)) for (var _0x37ff13 in _0x3cafc2) _0x53da96(_0x3cafc2[_0x37ff13], _0x37ff13, _0x3cafc2);
              }(_0x2dda08), _0x3dbb2d || _0x5e7b40(_0x2dda08);
            };
          },
          9113: function _(_0x23e30f, _0x4f7285, _0x38b2b8) {
            var _0x3dd0bf = a0_0x16c1, _0x29cef6 = _0x38b2b8(1227)(_0x3dd0bf(1288)), _0x21252f = _0x38b2b8(8767), _0x4b14d8 = _0x38b2b8(2326), _0x167b7d = _0x38b2b8(5826), _0x18ca4a = _0x38b2b8(6066);
            function _0x582852() {}
            _0x4f7285["protocol"] = 4, _0x4f7285[_0x3dd0bf(843)] = [ _0x3dd0bf(690), _0x3dd0bf(908), _0x3dd0bf(1044), _0x3dd0bf(541), _0x3dd0bf(950), "BINARY_EVENT", _0x3dd0bf(1130) ], 
            _0x4f7285[_0x3dd0bf(690)] = 0, _0x4f7285[_0x3dd0bf(908)] = 1, _0x4f7285[_0x3dd0bf(1044)] = 2, 
            _0x4f7285[_0x3dd0bf(541)] = 3, _0x4f7285[_0x3dd0bf(950)] = 4, _0x4f7285[_0x3dd0bf(1222)] = 5, 
            _0x4f7285[_0x3dd0bf(1130)] = 6, _0x4f7285[_0x3dd0bf(924)] = _0x582852, _0x4f7285[_0x3dd0bf(611)] = _0x349b34;
            var _0xa32cf4 = _0x4f7285["ERROR"] + _0x3dd0bf(697);
            function _0x2a0e2a(_0x24af6c) {
              var _0x329b97 = _0x3dd0bf, _0x2bf711 = "" + _0x24af6c[_0x329b97(1042)];
              if (_0x4f7285[_0x329b97(1222)] !== _0x24af6c[_0x329b97(1042)] && _0x4f7285[_0x329b97(1130)] !== _0x24af6c[_0x329b97(1042)] || (_0x2bf711 += _0x24af6c[_0x329b97(923)] + "-"), 
              _0x24af6c[_0x329b97(886)] && "/" !== _0x24af6c[_0x329b97(886)] && (_0x2bf711 += _0x24af6c["nsp"] + ","), 
              null != _0x24af6c["id"] && (_0x2bf711 += _0x24af6c["id"]), null != _0x24af6c[_0x329b97(922)]) {
                var _0xbf0b83 = function(_0x1ecc52) {
                  var _0x2c7735 = _0x329b97;
                  try {
                    return JSON[_0x2c7735(903)](_0x1ecc52);
                  } catch (_0x1dad08) {
                    return !1;
                  }
                }(_0x24af6c[_0x329b97(922)]);
                if (!1 === _0xbf0b83) return _0xa32cf4;
                _0x2bf711 += _0xbf0b83;
              }
              return _0x29cef6("encoded %j as %s", _0x24af6c, _0x2bf711), _0x2bf711;
            }
            function _0x349b34() {
              var _0x12583f = _0x3dd0bf;
              this[_0x12583f(1101)] = null;
            }
            function _0x4220ea(_0x5446b3) {
              var _0x4d9a48 = _0x3dd0bf;
              this[_0x4d9a48(1157)] = _0x5446b3, this["buffers"] = [];
            }
            function _0x424bf2(_0x5c88b1) {
              var _0x3337c8 = _0x3dd0bf;
              return {
                type: _0x4f7285["ERROR"],
                data: _0x3337c8(685) + _0x5c88b1
              };
            }
            _0x582852["prototype"]["encode"] = function(_0x273350, _0xbbe70b) {
              var _0x49013d = _0x3dd0bf;
              _0x29cef6("encoding packet %j", _0x273350), _0x4f7285[_0x49013d(1222)] === _0x273350[_0x49013d(1042)] || _0x4f7285[_0x49013d(1130)] === _0x273350["type"] ? function(_0x3f0df9, _0x292d88) {
                _0x4b14d8["removeBlobs"](_0x3f0df9, function(_0x4cb5e7) {
                  var _0x289568 = a0_0x16c1, _0x2337b1 = _0x4b14d8[_0x289568(1086)](_0x4cb5e7), _0x3e3e8a = _0x2a0e2a(_0x2337b1["packet"]), _0x4c7d62 = _0x2337b1["buffers"];
                  _0x4c7d62[_0x289568(718)](_0x3e3e8a), _0x292d88(_0x4c7d62);
                });
              }(_0x273350, _0xbbe70b) : _0xbbe70b([ _0x2a0e2a(_0x273350) ]);
            }, _0x21252f(_0x349b34[_0x3dd0bf(1097)]), _0x349b34["prototype"][_0x3dd0bf(1137)] = function(_0x48a51f) {
              var _0xeadb2 = _0x3dd0bf, _0x1d62ba;
              if (_0xeadb2(1028) == ("undefined" === typeof _0x48a51f ? "undefined" : _typeof(_0x48a51f))) _0x1d62ba = function(_0x424a85) {
                var _0x414f95 = _0xeadb2, _0x4324a2 = 0, _0xcf6698 = {
                  type: Number(_0x424a85[_0x414f95(1320)](0))
                };
                if (null == _0x4f7285[_0x414f95(843)][_0xcf6698["type"]]) return _0x424bf2(_0x414f95(955) + _0xcf6698["type"]);
                if (_0x4f7285[_0x414f95(1222)] === _0xcf6698["type"] || _0x4f7285[_0x414f95(1130)] === _0xcf6698[_0x414f95(1042)]) {
                  for (var _0x595928 = _0x4324a2 + 1; "-" !== _0x424a85[_0x414f95(1320)](++_0x4324a2) && _0x4324a2 != _0x424a85[_0x414f95(1253)]; ) ;
                  var _0x4d1c93 = _0x424a85["substring"](_0x595928, _0x4324a2);
                  if (_0x4d1c93 != Number(_0x4d1c93) || "-" !== _0x424a85["charAt"](_0x4324a2)) throw new Error(_0x414f95(732));
                  _0xcf6698[_0x414f95(923)] = Number(_0x4d1c93);
                }
                if ("/" === _0x424a85[_0x414f95(1320)](_0x4324a2 + 1)) {
                  for (_0x595928 = _0x4324a2 + 1; ++_0x4324a2 && "," !== (_0x1f416c = _0x424a85["charAt"](_0x4324a2)) && _0x4324a2 !== _0x424a85[_0x414f95(1253)]; ) ;
                  _0xcf6698[_0x414f95(886)] = _0x424a85[_0x414f95(533)](_0x595928, _0x4324a2);
                } else _0xcf6698["nsp"] = "/";
                var _0xed5ca1 = _0x424a85[_0x414f95(1320)](_0x4324a2 + 1);
                if ("" !== _0xed5ca1 && Number(_0xed5ca1) == _0xed5ca1) {
                  for (_0x595928 = _0x4324a2 + 1; ++_0x4324a2; ) {
                    var _0x1f416c;
                    if (null == (_0x1f416c = _0x424a85[_0x414f95(1320)](_0x4324a2)) || Number(_0x1f416c) != _0x1f416c) {
                      --_0x4324a2;
                      break;
                    }
                    if (_0x4324a2 === _0x424a85[_0x414f95(1253)]) break;
                  }
                  _0xcf6698["id"] = Number(_0x424a85[_0x414f95(533)](_0x595928, _0x4324a2 + 1));
                }
                if (_0x424a85[_0x414f95(1320)](++_0x4324a2)) {
                  var _0x3dda4d = function(_0x3d0726) {
                    var _0x4cf7d3 = _0x414f95;
                    try {
                      return JSON[_0x4cf7d3(655)](_0x3d0726);
                    } catch (_0x53b7c0) {
                      return !1;
                    }
                  }(_0x424a85[_0x414f95(996)](_0x4324a2));
                  if (!1 === _0x3dda4d || _0xcf6698[_0x414f95(1042)] !== _0x4f7285[_0x414f95(950)] && !_0x167b7d(_0x3dda4d)) return _0x424bf2(_0x414f95(887));
                  _0xcf6698["data"] = _0x3dda4d;
                }
                return _0x29cef6(_0x414f95(778), _0x424a85, _0xcf6698), _0xcf6698;
              }(_0x48a51f), _0x4f7285[_0xeadb2(1222)] === _0x1d62ba[_0xeadb2(1042)] || _0x4f7285[_0xeadb2(1130)] === _0x1d62ba["type"] ? (this[_0xeadb2(1101)] = new _0x4220ea(_0x1d62ba), 
              0 === this["reconstructor"]["reconPack"][_0xeadb2(923)] && this[_0xeadb2(789)](_0xeadb2(850), _0x1d62ba)) : this[_0xeadb2(789)](_0xeadb2(850), _0x1d62ba); else {
                if (!_0x18ca4a(_0x48a51f) && !_0x48a51f[_0xeadb2(1038)]) throw new Error(_0xeadb2(668) + _0x48a51f);
                if (!this[_0xeadb2(1101)]) throw new Error(_0xeadb2(1018));
                (_0x1d62ba = this[_0xeadb2(1101)][_0xeadb2(743)](_0x48a51f)) && (this["reconstructor"] = null, 
                this[_0xeadb2(789)]("decoded", _0x1d62ba));
              }
            }, _0x349b34["prototype"][_0x3dd0bf(863)] = function() {
              var _0x21ef27 = _0x3dd0bf;
              this[_0x21ef27(1101)] && this["reconstructor"][_0x21ef27(1366)]();
            }, _0x4220ea[_0x3dd0bf(1097)]["takeBinaryData"] = function(_0x5f2af0) {
              var _0x3290ce = _0x3dd0bf;
              if (this["buffers"][_0x3290ce(598)](_0x5f2af0), this[_0x3290ce(1110)][_0x3290ce(1253)] === this[_0x3290ce(1157)]["attachments"]) {
                var _0x21a548 = _0x4b14d8[_0x3290ce(509)](this[_0x3290ce(1157)], this["buffers"]);
                return this[_0x3290ce(1366)](), _0x21a548;
              }
              return null;
            }, _0x4220ea[_0x3dd0bf(1097)][_0x3dd0bf(1366)] = function() {
              var _0x52fef7 = _0x3dd0bf;
              this[_0x52fef7(1157)] = null, this[_0x52fef7(1110)] = [];
            };
          },
          6066: function _(_0x27191b) {
            var _0x157717 = a0_0x16c1;
            _0x27191b[_0x157717(810)] = function(_0x21246b) {
              var _0x25af7f = _0x157717;
              return _0x56f706 && Buffer[_0x25af7f(1141)](_0x21246b) || _0x5a3b17 && (_0x21246b instanceof ArrayBuffer || function(_0x47d8cd) {
                var _0x3a228e = _0x25af7f;
                return "function" == typeof ArrayBuffer[_0x3a228e(1182)] ? ArrayBuffer[_0x3a228e(1182)](_0x47d8cd) : _0x47d8cd[_0x3a228e(1167)] instanceof ArrayBuffer;
              }(_0x21246b));
            };
            var _0x56f706 = _0x157717(646) == ("undefined" === typeof Buffer ? "undefined" : _typeof(Buffer)) && _0x157717(646) == _typeof(Buffer["isBuffer"]), _0x5a3b17 = _0x157717(646) == ("undefined" === typeof ArrayBuffer ? "undefined" : _typeof(ArrayBuffer));
          },
          4042: function _(_0x217010) {
            var _0x4ad409 = a0_0x16c1;
            _0x217010[_0x4ad409(810)] = function(_0x2c038f, _0x4e4525) {
              var _0x5270ab = _0x4ad409;
              for (var _0x1ea025 = [], _0x41fbb5 = (_0x4e4525 = _0x4e4525 || 0) || 0; _0x41fbb5 < _0x2c038f[_0x5270ab(1253)]; _0x41fbb5++) _0x1ea025[_0x41fbb5 - _0x4e4525] = _0x2c038f[_0x41fbb5];
              return _0x1ea025;
            };
          },
          2281: function _(_0x596008) {
            var _0x14f7ad = a0_0x16c1;
            var _0x1b2f95, _0x455884 = _0x14f7ad(1413)[_0x14f7ad(757)](""), _0x1b12e9 = {}, _0x422192 = 0, _0x52cae6 = 0;
            function _0x35349e(_0x18b8bf) {
              var _0x2c2011 = "";
              do {
                _0x2c2011 = _0x455884[_0x18b8bf % 64] + _0x2c2011, _0x18b8bf = Math["floor"](_0x18b8bf / 64);
              } while (_0x18b8bf > 0);
              return _0x2c2011;
            }
            function _0x3de568() {
              var _0x5b16db = _0x35349e(+new Date());
              return _0x5b16db !== _0x1b2f95 ? (_0x422192 = 0, _0x1b2f95 = _0x5b16db) : _0x5b16db + "." + _0x35349e(_0x422192++);
            }
            for (;_0x52cae6 < 64; _0x52cae6++) _0x1b12e9[_0x455884[_0x52cae6]] = _0x52cae6;
            _0x3de568[_0x14f7ad(1058)] = _0x35349e, _0x3de568[_0x14f7ad(530)] = function(_0x5076c2) {
              var _0x35327b = _0x14f7ad, _0x73a90a = 0;
              for (_0x52cae6 = 0; _0x52cae6 < _0x5076c2[_0x35327b(1253)]; _0x52cae6++) _0x73a90a = 64 * _0x73a90a + _0x1b12e9[_0x5076c2[_0x35327b(1320)](_0x52cae6)];
              return _0x73a90a;
            }, _0x596008["exports"] = _0x3de568;
          },
          7020: function _() {}
        }, _0x35d052 = {}, _0x2ba659 = function _0x3ee9bf(_0x8fba1) {
          var _0x190b33 = a0_0x16c1, _0x3816d5 = _0x35d052[_0x8fba1];
          if (void 0 !== _0x3816d5) return _0x3816d5[_0x190b33(810)];
          var _0x1d6c5c = _0x35d052[_0x8fba1] = {
            exports: {}
          };
          return _0x4bb5fa[_0x8fba1][_0x190b33(869)](_0x1d6c5c[_0x190b33(810)], _0x1d6c5c, _0x1d6c5c[_0x190b33(810)], _0x3ee9bf), 
          _0x1d6c5c["exports"];
        }(880);
        module[_0x13337f(810)] = _0x2ba659;
      }();
      cc._RF.pop();
    }).call(this, require("_process"), require("buffer").Buffer);
  }, {
    _process: 118,
    buffer: 47
  } ],
  gameCommonUtils: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e32b0u9l3BIgLi8zBq/6lQs", "gameCommonUtils");
    "use strict";
    var lodash = require("lodash");
    var _require = require("utils"), setDeviceOrientation = _require.setDeviceOrientation, updateUtilConfig = _require.updateUtilConfig;
    function gameCommonUtils() {
      var getUrlParam = function getUrlParam(name) {
        if (cc.sys.isNative) return null;
        var url = new URL(window.location);
        return url.searchParams.get(name);
      };
      var addUrlParam = function addUrlParam(key, value) {
        if (cc.sys.isNative) return null;
        var url = new URL(window.location);
        url.searchParams.set(key, value);
        window.history.pushState({}, "", url);
      };
      var checkConditionCloseGameIframe = function checkConditionCloseGameIframe() {
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC = loadConfigAsync.getConfig(), LOGIN_IFRAME = _loadConfigAsync$getC.LOGIN_IFRAME;
        if (!LOGIN_IFRAME) return true;
        var returnUrl = getUrlParam("ru");
        return returnUrl && LOGIN_IFRAME;
      };
      var handleBackLobbyNativeClient = function handleBackLobbyNativeClient() {
        if (cc.sys.isNative) {
          var vjsb = window["vjsb"];
          if ("function" === typeof closeCreatorGame) {
            if (!cc.isCallCloseCreator) {
              closeCreatorGame();
              middleware && middleware.MiddlewareManager && cc.sys.os === cc.sys.OS_ANDROID && middleware.MiddlewareManager.destroyInstance();
            }
            cc.isCallCloseCreator = true;
            return true;
          }
          if (vjsb) {
            var globalNetwork = require("globalNetwork");
            globalNetwork.triggerUserLogout();
            var CC_CMD = {
              CMD_HOME: 1,
              CMD_TEST: 2
            };
            cc.log("on home -- " + vjsb.js2cMessage);
            vjsb.js2cMessage(JSON.stringify({
              cmd: CC_CMD.CMD_HOME,
              data: {}
            }));
            return true;
          }
        }
        return false;
      };
      var handleCloseGameIframe = function handleCloseGameIframe() {
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC2 = loadConfigAsync.getConfig(), LOBBY_SCENE_NAME = _loadConfigAsync$getC2.LOBBY_SCENE_NAME, LOGIN_IFRAME = _loadConfigAsync$getC2.LOGIN_IFRAME, IS_PRODUCTION = _loadConfigAsync$getC2.IS_PRODUCTION;
        var isBackLobbyClient = handleBackLobbyNativeClient();
        if (isBackLobbyClient) return;
        if (!LOGIN_IFRAME) {
          IS_PRODUCTION || setDeviceOrientation(false);
          updateUtilConfig("CURRENCY_CONFIG", null);
          cc.director.preloadScene(LOBBY_SCENE_NAME, function() {
            cc.director.loadScene(LOBBY_SCENE_NAME);
          });
          return;
        }
        var returnUrl = getUrlParam("ru");
        returnUrl && LOGIN_IFRAME ? "close" === returnUrl.trim() ? window.close() : window.location.href = returnUrl : location.reload();
      };
      var handleFlowOutGame = function handleFlowOutGame() {
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC3 = loadConfigAsync.getConfig(), LOBBY_SCENE_NAME = _loadConfigAsync$getC3.LOBBY_SCENE_NAME, LOGIN_IFRAME = _loadConfigAsync$getC3.LOGIN_IFRAME, IS_PRODUCTION = _loadConfigAsync$getC3.IS_PRODUCTION;
        var isBackLobbyClient = handleBackLobbyNativeClient();
        if (isBackLobbyClient) return;
        if (LOGIN_IFRAME) window && window.location && window.location.reload(); else {
          IS_PRODUCTION || setDeviceOrientation(false);
          cc.director.preloadScene(LOBBY_SCENE_NAME, function() {
            cc.director.loadScene(LOBBY_SCENE_NAME);
          });
        }
      };
      var handleBackLogin = function handleBackLogin() {
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC4 = loadConfigAsync.getConfig(), LOGIN_IFRAME = _loadConfigAsync$getC4.LOGIN_IFRAME, LOBBY_SCENE_NAME = _loadConfigAsync$getC4.LOBBY_SCENE_NAME, IS_PRODUCTION = _loadConfigAsync$getC4.IS_PRODUCTION, LOGIN_SCENE_NAME = _loadConfigAsync$getC4.LOGIN_SCENE_NAME;
        var isBackLobbyClient = handleBackLobbyNativeClient();
        if (isBackLobbyClient) return;
        if (LOGIN_IFRAME) window && window.location && window.location.reload(); else if (IS_PRODUCTION) cc.director.preloadScene(LOBBY_SCENE_NAME, function() {
          cc.director.loadScene(LOBBY_SCENE_NAME);
        }); else {
          var nodePersist = cc.director.getScene().getChildByName("OverlayPersistent");
          nodePersist && cc.game.removePersistRootNode(nodePersist);
          setDeviceOrientation(false);
          cc.director.preloadScene(LOGIN_SCENE_NAME, function() {
            cc.director.loadScene(LOGIN_SCENE_NAME);
          });
        }
      };
      var getMessageSlot = function getMessageSlot() {
        var mess = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
        var i18n = require("LanguageData");
        return i18n.getMessageSlot(mess) || {};
      };
      var getBetValueWithGame = function getBetValueWithGame(gameId) {
        var listBet = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
        if (!gameId) return "";
        var betValue = cc.sys.localStorage.getItem("betValueWithGame");
        if (lodash.isEmpty(betValue)) {
          var newObj = {};
          newObj[gameId] = "";
          cc.sys.localStorage.setItem("betValueWithGame", JSON.stringify(newObj));
        } else {
          betValue = JSON.parse(betValue);
          if (lodash.isEmpty(listBet)) return betValue[gameId];
          if (lodash.isArray(listBet) && listBet.includes(betValue[gameId])) return betValue[gameId];
          var isExist = false;
          Object.keys(listBet).map(function(betId) {
            listBet[betId] === betValue[gameId] && (isExist = true);
          });
          if (isExist) return betValue[gameId];
        }
        return "";
      };
      var setBetValueWithGame = function setBetValueWithGame(gameId, betId) {
        var betValue = cc.sys.localStorage.getItem("betValueWithGame");
        if (lodash.isEmpty(betValue)) {
          var newObj = {};
          newObj[gameId] = betId;
          cc.sys.localStorage.setItem("betValueWithGame", JSON.stringify(newObj));
        } else {
          betValue = JSON.parse(betValue);
          betValue[gameId] = betId;
          cc.sys.localStorage.setItem("betValueWithGame", JSON.stringify(betValue));
        }
      };
      var getKeyWithGame = function getKeyWithGame(gameId, key) {
        var value = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
        if (!gameId || !key) return "";
        var betLinesValue = cc.sys.localStorage.getItem(key);
        if (!lodash.isEmpty(betLinesValue)) {
          betLinesValue = JSON.parse(betLinesValue);
          return betLinesValue[gameId] ? betLinesValue[gameId] : value;
        }
        var newObj = {};
        newObj[gameId] = value;
        cc.sys.localStorage.setItem(key, JSON.stringify(newObj));
        return value;
      };
      var setKeyWithGame = function setKeyWithGame(gameId, key) {
        var value = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
        if (!gameId || !key) return "";
        var betLinesValue = cc.sys.localStorage.getItem(key);
        if (lodash.isEmpty(betLinesValue)) {
          var newObj = {};
          newObj[gameId] = value;
          cc.sys.localStorage.setItem(key, JSON.stringify(newObj));
        } else {
          betLinesValue = JSON.parse(betLinesValue);
          betLinesValue[gameId] = value;
          cc.sys.localStorage.setItem(key, JSON.stringify(betLinesValue));
        }
      };
      var optimizeScrollView = function optimizeScrollView(listView) {
        var view = listView.parent;
        var viewRect = cc.rect(-view.width / 2, -listView.y - view.height, view.width, view.height);
        for (var i = 0; i < listView.children.length; i++) {
          var node = listView.children[i];
          viewRect.intersects(node.getBoundingBox()) ? node.opacity = 255 : node.opacity = 0;
        }
      };
      return {
        checkConditionCloseGameIframe: checkConditionCloseGameIframe,
        handleCloseGameIframe: handleCloseGameIframe,
        setBetValueWithGame: setBetValueWithGame,
        getBetValueWithGame: getBetValueWithGame,
        handleBackLogin: handleBackLogin,
        handleFlowOutGame: handleFlowOutGame,
        getMessageSlot: getMessageSlot,
        getUrlParam: getUrlParam,
        optimizeScrollView: optimizeScrollView,
        getKeyWithGame: getKeyWithGame,
        setKeyWithGame: setKeyWithGame,
        addUrlParam: addUrlParam
      };
    }
    module.exports = new gameCommonUtils();
    cc._RF.pop();
  }, {
    LanguageData: void 0,
    globalNetwork: "globalNetwork",
    loadConfigAsync: "loadConfigAsync",
    lodash: 157,
    utils: "utils"
  } ],
  gameResize: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f0052T/CM9DPJPxa6ChdZNV", "gameResize");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaUtils_1 = require("./cc-arcade-base/Scripts/Utilities/gaUtils");
    var CanvasScaleByOrientation = require("CanvasScaleByOrientation");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var GameResize = function(_super) {
      __extends(GameResize, _super);
      function GameResize() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.canvas = null;
        return _this;
      }
      GameResize.prototype.start = function() {
        this.onGameShow();
      };
      GameResize.prototype.update = function(dt) {
        this._visibleSize.equals(cc.view.getVisibleSize()) || this.scaleCanvasByOrientation();
      };
      GameResize.prototype.onGameShow = function() {
        if (cc.sys.isMobile) {
          var eventResize = new Event("gameShow");
          window.dispatchEvent(eventResize);
        }
      };
      GameResize.prototype.scaleCanvasByOrientation = function() {
        _super.prototype.scaleCanvasByOrientation.call(this);
        var designSize = {
          width: 1280,
          height: 720,
          maxWidth: 1280
        };
        var visibleSize = {
          width: 1280,
          height: 720
        };
        this._visibleSize = cc.view.getVisibleSize();
        var designRatio = designSize.width / designSize.height;
        var maxRatio = designSize.maxWidth / designSize.height;
        var viewPortRatio = this._visibleSize.width / this._visibleSize.height;
        var scale = gaUtils_1.default.clamp(viewPortRatio, designRatio, maxRatio);
        if (this.canvas.fitWidth) {
          visibleSize.width = designSize.width;
          visibleSize.height = designSize.width / scale;
        } else {
          visibleSize.width = designSize.height * scale;
          visibleSize.height = designSize.height;
        }
        this.node.width = visibleSize.width;
        this.node.height = visibleSize.height;
      };
      __decorate([ property(cc.Canvas) ], GameResize.prototype, "canvas", void 0);
      GameResize = __decorate([ ccclass ], GameResize);
      return GameResize;
    }(CanvasScaleByOrientation);
    exports.default = GameResize;
    cc._RF.pop();
  }, {
    "./cc-arcade-base/Scripts/Utilities/gaUtils": "gaUtils",
    CanvasScaleByOrientation: "CanvasScaleByOrientation"
  } ],
  globalAnimationLibrary: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "59f07eK2q5E9o8QC+2nQTvq", "globalAnimationLibrary");
    "use strict";
    var tweenLooping = function tweenLooping(target, param) {
      var startActionListArr = [];
      var endActionListArr = [];
      var sequenceActionArr = [];
      var actionArr = [];
      var dur = void 0 == param.dur ? .5 : param.dur;
      var easing = void 0 == param.easing ? cc.easeSineInOut() : param.easing;
      if (void 0 !== param.opacity) {
        startActionListArr.push(cc.fadeTo(dur, param.opacity.to).easing(easing));
        endActionListArr.push(cc.fadeTo(dur, param.opacity.from).easing(easing));
      }
      if (void 0 !== param.scale) {
        startActionListArr.push(cc.scaleTo(dur, param.scale.to).easing(easing));
        endActionListArr.push(cc.scaleTo(dur, param.scale.from).easing(easing));
      }
      startActionListArr.length >= 2 ? actionArr[0] = cc.spawn(startActionListArr) : startActionListArr.length >= 1 && (actionArr[0] = startActionListArr[0]);
      endActionListArr.length >= 2 ? actionArr[1] = cc.spawn(endActionListArr) : endActionListArr.length >= 1 && (actionArr[1] = endActionListArr[0]);
      if (actionArr.length > 0) {
        var sequenceFading = cc.sequence(actionArr[0], actionArr[1]).repeatForever();
        sequenceActionArr.push(sequenceFading);
      }
      var sequenceLooping = cc.sequence(new cc.DelayTime(1e-5), new cc.CallFunc(function() {
        void 0 != param.rota && (target.angle += param.rota);
        void 0 != param.randomSC && (target.scaleX = target.scaleY = target.initSC + (Math.random() - Math.random()) * param.randomSC);
      })).repeatForever();
      sequenceActionArr.push(sequenceLooping);
      for (var i = 0; i < sequenceActionArr.length; i++) target.runAction(sequenceActionArr[i]);
    };
    var tweenVolume = function tweenVolume(interval, soundID, volume, dur, callback) {
      var curVolume = cc.audioEngine.getVolume(soundID);
      clearInterval(interval);
      var BGInterval = setInterval(function() {
        curVolume += (volume - curVolume) / (100 * dur);
        checkToEndTween(curVolume, volume);
        cc.audioEngine.setVolume(soundID, curVolume);
      }, .6);
      var checkToEndTween = function checkToEndTween(curValue, endValue) {
        var checkValue = Math.floor(Math.abs(curValue - (endValue + .001)));
        if (checkValue <= .1) {
          curValue = endValue;
          clearInterval(BGInterval);
          callback && "function" === typeof callback && callback();
        }
      };
      return BGInterval;
    };
    var tweenSizeOfObject = function tweenSizeOfObject(object, param, callback) {
      var curW = object.width;
      var curH = object.height;
      var finalWidth = param.width;
      var finalHeight = param.height;
      var dur = void 0 != param.dur ? 100 * param.dur : 50;
      var delay = void 0 != param.delay ? param.delay : 0;
      clearInterval(object.interval);
      object.stopAllActions();
      object.runAction(cc.sequence(cc.delayTime(delay), cc.callFunc(function() {
        enterframe();
      })));
      var enterframe = function enterframe() {
        object.interval = setInterval(function() {
          if (void 0 != finalWidth) {
            curW += (finalWidth - curW) / dur;
            object.width = curW;
            checkToEndTween(curW, finalWidth);
          }
          if (void 0 != finalHeight) {
            curH += (finalHeight - curH) / dur;
            object.height = curH;
            checkToEndTween(curH, finalHeight);
          }
        }, .6);
      };
      var checkToEndTween = function checkToEndTween(curValue, endValue) {
        var checkValue = Math.floor(Math.abs(curValue - (endValue + .001)));
        if (checkValue <= .1) {
          curValue = endValue;
          clearInterval(object.interval);
          callback && "function" === typeof callback && callback();
        }
      };
    };
    var tweenObject = function tweenObject(target, param) {
      var delay = void 0 == param.delay ? 0 : param.delay;
      var dur = void 0 == param.dur ? .5 : param.dur;
      var easing = void 0 == param.easing ? cc.easeSineOut() : param.easing;
      var actionListArr = [];
      var action = null;
      var dx = void 0 == param.dx ? target.x : param.dx;
      var dy = void 0 == param.dy ? target.y : param.dy;
      void 0 === param.dx && void 0 === param.dy || actionListArr.push(cc.moveTo(dur, cc.v2(dx, dy)).easing(easing));
      void 0 !== param.scale && actionListArr.push(cc.scaleTo(dur, param.scale).easing(easing));
      void 0 !== param.scaleX && actionListArr.push(cc.scaleTo(dur, param.scaleX, target.scaleY).easing(easing));
      void 0 !== param.scaleY && actionListArr.push(cc.scaleTo(dur, target.scaleX, param.scaleY).easing(easing));
      void 0 !== param.skew && actionListArr.push(cc.skewTo(dur, param.skew, param.skew).easing(easing));
      void 0 !== param.rotate && actionListArr.push(cc.rotateTo(dur, param.rotate).easing(easing));
      void 0 !== param.opacity && actionListArr.push(cc.fadeTo(dur, param.opacity).easing(easing));
      action = actionListArr.length >= 2 ? cc.spawn(actionListArr) : actionListArr[0];
      var delayTime = cc.delayTime(delay);
      var callFunc = cc.callFunc(function() {
        param.callback && "function" === typeof param.callback && param.callback();
      });
      var sequenceAction = cc.sequence(delayTime, action, callFunc);
      target.runAction(sequenceAction);
    };
    var showScoreOnScreen = function showScoreOnScreen(parentNode, scoreNodePrefab, param) {
      var scoreNode = cc.instantiate(scoreNodePrefab);
      var delay = void 0 !== param.delay ? param.delay : 0;
      var dur = void 0 !== param.dur ? param.dur : .5;
      var limitedX = void 0 !== param.limitedX ? param.limitedX : 100;
      var limitedY = void 0 !== param.limitedY ? param.limitedY : 300;
      var maxSC = void 0 !== param.maxSC ? param.maxSC : scoreNode.scale + 1;
      var endSC = void 0 !== param.endSC ? param.endSC : scoreNode.scale / 2;
      var startX = param.startX;
      var startY = param.startY;
      var endX = param.endX;
      var endY = param.endY;
      var midX = startX + (endX - startX) / 3;
      var midY = startY - (endY - startY) / 3;
      midX > startX + limitedX && (midX = startX + limitedX);
      midY > startY + limitedY && (midY = startY + limitedY);
      scoreNode.getChildByName("score").getComponent(cc.Label).string = param.score;
      scoreNode.x = startX;
      scoreNode.y = startY;
      scoreNode.parent = parentNode;
      tweenObject(scoreNode, {
        dur: dur / 4,
        delay: delay,
        dx: midX,
        dy: midY,
        scale: maxSC,
        easing: new cc.easeSineOut(),
        callback: function callback() {
          tweenObject(scoreNode, {
            dur: dur,
            delay: .2,
            dx: endX,
            dy: endY,
            scale: endSC,
            easing: new cc.easeSineInOut()
          });
          tweenObject(scoreNode, {
            dur: dur,
            delay: dur / 1.5,
            opacity: 0,
            easing: new cc.easeSineInOut(),
            callback: function callback() {
              scoreNode.destroy();
              param.callback && "function" === typeof param.callback && param.callback();
            }
          });
        }
      });
    };
    var tweenVolumeV2 = function tweenVolumeV2(node) {
      return function(lastAction, soundId, volume, dur, callback) {
        lastAction && node.stopAction(lastAction);
        var currentVolume = cc.audioEngine.getVolume(soundId);
        var interval = 100;
        var repeatTimes = Math.floor(1e3 * dur / interval);
        var volumeDelta = (volume - currentVolume) / repeatTimes;
        var updateVolume = cc.sequence(cc.callFunc(function() {
          currentVolume += volumeDelta;
          cc.audioEngine.setVolume(soundId, currentVolume);
        }), cc.delayTime(interval / 1e3));
        var action = cc.sequence(cc.repeat(updateVolume, repeatTimes - 1), cc.callFunc(function() {
          cc.audioEngine.setVolume(soundId, volume);
          callback && "function" === typeof callback && callback();
        }));
        node.runAction(action);
        return action;
      };
    };
    var reverseEasing = function reverseEasing(easing) {
      return function(t) {
        return 1 - easing(1 - t);
      };
    };
    module.exports = {
      tweenLooping: tweenLooping,
      tweenVolume: tweenVolume,
      tweenObject: tweenObject,
      tweenSizeOfObject: tweenSizeOfObject,
      showScoreOnScreen: showScoreOnScreen,
      tweenVolumeV2: tweenVolumeV2,
      reverseEasing: reverseEasing
    };
    cc._RF.pop();
  }, {} ],
  globalMiniGameState: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c787b8ujWtCZIxgWGosDrR8", "globalMiniGameState");
    "use strict";
    function globalMiniGameState() {
      var _this = this;
      this.gameState = {
        5999: {
          isOpen: false,
          isMinimized: false,
          data: {}
        }
      };
      var updateDataForGame = function updateDataForGame(gameId, data) {
        Object.keys(data).map(function(key) {
          _this.gameState[gameId].data[key] = data[key];
        });
      };
      var updateOpenGame = function updateOpenGame(gameId, isOpen) {
        _this.gameState[gameId].isOpen = isOpen;
      };
      var updateMinimizeGame = function updateMinimizeGame(gameId, isMinimized) {
        _this.gameState[gameId].isMinimized = isMinimized;
      };
      var getListGameState = function getListGameState() {
        return _this.gameState;
      };
      return {
        updateDataForGame: updateDataForGame,
        updateMinimizeGame: updateMinimizeGame,
        updateOpenGame: updateOpenGame,
        getListGameState: getListGameState
      };
    }
    module.exports = new globalMiniGameState();
    cc._RF.pop();
  }, {} ],
  globalNetworkV3: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "9842erIB6dNrp19BS5Tjira", "globalNetworkV3");
    "use strict";
    var gameNetwork = window.GameNetwork || require("game-network");
    var MessageManager = gameNetwork.MessageManager;
    var messageManager = MessageManager.getInstance();
    var ServiceRest = gameNetwork.ServiceRest;
    var serviceRest = ServiceRest.getInstance("cc");
    var logger = gameNetwork.lib.logger;
    function globalNetworkV3() {
      var _this = this;
      this.gamesData = {};
      this.token = null;
      this.init = function(token) {
        var envId = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "portal";
        var gameIdSocket = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "all";
        cc.log("Network using V3");
        _this.token = token;
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC = loadConfigAsync.getConfig(), SOCKET_URL = _loadConfigAsync$getC.SOCKET_URL, API_URL = _loadConfigAsync$getC.API_URL;
        var deviceInfo = {
          os: cc.sys.os,
          osVersion: cc.sys.osVersion,
          platform: cc.sys.platform,
          browser: cc.sys.browserType,
          browserVersion: cc.sys.browserVersion,
          language: cc.sys.language
        };
        logger.updateLogger(cc.log, cc.log, cc.warn);
        messageManager.initSocket({
          socketUrl: SOCKET_URL,
          token: token,
          apiUrl: API_URL,
          urlVerifyToken: "auth/token/login",
          games: gameIdSocket,
          env: envId,
          device: deviceInfo,
          serviceRest: serviceRest
        });
        loadConfigAsync.setUpSentry();
      };
      this.getToken = function() {
        return _this.token;
      };
      this.registerGame = function(gameData) {
        var gameId = gameData.gameId, isSlotGame = gameData.isSlotGame;
        var gameState = void 0;
        "undefined" !== typeof Sentry && Sentry.configureScope(function(scope) {
          scope.setExtra("gameId", gameId);
        });
        gameState = require(isSlotGame ? "gameStateSlot" : "gameState" + gameId);
        if (!gameState) return;
        return new gameState({
          gameData: gameData
        });
      };
      this.triggerUserLogout = function() {
        messageManager.closeAndCleanUp();
      };
      this.outGame = function() {};
    }
    module.exports = globalNetworkV3;
    cc._RF.pop();
  }, {
    "game-network": "game-network",
    gameStateSlot: void 0,
    loadConfigAsync: "loadConfigAsync"
  } ],
  globalNetwork: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "08a53PC/bNEkpAj9DlmQEy8", "globalNetwork");
    "use strict";
    var globalNetwork = require("globalNetworkV3");
    var network = new globalNetwork();
    module.exports = network;
    cc._RF.pop();
  }, {
    globalNetworkV3: "globalNetworkV3"
  } ],
  globalState: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "95123Wa+RZM4KRAOga26XVi", "globalState");
    "use strict";
    function globalState() {
      var _this = this;
      this.enableFirstSceneLoad = true;
      var getStatusFirstSceneLoad = function getStatusFirstSceneLoad() {
        return _this.enableFirstSceneLoad;
      };
      var setStatusFirstSceneLoad = function setStatusFirstSceneLoad(status) {
        _this.enableFirstSceneLoad = status;
      };
      return {
        getStatusFirstSceneLoad: getStatusFirstSceneLoad,
        setStatusFirstSceneLoad: setStatusFirstSceneLoad
      };
    }
    module.exports = new globalState();
    cc._RF.pop();
  }, {} ],
  hashKey: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "797a9cXHgBFWpfxNrLlQGZ6", "hashKey");
    "use strict";
    var CryptoJS = require("./crypto-core");
    var md5 = require("./md5");
    var sha1 = require("./sha1");
    var sha256 = require("./sha256");
    var sha224 = require("./sha224");
    var x64 = require("./x64-core");
    var sha512 = require("./sha512");
    var hash = function hash() {
      var cipherMethodKey = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
      var message = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
      if (!cipherMethodKey) return "";
      var upperCaseCipherMethodKey = cipherMethodKey.trim().toUpperCase();
      if (upperCaseCipherMethodKey.length < 3) return "";
      return CryptoJS[upperCaseCipherMethodKey](message).toString();
    };
    module.exports = {
      hash: hash
    };
    cc._RF.pop();
  }, {
    "./crypto-core": "crypto-core",
    "./md5": "md5",
    "./sha1": "sha1",
    "./sha224": "sha224",
    "./sha256": "sha256",
    "./sha512": "sha512",
    "./x64-core": "x64-core"
  } ],
  iTimeUpdate: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c8d45O59QVDJr30oMX001sa", "iTimeUpdate");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        speed: 1
      },
      start: function start() {
        var sprite = this.node.getComponent(cc.Sprite);
        sprite && (this.material = sprite.getMaterial(0));
        this.iTime = 0;
      },
      update: function update(dt) {
        if (!this.material) return;
        this.material.setProperty("iTime", this.iTime);
        this.iTime += this.speed * dt;
      }
    });
    cc._RF.pop();
  }, {} ],
  jsb_runtime_md5: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "402d0oSNW1Cz7dL3kf5rjPe", "jsb_runtime_md5");
    "use strict";
    module.exports = function(data) {
      function fflog(msg) {
        try {
          console.log(msg);
        } catch (e) {
          console.log(e);
        }
      }
      function to_zerofilled_hex(n) {
        var t1 = (n >>> 24).toString(16);
        var t2 = (16777215 & n).toString(16);
        return "00".substr(0, 2 - t1.length) + t1 + "000000".substr(0, 6 - t2.length) + t2;
      }
      function int64_to_bytes(num) {
        var retval = [];
        for (var i = 0; i < 8; i++) {
          retval.push(255 & num);
          num >>>= 8;
        }
        return retval;
      }
      function rol(num, places) {
        return num << places & 4294967295 | num >>> 32 - places;
      }
      function fF(b, c, d) {
        return b & c | ~b & d;
      }
      function fG(b, c, d) {
        return d & b | ~d & c;
      }
      function fH(b, c, d) {
        return b ^ c ^ d;
      }
      function fI(b, c, d) {
        return c ^ (b | ~d);
      }
      function bytes_to_int32(arr, off) {
        return arr[off + 3] << 24 | arr[off + 2] << 16 | arr[off + 1] << 8 | arr[off];
      }
      function int128le_to_hex() {
        var ra = "";
        var t = 0;
        var ta = 0;
        for (var i = 3; i >= 0; i--) {
          ta = arguments[i];
          t = 255 & ta;
          ta >>>= 8;
          t <<= 8;
          t |= 255 & ta;
          ta >>>= 8;
          t <<= 8;
          t |= 255 & ta;
          ta >>>= 8;
          t <<= 8;
          t |= ta;
          ra += to_zerofilled_hex(t);
        }
        return ra;
      }
      if (!data instanceof Uint8Array) {
        fflog("input data type mismatch only support Uint8Array");
        return null;
      }
      var databytes = [];
      for (var i = 0; i < data.byteLength; i++) databytes.push(data[i]);
      var org_len = databytes.length;
      databytes.push(128);
      var tail = databytes.length % 64;
      if (tail > 56) {
        for (var j = 0; j < 64 - tail; j++) databytes.push(0);
        tail = databytes.length % 64;
      }
      for (i = 0; i < 56 - tail; i++) databytes.push(0);
      databytes = databytes.concat(int64_to_bytes(8 * org_len));
      var h0 = 1732584193;
      var h1 = 4023233417;
      var h2 = 2562383102;
      var h3 = 271733878;
      var a = 0, b = 0, c = 0, d = 0;
      function _add(n1, n2) {
        return 4294967295 & n1 + n2;
      }
      var updateRun = function updateRun(nf, sin32, dw32, b32) {
        var temp = d;
        d = c;
        c = b;
        b = _add(b, rol(_add(a, _add(nf, _add(sin32, dw32))), b32));
        a = temp;
      };
      for (i = 0; i < databytes.length / 64; i++) {
        a = h0;
        b = h1;
        c = h2;
        d = h3;
        var ptr = 64 * i;
        updateRun(fF(b, c, d), 3614090360, bytes_to_int32(databytes, ptr), 7);
        updateRun(fF(b, c, d), 3905402710, bytes_to_int32(databytes, ptr + 4), 12);
        updateRun(fF(b, c, d), 606105819, bytes_to_int32(databytes, ptr + 8), 17);
        updateRun(fF(b, c, d), 3250441966, bytes_to_int32(databytes, ptr + 12), 22);
        updateRun(fF(b, c, d), 4118548399, bytes_to_int32(databytes, ptr + 16), 7);
        updateRun(fF(b, c, d), 1200080426, bytes_to_int32(databytes, ptr + 20), 12);
        updateRun(fF(b, c, d), 2821735955, bytes_to_int32(databytes, ptr + 24), 17);
        updateRun(fF(b, c, d), 4249261313, bytes_to_int32(databytes, ptr + 28), 22);
        updateRun(fF(b, c, d), 1770035416, bytes_to_int32(databytes, ptr + 32), 7);
        updateRun(fF(b, c, d), 2336552879, bytes_to_int32(databytes, ptr + 36), 12);
        updateRun(fF(b, c, d), 4294925233, bytes_to_int32(databytes, ptr + 40), 17);
        updateRun(fF(b, c, d), 2304563134, bytes_to_int32(databytes, ptr + 44), 22);
        updateRun(fF(b, c, d), 1804603682, bytes_to_int32(databytes, ptr + 48), 7);
        updateRun(fF(b, c, d), 4254626195, bytes_to_int32(databytes, ptr + 52), 12);
        updateRun(fF(b, c, d), 2792965006, bytes_to_int32(databytes, ptr + 56), 17);
        updateRun(fF(b, c, d), 1236535329, bytes_to_int32(databytes, ptr + 60), 22);
        updateRun(fG(b, c, d), 4129170786, bytes_to_int32(databytes, ptr + 4), 5);
        updateRun(fG(b, c, d), 3225465664, bytes_to_int32(databytes, ptr + 24), 9);
        updateRun(fG(b, c, d), 643717713, bytes_to_int32(databytes, ptr + 44), 14);
        updateRun(fG(b, c, d), 3921069994, bytes_to_int32(databytes, ptr), 20);
        updateRun(fG(b, c, d), 3593408605, bytes_to_int32(databytes, ptr + 20), 5);
        updateRun(fG(b, c, d), 38016083, bytes_to_int32(databytes, ptr + 40), 9);
        updateRun(fG(b, c, d), 3634488961, bytes_to_int32(databytes, ptr + 60), 14);
        updateRun(fG(b, c, d), 3889429448, bytes_to_int32(databytes, ptr + 16), 20);
        updateRun(fG(b, c, d), 568446438, bytes_to_int32(databytes, ptr + 36), 5);
        updateRun(fG(b, c, d), 3275163606, bytes_to_int32(databytes, ptr + 56), 9);
        updateRun(fG(b, c, d), 4107603335, bytes_to_int32(databytes, ptr + 12), 14);
        updateRun(fG(b, c, d), 1163531501, bytes_to_int32(databytes, ptr + 32), 20);
        updateRun(fG(b, c, d), 2850285829, bytes_to_int32(databytes, ptr + 52), 5);
        updateRun(fG(b, c, d), 4243563512, bytes_to_int32(databytes, ptr + 8), 9);
        updateRun(fG(b, c, d), 1735328473, bytes_to_int32(databytes, ptr + 28), 14);
        updateRun(fG(b, c, d), 2368359562, bytes_to_int32(databytes, ptr + 48), 20);
        updateRun(fH(b, c, d), 4294588738, bytes_to_int32(databytes, ptr + 20), 4);
        updateRun(fH(b, c, d), 2272392833, bytes_to_int32(databytes, ptr + 32), 11);
        updateRun(fH(b, c, d), 1839030562, bytes_to_int32(databytes, ptr + 44), 16);
        updateRun(fH(b, c, d), 4259657740, bytes_to_int32(databytes, ptr + 56), 23);
        updateRun(fH(b, c, d), 2763975236, bytes_to_int32(databytes, ptr + 4), 4);
        updateRun(fH(b, c, d), 1272893353, bytes_to_int32(databytes, ptr + 16), 11);
        updateRun(fH(b, c, d), 4139469664, bytes_to_int32(databytes, ptr + 28), 16);
        updateRun(fH(b, c, d), 3200236656, bytes_to_int32(databytes, ptr + 40), 23);
        updateRun(fH(b, c, d), 681279174, bytes_to_int32(databytes, ptr + 52), 4);
        updateRun(fH(b, c, d), 3936430074, bytes_to_int32(databytes, ptr), 11);
        updateRun(fH(b, c, d), 3572445317, bytes_to_int32(databytes, ptr + 12), 16);
        updateRun(fH(b, c, d), 76029189, bytes_to_int32(databytes, ptr + 24), 23);
        updateRun(fH(b, c, d), 3654602809, bytes_to_int32(databytes, ptr + 36), 4);
        updateRun(fH(b, c, d), 3873151461, bytes_to_int32(databytes, ptr + 48), 11);
        updateRun(fH(b, c, d), 530742520, bytes_to_int32(databytes, ptr + 60), 16);
        updateRun(fH(b, c, d), 3299628645, bytes_to_int32(databytes, ptr + 8), 23);
        updateRun(fI(b, c, d), 4096336452, bytes_to_int32(databytes, ptr), 6);
        updateRun(fI(b, c, d), 1126891415, bytes_to_int32(databytes, ptr + 28), 10);
        updateRun(fI(b, c, d), 2878612391, bytes_to_int32(databytes, ptr + 56), 15);
        updateRun(fI(b, c, d), 4237533241, bytes_to_int32(databytes, ptr + 20), 21);
        updateRun(fI(b, c, d), 1700485571, bytes_to_int32(databytes, ptr + 48), 6);
        updateRun(fI(b, c, d), 2399980690, bytes_to_int32(databytes, ptr + 12), 10);
        updateRun(fI(b, c, d), 4293915773, bytes_to_int32(databytes, ptr + 40), 15);
        updateRun(fI(b, c, d), 2240044497, bytes_to_int32(databytes, ptr + 4), 21);
        updateRun(fI(b, c, d), 1873313359, bytes_to_int32(databytes, ptr + 32), 6);
        updateRun(fI(b, c, d), 4264355552, bytes_to_int32(databytes, ptr + 60), 10);
        updateRun(fI(b, c, d), 2734768916, bytes_to_int32(databytes, ptr + 24), 15);
        updateRun(fI(b, c, d), 1309151649, bytes_to_int32(databytes, ptr + 52), 21);
        updateRun(fI(b, c, d), 4149444226, bytes_to_int32(databytes, ptr + 16), 6);
        updateRun(fI(b, c, d), 3174756917, bytes_to_int32(databytes, ptr + 44), 10);
        updateRun(fI(b, c, d), 718787259, bytes_to_int32(databytes, ptr + 8), 15);
        updateRun(fI(b, c, d), 3951481745, bytes_to_int32(databytes, ptr + 36), 21);
        h0 = _add(h0, a);
        h1 = _add(h1, b);
        h2 = _add(h2, c);
        h3 = _add(h3, d);
      }
      return int128le_to_hex(h3, h2, h1, h0).toLowerCase();
    };
    cc._RF.pop();
  }, {} ],
  layerController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "29790mAuc5JqoDIjCyTXbXj", "layerController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var data_1 = require("./data");
    var gaEventEmitter_1 = require("./cc-arcade-base/Scripts/Common/gaEventEmitter");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var LayerController = function(_super) {
      __extends(LayerController, _super);
      function LayerController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.layer = null;
        _this._positionSpawn = 960;
        _this.count = 1;
        _this.numberChildren = 7;
        return _this;
      }
      LayerController.prototype.onLoad = function() {};
      LayerController.prototype.start = function() {
        this._positionSpawn = 960;
        gaEventEmitter_1.default.instance.registerEvent("prepareDone", this.spawnLayer.bind(this));
      };
      LayerController.prototype.spawnLayer = function() {
        var time = Math.ceil(data_1.Data.instance.layerDistance[this.indexLayer] / this._positionSpawn);
        for (var i = 0; i < time; i++) {
          var layer = cc.instantiate(this.layer);
          layer.parent = this.node;
          var positionInstantiate = (this.numberChildren + this.count - 1) * layer.width;
          layer.x = positionInstantiate;
          this.count++;
          this.numberChildren > 10 && this.node.children[i].destroy();
        }
        data_1.Data.instance.layerDistance[this.indexLayer] = 0;
      };
      __decorate([ property(cc.Prefab) ], LayerController.prototype, "layer", void 0);
      __decorate([ property ], LayerController.prototype, "indexLayer", void 0);
      __decorate([ property ], LayerController.prototype, "_positionSpawn", void 0);
      LayerController = __decorate([ ccclass ], LayerController);
      return LayerController;
    }(cc.Component);
    exports.default = LayerController;
    cc._RF.pop();
  }, {
    "./cc-arcade-base/Scripts/Common/gaEventEmitter": "gaEventEmitter",
    "./data": "data"
  } ],
  lightEffect: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b3416cgFyxD0ZjFwj8d24pu", "lightEffect");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        speed: 1
      },
      start: function start() {
        var sprite = this.node.getComponent(cc.Sprite);
        if (sprite) this.material = sprite.getMaterial(0); else {
          var spine = this.node.getComponent(sp.Skeleton);
          spine && (this.material = spine.getMaterial(0));
        }
        this.iTime = 0;
        cc.tween(this).repeatForever(cc.tween().to(1 / this.speed, {
          iTime: .5
        }).delay(1 / this.speed).to(1 / this.speed, {
          iTime: 0
        }).delay(1 / this.speed * 1.5)).start();
      },
      update: function update() {
        if (!this.material) return;
        this.material.setProperty("iTime", this.iTime);
      }
    });
    cc._RF.pop();
  }, {} ],
  lightsweep: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "64931gnbCFO9bpZT+5FQrjp", "lightsweep");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        speed: 1
      },
      start: function start() {
        var sprite = this.node.getComponent(cc.Sprite);
        sprite && (this.material = sprite.getMaterial(0));
        this.iTime = 0;
      },
      update: function update(dt) {
        if (!this.material) return;
        this.material.setProperty("iTime", this.iTime);
        this.iTime += this.speed * dt;
      }
    });
    cc._RF.pop();
  }, {} ],
  loadConfigAsync: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "aed49QVHF1DsZkTyHIUzoLl", "loadConfigAsync");
    "use strict";
    var serviceRest = require("serviceRest");
    var lodash = require("lodash");
    var appConfig = require("appConfig");
    var XOCypher = require("XOCypher");
    var decryptData = function decryptData(data) {
      var keyEncrypt = "Kh\xf4ng Bi\u1ebft \u0110\u1eb7t T\xean G\xec";
      data.IS_DECODE && Object.keys(data).forEach(function(key) {
        if ("API_URL" === key || "SOCKET_URL" === key || key.indexOf("IPMaster") > -1) if (lodash.isArray(data[key])) for (var i = 0; i < data[key].length; i++) data[key][i] = XOCypher.decode(keyEncrypt, data[key][i]); else data[key] = XOCypher.decode(keyEncrypt, data[key]);
      });
      delete data.IS_DECODE;
      return data;
    };
    function loadConfigAsync() {
      var _this = this;
      this.dataUpdate = lodash.cloneDeep(appConfig);
      var isDebugMode = cc.sys.isBrowser && "localhost" === window.location.hostname;
      if (!this.dataUpdate.REMOTE_CONFIG_URL_FULL || cc.sys.isBrowser || isDebugMode) if (this.dataUpdate.REMOTE_CONFIG_URL_FULL && cc.sys.isBrowser && !isDebugMode) setTimeout(function() {
        serviceRest.getRawDataWeb({
          fullURL: _this.dataUpdate.REMOTE_CONFIG_URL_FULL,
          callback: handleDataSuccess.bind(_this),
          callbackErr: handleDataError.bind(_this)
        });
      }, 100); else if (this.dataUpdate.REMOTE_CONFIG_URL && cc.sys.isBrowser && !isDebugMode) if (window && window.dataConfigM) {
        this.dataUpdate = lodash.cloneDeep(window.dataConfigM);
        this.dataUpdate = decryptData(this.dataUpdate);
        this.dataUpdateProd = lodash.cloneDeep(this.dataUpdate);
        cc.sys.localStorage.setItem("appConfigLocalStore", JSON.stringify(this.dataUpdateProd));
        this.dataUpdate.IS_FINISHED_REMOTE = true;
      } else {
        var timeStampBuild = window.buildTime ? parseInt(window.buildTime) : new Date().getTime();
        setTimeout(function() {
          var domainName = "undefined" !== typeof globalDomainSupport ? globalDomainSupport : window.location.origin;
          serviceRest.get({
            apiUrl: domainName + _this.dataUpdate.REMOTE_CONFIG_URL,
            params: {
              t: timeStampBuild
            },
            url: "",
            callback: handleDataSuccess.bind(_this),
            callbackErr: handleDataError.bind(_this)
          });
        }, 100);
      } else {
        if (null != cc.sys.localStorage.getItem("enviroment")) try {
          if (cc.sys.localStorage.getItem("enviroment").indexOf("test") >= 0) {
            var appConfigDebug = require("appConfig-debug");
            if (appConfigDebug) {
              this.dataUpdate = lodash.cloneDeep(appConfigDebug);
              this.dataUpdate = decryptData(this.dataUpdate);
            } else {
              this.dataUpdate = lodash.cloneDeep(appConfig);
              this.dataUpdate = decryptData(this.dataUpdate);
            }
          } else {
            this.dataUpdate = lodash.cloneDeep(appConfig);
            this.dataUpdate = decryptData(this.dataUpdate);
          }
        } catch (e) {
          this.dataUpdate = lodash.cloneDeep(appConfig);
          this.dataUpdate = decryptData(this.dataUpdate);
        } else {
          this.dataUpdate = lodash.cloneDeep(appConfig);
          this.dataUpdate = decryptData(this.dataUpdate);
        }
        this.dataUpdate.IS_FINISHED_REMOTE = true;
      } else setTimeout(function() {
        serviceRest.get({
          apiUrl: _this.dataUpdate.REMOTE_CONFIG_URL_FULL,
          url: "",
          callback: handleDataSuccess.bind(_this),
          callbackErr: handleDataError.bind(_this)
        });
      }, 100);
      var handleDataSuccess = function handleDataSuccess(data) {
        _this.dataUpdate = lodash.cloneDeep(data);
        _this.dataUpdate = decryptData(_this.dataUpdate);
        _this.dataUpdateProd = lodash.cloneDeep(_this.dataUpdate);
        cc.sys.localStorage.setItem("appConfigLocalStore", JSON.stringify(_this.dataUpdateProd));
        _this.dataUpdate.IS_FINISHED_REMOTE = true;
      };
      var handleDataError = function handleDataError() {
        var appConfigLocal = cc.sys.localStorage.getItem("appConfigLocalStore");
        if (appConfigLocal) {
          appConfigLocal = JSON.parse(appConfigLocal);
          _this.dataUpdate = lodash.cloneDeep(appConfigLocal);
        } else _this.dataUpdate = lodash.cloneDeep(appConfig);
        _this.dataUpdate = decryptData(_this.dataUpdate);
        _this.dataUpdateProd = lodash.cloneDeep(_this.dataUpdate);
        _this.dataUpdate.IS_FINISHED_REMOTE = true;
      };
      var getConfig = function getConfig() {
        _this.dataUpdate.TOKEN = _this.TOKEN;
        return _this.dataUpdate;
      };
      var switchEnv = function switchEnv(isProd) {
        if (isProd) {
          var _appConfig = require("appConfig");
          _this.dataUpdateProd ? _this.dataUpdate = lodash.cloneDeep(_this.dataUpdateProd) : _this.dataUpdate = lodash.cloneDeep(_appConfig);
          _this.dataUpdate = decryptData(_this.dataUpdate);
          _this.dataUpdate.IS_FINISHED_REMOTE = true;
        } else {
          var _appConfigDebug = require("appConfig-debug");
          _this.dataUpdate = lodash.cloneDeep(_appConfigDebug);
          _this.dataUpdate = decryptData(_this.dataUpdate);
          _this.dataUpdate.IS_FINISHED_REMOTE = true;
        }
      };
      var setUpSentry = function setUpSentry() {
        var _dataUpdate = _this.dataUpdate, IS_PRODUCTION = _dataUpdate.IS_PRODUCTION, IS_SHOW_STATS = _dataUpdate.IS_SHOW_STATS;
        if ("undefined" !== typeof Sentry) if (IS_PRODUCTION) Sentry.init({
          dsn: "https://32ab507534bc4befbd5e1b20e223c93d@sentry.io/1780011"
        }); else {
          IS_SHOW_STATS && cc.debug.setDisplayStats(true);
          Sentry.init({
            dsn: "https://b034a1c4d32e42af90071e62d2bf3290@sentry.io/2655786"
          });
        }
      };
      var setToken = function setToken(token) {
        _this.TOKEN = token;
      };
      return {
        setToken: setToken,
        setUpSentry: setUpSentry,
        switchEnv: switchEnv,
        getConfig: getConfig
      };
    }
    module.exports = new loadConfigAsync();
    cc._RF.pop();
  }, {
    XOCypher: "XOCypher",
    appConfig: "appConfig",
    "appConfig-debug": void 0,
    lodash: 157,
    serviceRest: "serviceRest"
  } ],
  loadingController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "fa941+gtHpLyav1/tKLU0Uh", "loadingController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var LoadingController = function(_super) {
      __extends(LoadingController, _super);
      function LoadingController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.loadingBar = null;
        _this.loadingController = null;
        _this.mainScene = null;
        return _this;
      }
      LoadingController.prototype.start = function() {
        this.loadingBar.progress = 0;
        this.preloadMainScene();
      };
      LoadingController.prototype.preloadMainScene = function() {
        var _this = this;
        cc.director.preloadScene("MainScene", function(completedCount, totalCount, item) {
          var progress = completedCount / totalCount;
          _this.loadingBar.progress = progress;
        }, function(error) {
          error ? console.error(error) : _this.loadMainScreen();
        });
      };
      LoadingController.prototype.loadMainScreen = function() {
        var _this = this;
        cc.game.addPersistRootNode(this.node);
        cc.director.loadScene("MainScene", function(err, scene) {
          cc.game.removePersistRootNode(_this.node);
          if (err) return;
          var canvas = scene.getChildByName("Canvas");
          var mainRoot = canvas.getChildByName("root");
          mainRoot.setParent(_this.mainScene);
          _this.loadingController.active = false;
          _this.loadingController.destroy();
          canvas.destroy();
          _this.destroy();
        });
      };
      __decorate([ property(cc.ProgressBar) ], LoadingController.prototype, "loadingBar", void 0);
      __decorate([ property(cc.Node) ], LoadingController.prototype, "loadingController", void 0);
      __decorate([ property(cc.Node) ], LoadingController.prototype, "mainScene", void 0);
      LoadingController = __decorate([ ccclass ], LoadingController);
      return LoadingController;
    }(cc.Component);
    exports.default = LoadingController;
    cc._RF.pop();
  }, {} ],
  mEmiter: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "570c2od/FNMfInesttRUZyA", "mEmiter");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaEventEmitter_1 = require("./cc-arcade-base/Scripts/Common/gaEventEmitter");
    var ccclass = cc._decorator.ccclass;
    var mEmiter = function(_super) {
      __extends(mEmiter, _super);
      function mEmiter() {
        return null !== _super && _super.apply(this, arguments) || this;
      }
      mEmiter.prototype.onLoad = function() {
        null == gaEventEmitter_1.default.instance && (gaEventEmitter_1.default.instance = new gaEventEmitter_1.default());
      };
      mEmiter = __decorate([ ccclass ], mEmiter);
      return mEmiter;
    }(cc.Component);
    exports.default = mEmiter;
    cc._RF.pop();
  }, {
    "./cc-arcade-base/Scripts/Common/gaEventEmitter": "gaEventEmitter"
  } ],
  mainController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "00057osbu1NmoeoWAC9IhUq", "mainController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var gaEventEmitter_1 = require("./cc-arcade-base/Scripts/Common/gaEventEmitter");
    var data_1 = require("./data");
    var betStateManager_1 = require("./betStateManager");
    var network_1 = require("./network");
    var sendMessage_1 = require("./sendMessage");
    var MainController = function(_super) {
      __extends(MainController, _super);
      function MainController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.oddsItemPrefab = null;
        _this.betBackgroundPools = [];
        _this.betPools = [];
        _this.ui = null;
        _this.racingController = null;
        _this.isAutoBet = false;
        return _this;
      }
      MainController.prototype.onLoad = function() {
        var _this = this;
        data_1.Data.instance = new data_1.Data();
        data_1.ccData.instance = new data_1.ccData();
        gaEventEmitter_1.default.instance.registerEvent("racingDone", this.racingDone.bind(this));
        gaEventEmitter_1.default.instance.registerEvent("prepareDone", function() {
          _this.isAutoBet && _this.racing();
        });
      };
      MainController.prototype.start = function() {
        this.betStateManager = new betStateManager_1.default();
        this.sendMessage = new sendMessage_1.default();
        this.network = new network_1.default();
        this.uiManager = this.ui.getComponent("uiManager");
        this.uiManager.activeBettingArea(true);
        this.racingController.active = true;
        this.login();
      };
      MainController.prototype.login = function() {
        var _this = this;
        this.network.login(function() {
          _this.uiManager.loginFailed();
        });
      };
      MainController.prototype.joinGame = function() {
        var _this = this;
        this.uiManager.loginSuccess();
        this.ui.active = false;
        this.scheduleOnce(function() {
          _this.sendMessage.joinGame(function(response) {
            _this.data = response;
            var ed = response.data.exD.ed;
            data_1.Data.instance.setGameNumber(ed.substr(ed.indexOf(":") + 1, 7));
            _this.instantiateBetState();
            _this.racingController.active = true;
          });
        }, 2);
      };
      MainController.prototype.getODDs = function() {
        this.oddsData = this.betStateManager.getODDs(this.data);
        this.uiManager.setLabelPopup(this.oddsData);
      };
      MainController.prototype.instantiateBetState = function() {
        this.ui.active = true;
        this.uiManager.closePopup();
        this.oddsData = this.oddsData ? this.oddsData : this.betStateManager.getODDs(this.data);
        this.betStateManager.instantiateBet(this.oddsData, this.oddsItemPrefab, this.betPools, this.betBackgroundPools);
      };
      MainController.prototype.bet = function() {
        this.racing();
      };
      MainController.prototype.reJoinGame = function() {
        var _this = this;
        this.sendMessage.joinGame(function(response) {
          _this.data = response;
          var ed = response.data.exD.ed;
          data_1.Data.instance.setGameNumber(ed.substr(ed.indexOf(":") + 1, 7));
        });
      };
      MainController.prototype.racing = function() {
        this.uiManager.activeBettingArea(false);
        this.uiManager.scrollUI(-850);
        this.racingController.active = true;
        this.racingController.getComponent("racingController").racing();
      };
      MainController.prototype.racingDone = function() {
        var _this = this;
        this.uiManager.openPopup();
        this.uiManager.setLabelPopup(this.betStateManager.showResult());
        this.scheduleOnce(function() {
          _this.uiManager.closePopup();
          _this.uiManager.scrollUI(850);
          gaEventEmitter_1.default.instance.emit("prepareNextRound");
          _this.uiManager.activeBettingArea(true);
        }, 2);
      };
      MainController.prototype.autoBet = function() {
        this.isAutoBet = true;
        this.racing();
      };
      MainController.prototype.unAutoBet = function() {
        this.isAutoBet = false;
      };
      __decorate([ property(cc.Prefab) ], MainController.prototype, "oddsItemPrefab", void 0);
      __decorate([ property(cc.Node) ], MainController.prototype, "betBackgroundPools", void 0);
      __decorate([ property(cc.Node) ], MainController.prototype, "betPools", void 0);
      __decorate([ property(cc.Node) ], MainController.prototype, "ui", void 0);
      __decorate([ property(cc.Node) ], MainController.prototype, "racingController", void 0);
      MainController = __decorate([ ccclass ], MainController);
      return MainController;
    }(cc.Component);
    exports.default = MainController;
    cc._RF.pop();
  }, {
    "./betStateManager": "betStateManager",
    "./cc-arcade-base/Scripts/Common/gaEventEmitter": "gaEventEmitter",
    "./data": "data",
    "./network": "network",
    "./sendMessage": "sendMessage"
  } ],
  md5: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "b356992TwJNJbvxprBcipgk", "md5");
    "use strict";
    var CryptoJS = require("./crypto-core");
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;
    var T = [];
    (function() {
      for (var i = 0; i < 64; i++) T[i] = 4294967296 * Math.abs(Math.sin(i + 1)) | 0;
    })();
    var MD5 = C_algo.MD5 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([ 1732584193, 4023233417, 2562383102, 271733878 ]);
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        for (var i = 0; i < 16; i++) {
          var offset_i = offset + i;
          var M_offset_i = M[offset_i];
          M[offset_i] = 16711935 & (M_offset_i << 8 | M_offset_i >>> 24) | 4278255360 & (M_offset_i << 24 | M_offset_i >>> 8);
        }
        var H = this._hash.words;
        var M_offset_0 = M[offset + 0];
        var M_offset_1 = M[offset + 1];
        var M_offset_2 = M[offset + 2];
        var M_offset_3 = M[offset + 3];
        var M_offset_4 = M[offset + 4];
        var M_offset_5 = M[offset + 5];
        var M_offset_6 = M[offset + 6];
        var M_offset_7 = M[offset + 7];
        var M_offset_8 = M[offset + 8];
        var M_offset_9 = M[offset + 9];
        var M_offset_10 = M[offset + 10];
        var M_offset_11 = M[offset + 11];
        var M_offset_12 = M[offset + 12];
        var M_offset_13 = M[offset + 13];
        var M_offset_14 = M[offset + 14];
        var M_offset_15 = M[offset + 15];
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        a = FF(a, b, c, d, M_offset_0, 7, T[0]);
        d = FF(d, a, b, c, M_offset_1, 12, T[1]);
        c = FF(c, d, a, b, M_offset_2, 17, T[2]);
        b = FF(b, c, d, a, M_offset_3, 22, T[3]);
        a = FF(a, b, c, d, M_offset_4, 7, T[4]);
        d = FF(d, a, b, c, M_offset_5, 12, T[5]);
        c = FF(c, d, a, b, M_offset_6, 17, T[6]);
        b = FF(b, c, d, a, M_offset_7, 22, T[7]);
        a = FF(a, b, c, d, M_offset_8, 7, T[8]);
        d = FF(d, a, b, c, M_offset_9, 12, T[9]);
        c = FF(c, d, a, b, M_offset_10, 17, T[10]);
        b = FF(b, c, d, a, M_offset_11, 22, T[11]);
        a = FF(a, b, c, d, M_offset_12, 7, T[12]);
        d = FF(d, a, b, c, M_offset_13, 12, T[13]);
        c = FF(c, d, a, b, M_offset_14, 17, T[14]);
        b = FF(b, c, d, a, M_offset_15, 22, T[15]);
        a = GG(a, b, c, d, M_offset_1, 5, T[16]);
        d = GG(d, a, b, c, M_offset_6, 9, T[17]);
        c = GG(c, d, a, b, M_offset_11, 14, T[18]);
        b = GG(b, c, d, a, M_offset_0, 20, T[19]);
        a = GG(a, b, c, d, M_offset_5, 5, T[20]);
        d = GG(d, a, b, c, M_offset_10, 9, T[21]);
        c = GG(c, d, a, b, M_offset_15, 14, T[22]);
        b = GG(b, c, d, a, M_offset_4, 20, T[23]);
        a = GG(a, b, c, d, M_offset_9, 5, T[24]);
        d = GG(d, a, b, c, M_offset_14, 9, T[25]);
        c = GG(c, d, a, b, M_offset_3, 14, T[26]);
        b = GG(b, c, d, a, M_offset_8, 20, T[27]);
        a = GG(a, b, c, d, M_offset_13, 5, T[28]);
        d = GG(d, a, b, c, M_offset_2, 9, T[29]);
        c = GG(c, d, a, b, M_offset_7, 14, T[30]);
        b = GG(b, c, d, a, M_offset_12, 20, T[31]);
        a = HH(a, b, c, d, M_offset_5, 4, T[32]);
        d = HH(d, a, b, c, M_offset_8, 11, T[33]);
        c = HH(c, d, a, b, M_offset_11, 16, T[34]);
        b = HH(b, c, d, a, M_offset_14, 23, T[35]);
        a = HH(a, b, c, d, M_offset_1, 4, T[36]);
        d = HH(d, a, b, c, M_offset_4, 11, T[37]);
        c = HH(c, d, a, b, M_offset_7, 16, T[38]);
        b = HH(b, c, d, a, M_offset_10, 23, T[39]);
        a = HH(a, b, c, d, M_offset_13, 4, T[40]);
        d = HH(d, a, b, c, M_offset_0, 11, T[41]);
        c = HH(c, d, a, b, M_offset_3, 16, T[42]);
        b = HH(b, c, d, a, M_offset_6, 23, T[43]);
        a = HH(a, b, c, d, M_offset_9, 4, T[44]);
        d = HH(d, a, b, c, M_offset_12, 11, T[45]);
        c = HH(c, d, a, b, M_offset_15, 16, T[46]);
        b = HH(b, c, d, a, M_offset_2, 23, T[47]);
        a = II(a, b, c, d, M_offset_0, 6, T[48]);
        d = II(d, a, b, c, M_offset_7, 10, T[49]);
        c = II(c, d, a, b, M_offset_14, 15, T[50]);
        b = II(b, c, d, a, M_offset_5, 21, T[51]);
        a = II(a, b, c, d, M_offset_12, 6, T[52]);
        d = II(d, a, b, c, M_offset_3, 10, T[53]);
        c = II(c, d, a, b, M_offset_10, 15, T[54]);
        b = II(b, c, d, a, M_offset_1, 21, T[55]);
        a = II(a, b, c, d, M_offset_8, 6, T[56]);
        d = II(d, a, b, c, M_offset_15, 10, T[57]);
        c = II(c, d, a, b, M_offset_6, 15, T[58]);
        b = II(b, c, d, a, M_offset_13, 21, T[59]);
        a = II(a, b, c, d, M_offset_4, 6, T[60]);
        d = II(d, a, b, c, M_offset_11, 10, T[61]);
        c = II(c, d, a, b, M_offset_2, 15, T[62]);
        b = II(b, c, d, a, M_offset_9, 21, T[63]);
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
      },
      _doFinalize: function _doFinalize() {
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = 8 * this._nDataBytes;
        var nBitsLeft = 8 * data.sigBytes;
        dataWords[nBitsLeft >>> 5] |= 128 << 24 - nBitsLeft % 32;
        var nBitsTotalH = Math.floor(nBitsTotal / 4294967296);
        var nBitsTotalL = nBitsTotal;
        dataWords[15 + (nBitsLeft + 64 >>> 9 << 4)] = 16711935 & (nBitsTotalH << 8 | nBitsTotalH >>> 24) | 4278255360 & (nBitsTotalH << 24 | nBitsTotalH >>> 8);
        dataWords[14 + (nBitsLeft + 64 >>> 9 << 4)] = 16711935 & (nBitsTotalL << 8 | nBitsTotalL >>> 24) | 4278255360 & (nBitsTotalL << 24 | nBitsTotalL >>> 8);
        data.sigBytes = 4 * (dataWords.length + 1);
        this._process();
        var hash = this._hash;
        var H = hash.words;
        for (var i = 0; i < 4; i++) {
          var H_i = H[i];
          H[i] = 16711935 & (H_i << 8 | H_i >>> 24) | 4278255360 & (H_i << 24 | H_i >>> 8);
        }
        return hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      }
    });
    function FF(a, b, c, d, x, s, t) {
      var n = a + (b & c | ~b & d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }
    function GG(a, b, c, d, x, s, t) {
      var n = a + (b & d | c & ~d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }
    function HH(a, b, c, d, x, s, t) {
      var n = a + (b ^ c ^ d) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }
    function II(a, b, c, d, x, s, t) {
      var n = a + (c ^ (b | ~d)) + x + t;
      return (n << s | n >>> 32 - s) + b;
    }
    C.MD5 = Hasher._createHelper(MD5);
    C.HmacMD5 = Hasher._createHmacHelper(MD5);
    module.exports = MD5;
    cc._RF.pop();
  }, {
    "./crypto-core": "crypto-core"
  } ],
  mock: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "85db9wl1y5JpbY3XiAt4ZXO", "mock");
    "use strict";
    var userList = [ "", "56e6b7cb-533c-4888-9d5a-ab248a06697c", "d24bb892-2186-4f99-80bf-d86711182e1e", "dc539325-654e-4e8b-868f-76de25a2f35a", "7f40784b-5a46-4543-8423-fd8f4fcd0279", "ca23696a-6aff-49e4-8be4-2878a4537265", "2d7fe03b-9e6f-46c2-bd1c-5a62c8d5e047", "dc8cc0bb-7f25-4284-bbe0-a78d1f5b0f10", "1323b14d-b986-40ae-bc38-1e4362f5f339", "665e2d1b-85a8-486c-951f-4ba6b4a520e2", "efe80f93-c21d-414b-b6b0-ca6633624b52", "d2341c95-cc7a-4764-b076-54778df11c58", "7fdfd544-d0f8-4d1c-8f62-5c56857e6fae", "bb8d1526-f4c0-472c-8308-b6b23dcd6a51", "aea847a9-9b40-4f27-8f04-b821152d9d95", "122b2b5e-6232-49ac-8c23-5f7f0087a2f5", "5037ff8b-6a53-4812-b961-79984425ec04", "e88b0830-0de9-4e3b-ae16-29c261cd797a", "3cb48324-b4fe-443a-bb72-94365dfba446", "7d186fb7-9dbc-416f-92f7-098e2b387b41", "e6d94531-b9a7-4613-a369-88be17c47510", "bbf5c484-fd49-4712-a74a-d9087fcac470", "c0fea303-40d9-4916-9469-bb120c9cb946", "7d68da4c-e6f2-4b2e-a062-b42c70d1262f", "1f1d69a8-4de4-4ecf-8038-175c259a1796", "26c969e0-8ca8-4938-964b-5974a22e726f", "708574af-82aa-4dc2-a1ca-d545a45b9406", "f1e65656-7a7f-4470-a42f-d3f329558882", "a623678e-3c01-4970-a154-973c4f83b554", "47bc3d24-7c00-49ca-b18a-ae97368b2eab", "1ee89c7f-43d7-4d0f-a07f-35617d832db6", "4b5a50dd-8518-41a7-81a1-ae08634f7224", "d2cefdae-62e3-4998-9629-ea6ced1b6d37", "a7e128e6-deff-425d-9c42-a9f7ed32dbe4", "02e7e890-f5e7-46d1-bfb3-664cb80d6014", "0621ed1b-d2b5-480a-bee0-0fa93b72590f", "86e8c8c1-c8ad-495a-a5d6-efcebb93abc6", "68e5ef10-5451-455b-9076-871907548752", "1d05a7b7-fef3-49ad-820d-13cc26dab10c", "be11c11b-0f04-4827-bf3d-82af3c75dc20", "7f58dd54-8e9f-4fed-b91e-c2657255bc39", "280125a5-92d3-492c-9054-ad163e48b441", "76d73797-4249-429d-8006-5d47cee5f6cb", "6487d34e-9e63-4bbe-8556-2ed6de713d9d", "48c64e13-1310-4a39-b258-1c1417fc486a", "1d231f82-4fc6-47e2-bba4-c203419f8402", "e9eff152-dcbb-4d85-bc9f-953ae4d12776", "93437ca0-d5a9-446d-9e2d-eb0833c2acc1", "af67b4e7-eabc-4087-b66a-b8b1bd0a5e00", "fb3ebe48-caf1-4acc-b4c5-5e12b6126eb8", "0d786d1d-4f1c-46a3-8ffb-54cf80e14d79", "ce851e2b-8e5e-46bd-8a13-b3d487c7ed6d", "b890aa8c-ab4b-4b66-8094-d5fa1ce76abd", "56d73399-4231-42b8-bb9e-75ea8c5bdc35", "b4412364-c3bc-4fa3-9311-1e1a721dd7bd", "30cc4fae-ac36-4eff-884a-7f51812129d0", "8e4cbb6e-72bf-4e79-bb85-eb9ef13bcb82", "2820fb3c-ca83-488b-b4eb-60a462d3940e", "ddad2b48-8004-4d06-9749-2159e39a502b", "e2bbb4f7-3987-49b7-9ca9-5e0ed8619f5f", "a2c21e4f-1cf1-4c08-bd48-23fbafb0193c", "d8235853-20e5-4c59-a6ec-51b5f920c83d", "5eff7099-0ab5-4218-9e29-ad62a4a7aef6", "8b965686-b37e-4c66-b463-5c7bb61c0be0", "a85c17e3-6b22-4609-8a5a-9b839bbf27aa", "d717803c-45aa-4676-b40f-cd8bcb2dfbd3", "7599abed-b608-41c6-a14f-40b94c65ae89", "43b60a97-22f4-4536-b2a7-fd1025df9bc5", "7b1ec585-5323-43b2-80c0-98961fbe7c4d", "fbd35472-3c35-4764-a5db-39c30483dfb1", "7f5dbeef-cf0d-4715-b730-61548ad8c8b8", "34485d01-c565-4208-921f-c1c07f4b651c", "b6cf22b0-5c58-4f5d-a5a8-142d431483af", "a23a5459-1f08-4f0a-821f-0d7bab70aee9", "2d7c1dca-f628-4214-9fe9-c461e5a61774", "775e18f7-f702-471d-847b-e6e1be2dc465", "5ea33124-81a7-4c6c-8a29-67977e4af089", "53a0a688-2d7f-48d8-a8aa-2f83cf339fb4", "5614804e-b27a-4cc2-9317-3c37a2ff4a10", "f4650e0a-8eae-4c77-8388-a74b24d38deb", "e25416f1-8c8d-450b-919b-faa97981fe8d", "45e8195b-9ff1-466d-9748-3e1280443dd4", "da0af4d3-af6b-4af1-977a-34a9e779dca6", "f5b4323b-37a9-49f2-a4c0-7443515b6443", "360f4086-fc1b-41cf-b322-18ac80ff1636", "bf0246e7-a179-4a62-843a-5f12036cafd4", "1bdff444-a214-424d-b76f-2c4b75c45c7c", "30e3d2ff-2f05-447b-972d-16571031eb26", "c2d77d20-f6b3-4e71-bb5e-a7fb8c3e57b4", "ba8977a8-b8b2-4f27-9c1c-64c68eb4972e", "23459e80-6190-47ab-8639-9cec204fc1ff", "8dbf465d-74b4-480d-af06-11baceadac1a", "0bf53ba8-efab-492a-93bc-086a74f263e6", "a1560658-5927-4d2b-8bd7-0854f5e04689", "43253665-e9c8-43fa-b8b1-e70b9aa84cbc", "60beb533-fcf9-4927-b89e-884328a4ecfb", "6951de0d-cddc-46a4-abde-3bb44cce0dec", "d09428f0-c851-4f17-af76-f0c6845e39bb", "def15344-d560-4434-8a6b-f49274bedb28", "5335474d-cf1a-4acc-8fc0-757bd1bffc37", "e9cca118-6bbd-4569-b0fb-2134bb75a922" ];
    module.exports = {
      9999: "spinNoWin",
      9998: "spinMiniGame",
      5999: "spinWin",
      9994: "spinWin",
      userText: "user74",
      pwText: "pwduser74",
      userId: "f5b4323b-37a9-49f2-a4c0-7443515b6443"
    };
    var a = {
      id: "30eabac9-9154-4834-8efc-18b1b1307bb2",
      userId: "4b5a50dd-8518-41a7-81a1-ae08634f7224",
      serviceId: "9000",
      commandId: "5d5305bf-6766-4ae1-9bde-a7046e486c7c",
      version: 1,
      betDenom: 10,
      winAmount: 0,
      winJackpotAmount: 0,
      normalGameMatrix: [ "8", "6", "5", "J", "9", "2", "7", "2", "5", "J", "4", "2", "R", "6", "7" ],
      normalGameTableFormat: [ 3, 3, 3, 3, 3 ],
      normalGamePayLines: [],
      normalGameWinAmount: 0,
      freeGameRemain: 0,
      freeGameTotal: 0,
      freeGameMatrix: [],
      freeGameTableFormat: [],
      freeGamePayLines: [],
      freeGameWinAmount: 0,
      bonusGameRemain: 0,
      bonusGameTotal: 0,
      bonusPlayRemain: 0,
      bonusGameMatrix: [],
      bonusGameWinAmount: 0,
      isFinished: true,
      lastEvent: {
        normalGameResult: {
          matrix: [ "8", "6", "5", "J", "9", "2", "7", "2", "5", "J", "4", "2", "R", "6", "7" ],
          freeGame: 0,
          bonusGame: 0,
          winAmount: 0,
          payLineList: []
        }
      },
      pvsReceivedTime: 1562063112863,
      stateType: "9000"
    };
    cc._RF.pop();
  }, {} ],
  motionBlur: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "776cfnOpI9Cl7gj9kqak2qt", "motionBlur");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        speed: 1
      },
      onLoad: function onLoad() {
        this.node.on("ACTIVE_BLUR", this.activeBlur, this);
        this.node.on("STOP_BLUR", this.stopBlur, this);
        this.node.on("STOP_BLUR_SMOOTH", this.stopBlurSmooth, this);
      },
      start: function start() {
        var sprite = this.node.getComponent(cc.Sprite);
        sprite && (this.material = sprite.getMaterial(0));
        this.strength = 0;
        this.decreasing = false;
      },
      update: function update(dt) {
        if (!this.material) return;
        this.material.setProperty("strength", this.strength);
        if (this.decreasing) if (this.strength > 0) this.strength -= this.speed * dt; else {
          this.strength = 0;
          this.decreasing = false;
        }
      },
      stopBlur: function stopBlur() {
        this.strength = 0;
      },
      activeBlur: function activeBlur() {
        var strength = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .8;
        this.strength = strength;
      },
      stopBlurSmooth: function stopBlurSmooth() {
        this.decreasing = true;
      }
    });
    cc._RF.pop();
  }, {} ],
  network: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f461aXJyuhFm75ZGcIy/2Hj", "network");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaSocketManager_1 = require("./cc-arcade-base/Scripts/Network/gaSocketManager");
    var globalNetwork = require("globalNetwork");
    var appConfig = require("appConfig");
    var Network = function() {
      function Network() {
        this.socketManager = null;
      }
      Network.prototype.login = function(callback) {
        var token = this.getToken();
        if (void 0 != token) {
          globalNetwork.init(token, "iframe", "6995");
          this.createSocket();
        } else callback();
      };
      Network.prototype.getToken = function() {
        var TOKEN = appConfig.TOKEN;
        var token = "";
        token = TOKEN || this.getUrlParam("token");
        token || (token = cc.sys.localStorage.getItem("USER_TOKEN"));
        return token;
      };
      Network.prototype.getUrlParam = function(name) {
        if (cc.sys.isNative) return null;
        var url = new URL(window.location);
        return url.searchParams.get(name);
      };
      Network.prototype.createSocket = function() {
        this.socketManager = new gaSocketManager_1.gaSocketManager();
        this.socketManager.checkReady();
      };
      return Network;
    }();
    exports.default = Network;
    cc._RF.pop();
  }, {
    "./cc-arcade-base/Scripts/Network/gaSocketManager": "gaSocketManager",
    appConfig: "appConfig",
    globalNetwork: "globalNetwork"
  } ],
  racingController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "f6cacOr2r5OybUlhcCf2tCG", "racingController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var data_1 = require("./data");
    var gaEventEmitter_1 = require("./cc-arcade-base/Scripts/Common/gaEventEmitter");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var RacingController = function(_super) {
      __extends(RacingController, _super);
      function RacingController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.buffalos = [];
        _this.distanceLabel = null;
        _this.finishLine = null;
        _this.countDownLabel = null;
        _this.layers = [];
        _this.minDuration = 10;
        _this.labelString = {
          value: 3
        };
        _this.distanceScroll = 800;
        _this.xPrepare = -5500;
        _this.isRacing = false;
        _this.buffalosOderFinish = [];
        _this.layerSpeed = [ .7, .9, 1, 1 ];
        return _this;
      }
      RacingController.prototype.onLoad = function() {
        var _this = this;
        gaEventEmitter_1.default.instance.registerEvent("prepareNextRound", this.prepareNextRound.bind(this));
        gaEventEmitter_1.default.instance.registerEvent("racingPrepareDone", this.countDownStart.bind(this));
        gaEventEmitter_1.default.instance.registerEvent("racingDone", function() {
          _this.isRacing = false;
        });
      };
      RacingController.prototype.start = function() {
        this.countDownLabel.node.active = false;
      };
      RacingController.prototype.update = function(dt) {
        var _this = this;
        this.countDownLabel.node.active && (this.countDownLabel.string = Math.round(this.labelString.value).toString());
        if (!this.isRacing || this.node.x <= -data_1.Data.instance.racingDistance - 200 || this.getFastestBuffalo().x <= 0) return;
        var speed = this.getFastestBuffalo().getComponent("buffaloController").speed;
        this.node.x -= speed * dt;
        this.layers.forEach(function(layer, index) {
          var distance = _this.layerSpeed[index] * speed * dt;
          layer.x -= distance;
          data_1.Data.instance.layerDistance[index] += distance;
        });
      };
      RacingController.prototype.racing = function() {
        data_1.Data.instance.randomOrh();
        this.buffalosOderFinish = data_1.Data.instance.getOderFinish();
        this.prepare();
      };
      RacingController.prototype.getFastestBuffalo = function() {
        var fastestBuffalo = this.buffalos[0];
        this.buffalos.forEach(function(buffalo) {
          buffalo.x > fastestBuffalo.x && (fastestBuffalo = buffalo);
        });
        return fastestBuffalo;
      };
      RacingController.prototype.prepare = function() {
        var _this = this;
        var durationPrepare = data_1.Data.instance.timePrepare;
        cc.tween(this.node).by(durationPrepare, {
          x: -this.distanceScroll
        }).call(function() {
          gaEventEmitter_1.default.instance.emit("racingPrepareDone");
        }).start();
        this.layers.forEach(function(layer, index) {
          var distance = -_this.distanceScroll * _this.layerSpeed[index];
          cc.tween(layer).by(durationPrepare, {
            x: distance
          }).call(function() {
            data_1.Data.instance.layerDistance[index] -= distance;
          }).start();
        });
      };
      RacingController.prototype.countDownStart = function() {
        var _this = this;
        var time = 3;
        this.countDownLabel.node.active = true;
        this.labelString = {
          value: time
        };
        cc.tween(this.labelString).to(time, {
          value: 0
        }).call(function() {
          gaEventEmitter_1.default.instance.emit("racing", _this.buffalosOderFinish);
          _this.isRacing = true;
          _this.countDownLabel.node.active = false;
        }).start();
      };
      RacingController.prototype.prepareNextRound = function() {
        var _this = this;
        cc.warn(this.node.x);
        cc.tween(this.node).to(data_1.Data.instance.timePrepare, {
          x: this.xPrepare
        }).call(function() {
          cc.warn(_this.node.x);
          _this.node.x = -200;
          gaEventEmitter_1.default.instance.emit("prepareDone");
        }).start();
        this.layers.forEach(function(layer, index) {
          var distance = -200 * _this.layerSpeed[index];
          cc.tween(layer).by(data_1.Data.instance.timePrepare, {
            x: distance
          }).call(function() {
            data_1.Data.instance.layerDistance[index] -= distance;
          }).start();
        });
      };
      __decorate([ property(cc.Node) ], RacingController.prototype, "buffalos", void 0);
      __decorate([ property(cc.Label) ], RacingController.prototype, "distanceLabel", void 0);
      __decorate([ property(cc.Node) ], RacingController.prototype, "finishLine", void 0);
      __decorate([ property(cc.Label) ], RacingController.prototype, "countDownLabel", void 0);
      __decorate([ property(cc.Node) ], RacingController.prototype, "layers", void 0);
      __decorate([ property ], RacingController.prototype, "minDuration", void 0);
      __decorate([ property ], RacingController.prototype, "labelString", void 0);
      RacingController = __decorate([ ccclass ], RacingController);
      return RacingController;
    }(cc.Component);
    exports.default = RacingController;
    cc._RF.pop();
  }, {
    "./cc-arcade-base/Scripts/Common/gaEventEmitter": "gaEventEmitter",
    "./data": "data"
  } ],
  scrollController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "499df8daNhGgILVptStFOY/", "scrollController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var data_1 = require("./data");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var scrollController = function(_super) {
      __extends(scrollController, _super);
      function scrollController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.scrollNode = null;
        _this.chip = null;
        _this.nextButton = null;
        _this.backButton = null;
        _this.chipLabel = null;
        _this.chipCurrent = 0;
        _this.numChip = 3;
        _this.chipValues = [ 1, 10, 20, 50, 100 ];
        return _this;
      }
      scrollController.prototype.start = function() {
        this.scrollNode.active = false;
        this.setValueChip(this.chipValues[this.chipCurrent]);
        this.nextButton.node.on("click", this.nextChip.bind(this));
        this.backButton.node.on("click", this.backChip.bind(this));
      };
      scrollController.prototype.nextChip = function() {
        this.backButton.interactable = true;
        if (this.chipCurrent >= this.chipValues.length - 1) {
          this.nextButton.interactable = false;
          return;
        }
        this.chipCurrent++;
        this.setValueChip(this.chipValues[this.chipCurrent]);
      };
      scrollController.prototype.backChip = function() {
        this.nextButton.interactable = true;
        if (this.chipCurrent <= 0) {
          this.backButton.interactable = false;
          return;
        }
        this.chipCurrent--;
        this.setValueChip(this.chipValues[this.chipCurrent]);
      };
      scrollController.prototype.setValueChip = function(value) {
        this.chipLabel.string = value + "K";
        data_1.Data.instance.chipCurrentValues = value;
      };
      __decorate([ property(cc.Node) ], scrollController.prototype, "scrollNode", void 0);
      __decorate([ property(cc.Node) ], scrollController.prototype, "chip", void 0);
      __decorate([ property(cc.Button) ], scrollController.prototype, "nextButton", void 0);
      __decorate([ property(cc.Button) ], scrollController.prototype, "backButton", void 0);
      __decorate([ property(cc.Label) ], scrollController.prototype, "chipLabel", void 0);
      scrollController = __decorate([ ccclass ], scrollController);
      return scrollController;
    }(cc.Component);
    exports.default = scrollController;
    cc._RF.pop();
  }, {
    "./data": "data"
  } ],
  scrollUV: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "accd0sI4JRBKqKQ/gjOiWXW", "scrollUV");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        speedX: 0,
        speedY: 0
      },
      start: function start() {
        var sprite = this.node.getComponent(cc.Sprite);
        sprite && (this.material = sprite.getMaterial(0));
        this.offsetY = 0;
        this.offsetX = 0;
      },
      update: function update(dt) {
        if (!this.material) return;
        this.offsetY += this.speedY * dt;
        this.offsetY %= 1;
        this.offsetX += this.speedX * dt;
        this.offsetX %= 1;
        this.material.setProperty("offset", cc.v2(this.offsetX, this.offsetY));
      }
    });
    cc._RF.pop();
  }, {} ],
  sendMessage: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "1c119KyxzJGUYusazVuoDaH", "sendMessage");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaCommandID_1 = require("./cc-arcade-base/Scripts/Network/gaCommandID");
    var gaCommon_1 = require("./cc-arcade-base/Scripts/Definitions/gaCommon");
    var network_1 = require("./network");
    var appConfig = require("appConfig");
    var network = require("game-network");
    var MessageManager = network.MessageManager, EventManager = network.EventManager, CommandManager = network.CommandManager;
    var messageManager = MessageManager.getInstance();
    var SendMessage = function() {
      function SendMessage() {
        this.latestRequest = null;
        this.network = new network_1.default();
        this.commandManager = new CommandManager("6995", 1, "cId");
        this.eventManager = new EventManager(false, {
          jgr: "client-join-game-result",
          sud: "state-updated",
          spu: "state-pushed",
          jud: "jackpot-updated",
          erp: "error-pushed",
          mep: "message-pushed"
        });
      }
      SendMessage.prototype.joinGame = function(callback) {
        var URL_CODE = appConfig.URL_CODE;
        var code = "";
        var env = 3;
        code = gaCommon_1.gameCommonUtils.getUrlParam(URL_CODE);
        env = parseInt(gaCommon_1.gameCommonUtils.getUrlParam("env")) || 2;
        var payload = {
          event: gaCommandID_1.gaGameCMD.R_JOIN_GAME,
          data: {
            code: code,
            env: env
          }
        };
        messageManager.registerGame("6995", {
          onAck: this._onAck.bind(this)
        }, {
          onEvent: this._onEvent.bind(this)
        });
        var dataEvent = {
          data: {
            orh: this.randomOrh()
          }
        };
        callback();
      };
      SendMessage.prototype._executeCommand = function(payload, callback) {
        payload.data = payload.data || {};
        payload.data.tkn = this.network.getToken();
        payload.data.sId = "6995";
        var commandStrategy = {
          resendCount: 100,
          shouldWaitForACK: true,
          canBeDuplicated: false
        };
        false === payload.retry && (commandStrategy.resendCount = 0);
        var commandId = this.commandManager.executeCommand(payload, commandStrategy);
        if (!this._isSuccessSendCommandId(commandId)) return;
        var respId = gaCommandID_1.gaGameCMD.responseOf(payload.event);
        if (!respId) return;
        this.eventManager.waitForEvent(1e4, function(eventData) {
          if (eventData.event === respId) {
            var data = eventData.data;
            if (data.cId == commandId) {
              callback(eventData);
              return;
            }
          }
        }, function() {});
      };
      SendMessage.prototype._isSuccessSendCommandId = function(commandId) {
        var overLimited = commandId === CommandManager.COMMAND_FAILED_CONC_OVER_LIMIT;
        var isDuplicated = commandId === CommandManager.COMMAND_FAILED_DUPLICATE;
        return commandId && !(overLimited && isDuplicated);
      };
      SendMessage.prototype._onAck = function() {
        this.commandManager.onAck.apply(this.commandManager, arguments);
      };
      SendMessage.prototype._onEvent = function(eventData) {
        this.eventManager.onEvent.apply(this.eventManager, arguments);
      };
      SendMessage.prototype.randomOrh = function() {
        var orhBase = [ 1, 2, 3, 4, 5, 6 ];
        var orh = [];
        for (var i = 0; i < 6; i++) {
          var randomOrh = orhBase[Math.floor(Math.random() * orhBase.length)];
          orh.push(randomOrh);
        }
        return orh;
      };
      return SendMessage;
    }();
    exports.default = SendMessage;
    cc._RF.pop();
  }, {
    "./cc-arcade-base/Scripts/Definitions/gaCommon": "gaCommon",
    "./cc-arcade-base/Scripts/Network/gaCommandID": "gaCommandID",
    "./network": "network",
    appConfig: "appConfig",
    "game-network": "game-network"
  } ],
  serviceRest: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "c5bbeN99S9C/KxNP4D54mIB", "serviceRest");
    "use strict";
    function encodeQueryData(data) {
      return Object.keys(data).map(function(key) {
        return [ key, data[key] ].map(encodeURIComponent).join("=");
      }).join("&");
    }
    var apiObject = {
      getRawDataWeb: function getRawDataWeb(_ref) {
        var _ref$fullURL = _ref.fullURL, fullURL = void 0 === _ref$fullURL ? "" : _ref$fullURL, _ref$callback = _ref.callback, callback = void 0 === _ref$callback ? function() {} : _ref$callback, _ref$callbackErr = _ref.callbackErr, callbackErr = void 0 === _ref$callbackErr ? function() {} : _ref$callbackErr;
        var request = new XMLHttpRequest();
        request.open("GET", fullURL, true);
        request.timeout = 15e3;
        request.onreadystatechange = function() {
          4 == request.readyState ? callback && (request.responseText ? callback(JSON.parse(request.responseText)) : callbackErr()) : 0 === request.readyState && callbackErr();
          200 !== request.status && callbackErr();
        };
        request.ontimeout = function(e) {
          callbackErr(e);
        };
        request.onerror = function(e) {
          callbackErr(e);
        };
        request.send();
      },
      get: function get(_ref2) {
        var _ref2$url = _ref2.url, url = void 0 === _ref2$url ? "" : _ref2$url, _ref2$params = _ref2.params, params = void 0 === _ref2$params ? {} : _ref2$params, _ref2$callback = _ref2.callback, callback = void 0 === _ref2$callback ? function() {} : _ref2$callback, _ref2$apiUrl = _ref2.apiUrl, apiUrl = void 0 === _ref2$apiUrl ? "" : _ref2$apiUrl, _ref2$callbackErr = _ref2.callbackErr, callbackErr = void 0 === _ref2$callbackErr ? function() {} : _ref2$callbackErr;
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC = loadConfigAsync.getConfig(), API_URL = _loadConfigAsync$getC.API_URL;
        var request = cc.loader.getXMLHttpRequest();
        var querystring = "?" + encodeQueryData(params);
        var fullURL = (apiUrl || API_URL) + url + querystring;
        request.open("GET", fullURL, true);
        request.timeout = 15e3;
        request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        request.onreadystatechange = function() {
          4 == request.readyState ? callback && (request.responseText ? callback(JSON.parse(request.responseText)) : callbackErr()) : 0 === request.readyState && callbackErr();
          200 !== request.status && callbackErr();
        };
        request.ontimeout = function(e) {
          callbackErr(e);
        };
        request.onerror = function(e) {
          callbackErr(e);
        };
        request.send();
      },
      getWithHeader: function getWithHeader(_ref3) {
        var _ref3$url = _ref3.url, url = void 0 === _ref3$url ? "" : _ref3$url, _ref3$params = _ref3.params, params = void 0 === _ref3$params ? {} : _ref3$params, _ref3$headers = _ref3.headers, headers = void 0 === _ref3$headers ? {} : _ref3$headers, _ref3$callback = _ref3.callback, callback = void 0 === _ref3$callback ? function() {} : _ref3$callback, _ref3$apiUrl = _ref3.apiUrl, apiUrl = void 0 === _ref3$apiUrl ? "" : _ref3$apiUrl, _ref3$callbackErr = _ref3.callbackErr, callbackErr = void 0 === _ref3$callbackErr ? function() {} : _ref3$callbackErr;
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC2 = loadConfigAsync.getConfig(), API_URL = _loadConfigAsync$getC2.API_URL;
        var request = cc.loader.getXMLHttpRequest();
        var querystring = "?" + encodeQueryData(params);
        var fullURL = (apiUrl || API_URL) + url + querystring;
        request.open("GET", fullURL, true);
        request.timeout = 15e3;
        request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        Object.keys(headers).forEach(function(key) {
          request.setRequestHeader(key, headers[key]);
        });
        request.onreadystatechange = function() {
          4 == request.readyState ? callback && (request.responseText ? callback(JSON.parse(request.responseText)) : callbackErr()) : 0 === request.readyState && callbackErr();
          200 !== request.status && callbackErr();
        };
        request.ontimeout = function() {
          callbackErr();
        };
        request.onerror = function() {
          callbackErr();
        };
        request.send();
      },
      post: function post(_ref4) {
        var _ref4$url = _ref4.url, url = void 0 === _ref4$url ? "" : _ref4$url, _ref4$data = _ref4.data, data = void 0 === _ref4$data ? {} : _ref4$data, _ref4$callback = _ref4.callback, callback = void 0 === _ref4$callback ? function() {} : _ref4$callback, _ref4$apiUrl = _ref4.apiUrl, apiUrl = void 0 === _ref4$apiUrl ? "" : _ref4$apiUrl, _ref4$callbackErr = _ref4.callbackErr, callbackErr = void 0 === _ref4$callbackErr ? function() {} : _ref4$callbackErr;
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC3 = loadConfigAsync.getConfig(), API_URL = _loadConfigAsync$getC3.API_URL;
        var request = cc.loader.getXMLHttpRequest();
        var dataPost = encodeQueryData(data);
        var fullURL = (apiUrl || API_URL) + url;
        request.open("POST", fullURL, true);
        request.timeout = 15e3;
        request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        request.onreadystatechange = function() {
          4 == request.readyState ? request.responseText ? callback({
            status: request.status,
            data: JSON.parse(request.responseText)
          }) : callbackErr() : 0 === request.readyState && callbackErr();
          200 !== request.status && callbackErr();
        };
        request.ontimeout = function(e) {
          callbackErr(e);
        };
        request.onerror = function(e) {
          callbackErr(e);
        };
        request.send(dataPost);
      },
      postWithHeader: function postWithHeader(_ref5) {
        var _ref5$url = _ref5.url, url = void 0 === _ref5$url ? "" : _ref5$url, _ref5$params = _ref5.params, params = void 0 === _ref5$params ? {} : _ref5$params, _ref5$headers = _ref5.headers, headers = void 0 === _ref5$headers ? {} : _ref5$headers, _ref5$data = _ref5.data, data = void 0 === _ref5$data ? {} : _ref5$data, _ref5$callback = _ref5.callback, callback = void 0 === _ref5$callback ? function() {} : _ref5$callback, _ref5$apiUrl = _ref5.apiUrl, apiUrl = void 0 === _ref5$apiUrl ? "" : _ref5$apiUrl, _ref5$callbackErr = _ref5.callbackErr, callbackErr = void 0 === _ref5$callbackErr ? function() {} : _ref5$callbackErr;
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC4 = loadConfigAsync.getConfig(), API_URL = _loadConfigAsync$getC4.API_URL;
        var request = cc.loader.getXMLHttpRequest();
        var dataPost = JSON.stringify(data);
        var querystring = "?" + encodeQueryData(params);
        var fullURL = (apiUrl || API_URL) + url + querystring;
        request.open("POST", fullURL, true);
        request.timeout = 15e3;
        request.setRequestHeader("Content-type", "application/json");
        Object.keys(headers).forEach(function(key) {
          request.setRequestHeader(key, headers[key]);
        });
        request.onreadystatechange = function() {
          4 == request.readyState ? request.responseText ? callback({
            status: request.status,
            data: JSON.parse(request.responseText)
          }) : callbackErr() : 0 === request.readyState && callbackErr();
          200 !== request.status && callbackErr();
        };
        request.ontimeout = function(e) {
          callbackErr(e);
        };
        request.onerror = function(e) {
          callbackErr(e);
        };
        request.send(dataPost);
      },
      postRaw: function postRaw(_ref6) {
        var _ref6$url = _ref6.url, url = void 0 === _ref6$url ? "" : _ref6$url, _ref6$data = _ref6.data, data = void 0 === _ref6$data ? {} : _ref6$data, _ref6$callback = _ref6.callback, callback = void 0 === _ref6$callback ? function() {} : _ref6$callback, _ref6$apiUrl = _ref6.apiUrl, apiUrl = void 0 === _ref6$apiUrl ? "" : _ref6$apiUrl, _ref6$callbackErr = _ref6.callbackErr, callbackErr = void 0 === _ref6$callbackErr ? function() {} : _ref6$callbackErr;
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC5 = loadConfigAsync.getConfig(), API_URL = _loadConfigAsync$getC5.API_URL;
        var request = cc.loader.getXMLHttpRequest();
        var dataPost = data;
        var fullURL = (apiUrl || API_URL) + url;
        request.open("POST", fullURL, true);
        request.timeout = 15e3;
        request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        request.onreadystatechange = function() {
          200 == request.status ? callback({
            status: request.status,
            data: request.responseText
          }) : callbackErr();
        };
        request.ontimeout = function(e) {
          callbackErr(e);
        };
        request.onerror = function(e) {
          callbackErr(e);
        };
        request.send(dataPost);
      },
      put: function put(_ref7) {
        var _ref7$url = _ref7.url, url = void 0 === _ref7$url ? "" : _ref7$url, _ref7$data = _ref7.data, data = void 0 === _ref7$data ? {} : _ref7$data, _ref7$callback = _ref7.callback, callback = void 0 === _ref7$callback ? function() {} : _ref7$callback, _ref7$apiUrl = _ref7.apiUrl, apiUrl = void 0 === _ref7$apiUrl ? "" : _ref7$apiUrl, _ref7$callbackErr = _ref7.callbackErr, callbackErr = void 0 === _ref7$callbackErr ? function() {} : _ref7$callbackErr;
        var loadConfigAsync = require("loadConfigAsync");
        var _loadConfigAsync$getC6 = loadConfigAsync.getConfig(), API_URL = _loadConfigAsync$getC6.API_URL;
        var request = cc.loader.getXMLHttpRequest();
        var dataPost = encodeQueryData(data);
        var fullURL = (apiUrl || API_URL) + url;
        request.open("PUT", fullURL, true);
        request.timeout = 15e3;
        request.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        request.onreadystatechange = function() {
          4 == request.readyState ? request.responseText ? callback({
            status: request.status,
            data: JSON.parse(request.responseText)
          }) : callbackErr() : 0 === request.readyState && callbackErr();
          200 !== request.status && callbackErr();
        };
        request.ontimeout = function(e) {
          callbackErr(e);
        };
        request.onerror = function(e) {
          callbackErr(e);
        };
        request.send(dataPost);
      }
    };
    module.exports = apiObject;
    cc._RF.pop();
  }, {
    loadConfigAsync: "loadConfigAsync"
  } ],
  sha1: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "5b7fdnRZ8tJvrdoRt+dBYfd", "sha1");
    "use strict";
    var CryptoJS = require("./crypto-core");
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;
    var W = [];
    var SHA1 = C_algo.SHA1 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([ 1732584193, 4023233417, 2562383102, 271733878, 3285377520 ]);
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        var H = this._hash.words;
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4];
        for (var i = 0; i < 80; i++) {
          if (i < 16) W[i] = 0 | M[offset + i]; else {
            var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = n << 1 | n >>> 31;
          }
          var t = (a << 5 | a >>> 27) + e + W[i];
          t += i < 20 ? 1518500249 + (b & c | ~b & d) : i < 40 ? 1859775393 + (b ^ c ^ d) : i < 60 ? (b & c | b & d | c & d) - 1894007588 : (b ^ c ^ d) - 899497514;
          e = d;
          d = c;
          c = b << 30 | b >>> 2;
          b = a;
          a = t;
        }
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
        H[4] = H[4] + e | 0;
      },
      _doFinalize: function _doFinalize() {
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = 8 * this._nDataBytes;
        var nBitsLeft = 8 * data.sigBytes;
        dataWords[nBitsLeft >>> 5] |= 128 << 24 - nBitsLeft % 32;
        dataWords[14 + (nBitsLeft + 64 >>> 9 << 4)] = Math.floor(nBitsTotal / 4294967296);
        dataWords[15 + (nBitsLeft + 64 >>> 9 << 4)] = nBitsTotal;
        data.sigBytes = 4 * dataWords.length;
        this._process();
        return this._hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      }
    });
    C.SHA1 = Hasher._createHelper(SHA1);
    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);
    module.exports = SHA1;
    cc._RF.pop();
  }, {
    "./crypto-core": "crypto-core"
  } ],
  sha224: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "23c20t95NdGa67T9fnwb0mD", "sha224");
    "use strict";
    var CryptoJS = require("./crypto-core");
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var C_algo = C.algo;
    var SHA256 = C_algo.SHA256;
    var SHA224 = C_algo.SHA224 = SHA256.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init([ 3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428 ]);
      },
      _doFinalize: function _doFinalize() {
        var hash = SHA256._doFinalize.call(this);
        hash.sigBytes -= 4;
        return hash;
      }
    });
    C.SHA224 = SHA256._createHelper(SHA224);
    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);
    module.exports = SHA224;
    cc._RF.pop();
  }, {
    "./crypto-core": "crypto-core"
  } ],
  sha256: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "6ece9Y3TFFB87c8jNoHYoMj", "sha256");
    "use strict";
    var CryptoJS = require("./crypto-core");
    var C = CryptoJS;
    var C_lib = C.lib;
    var WordArray = C_lib.WordArray;
    var Hasher = C_lib.Hasher;
    var C_algo = C.algo;
    var H = [];
    var K = [];
    (function() {
      function isPrime(n) {
        var sqrtN = Math.sqrt(n);
        for (var factor = 2; factor <= sqrtN; factor++) if (!(n % factor)) return false;
        return true;
      }
      function getFractionalBits(n) {
        return 4294967296 * (n - (0 | n)) | 0;
      }
      var n = 2;
      var nPrime = 0;
      while (nPrime < 64) {
        if (isPrime(n)) {
          nPrime < 8 && (H[nPrime] = getFractionalBits(Math.pow(n, .5)));
          K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));
          nPrime++;
        }
        n++;
      }
    })();
    var W = [];
    var SHA256 = C_algo.SHA256 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new WordArray.init(H.slice(0));
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        var H = this._hash.words;
        var a = H[0];
        var b = H[1];
        var c = H[2];
        var d = H[3];
        var e = H[4];
        var f = H[5];
        var g = H[6];
        var h = H[7];
        for (var i = 0; i < 64; i++) {
          if (i < 16) W[i] = 0 | M[offset + i]; else {
            var gamma0x = W[i - 15];
            var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;
            var gamma1x = W[i - 2];
            var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;
            W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
          }
          var ch = e & f ^ ~e & g;
          var maj = a & b ^ a & c ^ b & c;
          var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);
          var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);
          var t1 = h + sigma1 + ch + K[i] + W[i];
          var t2 = sigma0 + maj;
          h = g;
          g = f;
          f = e;
          e = d + t1 | 0;
          d = c;
          c = b;
          b = a;
          a = t1 + t2 | 0;
        }
        H[0] = H[0] + a | 0;
        H[1] = H[1] + b | 0;
        H[2] = H[2] + c | 0;
        H[3] = H[3] + d | 0;
        H[4] = H[4] + e | 0;
        H[5] = H[5] + f | 0;
        H[6] = H[6] + g | 0;
        H[7] = H[7] + h | 0;
      },
      _doFinalize: function _doFinalize() {
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = 8 * this._nDataBytes;
        var nBitsLeft = 8 * data.sigBytes;
        dataWords[nBitsLeft >>> 5] |= 128 << 24 - nBitsLeft % 32;
        dataWords[14 + (nBitsLeft + 64 >>> 9 << 4)] = Math.floor(nBitsTotal / 4294967296);
        dataWords[15 + (nBitsLeft + 64 >>> 9 << 4)] = nBitsTotal;
        data.sigBytes = 4 * dataWords.length;
        this._process();
        return this._hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      }
    });
    C.SHA256 = Hasher._createHelper(SHA256);
    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);
    module.exports = SHA256;
    cc._RF.pop();
  }, {
    "./crypto-core": "crypto-core"
  } ],
  sha512: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "73b65XJH9BKnZ+WZXhQ69ub", "sha512");
    "use strict";
    var CryptoJS = require("./crypto-core");
    var C = CryptoJS;
    var C_lib = C.lib;
    var Hasher = C_lib.Hasher;
    var C_x64 = C.x64;
    var X64Word = C_x64.Word;
    var X64WordArray = C_x64.WordArray;
    var C_algo = C.algo;
    function X64Word_create() {
      return X64Word.create.apply(X64Word, arguments);
    }
    var K = [ X64Word_create(1116352408, 3609767458), X64Word_create(1899447441, 602891725), X64Word_create(3049323471, 3964484399), X64Word_create(3921009573, 2173295548), X64Word_create(961987163, 4081628472), X64Word_create(1508970993, 3053834265), X64Word_create(2453635748, 2937671579), X64Word_create(2870763221, 3664609560), X64Word_create(3624381080, 2734883394), X64Word_create(310598401, 1164996542), X64Word_create(607225278, 1323610764), X64Word_create(1426881987, 3590304994), X64Word_create(1925078388, 4068182383), X64Word_create(2162078206, 991336113), X64Word_create(2614888103, 633803317), X64Word_create(3248222580, 3479774868), X64Word_create(3835390401, 2666613458), X64Word_create(4022224774, 944711139), X64Word_create(264347078, 2341262773), X64Word_create(604807628, 2007800933), X64Word_create(770255983, 1495990901), X64Word_create(1249150122, 1856431235), X64Word_create(1555081692, 3175218132), X64Word_create(1996064986, 2198950837), X64Word_create(2554220882, 3999719339), X64Word_create(2821834349, 766784016), X64Word_create(2952996808, 2566594879), X64Word_create(3210313671, 3203337956), X64Word_create(3336571891, 1034457026), X64Word_create(3584528711, 2466948901), X64Word_create(113926993, 3758326383), X64Word_create(338241895, 168717936), X64Word_create(666307205, 1188179964), X64Word_create(773529912, 1546045734), X64Word_create(1294757372, 1522805485), X64Word_create(1396182291, 2643833823), X64Word_create(1695183700, 2343527390), X64Word_create(1986661051, 1014477480), X64Word_create(2177026350, 1206759142), X64Word_create(2456956037, 344077627), X64Word_create(2730485921, 1290863460), X64Word_create(2820302411, 3158454273), X64Word_create(3259730800, 3505952657), X64Word_create(3345764771, 106217008), X64Word_create(3516065817, 3606008344), X64Word_create(3600352804, 1432725776), X64Word_create(4094571909, 1467031594), X64Word_create(275423344, 851169720), X64Word_create(430227734, 3100823752), X64Word_create(506948616, 1363258195), X64Word_create(659060556, 3750685593), X64Word_create(883997877, 3785050280), X64Word_create(958139571, 3318307427), X64Word_create(1322822218, 3812723403), X64Word_create(1537002063, 2003034995), X64Word_create(1747873779, 3602036899), X64Word_create(1955562222, 1575990012), X64Word_create(2024104815, 1125592928), X64Word_create(2227730452, 2716904306), X64Word_create(2361852424, 442776044), X64Word_create(2428436474, 593698344), X64Word_create(2756734187, 3733110249), X64Word_create(3204031479, 2999351573), X64Word_create(3329325298, 3815920427), X64Word_create(3391569614, 3928383900), X64Word_create(3515267271, 566280711), X64Word_create(3940187606, 3454069534), X64Word_create(4118630271, 4000239992), X64Word_create(116418474, 1914138554), X64Word_create(174292421, 2731055270), X64Word_create(289380356, 3203993006), X64Word_create(460393269, 320620315), X64Word_create(685471733, 587496836), X64Word_create(852142971, 1086792851), X64Word_create(1017036298, 365543100), X64Word_create(1126000580, 2618297676), X64Word_create(1288033470, 3409855158), X64Word_create(1501505948, 4234509866), X64Word_create(1607167915, 987167468), X64Word_create(1816402316, 1246189591) ];
    var W = [];
    (function() {
      for (var i = 0; i < 80; i++) W[i] = X64Word_create();
    })();
    var SHA512 = C_algo.SHA512 = Hasher.extend({
      _doReset: function _doReset() {
        this._hash = new X64WordArray.init([ new X64Word.init(1779033703, 4089235720), new X64Word.init(3144134277, 2227873595), new X64Word.init(1013904242, 4271175723), new X64Word.init(2773480762, 1595750129), new X64Word.init(1359893119, 2917565137), new X64Word.init(2600822924, 725511199), new X64Word.init(528734635, 4215389547), new X64Word.init(1541459225, 327033209) ]);
      },
      _doProcessBlock: function _doProcessBlock(M, offset) {
        var H = this._hash.words;
        var H0 = H[0];
        var H1 = H[1];
        var H2 = H[2];
        var H3 = H[3];
        var H4 = H[4];
        var H5 = H[5];
        var H6 = H[6];
        var H7 = H[7];
        var H0h = H0.high;
        var H0l = H0.low;
        var H1h = H1.high;
        var H1l = H1.low;
        var H2h = H2.high;
        var H2l = H2.low;
        var H3h = H3.high;
        var H3l = H3.low;
        var H4h = H4.high;
        var H4l = H4.low;
        var H5h = H5.high;
        var H5l = H5.low;
        var H6h = H6.high;
        var H6l = H6.low;
        var H7h = H7.high;
        var H7l = H7.low;
        var ah = H0h;
        var al = H0l;
        var bh = H1h;
        var bl = H1l;
        var ch = H2h;
        var cl = H2l;
        var dh = H3h;
        var dl = H3l;
        var eh = H4h;
        var el = H4l;
        var fh = H5h;
        var fl = H5l;
        var gh = H6h;
        var gl = H6l;
        var hh = H7h;
        var hl = H7l;
        for (var i = 0; i < 80; i++) {
          var Wil;
          var Wih;
          var Wi = W[i];
          if (i < 16) {
            Wih = Wi.high = 0 | M[offset + 2 * i];
            Wil = Wi.low = 0 | M[offset + 2 * i + 1];
          } else {
            var gamma0x = W[i - 15];
            var gamma0xh = gamma0x.high;
            var gamma0xl = gamma0x.low;
            var gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;
            var gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);
            var gamma1x = W[i - 2];
            var gamma1xh = gamma1x.high;
            var gamma1xl = gamma1x.low;
            var gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;
            var gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);
            var Wi7 = W[i - 7];
            var Wi7h = Wi7.high;
            var Wi7l = Wi7.low;
            var Wi16 = W[i - 16];
            var Wi16h = Wi16.high;
            var Wi16l = Wi16.low;
            Wil = gamma0l + Wi7l;
            Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);
            Wil += gamma1l;
            Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);
            Wil += Wi16l;
            Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);
            Wi.high = Wih;
            Wi.low = Wil;
          }
          var chh = eh & fh ^ ~eh & gh;
          var chl = el & fl ^ ~el & gl;
          var majh = ah & bh ^ ah & ch ^ bh & ch;
          var majl = al & bl ^ al & cl ^ bl & cl;
          var sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);
          var sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);
          var sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);
          var sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);
          var Ki = K[i];
          var Kih = Ki.high;
          var Kil = Ki.low;
          var t1l = hl + sigma1l;
          var t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);
          t1l += chl;
          t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);
          t1l += Kil;
          t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);
          t1l += Wil;
          t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);
          var t2l = sigma0l + majl;
          var t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);
          hh = gh;
          hl = gl;
          gh = fh;
          gl = fl;
          fh = eh;
          fl = el;
          el = dl + t1l | 0;
          eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;
          dh = ch;
          dl = cl;
          ch = bh;
          cl = bl;
          bh = ah;
          bl = al;
          al = t1l + t2l | 0;
          ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;
        }
        H0l = H0.low = H0l + al;
        H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);
        H1l = H1.low = H1l + bl;
        H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);
        H2l = H2.low = H2l + cl;
        H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);
        H3l = H3.low = H3l + dl;
        H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);
        H4l = H4.low = H4l + el;
        H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);
        H5l = H5.low = H5l + fl;
        H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);
        H6l = H6.low = H6l + gl;
        H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);
        H7l = H7.low = H7l + hl;
        H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);
      },
      _doFinalize: function _doFinalize() {
        var data = this._data;
        var dataWords = data.words;
        var nBitsTotal = 8 * this._nDataBytes;
        var nBitsLeft = 8 * data.sigBytes;
        dataWords[nBitsLeft >>> 5] |= 128 << 24 - nBitsLeft % 32;
        dataWords[30 + (nBitsLeft + 128 >>> 10 << 5)] = Math.floor(nBitsTotal / 4294967296);
        dataWords[31 + (nBitsLeft + 128 >>> 10 << 5)] = nBitsTotal;
        data.sigBytes = 4 * dataWords.length;
        this._process();
        var hash = this._hash.toX32();
        return hash;
      },
      clone: function clone() {
        var clone = Hasher.clone.call(this);
        clone._hash = this._hash.clone();
        return clone;
      },
      blockSize: 32
    });
    C.SHA512 = Hasher._createHelper(SHA512);
    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);
    module.exports = SHA512;
    cc._RF.pop();
  }, {
    "./crypto-core": "crypto-core"
  } ],
  skyController: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "56880pJQv9Ixp3QtjbKTOq1", "skyController");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var SkyController = function(_super) {
      __extends(SkyController, _super);
      function SkyController() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.clouds = [];
        _this.startPos = null;
        _this.endPos = null;
        _this.speeds = [ 30, 30, 20, 20, 10, 10 ];
        return _this;
      }
      SkyController.prototype.start = function() {
        var _this = this;
        this.clouds.forEach(function(cloud, index) {
          _this.startPos[index] = cloud.x;
        });
      };
      SkyController.prototype.update = function(dt) {
        this.cloudMoving(dt);
        this.resetCloudPos();
      };
      SkyController.prototype.cloudMoving = function(dt) {
        var _this = this;
        this.clouds.forEach(function(cloud, index) {
          cloud.x += _this.speeds[index] * dt;
        });
      };
      SkyController.prototype.resetCloudPos = function() {
        var _this = this;
        this.clouds.forEach(function(cloud, index) {
          cloud.x > _this.endPos.x && (cloud.x = _this.startPos.x);
        });
      };
      __decorate([ property(cc.Node) ], SkyController.prototype, "clouds", void 0);
      __decorate([ property(cc.Node) ], SkyController.prototype, "startPos", void 0);
      __decorate([ property(cc.Node) ], SkyController.prototype, "endPos", void 0);
      SkyController = __decorate([ ccclass ], SkyController);
      return SkyController;
    }(cc.Component);
    exports.default = SkyController;
    cc._RF.pop();
  }, {} ],
  spineAtlasHolder: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "7e25amcC3dLvL6VE8YRx2Ii", "spineAtlasHolder");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        list: {
          type: cc.TextAsset,
          default: []
        }
      },
      start: function start() {}
    });
    cc._RF.pop();
  }, {} ],
  toast: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3cc91pRNydNL5bAHO3LpyB0", "toast");
    "use strict";
    cc.Class({
      extends: cc.Component,
      init: function init(data) {
        this.getComponent(cc.RichText).string = data;
        this.getComponent(cc.Animation).play("toastMoving");
      }
    });
    cc._RF.pop();
  }, {} ],
  toggle: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "bfd0bhgWrFDvLUBBsHmKOYY", "toggle");
    "use strict";
    cc.Class({
      extends: cc.Component,
      properties: {
        spriteActive: {
          type: cc.SpriteFrame,
          default: null
        },
        spriteInactive: {
          type: cc.SpriteFrame,
          default: null
        }
      },
      check: function check() {
        this.getComponent(cc.Sprite).spriteFrame = this.spriteActive;
      },
      uncheck: function uncheck() {
        this.getComponent(cc.Sprite).spriteFrame = this.spriteInactive;
      }
    });
    cc._RF.pop();
  }, {} ],
  turnBaseFSM: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "05876D4O3hD65hcLNOJ+JVP", "turnBaseFSM");
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var StateMachine = require("javascript-state-machine");
    exports.default = StateMachine.factory({
      init: "bootingGame",
      transitions: [ {
        name: "gameStart",
        from: "bootingGame",
        to: "waitingAction"
      }, {
        name: "gameResume",
        from: "*",
        to: "showingResult"
      }, {
        name: "actionTrigger",
        from: "waitingAction",
        to: "waitingResult"
      }, {
        name: "resultReceive",
        from: "waitingResult",
        to: "showingResult"
      }, {
        name: "gameRestart",
        from: "showingResult",
        to: "waitingAction"
      }, {
        name: "gameEnd",
        from: "showingResult",
        to: "closingGame"
      }, {
        name: "reboot",
        from: "*",
        to: "bootingGame"
      } ],
      methods: {
        onInvalidTransition: function onInvalidTransition() {},
        onPendingTransition: function onPendingTransition() {},
        onTransition: function onTransition(lifecycle) {
          this.GAME_MODE && cc.log("%c " + this.GAME_MODE + ":%c run " + lifecycle.transition + " =>", "color:blue;", "color:red;", lifecycle.to);
        }
      }
    });
    module.exports = exports["default"];
    cc._RF.pop();
  }, {
    "javascript-state-machine": 156
  } ],
  uiManager: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "64addr04KdBSZ4A14blb38F", "uiManager");
    "use strict";
    var __extends = this && this.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function(d, b) {
          d.__proto__ = b;
        } || function(d, b) {
          for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __decorate = this && this.__decorate || function(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : null === desc ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if ("object" === typeof Reflect && "function" === typeof Reflect.decorate) r = Reflect.decorate(decorators, target, key, desc); else for (var i = decorators.length - 1; i >= 0; i--) (d = decorators[i]) && (r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r);
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var gaEventEmitter_1 = require("./cc-arcade-base/Scripts/Common/gaEventEmitter");
    var gaEventsCode_1 = require("./cc-arcade-base/Scripts/Definitions/gaEventsCode");
    var data_1 = require("./data");
    var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
    var UIManager = function(_super) {
      __extends(UIManager, _super);
      function UIManager() {
        var _this = null !== _super && _super.apply(this, arguments) || this;
        _this.popupNode = null;
        _this.scrollNode = null;
        _this.betPools = null;
        _this.betBackground = null;
        _this.startButton = null;
        _this.autoBetButton = null;
        _this.popupLbl = null;
        return _this;
      }
      UIManager.prototype.start = function() {
        this.popupNode.active = false;
        this.popupNode.scale = 0;
        this.activeBettingArea(true);
        gaEventEmitter_1.default.instance.registerEvent(gaEventsCode_1.default.NETWORK.CANNOT_AUTHEN, this.loginFailed.bind(this));
      };
      UIManager.prototype.openPopup = function() {
        this.popupNode.active = true;
        cc.tween(this.popupNode).to(.5, {
          scale: 1
        }).start();
      };
      UIManager.prototype.closePopup = function() {
        var _this = this;
        cc.tween(this.popupNode).to(.5, {
          scale: 0
        }).call(function() {
          _this.popupNode.active = false;
        }).start();
      };
      UIManager.prototype.loginFailed = function() {
        this.openPopup();
        this.setLabelPopup("Login Failed");
      };
      UIManager.prototype.loginSuccess = function() {
        this.openPopup();
        this.setLabelPopup("Login Success");
      };
      UIManager.prototype.scrollUI = function(distance) {
        cc.tween(this.node).by(data_1.Data.instance.timePrepare, {
          x: distance
        }).start();
      };
      UIManager.prototype.setLabelPopup = function(content) {
        this.popupLbl.string = content;
      };
      UIManager.prototype.activeBettingArea = function(status) {
        this.betPools.active = status;
        this.betBackground.active = status;
        this.startButton.active = status;
        this.scrollNode.active = status;
        this.autoBetButton.active = status;
      };
      __decorate([ property(cc.Node) ], UIManager.prototype, "popupNode", void 0);
      __decorate([ property(cc.Node) ], UIManager.prototype, "scrollNode", void 0);
      __decorate([ property(cc.Node) ], UIManager.prototype, "betPools", void 0);
      __decorate([ property(cc.Node) ], UIManager.prototype, "betBackground", void 0);
      __decorate([ property(cc.Node) ], UIManager.prototype, "startButton", void 0);
      __decorate([ property(cc.Node) ], UIManager.prototype, "autoBetButton", void 0);
      __decorate([ property(cc.Label) ], UIManager.prototype, "popupLbl", void 0);
      UIManager = __decorate([ ccclass ], UIManager);
      return UIManager;
    }(cc.Component);
    exports.default = UIManager;
    cc._RF.pop();
  }, {
    "./cc-arcade-base/Scripts/Common/gaEventEmitter": "gaEventEmitter",
    "./cc-arcade-base/Scripts/Definitions/gaEventsCode": "gaEventsCode",
    "./data": "data"
  } ],
  utils: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "3c4a5DwotJFrJqGnKWzjZeb", "utils");
    "use strict";
    var _typeof = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(obj) {
      return typeof obj;
    } : function(obj) {
      return obj && "function" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
    var lodash = require("lodash");
    var floatUtils = require("floatUtils");
    var Big = require("big");
    var UTIL_CONFIG = {
      CURRENCY_CONFIG: null
    };
    function updateUtilConfig(key, value) {
      UTIL_CONFIG.hasOwnProperty(key) && (UTIL_CONFIG[key] = value);
    }
    function getUtilConfig() {
      return UTIL_CONFIG;
    }
    function getDecimalCount(number) {
      var min = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      var max = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
      var converted = number.toString();
      if (converted.includes(".")) {
        var count = converted.split(".")[1].length;
        count = Math.max(count, min);
        max && count > max && (count = max);
        return count;
      }
      return min || 0;
    }
    function formatCoin(amount) {
      var decimalCount = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      var decimal = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ".";
      var thousands = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ",";
      if (amount < 0) return toFixed(0, decimalCount);
      var splitStr = toFixed(amount, decimalCount).split(".");
      var decimalStr = splitStr[1] || "";
      var integerArr = splitStr[0].split("");
      var index = integerArr.length;
      while ((index -= 3) > 0) integerArr.splice(index, 0, thousands);
      decimalStr && integerArr.push(decimal, decimalStr);
      return integerArr.join("");
    }
    var MD5 = function MD5(e) {
      function h(a, b) {
        var c, d, e, f, g;
        e = 2147483648 & a;
        f = 2147483648 & b;
        c = 1073741824 & a;
        d = 1073741824 & b;
        g = (1073741823 & a) + (1073741823 & b);
        return c & d ? 2147483648 ^ g ^ e ^ f : c | d ? 1073741824 & g ? 3221225472 ^ g ^ e ^ f : 1073741824 ^ g ^ e ^ f : g ^ e ^ f;
      }
      function k(a, b, c, d, e, f, g) {
        a = h(a, h(h(b & c | ~b & d, e), g));
        return h(a << f | a >>> 32 - f, b);
      }
      function l(a, b, c, d, e, f, g) {
        a = h(a, h(h(b & d | c & ~d, e), g));
        return h(a << f | a >>> 32 - f, b);
      }
      function m(a, b, d, c, e, f, g) {
        a = h(a, h(h(b ^ d ^ c, e), g));
        return h(a << f | a >>> 32 - f, b);
      }
      function n(a, b, d, c, e, f, g) {
        a = h(a, h(h(d ^ (b | ~c), e), g));
        return h(a << f | a >>> 32 - f, b);
      }
      function p(a) {
        var b = "", d = "", c;
        for (c = 0; 3 >= c; c++) d = a >>> 8 * c & 255, d = "0" + d.toString(16), b += d.substr(d.length - 2, 2);
        return b;
      }
      var f = [], q, r, s, t, a, b, c, d;
      e = function(a) {
        a = a.replace(/\r\n/g, "\n");
        for (var b = "", d = 0; d < a.length; d++) {
          var c = a.charCodeAt(d);
          128 > c ? b += String.fromCharCode(c) : (127 < c && 2048 > c ? b += String.fromCharCode(c >> 6 | 192) : (b += String.fromCharCode(c >> 12 | 224), 
          b += String.fromCharCode(c >> 6 & 63 | 128)), b += String.fromCharCode(63 & c | 128));
        }
        return b;
      }(e);
      f = function(b) {
        var a, c = b.length;
        a = c + 8;
        for (var d = 16 * ((a - a % 64) / 64 + 1), e = Array(d - 1), f = 0, g = 0; g < c; ) a = (g - g % 4) / 4, 
        f = g % 4 * 8, e[a] |= b.charCodeAt(g) << f, g++;
        a = (g - g % 4) / 4;
        e[a] |= 128 << g % 4 * 8;
        e[d - 2] = c << 3;
        e[d - 1] = c >>> 29;
        return e;
      }(e);
      a = 1732584193;
      b = 4023233417;
      c = 2562383102;
      d = 271733878;
      for (e = 0; e < f.length; e += 16) q = a, r = b, s = c, t = d, a = k(a, b, c, d, f[e + 0], 7, 3614090360), 
      d = k(d, a, b, c, f[e + 1], 12, 3905402710), c = k(c, d, a, b, f[e + 2], 17, 606105819), 
      b = k(b, c, d, a, f[e + 3], 22, 3250441966), a = k(a, b, c, d, f[e + 4], 7, 4118548399), 
      d = k(d, a, b, c, f[e + 5], 12, 1200080426), c = k(c, d, a, b, f[e + 6], 17, 2821735955), 
      b = k(b, c, d, a, f[e + 7], 22, 4249261313), a = k(a, b, c, d, f[e + 8], 7, 1770035416), 
      d = k(d, a, b, c, f[e + 9], 12, 2336552879), c = k(c, d, a, b, f[e + 10], 17, 4294925233), 
      b = k(b, c, d, a, f[e + 11], 22, 2304563134), a = k(a, b, c, d, f[e + 12], 7, 1804603682), 
      d = k(d, a, b, c, f[e + 13], 12, 4254626195), c = k(c, d, a, b, f[e + 14], 17, 2792965006), 
      b = k(b, c, d, a, f[e + 15], 22, 1236535329), a = l(a, b, c, d, f[e + 1], 5, 4129170786), 
      d = l(d, a, b, c, f[e + 6], 9, 3225465664), c = l(c, d, a, b, f[e + 11], 14, 643717713), 
      b = l(b, c, d, a, f[e + 0], 20, 3921069994), a = l(a, b, c, d, f[e + 5], 5, 3593408605), 
      d = l(d, a, b, c, f[e + 10], 9, 38016083), c = l(c, d, a, b, f[e + 15], 14, 3634488961), 
      b = l(b, c, d, a, f[e + 4], 20, 3889429448), a = l(a, b, c, d, f[e + 9], 5, 568446438), 
      d = l(d, a, b, c, f[e + 14], 9, 3275163606), c = l(c, d, a, b, f[e + 3], 14, 4107603335), 
      b = l(b, c, d, a, f[e + 8], 20, 1163531501), a = l(a, b, c, d, f[e + 13], 5, 2850285829), 
      d = l(d, a, b, c, f[e + 2], 9, 4243563512), c = l(c, d, a, b, f[e + 7], 14, 1735328473), 
      b = l(b, c, d, a, f[e + 12], 20, 2368359562), a = m(a, b, c, d, f[e + 5], 4, 4294588738), 
      d = m(d, a, b, c, f[e + 8], 11, 2272392833), c = m(c, d, a, b, f[e + 11], 16, 1839030562), 
      b = m(b, c, d, a, f[e + 14], 23, 4259657740), a = m(a, b, c, d, f[e + 1], 4, 2763975236), 
      d = m(d, a, b, c, f[e + 4], 11, 1272893353), c = m(c, d, a, b, f[e + 7], 16, 4139469664), 
      b = m(b, c, d, a, f[e + 10], 23, 3200236656), a = m(a, b, c, d, f[e + 13], 4, 681279174), 
      d = m(d, a, b, c, f[e + 0], 11, 3936430074), c = m(c, d, a, b, f[e + 3], 16, 3572445317), 
      b = m(b, c, d, a, f[e + 6], 23, 76029189), a = m(a, b, c, d, f[e + 9], 4, 3654602809), 
      d = m(d, a, b, c, f[e + 12], 11, 3873151461), c = m(c, d, a, b, f[e + 15], 16, 530742520), 
      b = m(b, c, d, a, f[e + 2], 23, 3299628645), a = n(a, b, c, d, f[e + 0], 6, 4096336452), 
      d = n(d, a, b, c, f[e + 7], 10, 1126891415), c = n(c, d, a, b, f[e + 14], 15, 2878612391), 
      b = n(b, c, d, a, f[e + 5], 21, 4237533241), a = n(a, b, c, d, f[e + 12], 6, 1700485571), 
      d = n(d, a, b, c, f[e + 3], 10, 2399980690), c = n(c, d, a, b, f[e + 10], 15, 4293915773), 
      b = n(b, c, d, a, f[e + 1], 21, 2240044497), a = n(a, b, c, d, f[e + 8], 6, 1873313359), 
      d = n(d, a, b, c, f[e + 15], 10, 4264355552), c = n(c, d, a, b, f[e + 6], 15, 2734768916), 
      b = n(b, c, d, a, f[e + 13], 21, 1309151649), a = n(a, b, c, d, f[e + 4], 6, 4149444226), 
      d = n(d, a, b, c, f[e + 11], 10, 3174756917), c = n(c, d, a, b, f[e + 2], 15, 718787259), 
      b = n(b, c, d, a, f[e + 9], 21, 3951481745), a = h(a, q), b = h(b, r), c = h(c, s), 
      d = h(d, t);
      return (p(a) + p(b) + p(c) + p(d)).toLowerCase();
    };
    var getFBAvatar = function getFBAvatar(url, spriteA, defaultAvatar, AvatarAtlas) {
      var dirpath = jsb.fileUtils.getWritablePath() + "avaImg/";
      var filepath = dirpath + MD5(url) + ".png";
      function loadEnd() {
        cc.loader.load(filepath, function(err, tex) {
          if (err) {
            cc.warn(err);
            spriteA.spriteFrame = defaultAvatar;
          } else {
            var spriteFrame = new cc.SpriteFrame(tex);
            spriteFrame && (spriteA.spriteFrame = spriteFrame);
          }
        });
      }
      cc.sys.os === cc.sys.OS_ANDROID && cc.sys.isNative && jsb.fileUtils.isFileExist(filepath) && jsb.fileUtils.removeFile(filepath);
      var saveFile = function saveFile(data) {
        if ("undefined" !== typeof data) {
          jsb.fileUtils.isDirectoryExist(dirpath) || jsb.fileUtils.createDirectory(dirpath);
          if (jsb.fileUtils.writeDataToFile(new Uint8Array(data), filepath)) {
            cc.warn("Remote write file succeed.");
            loadEnd();
          } else {
            spriteA.spriteFrame = defaultAvatar;
            cc.warn("Remote write file failed.");
          }
        } else {
          spriteA.spriteFrame = defaultAvatar;
          cc.warn("Remote download file failed.");
        }
      };
      if (cc.sys.os === cc.sys.OS_IOS && cc.sys.isNative) if (-1 !== url.indexOf("facebook")) {
        jsb.fileUtils.isFileExist(filepath) && loadEnd();
        var xhr = new XMLHttpRequest();
        xhr.responseType = "arraybuffer";
        xhr.onreadystatechange = function() {
          cc.log("xhr.readyState  " + xhr.readyState);
          cc.log("xhr.status  " + xhr.status);
          4 === xhr.readyState && 200 === xhr.status && saveFile(xhr.response);
        }.bind(void 0);
        xhr.open("GET", url, true);
        xhr.send();
      } else {
        var spFrame = defaultAvatar;
        if (url) {
          var filename = url.substring(url.lastIndexOf("/") + 1);
          if (filename.match(/avatar_[0-9][0-9].png/)) {
            var num = filename.substring(7, 8);
            var spInt = parseInt(num);
            spFrame = spInt >= 0 && spInt <= 32 ? filename.split(".")[0] : defaultAvatar;
          } else spFrame = defaultAvatar;
        }
        spriteA.spriteFrame = AvatarAtlas.getSpriteFrame(spFrame);
      } else {
        var _xhr = new XMLHttpRequest();
        _xhr.responseType = "arraybuffer";
        _xhr.onreadystatechange = function() {
          cc.log("xhr.readyState  " + _xhr.readyState);
          cc.log("xhr.status  " + _xhr.status);
          4 === _xhr.readyState && (200 === _xhr.status ? saveFile(_xhr.response) : saveFile(null));
        }.bind(void 0);
        _xhr.open("GET", url, true);
        _xhr.send();
      }
    };
    var loadAvatarFacebook = function loadAvatarFacebook(avatarSprite, ava, atlas) {
      var prefix = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "avatar_";
      var leadingZeroLength = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
      var avatarDefault = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "avatar_01";
      if (!avatarSprite || !avatarSprite.node) return;
      var defaultAvatar = atlas.getSpriteFrame(avatarDefault);
      if (!defaultAvatar) return;
      var _sframe = decodeURIComponent(ava);
      if ((ava + "").indexOf("avatar_") > -1) _sframe = ava || avatarDefault; else {
        isNaN(ava) || (ava = Number.parseInt(ava));
        if (lodash.isNumber(ava)) {
          ava += 1;
          if (leadingZeroLength > 0) {
            var zeroPad = function zeroPad(num, places) {
              return String(num).padStart(places, "0");
            };
            ava = zeroPad(ava, leadingZeroLength);
          }
          _sframe = prefix + ava;
        }
      }
      if (_sframe.indexOf("avatar_") > -1 && -1 === _sframe.indexOf("facebook") && _sframe.indexOf("http") > -1) {
        var avaId = _sframe.split("avatar_");
        var frame = defaultAvatar;
        avaId[1] && (frame = atlas.getSpriteFrame("avatar_" + avaId[1].replace(".png", "")));
        frame = frame || defaultAvatar;
        avatarSprite.spriteFrame = frame;
        return false;
      }
      if (-1 === _sframe.indexOf("http")) {
        var _frame = atlas.getSpriteFrame(_sframe);
        _frame = _frame || defaultAvatar;
        avatarSprite.spriteFrame = _frame;
        return false;
      }
      -1 !== _sframe.indexOf("facebook") && (_sframe = _sframe.replace("http://", "https://"));
      cc.loader.load({
        url: decodeURIComponent(ava),
        type: "png"
      }, function(err, imageRes) {
        if (!avatarSprite || !avatarSprite.node) return;
        if (err) avatarSprite.spriteFrame = defaultAvatar; else if (imageRes instanceof cc.Texture2D) {
          var spriteFrame = new cc.SpriteFrame();
          spriteFrame.setTexture(imageRes);
          if (avatarSprite && avatarSprite.node && avatarSprite.node.getComponent) {
            var com = avatarSprite.node.getComponent(cc.Sprite);
            com && false != cc.isValid(com, true) || (com = avatarSprite.node.addComponent(cc.Sprite));
            com.spriteFrame = new cc.SpriteFrame(spriteFrame.getTexture());
          }
        } else avatarSprite.spriteFrame = defaultAvatar;
      });
      return true;
    };
    var findKeyByValue = function findKeyByValue(object, value) {
      return Object.keys(object).find(function(key) {
        return object[key] == value;
      });
    };
    var convertObjectToArrayKey = function convertObjectToArrayKey(object) {
      var newArray = [];
      for (var key in object) newArray.push({
        key: key,
        value: object[key]
      });
      newArray = newArray.sort(function(a, b) {
        return a.value - b.value;
      });
      newArray.forEach(function(item, index) {
        newArray[index] = item.key;
      });
      return newArray;
    };
    var convertObjectToArray = function convertObjectToArray(object) {
      var newArray = [];
      for (var key in object) newArray.push({
        key: key,
        value: object[key]
      });
      newArray = newArray.sort(function(a, b) {
        return a.value - b.value;
      });
      newArray.forEach(function(item, index) {
        newArray[index] = item.value;
      });
      return newArray;
    };
    var convertElementArrayToString = function convertElementArrayToString(arr) {
      var newArr = [];
      if (!lodash.isEmpty(arr)) for (var i = 0; i < arr.length; i++) {
        var number = parseFloat(arr[i]);
        newArr.push(number + "");
      }
      return newArr;
    };
    var convertTo2DArray = function convertTo2DArray(_ref) {
      var arr = _ref.arr, isReserve = _ref.isReserve, ROW_NUMBER = _ref.ROW_NUMBER, REEL_NUMBER = _ref.REEL_NUMBER;
      var finalArr = [];
      for (var i = 0; i < ROW_NUMBER; i++) finalArr.push([]);
      if (!lodash.isEmpty(arr)) for (var _i = 0; _i < arr.length; _i++) {
        var currentRow = Math.floor(_i / REEL_NUMBER);
        finalArr[currentRow].push(arr[_i]);
      }
      isReserve && (finalArr = finalArr.reverse());
      return finalArr;
    };
    var convertPayLine = function convertPayLine() {
      var payLines = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
      var listNewPL = [];
      for (var i = 0; i < payLines.length; i++) {
        var dataSplit = payLines[i].split(";");
        dataSplit.length >= 3 && listNewPL.push({
          payLineID: dataSplit[0],
          payLineWinNumbers: parseInt(dataSplit[1]),
          payLineWinAmount: dataSplit[2],
          payLineSymbol: dataSplit[3]
        });
      }
      return listNewPL;
    };
    var convertPayLineAllways = function convertPayLineAllways() {
      var payLines = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
      var multiplier = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
      var betDenom = arguments[2];
      var listNewPL = [];
      for (var i = 0; i < payLines.length; i++) if (payLines[i].includes(";")) {
        var dataSplit = payLines[i].split(";");
        0 !== dataSplit.length ? listNewPL.push({
          symbolId: dataSplit[0],
          totalWinAmount: dataSplit[1],
          symbolCount: dataSplit[2],
          combination: dataSplit[3],
          payableSymbol: dataSplit[4],
          betDenom: betDenom,
          multiplier: multiplier
        }) : cc.log("payLines is not right AKTV formatted");
      }
      return listNewPL;
    };
    var convertAssetArrayToObject = function convertAssetArrayToObject(arr) {
      var ret = {};
      for (var i = 0; i < arr.length; i++) arr[i] && arr[i]._name && (ret[arr[i]._name] = arr[i]);
      return ret;
    };
    var convertSlotMatrixTBLR = function convertSlotMatrixTBLR() {
      var arr = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 ];
      var format = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [ 3, 4, 5, 3 ];
      var finalArr = [];
      var copyArr = arr.slice();
      var colNum = format.length;
      for (var col = 0; col < colNum; col++) {
        finalArr[col] = [];
        var rowNum = format[col];
        for (var row = 0; row < rowNum; row++) finalArr[col][row] = copyArr.shift();
      }
      return finalArr;
    };
    var convertSlotMatrixLRTB = function convertSlotMatrixLRTB() {
      var arr = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 ];
      var format = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [ 3, 3, 3, 3, 3 ];
      var finalArr = [];
      var colNum = format.length;
      for (var col = 0; col < colNum; col++) {
        finalArr[col] = [];
        var rowNum = format[col];
        for (var row = 0; row < rowNum; row++) finalArr[col][row] = arr[row * colNum + col];
      }
      return finalArr;
    };
    var convertSlotMatrixBatch1ToBase = function convertSlotMatrixBatch1ToBase() {
      var arr = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 ];
      var format = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [ 3, 3, 3, 3, 3 ];
      var finalArr = [];
      var colNum = format.length;
      for (var col = 0; col < colNum; col++) {
        finalArr[col] = [];
        var rowNum = format[col];
        for (var row = 0; row < rowNum; row++) finalArr[col][row] = arr[col + colNum * row];
      }
      return finalArr;
    };
    var setDeviceOrientation = function setDeviceOrientation() {
      var isPortrait = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
      if (!cc.sys.isNative || !jsb) return;
      if (isPortrait) {
        if (cc.sys.os == cc.sys.OS_ANDROID) {
          cc.log("==== Android setDeviceOrientation Portrait ====");
          var className = "org/cocos2dx/javascript/AppActivity";
          var methodName = "setNativeOrientation";
          var methodSignature = "(I)V";
          jsb.reflection.callStaticMethod(className, methodName, methodSignature, 1);
        } else cc.sys.os == cc.sys.OS_IOS && jsb.reflection.callStaticMethod("RootViewController", "setGamePortrait");
        cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);
      } else {
        if (cc.sys.os == cc.sys.OS_ANDROID) {
          cc.log("==== Android setDeviceOrientation Landscape ====");
          var _className = "org/cocos2dx/javascript/AppActivity";
          var _methodName = "setNativeOrientation";
          var _methodSignature = "(I)V";
          jsb.reflection.callStaticMethod(_className, _methodName, _methodSignature, 0);
        } else cc.sys.os == cc.sys.OS_IOS && jsb.reflection.callStaticMethod("RootViewController", "setGameLandScape");
        cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);
      }
    };
    function changeParent(child, newParent) {
      if (newParent === child.parent) return;
      var worldPos = child.convertToWorldSpaceAR(cc.v2(0, 0));
      var newPos = newParent.convertToNodeSpaceAR(worldPos);
      var angle = getWorldAngle(child) - getWorldAngle(newParent);
      child.parent = newParent;
      child.setPosition(newPos);
      child.angle = angle;
    }
    function getWorldAngle(node) {
      var currNode = node;
      var angle = currNode.angle;
      while (null != currNode.parent) {
        currNode = currNode.parent;
        angle += currNode.angle;
      }
      return angle % 360;
    }
    var getPostionInOtherNode = function getPostionInOtherNode(spaceNode, targetNode) {
      if (null == targetNode.parent) return null;
      var pos = targetNode.parent.convertToWorldSpaceAR(targetNode.getPosition());
      return spaceNode.convertToNodeSpaceAR(pos);
    };
    var mapObjectKey = function mapObjectKey(obj, keysMap) {
      return lodash.transform(obj, function(result, value, key) {
        var currentKey = key;
        if (keysMap[key]) {
          currentKey = keysMap[key].name;
          keysMap[key].type == Boolean && (value = "T" == value);
          keysMap[key].keepKey && !lodash.isObject(value) && (result[key] = value);
        }
        lodash.isObject(value) ? result[currentKey] = mapObjectKey(value, keysMap) : result[currentKey] = value;
      });
    };
    function TimeSequence(node, list, speed) {
      this.node = node;
      this.list = list || [];
      this.speed = speed || 1;
      this.isRun = false;
      this.currentSeq = null;
      this.run = function() {
        var _this = this;
        if (0 == this.list.length || this.isRun) return;
        var action = this.list.shift();
        this.isRun = true;
        this.currentSeq = cc.speed(cc.sequence(action, cc.callFunc(function() {
          _this.isRun = false;
          _this.run();
        })), this.speed);
        this.node.runAction(this.currentSeq);
      };
      this.cancel = function() {
        this.list = [];
        null != this.currentSeq && null != this.currentSeq.target && this.node.stopAction(this.currentSeq);
      };
      this.updateSpeed = function(speed) {
        this.speed = speed;
      };
    }
    function convertNumberToDecimal(total, n) {
      if (!n) return total;
      var ran = 1;
      for (var i = 0; i < n; i++) ran *= 10;
      return Math.floor(Math.round(total * ran * 10) / 10) / ran;
    }
    function convertNumberToK(value) {
      var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3;
      var b = 1e9;
      var m = 1e6;
      var k = 1e3;
      if (value >= b) return convertNumberToDecimal(value / b, n) + "B";
      if (value >= m) return convertNumberToDecimal(value / m, n) + "M";
      if (value >= k) return convertNumberToDecimal(value / k, n) + "K";
      return convertNumberToDecimal(value, n);
    }
    function randRange(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    }
    function toFixed(num) {
      var fixed = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      Big.RM = 0;
      (isNaN(+num) || "object" === ("undefined" === typeof num ? "undefined" : _typeof(num))) && (num = 0);
      return Big(num).toFixed(fixed);
    }
    function toLocalTime(ts, format) {
      return customDateFormat(new Date(1e3 * ts), format);
    }
    function secondsToHHMMSS(secs) {
      if (0 == secs) return "00:00";
      var sec_num = parseInt(secs, 10);
      var hours = Math.floor(sec_num / 3600);
      var minutes = Math.floor(sec_num / 60) % 60;
      var seconds = sec_num % 60;
      return [ hours, minutes, seconds ].map(function(v) {
        return v < 10 ? "0" + v : v;
      }).filter(function(v, i) {
        return "00" !== v || i > 0;
      }).join(":");
    }
    function customDateFormat(date, formatString) {
      var YYYY, YY, MMMM, MMM, MM, M, DDDD, DDD, DD, D, hhhh, hhh, hh, h, mm, m, ss, s, ampm, AMPM, dMod, th;
      YY = ((YYYY = date.getFullYear()) + "").slice(-2);
      MM = (M = date.getMonth() + 1) < 10 ? "0" + M : M;
      MMM = (MMMM = [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ][M - 1]).substring(0, 3);
      DD = (D = date.getDate()) < 10 ? "0" + D : D;
      DDD = (DDDD = [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ][date.getDay()]).substring(0, 3);
      th = D >= 10 && D <= 20 ? "th" : 1 == (dMod = D % 10) ? "st" : 2 == dMod ? "nd" : 3 == dMod ? "rd" : "th";
      formatString = formatString.replace("#YYYY#", YYYY).replace("#YY#", YY).replace("#MMMM#", MMMM).replace("#MMM#", MMM).replace("#MM#", MM).replace("#M#", M).replace("#DDDD#", DDDD).replace("#DDD#", DDD).replace("#DD#", DD).replace("#D#", D).replace("#th#", th);
      h = hhh = date.getHours();
      0 == h && (h = 24);
      h > 12 && (h -= 12);
      hh = h < 10 ? "0" + h : h;
      hhhh = hhh < 10 ? "0" + hhh : hhh;
      AMPM = (ampm = hhh < 12 ? "am" : "pm").toUpperCase();
      mm = (m = date.getMinutes()) < 10 ? "0" + m : m;
      ss = (s = date.getSeconds()) < 10 ? "0" + s : s;
      return formatString.replace("#hhhh#", hhhh).replace("#hhh#", hhh).replace("#hh#", hh).replace("#h#", h).replace("#mm#", mm).replace("#m#", m).replace("#ss#", ss).replace("#s#", s).replace("#ampm#", ampm).replace("#AMPM#", AMPM);
    }
    function toLocalTimeHHMM(ts) {
      var timestamp = new Date(parseInt(ts));
      var hour = timestamp.getHours();
      var minutes = timestamp.getMinutes();
      var localTime = (hour < 10 ? "0" : "") + hour + "h" + (minutes < 10 ? "0" : "") + minutes;
      return localTime;
    }
    function toLocalClockTime(ts) {
      var timestamp = new Date(parseInt(ts));
      var hour = timestamp.getHours();
      var minutes = timestamp.getMinutes();
      var localTime = hour + "h" + (minutes < 10 ? "0" : "") + minutes;
      return localTime;
    }
    function formatUserName(userName) {
      return userName.trim();
    }
    function getAnimationsName(spine) {
      return Object.keys(spine.skeletonData._skeletonJson.animations);
    }
    function pickOutRandomElements(array) {
      var pickNumber = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
      if (!array || array.length <= 0) throw new Error("invalid array");
      var pickElements = [];
      for (var i = 0; i < pickNumber; i++) {
        var randomIndex = Math.floor(Math.random() * array.length);
        pickElements.push(array.splice(randomIndex, 1)[0]);
      }
      return pickElements;
    }
    function setMixAllAnims(spine) {
      var mixTime = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .15;
      var animNames = getAnimationsName(spine);
      if (animNames.length < 2) {
        cc.error("spine have to have many animations");
        return;
      }
      for (var i = 0; i < animNames.length; i++) for (var j = 0; j < animNames.length; j++) spine.setMix(animNames[i], animNames[j], mixTime);
    }
    function copyTextToClipboard(text) {
      if (cc.sys.isBrowser) {
        var el = document.createElement("textarea");
        el.value = text;
        el.setAttribute("readonly", "");
        el.style.position = "absolute";
        el.style.left = "-9999px";
        document.body.appendChild(el);
        var selected = document.getSelection().rangeCount > 0 && document.getSelection().getRangeAt(0);
        el.select();
        el.setSelectionRange(0, text.length);
        document.execCommand("copy");
        document.body.removeChild(el);
      } else cc.sys.isNative && void 0 != jsb && jsb.copyTextToClipboard(text);
    }
    function registerLoadHowl() {
      if (window.Howl) {
        cc.loader.downloader.extMap["mp3cached"] = cc.loader.downloader.extMap.mp3;
        cc.loader.downloader.extMap.mp3 = function(file, callback) {
          var howl = new window.Howl({
            src: [ file.url ],
            preload: true
          });
          howl.once("load", function() {
            callback(null, howl);
          });
        };
      }
    }
    function unregisterLoadHowl() {
      var cacheLoader = cc.loader.downloader.extMap["mp3cached"];
      cacheLoader && (cc.loader.downloader.extMap.mp3 = cacheLoader);
    }
    function formatMoneyByCurrency(amount) {
      var decimalCount = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
      var decimal = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ".";
      var thousands = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ",";
      var _UTIL_CONFIG$CURRENCY = UTIL_CONFIG.CURRENCY_CONFIG, CENT_UNIT = _UTIL_CONFIG$CURRENCY.CENT_UNIT, CENT_SUFFIX = _UTIL_CONFIG$CURRENCY.CENT_SUFFIX, CURRENCY_PREFIX = _UTIL_CONFIG$CURRENCY.CURRENCY_PREFIX, DECIMAL_COUNT = _UTIL_CONFIG$CURRENCY.DECIMAL_COUNT;
      var prefix = CURRENCY_PREFIX || "";
      var suffix = "";
      (isNaN(decimalCount) || null === decimalCount) && (decimalCount = decimalCount || DECIMAL_COUNT);
      if (CENT_UNIT && Big(amount).lt(CENT_UNIT)) {
        prefix = "";
        suffix = CENT_SUFFIX || "";
        amount = Big(amount || 0).times(100).toNumber();
      }
      return prefix + formatCoin(amount, decimalCount, decimal, thousands) + suffix;
    }
    function formatWalletMoneyByCurrency(num, digits) {
      var _UTIL_CONFIG$CURRENCY2 = UTIL_CONFIG.CURRENCY_CONFIG, CENT_UNIT = _UTIL_CONFIG$CURRENCY2.CENT_UNIT, CENT_SUFFIX = _UTIL_CONFIG$CURRENCY2.CENT_SUFFIX, CURRENCY_PREFIX = _UTIL_CONFIG$CURRENCY2.CURRENCY_PREFIX, DECIMAL_COUNT = _UTIL_CONFIG$CURRENCY2.DECIMAL_COUNT, TRIM_ZERO = _UTIL_CONFIG$CURRENCY2.TRIM_ZERO;
      var prefix = CURRENCY_PREFIX || "";
      var suffix = "";
      (isNaN(digits) || null === digits) && (digits = DECIMAL_COUNT || 2);
      var trimZero = TRIM_ZERO;
      if (CENT_UNIT && Big(num).lt(CENT_UNIT)) {
        prefix = "";
        suffix = CENT_SUFFIX || "";
        num = Big(num || 0).times(100).toNumber();
      }
      return prefix + formatWallet(num, digits, trimZero) + suffix;
    }
    function formatWallet(num, digits) {
      var trimZero = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
      isNaN(parseFloat(num)) && (num = 0);
      var si = [ {
        value: 1,
        symbol: ""
      }, {
        value: 1e3,
        symbol: "K"
      }, {
        value: 1e6,
        symbol: "M"
      }, {
        value: 1e9,
        symbol: "B"
      }, {
        value: 1e12,
        symbol: "T"
      }, {
        value: 1e15,
        symbol: "P"
      }, {
        value: 1e18,
        symbol: "E"
      } ];
      var rx = /\.0+$|(\.[0-9]*[1-9])0+$/;
      var i = void 0;
      for (i = si.length - 1; i > 0; i--) if (num >= si[i].value) break;
      var wallet = toFixed(num / si[i].value, digits);
      trimZero && (wallet = wallet.replace(rx, "$1"));
      return wallet + si[i].symbol;
    }
    module.exports = {
      copyTextToClipboard: copyTextToClipboard,
      loadAvatarFacebook: loadAvatarFacebook,
      getFBAvatar: getFBAvatar,
      convertElementArrayToString: convertElementArrayToString,
      convertTo2DArray: convertTo2DArray,
      convertPayLine: convertPayLine,
      convertSlotMatrixTBLR: convertSlotMatrixTBLR,
      convertSlotMatrixLRTB: convertSlotMatrixLRTB,
      convertAssetArrayToObject: convertAssetArrayToObject,
      changeParent: changeParent,
      findKeyByValue: findKeyByValue,
      convertObjectToArrayKey: convertObjectToArrayKey,
      getPostionInOtherNode: getPostionInOtherNode,
      TimeSequence: TimeSequence,
      setDeviceOrientation: setDeviceOrientation,
      convertSlotMatrixBatch1ToBase: convertSlotMatrixBatch1ToBase,
      convertPayLineAllways: convertPayLineAllways,
      convertObjectToArray: convertObjectToArray,
      toLocalTimeHHMM: toLocalTimeHHMM,
      toLocalClockTime: toLocalClockTime,
      toLocalTime: toLocalTime,
      secondsToHHMMSS: secondsToHHMMSS,
      customDateFormat: customDateFormat,
      mapObjectKey: mapObjectKey,
      formatWalletMoney: function formatWalletMoney(num) {
        var digits = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
        if (UTIL_CONFIG.CURRENCY_CONFIG) return formatWalletMoneyByCurrency(num, digits);
        return formatWallet(num, digits);
      },
      formatMoney: function formatMoney(amount, decimalCount) {
        var decimal = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : ".";
        var thousands = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : ",";
        if (UTIL_CONFIG.CURRENCY_CONFIG) {
          isNaN(decimalCount) && (decimalCount = UTIL_CONFIG.CURRENCY_CONFIG.DECIMAL_COUNT);
          return formatMoneyByCurrency(amount, decimalCount, decimal, thousands);
        }
        return formatCoin(amount, decimalCount, decimal, thousands);
      },
      generateId: function generateId() {
        return this.uuid();
      },
      uuid: function uuid() {
        return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
          var r = 16 * Math.random() | 0, v = "x" === c ? r : 3 & r | 8;
          return v.toString(16);
        }).replace(/-/gi, "");
      },
      getRandomInt: function getRandomInt(min, max) {
        min = Math.ceil(min);
        max = Math.floor(max);
        return Math.floor(Math.random() * (max - min + 1)) + min;
      },
      getText: function getText() {
        var text = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
        var length = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        var result = text;
        var n = length - text.length;
        if (n) for (var i = 0; i < n; i++) result += " ";
        return result;
      },
      getTime: function getTime() {
        function addZero(i) {
          i < 10 && (i = "0" + i);
          return i;
        }
        var d = new Date();
        var h = addZero(d.getHours());
        var m = addZero(d.getMinutes());
        var s = addZero(d.getSeconds());
        var t = h + ":" + m + ":" + s;
        return t;
      },
      getLeftTime: function getLeftTime(endTime, serverTime) {
        var millisecond = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1e3;
        serverTime = serverTime ? new Date(serverTime).getTime() : new Date().getTime();
        var time = Math.floor((new Date(endTime).getTime() - serverTime) / millisecond);
        time < 0 && (time = 0);
        return time;
      },
      getRandomElement: function getRandomElement(array) {
        if (!array || array.length <= 0) throw new Error("invalid array");
        return array[Math.floor(Math.random() * array.length)];
      },
      getClip: function getClip(animation, clipName) {
        return animation.getClips().find(function(clip) {
          return clip.name === clipName;
        });
      },
      getClipDuration: function getClipDuration(animation, clipName) {
        var clip = animation.getClips().find(function(clip) {
          return clip.name === clipName;
        });
        if (!clip) return null;
        return clip.duration;
      },
      addDecimals: function addDecimals(number1, number2) {
        return floatUtils.plus(number1, number2);
      },
      subtractDecimals: function subtractDecimals(number1, number2) {
        return floatUtils.minus(number1, number2);
      },
      multiplyDecimals: function multiplyDecimals(number1, number2) {
        return floatUtils.mul(number1, number2);
      },
      divideDecimals: function divideDecimals(number1, number2) {
        return floatUtils.div(number1, number2);
      },
      convertNumberToDecimal: convertNumberToDecimal,
      convertNumberToK: convertNumberToK,
      randRange: randRange,
      formatUserName: formatUserName,
      setMixAllAnims: setMixAllAnims,
      getWorldAngle: getWorldAngle,
      pickOutRandomElements: pickOutRandomElements,
      registerLoadHowl: registerLoadHowl,
      unregisterLoadHowl: unregisterLoadHowl,
      updateUtilConfig: updateUtilConfig,
      getUtilConfig: getUtilConfig,
      getDecimalCount: getDecimalCount,
      toFixed: toFixed,
      formatCoin: formatCoin,
      floatUtils: floatUtils
    };
    cc._RF.pop();
  }, {
    big: "big",
    floatUtils: "floatUtils",
    lodash: 157
  } ],
  vintageFadeIn: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e0512NEs5RJvYqOvH89vSTV", "vintageFadeIn");
    "use strict";
    var START_R_M = 30;
    var MAX_BLUR_STR = .125;
    cc.Class({
      extends: cc.Component,
      properties: {
        transitionDur: 1,
        blurDur: .5
      },
      onLoad: function onLoad() {
        this.init();
        this.node.activeTransition = this.activeTransition.bind(this);
        this.node.startFadeIn = this.startFadeIn.bind(this);
        this.node.stopBlur = this.stopBlur.bind(this);
      },
      init: function init() {
        var sprite = this.node.getComponent(cc.Sprite);
        sprite && (this.material = sprite.getMaterial(0));
        this.timePassed = 0;
        this.blurStr = MAX_BLUR_STR;
        this.material.setProperty("Strength", MAX_BLUR_STR);
        this.material.setProperty("radiusMultiple", 9999);
      },
      activeTransition: function activeTransition() {
        var _this = this;
        this.startFadeIn();
        this.node.runAction(cc.sequence(cc.delayTime(this.transitionDur), cc.callFunc(function() {
          _this.stopBlur();
        })));
      },
      update: function update() {
        if (!this.material) return;
        this.material.setProperty("Strength", this.blurStr);
        if (this.transitionActived) {
          var radiusMultiple = Math.max(0, START_R_M - this.timePassed);
          this.material.setProperty("radiusMultiple", radiusMultiple);
        }
      },
      startFadeIn: function startFadeIn() {
        this.init();
        this.transitionActived = true;
        this.timePassed = 0;
        cc.tween(this).to(this.transitionDur, {
          timePassed: START_R_M
        }, {
          easing: "cubicOut"
        }).start();
      },
      stopBlur: function stopBlur() {
        cc.tween(this).to(this.blurDur, {
          blurStr: 0
        }).start();
      }
    });
    cc._RF.pop();
  }, {} ],
  vintageFadeOut: [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "45bd25IHxFMTrVXhSSxLZg0", "vintageFadeOut");
    "use strict";
    var START_R_M = 30;
    var MAX_BLUR_STR = 1;
    cc.Class({
      extends: cc.Component,
      properties: {
        transitionDur: 1,
        blurDur: .2
      },
      onLoad: function onLoad() {
        this.node.activeTransition = this.activeTransition.bind(this);
      },
      start: function start() {
        var sprite = this.node.getComponent(cc.Sprite);
        sprite && (this.material = sprite.getMaterial(0));
        this.timePassed = 0;
        this.material.setProperty("Strength", 0);
        this.material.setProperty("radiusMultiple", 0);
      },
      activeTransition: function activeTransition() {
        var _this = this;
        this.material.setProperty("Strength", 0);
        this.material.setProperty("radiusMultiple", 0);
        this.startBlur();
        this.node.runAction(cc.sequence(cc.delayTime(this.blurDur), cc.callFunc(function() {
          _this.startFadeOut();
        })));
        return this.transitionDur + this.blurDur;
      },
      update: function update() {
        if (!this.material) return;
        this.blurActived && this.material.setProperty("Strength", this.blurStr);
        if (this.transitionActived) {
          var radiusMultiple = Math.max(0, START_R_M - this.timePassed);
          this.material.setProperty("radiusMultiple", radiusMultiple);
        }
      },
      startFadeOut: function startFadeOut() {
        var _this2 = this;
        this.transitionActived = true;
        this.timePassed = 0;
        cc.tween(this).to(this.transitionDur, {
          timePassed: START_R_M
        }, {
          easing: "cubicOut"
        }).call(function() {
          _this2.transitionActived = false;
        }).start();
      },
      startBlur: function startBlur() {
        this.blurStr = 0;
        this.blurActived = true;
        cc.tween(this).to(this.transitionDur, {
          blurStr: MAX_BLUR_STR
        }).start();
        this.node.runAction(cc.scaleTo(this.transitionDur, 3));
      }
    });
    cc._RF.pop();
  }, {} ],
  "x64-core": [ function(require, module, exports) {
    "use strict";
    cc._RF.push(module, "e2878yXK1xOZKLIptUcBIu6", "x64-core");
    "use strict";
    var CryptoJS = require("./crypto-core");
    var C = CryptoJS;
    var C_lib = C.lib;
    var Base = C_lib.Base;
    var X32WordArray = C_lib.WordArray;
    var C_x64 = C.x64 = {};
    var X64Word = C_x64.Word = Base.extend({
      init: function init(high, low) {
        this.high = high;
        this.low = low;
      }
    });
    var X64WordArray = C_x64.WordArray = Base.extend({
      init: function init(words, sigBytes) {
        words = this.words = words || [];
        this.sigBytes = void 0 != sigBytes ? sigBytes : 8 * words.length;
      },
      toX32: function toX32() {
        var x64Words = this.words;
        var x64WordsLength = x64Words.length;
        var x32Words = [];
        for (var i = 0; i < x64WordsLength; i++) {
          var x64Word = x64Words[i];
          x32Words.push(x64Word.high);
          x32Words.push(x64Word.low);
        }
        return X32WordArray.create(x32Words, this.sigBytes);
      },
      clone: function clone() {
        var clone = Base.clone.call(this);
        var words = clone.words = this.words.slice(0);
        var wordsLength = words.length;
        for (var i = 0; i < wordsLength; i++) words[i] = words[i].clone();
        return clone;
      }
    });
    module.exports = X64Word;
    cc._RF.pop();
  }, {
    "./crypto-core": "crypto-core"
  } ]
}, {}, [ "betItemController", "betStateManager", "buffaloController", "gaAvatarProvider", "gaButtonFullScreen", "gaCurrencyCalculator", "gaDataFactory", "gaDataStore", "gaEventEmitter", "gaGameView", "gaGeneralInitialization", "gaLocalStorage", "gaLocalize", "gaMainController", "gaReferenceManager", "gaResizeWindow", "gaSafeArea", "gaVersion", "gaCountPoint", "gaRefreshWidget", "gaFBFParticle", "gaArcadeBaseTableHistory", "gaJackpotFrame", "gaNotifyComponent", "gaNotifyController", "gaNotifyJackpot", "gaNotifyJackpotItem", "gaNotifyMessage", "gaBetHistoryItem", "gaHistoryItem", "gaJackpotHistoryItem", "gaBasePopup", "gaDialog", "gaMultipagePopup", "gaPopupBetHistory", "gaPopupController", "gaPopupHelpInfo", "gaPopupHistory", "gaPopupJackpotHistory", "gaPopupSetting", "gaToast", "gaRoundInfo", "gaItemsScroller", "gaScrollItem", "gaSideMenu", "gaToggleDoubleCheckmark", "gaUserUI", "gaWallet", "gaComponent", "gaBaseConfig", "gaMapKeyConfig", "gaCommon", "gaDemoPlayer", "gaEventsCode", "gaGameText", "gaUserInfo", "gaLoadingScene", "gaResultData", "gaRoundData", "gaCommandID", "gaGameNetwork", "gaGameService", "gaISocketManager", "gaNetworkError", "gaSocketManager", "gaCustomDataType", "gaIStateMachine", "gaStateMachine", "gaStateView", "gaLogger", "gaPromise", "gaRandom", "gaScreenUtils", "gaTweenUtils", "gaUtils", "authenPusher", "connectNetwork", "game-network", "globalNetwork", "connectNetworkV3", "globalNetworkV3", "CustomHTMLTextParser", "CustomRichText", "MonoUpdate", "jsb_runtime_md5", "BaseCellHistory", "BaseHistory", "BaseTableHistory", "BetCellHistory", "BetTableHistory", "JackpotCellHistory", "JackpotHistory", "JackpotTableHistory", "ActionEffect", "AlignFullScreenButton", "AlignmentControl", "AnimUtils", "CacheChildrenRender", "ClickAndShow", "CustomDataType", "DisableMultiTouchButtons", "EventListenerManager", "InitSocketComponent", "MoneyDataStore", "PatchIOS14", "ScrollViewOptimize", "SoundPlayer", "ToastInfo", "WalletTrial", "WebSoundPlayer", "_FirstScene", "BaseDirectorV2", "baseActor", "baseAssetsManager", "baseDirector", "big", "configParticle", "crypto-core", "hashKey", "md5", "sha1", "sha224", "sha256", "sha512", "x64-core", "floatUtils", "ControlBtn", "DimFocusControl", "gameCommonUtils", "globalAnimationLibrary", "globalMiniGameState", "globalState", "turnBaseFSM", "utils", "ActorDialogSlot", "AppearCenterScreen", "AutoScaleBackground", "ButtonScaler", "CanvasScale", "CanvasScaleByOrientation", "CircleMove", "InfoText", "JoinGame", "MakePersistent", "MobileDetectLoad", "PlayTrialButtonControl", "ScaleAlignViewport", "SymbolFXController", "animateNumberLabel", "animateNumberZoom", "animatePopup", "app", "betCard", "dragAndDrop", "spineAtlasHolder", "toast", "toggle", "DissolveBlurControl", "DissolveControl", "RadientBlurControl", "FluxaySuper", "Gradient", "Saoguang", "dizzyness", "iTimeUpdate", "lightEffect", "lightsweep", "motionBlur", "scrollUV", "vintageFadeIn", "vintageFadeOut", "XOCypher", "loadConfigAsync", "serviceRest", "data", "gameResize", "layerController", "loadingController", "mEmiter", "mainController", "network", "racingController", "scrollController", "sendMessage", "skyController", "uiManager", "appConfig", "mock" ]);
//# sourceMappingURL=project.dev.js.map